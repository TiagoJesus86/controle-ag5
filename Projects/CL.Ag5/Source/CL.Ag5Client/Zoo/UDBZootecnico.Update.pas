unit UDBZootecnico.Update;

interface

uses
  UDBUpdate,
  Tc.VCL.Application ;

type

{$M+}
  TDBZootecnicoUpdate = class( TDBUpdate )
  published
    procedure _5_000_11;
    procedure _5_000_22;
    procedure _5_000_23;
    procedure _5_000_25;
    procedure _5_000_31;
    procedure _5_000_32;
    procedure _5_000_35;
    procedure _5_000_36;
    procedure _5_000_38;
    procedure _5_000_39;
    procedure _5_000_50; //XE7
    procedure _5_000_52;
    procedure _5_000_54;
    procedure _5_000_58;
    procedure _5_000_59;
    procedure _5_000_63;
    procedure _5_000_64;
    procedure _5_000_67;
    procedure _5_000_68;
    procedure _5_000_69;
    procedure _5_000_73;
    procedure _5_000_74 ;
    procedure _5_000_80 ;
    procedure _5_000_81 ;
    procedure _5_000_86 ;
    procedure _5_000_89 ;
    procedure _5_000_90 ;
    procedure _5_000_91 ;
    procedure _5_000_92 ;
    procedure _5_000_93 ;
    procedure _5_000_94 ;
    procedure _5_000_95 ;
    procedure _5_001_00 ;
    procedure _5_001_01 ;  // X_SEATTLE
    procedure _5_001_07 ;
    procedure _5_001_08 ;
    procedure _5_001_11 ;
    procedure _5_001_12 ;
    procedure _5_001_15 ; // BERLIN
    procedure _5_001_25 ;
    procedure _5_001_32 ;
    procedure _5_001_33 ;
    procedure _5_001_34 ;
    procedure _5_001_35 ;
    procedure _5_001_36 ;
    procedure _5_001_37 ;
    procedure _5_001_61 ;
    procedure _5_001_65 ;
    procedure _5_001_69 ;
    procedure _5_001_71 ;
    procedure _5_001_83 ;
    procedure _5_001_84 ;
    procedure _5_001_85 ;
    procedure _5_001_86 ;
    procedure _5_001_87 ;
    procedure _5_001_88 ; //Versão 192
    procedure _5_001_89 ;
    procedure _5_001_90 ;
    procedure _5_001_91 ;
    procedure _5_001_92 ;
    procedure _5_001_94 ;
    procedure _5_001_95 ;
    procedure _5_001_96 ;
    procedure _5_001_97 ;
    procedure _5_001_98 ;
    procedure _5_001_99 ;
    procedure _5_002_00 ; //Versão 194 r29
    procedure _5_002_01 ;
    procedure _5_002_02 ;
    procedure _5_002_03 ;
    procedure _5_002_04 ;
    procedure _5_002_07 ;
    procedure _5_002_08 ;
    procedure _5_002_09 ;
    procedure _5_002_12 ;
    procedure _5_002_13 ;
    procedure _5_002_14 ;
    procedure _5_002_15 ;
    procedure _5_002_16 ;
    procedure _5_002_17 ;
    procedure _5_002_18 ;
    procedure _5_002_25 ;
    procedure _5_002_27 ;
    procedure _5_002_28 ;
    procedure _5_002_29 ;
    procedure _5_002_30 ;
    procedure _5_002_31 ;
    procedure _5_002_32 ;
    procedure _5_002_33 ;
    procedure _5_002_34 ;
    procedure _5_002_35 ;
    procedure _5_002_36 ;
    procedure _5_002_37 ;
    procedure _5_002_38 ;
    procedure _5_002_39 ;
    procedure _5_002_40 ;
    procedure _5_002_41 ;
   end;
{$M-}

implementation

Uses
     Winapi.Windows
   , System.SysUtils
   , System.Classes
   , Tc.RTL.Exceptions
   , DataSnap.DBClient, Tc.DataSnap.DBClient.Helpers
   , GuidSuppl
   , Tc.RTL.MD5
   , Tc.DBRTL.AbstractDB  ;

procedure LoadResourceStrings( AResourceName : string ; const AStrings : TStrings);
var
 LResourceStream: TResourceStream;
begin
  LResourceStream := TResourceStream.Create( HInstance, AResourceName, RT_RCDATA);
  try
   AStrings.LoadFromStream(LResourceStream);
  finally
   LResourceStream.Free;
  end;
end;



procedure TDBZootecnicoUpdate._5_002_41;
const
  _ALTER_VIEW_VRPT_CRESCIMENTO =
          'CREATE OR ALTER VIEW VRPT_CRESCIMENTO('
   +#13#10'    KZOO_ANIMAL_FEMEA,'
   +#13#10'    DATAPESO,'
   +#13#10'    PESO,'
   +#13#10'    GANHOPESO,'
   +#13#10'    PESO0,'
   +#13#10'    PESO6,'
   +#13#10'    PESO12,'
   +#13#10'    PESO18,'
   +#13#10'    PESO24,'
   +#13#10'    DATAALTURA,'
   +#13#10'    ALTURA,'
   +#13#10'    ALTURA0,'
   +#13#10'    ALTURA6,'
   +#13#10'    ALTURA12,'
   +#13#10'    ALTURA18,'
   +#13#10'    ALTURA24,'
   +#13#10'    DATACC,'
   +#13#10'    CC,'
   +#13#10'    CC0,'
   +#13#10'    CC6,'
   +#13#10'    CC12,'
   +#13#10'    CC18,'
   +#13#10'    CC24)'
   +#13#10'AS'
   +#13#10'SELECT'
   +#13#10'   KZOO_ANIMAL_FEMEA,'
   +#13#10'   (SELECT C.DATA   FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA) AND ( C.PESO   IS NOT NULL ) ORDER BY C.DATA DESC ROWS 1) DATAPESO,'
   +#13#10'   (SELECT C.PESO   FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA) AND ( C.PESO   IS NOT NULL ) ORDER BY C.DATA DESC ROWS 1) PESO,'
   +#13#10'   (SELECT C.GANHOPESO FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL    = F.KZOO_ANIMAL_FEMEA) AND ( C.PESO   IS NOT NULL )                                                                 ORDER BY C.DATA DESC ROWS 1) GANHOPESO,'
   +#13#10'   (SELECT C.PESO   FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA) AND ( C.PESO   IS NOT NULL ) AND (C.DATA <= F.NASCIMENTO +20)                                ORDER BY C.DATA ASC  ROWS 1) PESO0,'
   +#13#10'   (SELECT C.PESO   FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA) AND ( C.PESO   IS NOT NULL ) AND (C.DATA BETWEEN F.NASCIMENTO + 160 AND F.NASCIMENTO + 200 ) ORDER BY C.DATA DESC ROWS 1) PESO6,'
   +#13#10'   (SELECT C.PESO   FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA) AND ( C.PESO   IS NOT NULL ) AND (C.DATA BETWEEN F.NASCIMENTO + 340 AND F.NASCIMENTO + 380 ) ORDER BY C.DATA DESC ROWS 1) PESO12,'
   +#13#10'   (SELECT C.PESO   FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA) AND ( C.PESO   IS NOT NULL ) AND (C.DATA BETWEEN F.NASCIMENTO + 520 AND F.NASCIMENTO + 560 ) ORDER BY C.DATA DESC ROWS 1) PESO18,'
   +#13#10'   (SELECT C.PESO   FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA) AND ( C.PESO   IS NOT NULL ) AND (C.DATA BETWEEN F.NASCIMENTO + 700 AND F.NASCIMENTO + 740 ) ORDER BY C.DATA DESC ROWS 1) PESO24,'
   +#13#10'   (SELECT C.DATA   FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA) AND ( C.ALTURA IS NOT NULL ) ORDER BY C.DATA DESC ROWS 1) DATAALTURA,'
   +#13#10'   (SELECT C.ALTURA FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA) AND ( C.ALTURA IS NOT NULL )                                                                 ORDER BY C.DATA DESC ROWS 1) ALTURA,'
   +#13#10'   (SELECT C.ALTURA FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA) AND ( C.ALTURA IS NOT NULL ) AND (C.DATA <= F.NASCIMENTO +20)                                ORDER BY C.DATA DESC ROWS 1) ALTURA0,'
   +#13#10'   (SELECT C.ALTURA FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA) AND ( C.ALTURA IS NOT NULL ) AND (C.DATA BETWEEN F.NASCIMENTO + 160 AND F.NASCIMENTO + 200 ) ORDER BY C.DATA DESC ROWS 1) ALTURA6,'
   +#13#10'   (SELECT C.ALTURA FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA) AND ( C.ALTURA IS NOT NULL ) AND (C.DATA BETWEEN F.NASCIMENTO + 340 AND F.NASCIMENTO + 380 ) ORDER BY C.DATA DESC ROWS 1) ALTURA12,'
   +#13#10'   (SELECT C.ALTURA FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA) AND ( C.ALTURA IS NOT NULL ) AND (C.DATA BETWEEN F.NASCIMENTO + 520 AND F.NASCIMENTO + 560 ) ORDER BY C.DATA DESC ROWS 1) ALTURA18,'
   +#13#10'   (SELECT C.ALTURA FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA) AND ( C.ALTURA IS NOT NULL ) AND (C.DATA BETWEEN F.NASCIMENTO + 700 AND F.NASCIMENTO + 740 ) ORDER BY C.DATA DESC ROWS 1) ALTURA24,'
   +#13#10'   (SELECT C.DATA   FROM ZOO_ANIMAL_FEMEA_CC    C WHERE (C.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA) AND ( C.CC     IS NOT NULL )                                                                 ORDER BY C.DATA DESC ROWS 1) DATACC,'
   +#13#10'   (SELECT C.CC     FROM ZOO_ANIMAL_FEMEA_CC    C WHERE (C.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA) AND ( C.CC     IS NOT NULL )                                                                 ORDER BY C.DATA DESC ROWS 1) CC,'
   +#13#10'   (SELECT C.CC     FROM ZOO_ANIMAL_FEMEA_CC    C WHERE (C.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA) AND ( C.CC     IS NOT NULL ) AND (C.DATA <= F.NASCIMENTO +20)                                ORDER BY C.DATA DESC ROWS 1) CC0,'
   +#13#10'   (SELECT C.CC     FROM ZOO_ANIMAL_FEMEA_CC    C WHERE (C.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA) AND ( C.CC     IS NOT NULL ) AND (C.DATA BETWEEN F.NASCIMENTO + 160 AND F.NASCIMENTO + 200 ) ORDER BY C.DATA DESC ROWS 1) CC6,'
   +#13#10'   (SELECT C.CC     FROM ZOO_ANIMAL_FEMEA_CC    C WHERE (C.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA) AND ( C.CC     IS NOT NULL ) AND (C.DATA BETWEEN F.NASCIMENTO + 340 AND F.NASCIMENTO + 380 ) ORDER BY C.DATA DESC ROWS 1) CC12,'
   +#13#10'   (SELECT C.CC     FROM ZOO_ANIMAL_FEMEA_CC    C WHERE (C.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA) AND ( C.CC     IS NOT NULL ) AND (C.DATA BETWEEN F.NASCIMENTO + 520 AND F.NASCIMENTO + 560 ) ORDER BY C.DATA DESC ROWS 1) CC18,'
   +#13#10'   (SELECT C.CC     FROM ZOO_ANIMAL_FEMEA_CC    C WHERE (C.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA) AND ( C.CC     IS NOT NULL ) AND (C.DATA BETWEEN F.NASCIMENTO + 700 AND F.NASCIMENTO + 740 ) ORDER BY C.DATA DESC ROWS 1) CC24'
   +#13#10'  FROM ZOO_ANIMAIS_FEMEA F' ;
begin
  ExecuteDirect ( _ALTER_VIEW_VRPT_CRESCIMENTO ) ;
end ;




procedure TDBZootecnicoUpdate._5_002_40;
const
  _ALTER_TABLE_ZOO_ANIMAIS_FEMEA_ADD_KULTIMA_ANALISE =
         'ALTER TABLE ZOO_ANIMAIS_FEMEA'
  +#13#10'ADD KULTIMA_ANALISE SYS$FKGUID20'
  +#13#10', ALTER KULTIMA_ANALISE POSITION 37';

  _CREATE_PROCEDURE_ZOO_UPDATE_ULTIMA_PESAGEM =
         'CREATE PROCEDURE ZOO_UPDATE_ULTIMA_PESAGEM ('
  +#13#10'    KZOO_PESAGEM_LEITE SYS$FKGUID20,'
  +#13#10'    KZOO_ANIMAL SYS$FKGUID20,'
  +#13#10'    DATA SYS$DATE,'
  +#13#10'    TYPE_IUD VARCHAR(1)'
  +#13#10')'
  +#13#10'AS'
  +#13#10'DECLARE LAST_KZOO_PESAGEM_LEITE SYS$FKGUID20;'
  +#13#10'DECLARE LAST_DATE SYS$DATE;'
  +#13#10'BEGIN'
  +#13#10'  if (TYPE_IUD IN (''I'',''U'')) then'
  +#13#10'   BEGIN'
  +#13#10'     SELECT PA.DATA'
  +#13#10'       FROM ZOO_ANIMAIS_FEMEA AF'
  +#13#10'       LEFT JOIN ZOO_PESAGEM_LEITE_ANALISE PA ON AF.KULTIMA_ANALISE = PA.KZOO_PESAGEM_LEITE'
  +#13#10'      WHERE AF.KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL'
  +#13#10'       INTO :LAST_DATE;'
  +#13#10''
  +#13#10'     IF ((:LAST_DATE IS NULL) OR (:LAST_DATE < :DATA) ) THEN'
  +#13#10'      BEGIN'
  +#13#10'        UPDATE ZOO_ANIMAIS_FEMEA'
  +#13#10'           SET KULTIMA_ANALISE = :KZOO_PESAGEM_LEITE'
  +#13#10'         WHERE KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL;'
  +#13#10'      END'
  +#13#10'   END'
  +#13#10'  ELSE'
  +#13#10'   BEGIN'
  +#13#10'     SELECT PA.KZOO_PESAGEM_LEITE'
  +#13#10'       FROM ZOO_PESAGEM_LEITE_ANALISE PA'
  +#13#10'      WHERE PA.KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL'
  +#13#10'        AND PA.KZOO_PESAGEM_LEITE <> :KZOO_PESAGEM_LEITE'
  +#13#10'      ORDER BY PA.DATA DESC ROWS 1'
  +#13#10'       INTO :LAST_KZOO_PESAGEM_LEITE;'
  +#13#10''
  +#13#10'     UPDATE ZOO_ANIMAIS_FEMEA'
  +#13#10'        SET KULTIMA_ANALISE = :LAST_KZOO_PESAGEM_LEITE'
  +#13#10'      WHERE KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL;'
  +#13#10'   END'
  +#13#10''
  +#13#10'END';

  _ALTER_TRIGGER_ZOO_PESAGEM_LEITE_ANALISE_AI0 =
         'CREATE OR ALTER TRIGGER ZOO_PESAGEM_LEITE_ANALISE_AI0 FOR ZOO_PESAGEM_LEITE_ANALISE'
  +#13#10'ACTIVE AFTER INSERT OR UPDATE OR DELETE POSITION 20001'
  +#13#10'AS'
  +#13#10'begin'
  +#13#10'  if ( deleting ) then'
  +#13#10'   begin'
  +#13#10'     EXECUTE PROCEDURE ZOO_UPDATE_CALCULO_PESAGEM    OLD.KZOO_LACTACAO ;'
  +#13#10'     EXECUTE PROCEDURE ZOO_UPDATE_ULTIMA_PESAGEM     OLD.KZOO_PESAGEM_LEITE, OLD.KZOO_ANIMAL_FEMEA, OLD.DATA, ''D'' ;'
  +#13#10'   end'
  +#13#10'  else'
  +#13#10'   begin'
  +#13#10'     EXECUTE PROCEDURE ZOO_UPDATE_CALCULO_PESAGEM    NEW.KZOO_LACTACAO ;'
  +#13#10'     EXECUTE PROCEDURE ZOO_UPDATE_ULTIMA_PESAGEM     NEW.KZOO_PESAGEM_LEITE, NEW.KZOO_ANIMAL_FEMEA, NEW.DATA, ''U'' ;'
  +#13#10'   end'
  +#13#10'end' ;

  _ALTER_VIEW_VRPT_FEMEAS =
         'CREATE OR ALTER VIEW VRPT_FEMEAS('
  +#13#10'    KZOO_ANIMAL_FEMEA,'
  +#13#10'    KCAD_FAZENDA,'
  +#13#10'    BRINCO,'
  +#13#10'    BRINCO_,'
  +#13#10'    NOMEESTABULO,'
  +#13#10'    NOMECOMPLETO,'
  +#13#10'    REGISTRO,'
  +#13#10'    DTORIGEM,'
  +#13#10'    LOCAL_ORIGEM,'
  +#13#10'    PRECO_COMPRA,'
  +#13#10'    VACA,'
  +#13#10'    STATUS,'
  +#13#10'    DATASTATUS,'
  +#13#10'    INTENCAO_DESCARTE,'
  +#13#10'    CRIADOR,'
  +#13#10'    CIDCRIA,'
  +#13#10'    PERSISTE,'
  +#13#10'    POTENCIAL,'
  +#13#10'    DATABRINCO,'
  +#13#10'    RACA,'
  +#13#10'    SISBOV,'
  +#13#10'    GRAUSANGUE,'
  +#13#10'    COMPOSICAORACA,'
  +#13#10'    KULTIMO_EVENTO_ZOOTECNICO,'
  +#13#10'    ULTIMO_EVENTO_ZOOTECNICO,'
  +#13#10'    KULTIMO_CIO,'
  +#13#10'    ULTIMO_CIO,'
  +#13#10'    NUMERO_CIO,'
  +#13#10'    KULTIMA_MONTA,'
  +#13#10'    ULTIMA_MONTA,'
  +#13#10'    NUMERO_MONTA,'
  +#13#10'    KULTIMO_PARTO,'
  +#13#10'    ULTIMO_PARTO,'
  +#13#10'    KPRIMEIRA_LACTACAO,'
  +#13#10'    PRIMEIRA_LACTACAO,'
  +#13#10'    NUMERO_PRIMEIRALACTACAO,'
  +#13#10'    KULTIMA_LACTACAO,'
  +#13#10'    ULTIMA_LACTACAO,'
  +#13#10'    NUMERO_LACTACAO,'
  +#13#10'    NUMERO_ABORTO,'
  +#13#10'    NUMERO_COLETA,'
  +#13#10'    DOADOR_RECEPTOR,'
  +#13#10'    KMAIOR_PESO,'
  +#13#10'    MAIOR_PESO,'
  +#13#10'    NASCIMENTO,'
  +#13#10'    RETIRO,'
  +#13#10'    LOTE,'
  +#13#10'    VLOTE1,'
  +#13#10'    VLOTE2,'
  +#13#10'    VLOTE3,'
  +#13#10'    NUCLEO,'
  +#13#10'    REBANHO,'
  +#13#10'    DATALOTE,'
  +#13#10'    DATARETIRO,'
  +#13#10'    DPPC,'
  +#13#10'    DPP,'
  +#13#10'    DUC,'
  +#13#10'    KPAI,'
  +#13#10'    NOMEPAI,'
  +#13#10'    KMAE,'
  +#13#10'    NOMEMAE,'
  +#13#10'    MAEPAI,'
  +#13#10'    MAEMAE,'
  +#13#10'    PAIPAI,'
  +#13#10'    PAIMAE,'
  +#13#10'    BISF_MAEPAI,'
  +#13#10'    BISF_MAEMAE,'
  +#13#10'    BISF_PAIPAI,'
  +#13#10'    BISF_PAIMAE,'
  +#13#10'    BISM_MAEPAI,'
  +#13#10'    BISM_MAEMAE,'
  +#13#10'    BISM_PAIPAI,'
  +#13#10'    BISM_PAIMAE,'
  +#13#10'    IDADE,'
  +#13#10'    IAP,'
  +#13#10'    KULTIMO_DIAGNOSTICO,'
  +#13#10'    KPENULTIMO_DIAGNOSTICO,'
  +#13#10'    KULTIMO_PROTOCOLO,'
  +#13#10'    KPENULTIMO_PROTOCOLO,'
  +#13#10'    KULTIMA_TAREFA,'
  +#13#10'    KPENULTIMA_TAREFA,'
  +#13#10'    DATADESMAME,'
  +#13#10'    STATUS_REPRODUTIVO,'
  +#13#10'    KULTIMA_ANALISE)'
  +#13#10'AS'
  +#13#10'SELECT'
  +#13#10'    F.KZOO_ANIMAL_FEMEA,'
  +#13#10'    A.KCAD_FAZENDA,'
  +#13#10'    A.BRINCO,'
  +#13#10'    A.BRINCO_,'
  +#13#10'    A.NOMEESTABULO,'
  +#13#10'    A.NOMECOMPLETO,'
  +#13#10'    A.REGISTRO,'
  +#13#10'    A.DTORIGEM,'
  +#13#10'    A.LOCAL_ORIGEM,'
  +#13#10'    A.PRECO_COMPRA,'
  +#13#10'    A.VACA,'
  +#13#10'    (SELECT SYS$DESCRIPTION FROM SYS$TYPES_GETDESCRIPTION ( ''SIGLA_STATUS_FEMEA'', A.STATUS )) STATUS,'
  +#13#10'    A.DATASTATUS,'
  +#13#10'    F.INTENCAO_DESCARTE,'
  +#13#10'    A.CRIADOR,'
  +#13#10'    A.CIDCRIA,'
  +#13#10'    A.PERSISTE,'
  +#13#10'    A.POTENCIAL,'
  +#13#10'    A.DATABRINCO,'
  +#13#10'    A.RACA,'
  +#13#10'    A.SISBOV,'
  +#13#10'    A.GRAUSANGUE,'
  +#13#10'    A.COMPOSICAORACA,'
  +#13#10'    F.KULTIMO_EVENTO_ZOOTECNICO,'
  +#13#10'    F.ULTIMO_EVENTO_ZOOTECNICO,'
  +#13#10'    F.KULTIMO_CIO,'
  +#13#10'    F.ULTIMO_CIO,'
  +#13#10'    F.NUMERO_CIO,'
  +#13#10'    F.KULTIMA_MONTA,'
  +#13#10'    F.ULTIMA_MONTA,'
  +#13#10'    F.NUMERO_MONTA,'
  +#13#10'    F.KULTIMO_PARTO,'
  +#13#10'    F.ULTIMO_PARTO,'
  +#13#10'    F.KPRIMEIRA_LACTACAO,'
  +#13#10'    F.PRIMEIRA_LACTACAO,'
  +#13#10'    F.NUMERO_PRIMEIRALACTACAO,'
  +#13#10'    F.KULTIMA_LACTACAO,'
  +#13#10'    F.ULTIMA_LACTACAO,'
  +#13#10'    F.NUMERO_LACTACAO,'
  +#13#10'    F.NUMERO_ABORTO,'
  +#13#10'    F.NUMERO_COLETA,'
  +#13#10'    (SELECT SYS$DESCRIPTION FROM SYS$TYPES_GETDESCRIPTION ( ''TIPO_DOADOR_RECEPTOR'', F.DOADOR_RECEPTOR )) DOADOR_RECEPTOR,'
  +#13#10'    F.KMAIOR_PESO,'
  +#13#10'    F.MAIOR_PESO,'
  +#13#10'    F.NASCIMENTO,'
  +#13#10'    F.RETIRO,'
  +#13#10'    F.LOTE,'
  +#13#10'    F.VLOTE1,'
  +#13#10'    F.VLOTE2,'
  +#13#10'    F.VLOTE3,'
  +#13#10'    F.NUCLEO,'
  +#13#10'    F.REBANHO,'
  +#13#10'    F.DATALOTE,'
  +#13#10'    F.DATARETIRO,'
  +#13#10'   (SELECT CAST ( CAST ( E.DATAEVENTO AS DATE ) - CAST ( F.ULTIMA_LACTACAO AS DATE ) AS INTEGER) FROM ZOO_EVENTOS_ZOOTECNICOS E WHERE E.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND E.DATAEVENTO > F.ULTIMA_LACTACAO ORDER BY E.DATAEVENTO ROWS 1) DPPC,'
  +#13#10'  --  0 DPPC,'
  +#13#10'    TRUNC ( CURRENT_TIMESTAMP - F.ULTIMA_LACTACAO ) DPP,'
  +#13#10'    TRUNC ( CURRENT_TIMESTAMP - F.ULTIMO_CIO ) DUC,'
  +#13#10'    DPAI1.KZOO_ANIMAL_PARENT  KPAI,'
  +#13#10'    DPAI1.NOMEANIMAL_PARENTE  NOMEPAI,'
  +#13#10'    DMAE1.KZOO_ANIMAL_PARENT  KMAE,'
  +#13#10'    DMAE1.NOMEANIMAL_PARENTE  NOMEMAE,'
  +#13#10'    DMAEPAI.NOMEANIMAL_PARENTE  MAEPAI,'
  +#13#10'    DMAEMAE.NOMEANIMAL_PARENTE  MAEMAE,'
  +#13#10'    DPAIPAI.NOMEANIMAL_PARENTE  PAIPAI,'
  +#13#10'    DPAIMAE.NOMEANIMAL_PARENTE  PAIMAE,'
  +#13#10''
  +#13#10'    BISF_MAEPAI.NOMEANIMAL_PARENTE BISF_MAEPAI,'
  +#13#10'    BISF_MAEMAE.NOMEANIMAL_PARENTE BISF_MAEMAE,'
  +#13#10'    BISF_PAIPAI.NOMEANIMAL_PARENTE BISF_PAIPAI,'
  +#13#10'    BISF_PAIMAE.NOMEANIMAL_PARENTE BISF_PAIMAE,'
  +#13#10''
  +#13#10'    BISM_MAEPAI.NOMEANIMAL_PARENTE BISM_MAEPAI,'
  +#13#10'    BISM_MAEMAE.NOMEANIMAL_PARENTE BISM_MAEMAE,'
  +#13#10'    BISM_PAIPAI.NOMEANIMAL_PARENTE BISM_PAIPAI,'
  +#13#10'    BISM_PAIMAE.NOMEANIMAL_PARENTE BISM_PAIMAE,'
  +#13#10''
  +#13#10'    CAST ( CAST ( (CURRENT_TIMESTAMP - F.NASCIMENTO) / 30.4 AS NUMERIC ( 5, 1 ) ) AS SYS$FLOAT )IDADE,'
  +#13#10'    CAST ( CAST ( (F.ULTIMO_PARTO - F.NASCIMENTO) / 30.4  AS NUMERIC ( 5, 1 ) ) AS SYS$FLOAT ) IAP,'
  +#13#10'    (SELECT UD.KZOO_ANIMAL_DIAGNOSTICO FROM ZOO_ANIMAL_DIAGNOSTICOS UD WHERE UD.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND UD.EXCLUIDO = ''F'' ORDER BY UD.DATA DESC  ROWS 1 TO 1 ) KULTIMO_DIAGNOSTICO,'
  +#13#10'    (SELECT UD.KZOO_ANIMAL_DIAGNOSTICO FROM ZOO_ANIMAL_DIAGNOSTICOS UD WHERE UD.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND UD.EXCLUIDO = ''F''  ORDER BY UD.DATA DESC  ROWS 2 TO 2 ) KPENULTIMO_DIAGNOSTICO,'
  +#13#10'    (SELECT UP.KZOO_ANIMAL_PROTOCOLO FROM ZOO_ANIMAL_PROTOCOLOS UP WHERE UP.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND UP.EXCLUIDO = ''F'' ORDER BY UP.DATA DESC  ROWS 1 TO 1 ) KULTIMO_PROTOCOLO,'
  +#13#10'    (SELECT UP.KZOO_ANIMAL_PROTOCOLO FROM ZOO_ANIMAL_PROTOCOLOS UP WHERE UP.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND UP.EXCLUIDO = ''F'' ORDER BY UP.DATA DESC  ROWS 2 TO 2 ) KPENULTIMO_PROTOCOLO,'
  +#13#10'    (SELECT UT.KZOO_ANIMAL_TAREFA FROM ZOO_ANIMAL_TAREFAS UT'
  +#13#10'     WHERE UT.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA AND UT.EXCLUIDO = ''F'' AND UT.STATUS = (SELECT SYS$VALUE FROM SYS$TYPES_GETVALUE ( ''STATUS_TAREFA'', ''EXECUTADA'' ))'
  +#13#10'     ORDER BY UT.DATASTATUS DESC  ROWS 1 TO 1 ) KULTIMA_TAREFA,'
  +#13#10'    (SELECT UT.KZOO_ANIMAL_TAREFA FROM ZOO_ANIMAL_TAREFAS UT'
  +#13#10'     WHERE UT.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA AND UT.EXCLUIDO = ''F'' AND UT.STATUS = (SELECT SYS$VALUE FROM SYS$TYPES_GETVALUE ( ''STATUS_TAREFA'', ''EXECUTADA'' ))'
  +#13#10'     ORDER BY UT.DATASTATUS DESC  ROWS 2 TO 2 ) KPENULTIMA_TAREFA,'
  +#13#10'     A.DATADESMAME,'
  +#13#10'     --(SELECT CAST ( SYS$DESCRIPTION AS VARCHAR(50) ) SYS$DESCRIPTION FROM ZOO_GET_STATUS_REPRODUTIVO( F.KZOO_ANIMAL_FEMEA )) "STATUS_REPRODUTIVO"'
  +#13#10'     (SELECT CAST ( STATUS_REPRODUTIVO_ANIMAL AS INTEGER ) SYS$VALUE FROM ZOO_GET_STATUS_REPRODUTIVO( F.KZOO_ANIMAL_FEMEA )) "STATUS_REPRODUTIVO",'
  +#13#10'     F.KULTIMA_ANALISE'
  +#13#10'FROM ZOO_ANIMAIS_FEMEA F'
  +#13#10'INNER JOIN ZOO_ANIMAIS A ON A.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(F.KZOO_ANIMAL_FEMEA, 1, 0) DPAI1 ON DPAI1.TIPOPARENTESCO = 1 AND DPAI1.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(F.KZOO_ANIMAL_FEMEA, 1, 0) DMAE1 ON DMAE1.TIPOPARENTESCO = 2 AND DMAE1.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAI1.KZOO_ANIMAL_PARENT, 1, 0) DMAEPAI ON DMAEPAI.TIPOPARENTESCO = 2 AND DMAEPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAE1.KZOO_ANIMAL_PARENT, 1, 0) DMAEMAE ON DMAEMAE.TIPOPARENTESCO = 2 AND DMAEMAE.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAI1.KZOO_ANIMAL_PARENT, 1, 0) DPAIPAI ON DPAIPAI.TIPOPARENTESCO = 1 AND DPAIPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAE1.KZOO_ANIMAL_PARENT, 1, 0) DPAIMAE ON DPAIMAE.TIPOPARENTESCO = 1 AND DPAIMAE.PARENTLEVEL = 1'
  +#13#10''
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEPAI.KZOO_ANIMAL_PARENT, 1, 0) BISF_MAEPAI ON BISF_MAEPAI.TIPOPARENTESCO = 2 AND BISF_MAEPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEMAE.KZOO_ANIMAL_PARENT, 1, 0) BISF_MAEMAE ON BISF_MAEMAE.TIPOPARENTESCO = 2 AND BISF_MAEMAE.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIPAI.KZOO_ANIMAL_PARENT, 1, 0) BISF_PAIPAI ON BISF_PAIPAI.TIPOPARENTESCO = 2 AND BISF_PAIPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIMAE.KZOO_ANIMAL_PARENT, 1, 0) BISF_PAIMAE ON BISF_PAIMAE.TIPOPARENTESCO = 2 AND BISF_PAIMAE.PARENTLEVEL = 1'
  +#13#10''
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEPAI.KZOO_ANIMAL_PARENT, 1, 0) BISM_MAEPAI ON BISM_MAEPAI.TIPOPARENTESCO = 1 AND BISM_MAEPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEMAE.KZOO_ANIMAL_PARENT, 1, 0) BISM_MAEMAE ON BISM_MAEMAE.TIPOPARENTESCO = 1 AND BISM_MAEMAE.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIPAI.KZOO_ANIMAL_PARENT, 1, 0) BISM_PAIPAI ON BISM_PAIPAI.TIPOPARENTESCO = 1 AND BISM_PAIPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIMAE.KZOO_ANIMAL_PARENT, 1, 0) BISM_PAIMAE ON BISM_PAIMAE.TIPOPARENTESCO = 1 AND BISM_PAIMAE.PARENTLEVEL = 1';


  _UPDATE_ULTIMA_ANALISE =
         'UPDATE ZOO_ANIMAIS_FEMEA AF'
  +#13#10'  SET AF.KULTIMA_ANALISE = (SELECT PA.KZOO_PESAGEM_LEITE  FROM ZOO_PESAGEM_LEITE_ANALISE PA'
  +#13#10'                             WHERE PA.KZOO_ANIMAL_FEMEA = AF.KZOO_ANIMAL_FEMEA'
  +#13#10'                             ORDER BY PA.DATA DESC ROWS 1 )';

begin
  TryExecuteDirect( _ALTER_TABLE_ZOO_ANIMAIS_FEMEA_ADD_KULTIMA_ANALISE );
  TryExecuteDirect( _CREATE_PROCEDURE_ZOO_UPDATE_ULTIMA_PESAGEM );
  TryExecuteDirect( _ALTER_TRIGGER_ZOO_PESAGEM_LEITE_ANALISE_AI0 );
  TryExecuteDirect( _ALTER_VIEW_VRPT_FEMEAS );
  ExecuteDirect   ( _UPDATE_ULTIMA_ANALISE );
end;


procedure TDBZootecnicoUpdate._5_002_39;
const
  _UPDATE_CRESCIMENTO_NASCIMENTO =
         'EXECUTE BLOCK'
  +#13#10'AS'
  +#13#10'DECLARE KZOO_ANIMAL_FEMEA SYS$FKGUID20;'
  +#13#10'DECLARE NASCIMENTO TIMESTAMP;'
  +#13#10'DECLARE KZOO_ANIMAL_CRESCIMENTO SYS$FKGUID20;'
  +#13#10'BEGIN'
  +#13#10'  FOR'
  +#13#10'    SELECT F.KZOO_ANIMAL_FEMEA,'
  +#13#10'           F.NASCIMENTO'
  +#13#10'      FROM ZOO_ANIMAIS_FEMEA F'
  +#13#10'      INNER JOIN ZOO_ANIMAIS A ON F.KZOO_ANIMAL_FEMEA = A.KZOO_ANIMAL'
  +#13#10'     WHERE KCRESCIMENTO_NASCIMENTO IS NULL AND A.STATUS <> 9'
  +#13#10'      INTO :KZOO_ANIMAL_FEMEA, :NASCIMENTO'
  +#13#10'  DO'
  +#13#10'  BEGIN'
  +#13#10''
  +#13#10'     KZOO_ANIMAL_CRESCIMENTO = NULL;'
  +#13#10''
  +#13#10'     SELECT C.KZOO_ANIMAL_CRESCIMENTO'
  +#13#10'       FROM ZOO_ANIMAL_CRESCIMENTO C'
  +#13#10'      WHERE KZOO_ANIMAL = :KZOO_ANIMAL_FEMEA'
  +#13#10'        AND DATA = :NASCIMENTO'
  +#13#10'      ROWS 1'
  +#13#10'     INTO  :KZOO_ANIMAL_CRESCIMENTO;'
  +#13#10''
  +#13#10'     IF  ( :KZOO_ANIMAL_CRESCIMENTO IS NOT NULL ) THEN'
  +#13#10'      BEGIN'
  +#13#10'         UPDATE ZOO_ANIMAIS_FEMEA'
  +#13#10'            SET KCRESCIMENTO_NASCIMENTO = :KZOO_ANIMAL_CRESCIMENTO'
  +#13#10'          WHERE KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL_FEMEA ;'
  +#13#10'      END'
  +#13#10''
  +#13#10'  END'
  +#13#10'END'
  ;

begin
  TryExecuteDirect( _UPDATE_CRESCIMENTO_NASCIMENTO );
end;


procedure TDBZootecnicoUpdate._5_002_38;
const
  _CREATE_OR_ALTER_PROCEDURE_ZOO_UPDATE_DOADORA_RECEPTORA =
         'CREATE PROCEDURE ZOO_UPDATE_DOADORA_RECEPTORA ('
  +#13#10'      KZOO_ANIMAL_FEMEA TYPE OF SYS$PKGUID20,'
  +#13#10'      TIPO_EVENTO TYPE OF SYS$INT,'
  +#13#10'      PRENHEZ TYPE OF SYS$BOOL_NULL = NULL)'
  +#13#10''
  +#13#10'AS'
  +#13#10'DECLARE EVENTO_IMPLANTE SYS$INT;'
  +#13#10'DECLARE EVENTO_MONTA SYS$INT;'
  +#13#10'DECLARE EVENTO_INSEMINA SYS$INT;'
  +#13#10''
  +#13#10'DECLARE DOADORA SYS$INT ;'
  +#13#10'DECLARE RECEPTORA SYS$INT ;'
  +#13#10'DECLARE ND SYS$INT ;'
  +#13#10''
  +#13#10'DECLARE DOADOR_RECEPTOR SYS$INT ;'
  +#13#10''
  +#13#10'BEGIN'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''TIPO_EVENTO_ZOO'',       ''IMPLANTE''      RETURNING_VALUES EVENTO_IMPLANTE ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''TIPO_EVENTO_ZOO'',       ''MONTA''         RETURNING_VALUES EVENTO_MONTA ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''TIPO_EVENTO_ZOO'',       ''INSEMINA''      RETURNING_VALUES EVENTO_INSEMINA ;'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''TIPO_DOADOR_RECEPTOR'',  ''DOADOR''        RETURNING_VALUES DOADORA ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''TIPO_DOADOR_RECEPTOR'',  ''RECEPTOR''      RETURNING_VALUES RECEPTORA ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''TIPO_DOADOR_RECEPTOR'',  ''ND''            RETURNING_VALUES ND ;'
  +#13#10''
  +#13#10'  SELECT AF.DOADOR_RECEPTOR FROM ZOO_ANIMAIS_FEMEA AF WHERE AF.KZOO_ANIMAL_FEMEA =  :KZOO_ANIMAL_FEMEA'
  +#13#10'  INTO :DOADOR_RECEPTOR;'
  +#13#10''
  +#13#10''
  +#13#10'  IF ((:PRENHEZ IS NOT NULL) AND (:PRENHEZ <> '''') AND (COALESCE(:DOADOR_RECEPTOR, 0) = :DOADORA)) then'
  +#13#10'   BEGIN'
  +#13#10''
  +#13#10'     UPDATE ZOO_ANIMAIS_FEMEA SET DOADOR_RECEPTOR = :ND WHERE KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL_FEMEA;'
  +#13#10''
  +#13#10'   END'
  +#13#10'  ELSE IF ((:TIPO_EVENTO = :EVENTO_IMPLANTE) AND  (COALESCE(:DOADOR_RECEPTOR, 0) <> :RECEPTORA)) then'
  +#13#10'   BEGIN'
  +#13#10''
  +#13#10'     UPDATE ZOO_ANIMAIS_FEMEA SET DOADOR_RECEPTOR = :RECEPTORA WHERE KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL_FEMEA;'
  +#13#10''
  +#13#10'   END'
  +#13#10'  ELSE IF ((:TIPO_EVENTO = :EVENTO_MONTA or :TIPO_EVENTO = :EVENTO_INSEMINA ) AND  (COALESCE(:DOADOR_RECEPTOR, 0) = :RECEPTORA)) then'
  +#13#10'   BEGIN'
  +#13#10''
  +#13#10'     UPDATE ZOO_ANIMAIS_FEMEA SET DOADOR_RECEPTOR = :ND WHERE KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL_FEMEA;'
  +#13#10''
  +#13#10'   END'
  +#13#10''
  +#13#10'END' ;

begin
  TryExecuteDirect( _CREATE_OR_ALTER_PROCEDURE_ZOO_UPDATE_DOADORA_RECEPTORA );
end;


procedure TDBZootecnicoUpdate._5_002_37;
const
   _CREATE_VIEW_VRPT_ULTIMA_ANALISE =
         'CREATE OR ALTER VIEW VRPT_ULTIMA_ANALISE AS'
  +#13#10'SELECT'
  +#13#10'       ULTIMA_ANALISE.KZOO_PESAGEM_LEITE,'
  +#13#10'       ULTIMA_ANALISE.KCAD_FAZENDA,'
  +#13#10'       ULTIMA_ANALISE.KZOO_LACTACAO,'
  +#13#10'       ULTIMA_ANALISE.KZOO_ANIMAL_FEMEA,'
  +#13#10'       ULTIMA_ANALISE.DATALACTACAO,'
  +#13#10'       ULTIMA_ANALISE.DATA,'
  +#13#10'       ULTIMA_ANALISE.GORDURA,'
  +#13#10'       ULTIMA_ANALISE.PROTEINA,'
  +#13#10'       ULTIMA_ANALISE.LACTOSE,'
  +#13#10'       ULTIMA_ANALISE.SOLIDOS_TOTAIS,'
  +#13#10'       ULTIMA_ANALISE.ESD,'
  +#13#10'       ULTIMA_ANALISE.CCS,'
  +#13#10'       ULTIMA_ANALISE.UREIA,'
  +#13#10'       ULTIMA_ANALISE.OBS'
  +#13#10'  FROM ZOO_PESAGEM_LEITE_ANALISE ULTIMA_ANALISE'
  +#13#10' WHERE ULTIMA_ANALISE.DATA = (SELECT AN.DATA'
  +#13#10'                                FROM ZOO_PESAGEM_LEITE_ANALISE AN'
  +#13#10'                               WHERE AN.KZOO_ANIMAL_FEMEA = ULTIMA_ANALISE.KZOO_ANIMAL_FEMEA'
  +#13#10'                               ORDER BY AN.DATA DESC ROWS 1)'
  ;

begin
  TryExecuteDirect( _CREATE_VIEW_VRPT_ULTIMA_ANALISE );
end;


procedure TDBZootecnicoUpdate._5_002_36;
const
   _ALTER_TABLE_ZOO_PESAGEM_LEITE_ANALISE =
         'ALTER TABLE ZOO_PESAGEM_LEITE_ANALISE'
  +#13#10'ADD OBS SYS$BLOBTEXT'
  +#13#10',ALTER OBS POSITION 14';

begin
  TryExecuteDirect( _ALTER_TABLE_ZOO_PESAGEM_LEITE_ANALISE );
end;


procedure TDBZootecnicoUpdate._5_002_35;
const
   _ALTER_TABLE_ZOO_ANIMAL_ANALISE_LEITE =
         'ALTER TABLE ZOO_ANIMAL_ANALISE_LEITE'
  +#13#10'ADD OBS SYS$BLOBTEXT'
  +#13#10',ALTER OBS POSITION 14';

begin
  TryExecuteDirect( _ALTER_TABLE_ZOO_ANIMAL_ANALISE_LEITE );
end;


procedure TDBZootecnicoUpdate._5_002_34;
const
   _CREATE_TABLE_ZOO_ANIMAL_ANALISE_LEITE =
         'CREATE TABLE ZOO_ANIMAL_ANALISE_LEITE('
  +#13#10'KZOO_ANIMAL_ANALISE_LEITE SYS$PKGUID20,'
  +#13#10'KCAD_FAZENDA SYS$FKGUID20_NN,'
  +#13#10'KZOO_LACTACAO SYS$FKGUID20_NN,'
  +#13#10'KZOO_ANIMAL_FEMEA SYS$FKGUID20_NN,'
  +#13#10'DATALACTACAO SYS$DATE_NN,'
  +#13#10'DATA SYS$DATE_NN,'
  +#13#10'GORDURA SYS$FLOAT,'
  +#13#10'PROTEINA SYS$FLOAT,'
  +#13#10'LACTOSE SYS$FLOAT,'
  +#13#10'SOLIDOS_TOTAIS SYS$FLOAT,'
  +#13#10'ESD SYS$FLOAT,'
  +#13#10'CCS SYS$INT,'
  +#13#10'UREIA SYS$FLOAT,'
  +#13#10'SYS$UI SYS$USERLOGIN,'
  +#13#10'SYS$DI SYS$DATE,'
  +#13#10'SYS$UU SYS$USERLOGIN,'
  +#13#10'SYS$DU SYS$DATE,'
  +#13#10'CONSTRAINT PKZOO_ANIMAL_ANALISE_LEITE PRIMARY KEY (KZOO_ANIMAL_ANALISE_LEITE) )';

begin
  TryExecuteDirect( _CREATE_TABLE_ZOO_ANIMAL_ANALISE_LEITE );
end  ;


procedure TDBZootecnicoUpdate._5_002_33;
const
   _CREATE_ALTER_PROCEDURE_ZOO_RECALC_LACTACOES_ANIMAL =
          'CREATE OR ALTER PROCEDURE ZOO_RECALC_LACTACOES_ANIMAL ('
   +#13#10'    KZOO_ANIMAL_FEMEA SYS$FKGUID20)'
   +#13#10'AS'
   +#13#10' DECLARE VARIABLE KZOO_LACTACAO SYS$FKGUID20;'
   +#13#10'BEGIN'
   +#13#10'  FOR'
   +#13#10'    SELECT KZOO_LACTACAO'
   +#13#10'    FROM ZOO_LACTACOES'
   +#13#10'    WHERE KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL_FEMEA'
   +#13#10'    ORDER BY DATALACTACAO'
   +#13#10'  INTO :KZOO_LACTACAO DO'
   +#13#10'    EXECUTE PROCEDURE ZOO_UPDATE_CALCULO_PESAGEM KZOO_LACTACAO ;'
   +#13#10'END' ;
begin
    ExecuteDirect ( _CREATE_ALTER_PROCEDURE_ZOO_RECALC_LACTACOES_ANIMAL  ) ;
end ;



procedure TDBZootecnicoUpdate._5_002_32;
const
  _ALTER_PROCEDURE_ZOO_UPDATE_CALCULO_PESAGEM =
    'CREATE OR ALTER PROCEDURE ZOO_UPDATE_CALCULO_PESAGEM ('
   +#13#10'    KZOO_LACTACAO TYPE OF SYS$FKGUID20_NN)'
   +#13#10'AS'
   +#13#10'DECLARE KCAD_FAZENDA TYPE OF SYS$FKGUID20;'
   +#13#10'DECLARE KZOO_PESAGEM_LEITE TYPE OF SYS$FKGUID20;'
   +#13#10'DECLARE KPRIMEIRA_PESAGEMLEITE TYPE OF SYS$FKGUID20;'
   +#13#10'DECLARE PRIMEIRA_PESAGEMLEITE TYPE OF SYS$DATE;'
   +#13#10'DECLARE KULTIMA_PESAGEMLEITE TYPE OF SYS$FKGUID20;'
   +#13#10'DECLARE ULTIMA_PESAGEMLEITE TYPE OF SYS$DATE;'
   +#13#10'DECLARE NL TYPE OF SYS$INT;'
   +#13#10'DECLARE KZOO_ANIMAL_FEMEA TYPE OF SYS$FKGUID20;'
   +#13#10'DECLARE DATALACTACAO TYPE OF SYS$DATE;'
   +#13#10'DECLARE DATA_SECAGEM TYPE OF SYS$DATE;'
   +#13#10'DECLARE DATAPESAGEM TYPE OF SYS$DATE;'
   +#13#10'DECLARE DEL TYPE OF SYS$INT;'
   +#13#10'DECLARE DEL_PCL TYPE OF SYS$INT;'
   +#13#10'DECLARE DATA_PICO SYS$DATE;'
   +#13#10'DECLARE KPICO_PESAGEMLEITE TYPE OF SYS$FKGUID20;'
   +#13#10'DECLARE PRODUCAO_PICO TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE PRODUCAO TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE P_GORDURA TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE GORDURA TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE P_PROTEINA TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE PROTEINA TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE DATA_ANTERIOR TYPE OF SYS$DATE;'
   +#13#10'DECLARE DEL_ANTERIOR TYPE OF SYS$INT;'
   +#13#10'DECLARE PRODUCAO_ANTERIOR TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE P_GORDURA_ANTERIOR TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE GORDURA_ANTERIOR TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE P_PROTEINA_ANTERIOR TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE PROTEINA_ANTERIOR TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE INTERVALO_DEL TYPE OF SYS$INT;'
   +#13#10'DECLARE PRODUCAO_1 TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE GORDURA_1 TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE PROTEINA_1 TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE PRODUCAO_MEDIA TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE GORDURA_MEDIA TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE PROTEINA_MEDIA TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE PRODUCAO_UC TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE GORDURA_UC TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE PROTEINA_UC TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE NASCIMENTO TYPE OF SYS$DATE;'
   +#13#10'DECLARE FATOR_PROJECAO_L305 TYPE OF ZOO$PROJECAOPRODUCAO;'
   +#13#10'DECLARE FATOR_PROJECAO_GP305 TYPE OF ZOO$PROJECAOPRODUCAO;'
   +#13#10'DECLARE IDADE_DIAS TYPE OF SYS$INT;'
   +#13#10'DECLARE IDADE_MESES TYPE OF SYS$INT;'
   +#13#10'DECLARE IDADE_ANOS TYPE OF SYS$INT;'
   +#13#10'DECLARE PRODUCAO_ACUMULADA TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE GORDURA_ACUMULADA TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE PROTEINA_ACUMULADA TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE PROJ_PRODUCAO305 TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE PROJ_GORDURA305 TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE PROJ_PROTEINA305 TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE DPP TYPE OF SYS$INT;'
   +#13#10'DECLARE DEL305 TYPE OF SYS$INT;'
   +#13#10'DECLARE PL305 TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE PG305 TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE PP305 TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE DEL365 TYPE OF SYS$INT;'
   +#13#10'DECLARE PL365 TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE PG365 TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE PP365 TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE FATOR_EQA_LEITE TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE FATOR_EQA_GP TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE FATOR_PCL TYPE OF ZOO$FATORPCL;'
   +#13#10'DECLARE EQA_LEITE TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE EQA_GORDURA TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE EQA_PROTEINA TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE PRODUCAO_PREVISTA TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE NUMERO_ORDENHAS TYPE OF SYS$INT;'
   +#13#10'DECLARE MAX_ORDENHAS_DIA TYPE OF SYS$INT;'
   +#13#10'DECLARE TOTAL_ORDENHAS TYPE OF SYS$INT;'
   +#13#10'DECLARE KLOTE_NAOPROCESSADO TYPE OF SYS$FKGUID20;'
   +#13#10'DECLARE KZOO_LOTEPESAGEM_LEITE TYPE OF SYS$FKGUID20;'
   +#13#10'DECLARE KZOO_PESAGEM_LEITE_EQA TYPE OF SYS$FKGUID20;'
   +#13#10'DECLARE EQA_LEITE_OLD TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE EQA_GORDURA_OLD TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE EQA_PROTEINA_OLD TYPE OF SYS$FLOAT;'
   +#13#10'DECLARE EQA_CHANGED VARCHAR( 1 ) = NULL ;'
   +#13#10'DECLARE JNL$OFF VARCHAR( 1 ) ;'
   +#13#10'DECLARE ZOO$CLOFF VARCHAR( 1 ) ;'
   +#13#10'DECLARE CG INTEGER ;'
   +#13#10'DECLARE DATA_DESCARTE SYS$DATE ;'
   +#13#10'DECLARE CALCULAR305 TYPE OF SYS$BOOL = ''F'';'
   +#13#10'DECLARE CALCULAR365 TYPE OF SYS$BOOL = ''F'';'
   +#13#10'BEGIN'
   +#13#10''
   +#13#10'  if ( RDB$GET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLOFF'' ) = ''1'' ) THEN'
   +#13#10'     EXIT ;'
   +#13#10''
   +#13#10'  KPRIMEIRA_PESAGEMLEITE = null ;'
   +#13#10'  KULTIMA_PESAGEMLEITE   = null ;'
   +#13#10'  KPICO_PESAGEMLEITE     = null ;'
   +#13#10'  KCAD_FAZENDA           = null ;'
   +#13#10'  DEL                    = null ;'
   +#13#10'  KLOTE_NAOPROCESSADO    = null ;'
   +#13#10'  TOTAL_ORDENHAS         = 0 ;'
   +#13#10'  MAX_ORDENHAS_DIA       = 0 ;'
   +#13#10''
   +#13#10''
   +#13#10'  SELECT L.KCAD_FAZENDA, L.KZOO_ANIMAL_FEMEA, L.DATALACTACAO, L.NL, L.DATA_SECAGEM FROM ZOO_LACTACOES  L'
   +#13#10'  WHERE KZOO_LACTACAO = :KZOO_LACTACAO'
   +#13#10'  INTO  :KCAD_FAZENDA, :KZOO_ANIMAL_FEMEA, DATALACTACAO, NL, DATA_SECAGEM ;'
   +#13#10''
   +#13#10'  if ( KCAD_FAZENDA is null ) then'
   +#13#10'     exit ;'
   +#13#10''
   +#13#10'  DPP = COALESCE( CAST( DATA_SECAGEM AS DATE ), CURRENT_DATE ) - CAST( DATALACTACAO AS DATE );'
   +#13#10''
   +#13#10'  -- idade do animal na lactação'
   +#13#10'  SELECT NASCIMENTO FROM ZOO_ANIMAIS_FEMEA WHERE KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL_FEMEA INTO :NASCIMENTO ;'
   +#13#10'  SELECT DATA FROM ZOO_ANIMAL_DESCARTES WHERE KZOO_ANIMAL = :KZOO_ANIMAL_FEMEA INTO :DATA_DESCARTE ;'
   +#13#10''
   +#13#10'  IF ( ( DATA_DESCARTE IS NULL ) OR ( DATALACTACAO + 305 < DATA_DESCARTE ) ) THEN'
   +#13#10'    CALCULAR305 = ''T'' ;'
   +#13#10''
   +#13#10'  IF ( ( DATA_DESCARTE IS NULL ) OR ( DATALACTACAO + 365 < DATA_DESCARTE ) ) THEN'
   +#13#10'    CALCULAR365 = ''T'' ;'
   +#13#10''
   +#13#10'  IDADE_DIAS  = CAST ( DATALACTACAO - NASCIMENTO AS INTEGER) ;'
   +#13#10'  IDADE_MESES = CAST ( IDADE_DIAS / 30.4 AS INTEGER ) ;'
   +#13#10'  IDADE_ANOS  = CAST ( IDADE_DIAS / 365.0 AS INTEGER ) ;'
   +#13#10''
   +#13#10'  EXECUTE PROCEDURE ZOO_GET_EQA IDADE_MESES returning_values :FATOR_EQA_LEITE, :FATOR_EQA_GP ;'
   +#13#10''
   +#13#10'  SELECT KZOO_LOTEPESAGEM_LEITE FROM ZOO_LOTEPESAGEM_LEITE'
   +#13#10'  WHERE KCAD_FAZENDA = :KCAD_FAZENDA AND PROCESSADO = ''F'''
   +#13#10'  ORDER BY DATA'
   +#13#10'  ROWS 1'
   +#13#10'  INTO KLOTE_NAOPROCESSADO  ;'
   +#13#10''
   +#13#10'--  IN AUTONOMOUS TRANSACTION DO'
   +#13#10'--     DELETE FROM ZOO_PESAGEM_LEITE_EQA WHERE  KZOO_LACTACAO = :KZOO_LACTACAO ;'
   +#13#10'--  IN AUTONOMOUS TRANSACTION DO'
   +#13#10'--     SELECT COUNT(*) FROM ZOO_PESAGEM_LEITE_EQA WHERE KZOO_LACTACAO = :KZOO_LACTACAO INTO CG ;'
   +#13#10''
   +#13#10'  FOR'
   +#13#10'   SELECT'
   +#13#10'    KZOO_PESAGEM_LEITE,'
   +#13#10'    KZOO_LOTEPESAGEM_LEITE,'
   +#13#10'    DATA,'
   +#13#10'    (IIF( ORD1 IS null, 0, 1 ) + IIF( ORD2 IS null, 0, 1 ) +IIF( ORD3 IS null, 0, 1 )),'
   +#13#10'    TOTAL'
   +#13#10'   FROM ZOO_PESAGEM_LEITE'
   +#13#10'   WHERE KZOO_LACTACAO = :KZOO_LACTACAO'
   +#13#10'     AND ANIMAL_DOENTE = ''F'''
   +#13#10'     AND DATA > :DATALACTACAO'
   +#13#10'--   PLAN (ZOO_PESAGEM_LEITE INDEX (IXZOO_PESAGEM_LEITE_02))'
   +#13#10'   ORDER BY KZOO_LACTACAO, DATA'
   +#13#10'  INTO KZOO_PESAGEM_LEITE, KZOO_LOTEPESAGEM_LEITE, DATAPESAGEM, NUMERO_ORDENHAS, PRODUCAO'
   +#13#10'  AS CURSOR PESAGEM_LEITE'
   +#13#10'  DO'
   +#13#10'    IF (( KZOO_LOTEPESAGEM_LEITE IS NULL ) OR (KLOTE_NAOPROCESSADO IS NULL) or (KZOO_LOTEPESAGEM_LEITE <> KLOTE_NAOPROCESSADO )) then'
   +#13#10'    begin'
   +#13#10''
   +#13#10'      TOTAL_ORDENHAS = TOTAL_ORDENHAS + NUMERO_ORDENHAS ;'
   +#13#10'      if ( NUMERO_ORDENHAS >  MAX_ORDENHAS_DIA ) then'
   +#13#10'        MAX_ORDENHAS_DIA = NUMERO_ORDENHAS ;'
   +#13#10''
   +#13#10'      --DEL = CAST(DATAPESAGEM - DATALACTACAO AS INTEGER) ;'
   +#13#10'      DEL = CAST( (CAST ( DATAPESAGEM AS DATE ) - CAST ( DATALACTACAO AS DATE )) AS INTEGER) ;'
   +#13#10'      INTERVALO_DEL = DEL - DEL_ANTERIOR ; --COALESCE ( DEL_ANTERIOR, 0 ) ;'
   +#13#10''
   +#13#10'      EXECUTE PROCEDURE ZOO_GET_PROJECAO_PRODUCAO DEL, IDADE_MESES returning_values :FATOR_PROJECAO_L305, :FATOR_PROJECAO_GP305 ;'
   +#13#10''
   +#13#10'      if ( KPRIMEIRA_PESAGEMLEITE is null ) then'
   +#13#10'        begin'
   +#13#10''
   +#13#10'           -- porcentagem de gordura, proteina da 1a analise da lactacao'
   +#13#10'           SELECT A.GORDURA / 100 GORDURA, A.PROTEINA / 100 GORDURA'
   +#13#10'           FROM ZOO_PESAGEM_LEITE_ANALISE A'
   +#13#10'           WHERE A.KZOO_LACTACAO     = :KZOO_LACTACAO'
   +#13#10'           ORDER BY A.KZOO_LACTACAO, A.DATA'
   +#13#10'           ROWS 1'
   +#13#10'           INTO P_GORDURA, P_PROTEINA ;'
   +#13#10''
   +#13#10'           -- calculo Gordura, Proteina'
   +#13#10'           GORDURA  = PRODUCAO * P_GORDURA  ;'
   +#13#10'           PROTEINA = PRODUCAO * P_PROTEINA ;'
   +#13#10''
   +#13#10'           -- atualiza a 1a pesagem'
   +#13#10'           DEL_PCL    = DEL ;'
   +#13#10'           KPRIMEIRA_PESAGEMLEITE = KZOO_PESAGEM_LEITE ;'
   +#13#10'           PRIMEIRA_PESAGEMLEITE  = DATAPESAGEM ;'
   +#13#10''
   +#13#10'           -- fator pcl em funcao do del / idade em anos'
   +#13#10'           EXECUTE PROCEDURE ZOO_GET_FCPCL ( DEL_PCL, IDADE_ANOS ) returning_values FATOR_PCL ;'
   +#13#10''
   +#13#10'           PRODUCAO_1 = PRODUCAO * FATOR_PCL * DEL_PCL ;'
   +#13#10'           GORDURA_1  = GORDURA  * FATOR_PCL * DEL_PCL ;'
   +#13#10'           PROTEINA_1 = PROTEINA * FATOR_PCL * DEL_PCL ;'
   +#13#10''
   +#13#10'        end'
   +#13#10'      else -- checa se existe uma analise na pesagem atual'
   +#13#10'        begin'
   +#13#10''
   +#13#10'          SELECT IIF ( A.GORDURA = 0, :P_GORDURA, A.GORDURA / 100 ), IIF ( A.PROTEINA = 0, :P_PROTEINA, A.PROTEINA / 100)'
   +#13#10'            FROM ZOO_PESAGEM_LEITE_ANALISE A'
   +#13#10'            WHERE A.KZOO_PESAGEM_LEITE = :KZOO_PESAGEM_LEITE'
   +#13#10'          INTO P_GORDURA, P_PROTEINA ;'
   +#13#10''
   +#13#10'          -- calculo Gordura, Proteina'
   +#13#10'          GORDURA  = PRODUCAO * P_GORDURA  ;'
   +#13#10'          PROTEINA = PRODUCAO * P_PROTEINA ;'
   +#13#10'         end'
   +#13#10''
   +#13#10'      -- calculo Gordura, Proteina anteriror'
   +#13#10'      GORDURA_ANTERIOR       = PRODUCAO_ANTERIOR * P_GORDURA_ANTERIOR  ;'
   +#13#10'      PROTEINA_ANTERIOR      = PRODUCAO_ANTERIOR * P_PROTEINA_ANTERIOR ;'
   +#13#10'      -- dados da ultima pesagem'
   +#13#10'      KULTIMA_PESAGEMLEITE = KZOO_PESAGEM_LEITE ;'
   +#13#10'      ULTIMA_PESAGEMLEITE  = DATAPESAGEM ;'
   +#13#10'      PRODUCAO_UC = PRODUCAO ;'
   +#13#10'      GORDURA_UC  = GORDURA  ;'
   +#13#10'      PROTEINA_UC = PROTEINA ;'
   +#13#10''
   +#13#10'      -- dados do pico'
   +#13#10'      if (   ( DEL BETWEEN 45 AND 90 )'
   +#13#10'         AND (    (KPICO_PESAGEMLEITE IS NULL)'
   +#13#10'               or (PRODUCAO > PRODUCAO_PICO)'
   +#13#10'              )'
   +#13#10'         ) then'
   +#13#10'        begin'
   +#13#10'         KPICO_PESAGEMLEITE = KZOO_PESAGEM_LEITE ;'
   +#13#10'         DATA_PICO           = DATAPESAGEM       ;'
   +#13#10'         PRODUCAO_PICO       = PRODUCAO          ;'
   +#13#10'        end'
   +#13#10''
   +#13#10''
   +#13#10'      -- calculo média de Produção, Gordura, Proteina'
   +#13#10'      PRODUCAO_MEDIA    = ((PRODUCAO + PRODUCAO_ANTERIOR)/2) * INTERVALO_DEL ;'
   +#13#10'      GORDURA_MEDIA     = ((GORDURA  + GORDURA_ANTERIOR )/2) * INTERVALO_DEL ;'
   +#13#10'      PROTEINA_MEDIA    = ((PROTEINA + PROTEINA_ANTERIOR)/2) * INTERVALO_DEL ;'
   +#13#10''
   +#13#10'      if ( KZOO_PESAGEM_LEITE = KPRIMEIRA_PESAGEMLEITE ) then'
   +#13#10'        begin'
   +#13#10'           PRODUCAO_ACUMULADA    = 0 ; -- PRODUCAO ;'
   +#13#10'           GORDURA_ACUMULADA     = 0 ; -- GORDURA  ;'
   +#13#10'           PROTEINA_ACUMULADA    = 0 ; -- PROTEINA ;'
   +#13#10'        end'
   +#13#10'      else'
   +#13#10'        begin'
   +#13#10'           -- projecao de Produção, Gordura, Proteina'
   +#13#10'          PRODUCAO_ACUMULADA    = PRODUCAO_ACUMULADA + PRODUCAO_MEDIA ;'
   +#13#10'          GORDURA_ACUMULADA     = GORDURA_ACUMULADA  + GORDURA_MEDIA  ;'
   +#13#10'          PROTEINA_ACUMULADA    = PROTEINA_ACUMULADA + PROTEINA_MEDIA ;'
   +#13#10'        end'
   +#13#10''
   +#13#10'      PROJ_PRODUCAO305  = (PRODUCAO_1 + PRODUCAO_ACUMULADA) * FATOR_PROJECAO_L305  ;'
   +#13#10'      PROJ_GORDURA305   = (GORDURA_1  + GORDURA_ACUMULADA ) * FATOR_PROJECAO_GP305 ;'
   +#13#10'      PROJ_PROTEINA305  = (PROTEINA_1 + PROTEINA_ACUMULADA) * FATOR_PROJECAO_GP305 ;'
   +#13#10''
   +#13#10'      if ( CALCULAR305 = ''T'' AND DEL >= 305 AND DEL305 IS NULL ) then'
   +#13#10'        begin'
   +#13#10'           DEL305 = DEL ;'
   +#13#10'           PL305 = (PRODUCAO_1 + PRODUCAO_ACUMULADA) + ((PRODUCAO_MEDIA / INTERVALO_DEL) * (305 - DEL)) ;'
   +#13#10'           PG305 = (GORDURA_1  + GORDURA_ACUMULADA ) + ((GORDURA_MEDIA  / INTERVALO_DEL) * (305 - DEL)) ;'
   +#13#10'           PP305 = (PROTEINA_1 + PROTEINA_ACUMULADA) + ((PROTEINA_MEDIA / INTERVALO_DEL) * (305 - DEL)) ;'
   +#13#10'        end'
   +#13#10''
   +#13#10'      if ( CALCULAR365 = ''T'' AND DEL >= 365 AND DEL365 IS NULL ) then'
   +#13#10'        begin'
   +#13#10'           DEL365 = DEL ;'
   +#13#10'           PL365 = (PRODUCAO_1 + PRODUCAO_ACUMULADA) + ((PRODUCAO_MEDIA / INTERVALO_DEL) * (365 - DEL)) ;'
   +#13#10'           PG365 = (GORDURA_1  + GORDURA_ACUMULADA ) + ((GORDURA_MEDIA  / INTERVALO_DEL) * (365 - DEL)) ;'
   +#13#10'           PP365 = (PROTEINA_1 + PROTEINA_ACUMULADA) + ((PROTEINA_MEDIA / INTERVALO_DEL) * (365 - DEL)) ;'
   +#13#10'        end'
   +#13#10''
   +#13#10'      --EQA_LEITE    = COALESCE ( PL305, PROJ_PRODUCAO305 ) * FATOR_EQA_LEITE ;'
   +#13#10'      --EQA_GORDURA  = COALESCE ( PG305, PROJ_GORDURA305  ) * FATOR_EQA_GP    ;'
   +#13#10'      --EQA_PROTEINA = COALESCE ( PP305, PROJ_PROTEINA305 ) * FATOR_EQA_GP    ;'
   +#13#10''
   +#13#10'      JNL$OFF   = RDB$GET_CONTEXT( ''USER_TRANSACTION'', ''JNL$OFF'' ) ;'
   +#13#10'      RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''JNL$OFF'', ''1'' ) ;'
   +#13#10''
   +#13#10'      ZOO$CLOFF = RDB$GET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLOFF'' ) ;'
   +#13#10'      RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLOFF'', ''1'' ) ;'
   +#13#10''
   +#13#10'-- removido 30.11.2012 a pedido de R.S.M.'
   +#13#10'--     INSERT'
   +#13#10'--      INTO TMP_PESAGEM_LEITE_EQA'
   +#13#10'--       ( KZOO_PESAGEM_LEITE, KCAD_FAZENDA, KZOO_LACTACAO, DATA, EQA_LEITE, EQA_GORDURA, EQA_PROTEINA )'
   +#13#10'--      VALUES'
   +#13#10'--       ( :KZOO_PESAGEM_LEITE, :KCAD_FAZENDA, :KZOO_LACTACAO, :DATAPESAGEM, :EQA_LEITE, :EQA_GORDURA, :EQA_PROTEINA ) ;'
   +#13#10''
   +#13#10'/* versao antiga'
   +#13#10'      KZOO_PESAGEM_LEITE_EQA = NULL ;'
   +#13#10'      SELECT KZOO_PESAGEM_LEITE, EQA_LEITE, EQA_GORDURA, EQA_PROTEINA FROM ZOO_PESAGEM_LEITE_EQA'
   +#13#10'      WHERE KZOO_PESAGEM_LEITE = :KZOO_PESAGEM_LEITE'
   +#13#10'      INTO KZOO_PESAGEM_LEITE_EQA, EQA_LEITE_OLD, EQA_GORDURA_OLD, EQA_PROTEINA_OLD ;'
   +#13#10''
   +#13#10'      IF ( KZOO_PESAGEM_LEITE_EQA IS NULL ) THEN'
   +#13#10'        BEGIN'
   +#13#10'          EQA_CHANGED = ''T'' ;'
   +#13#10'          INSERT'
   +#13#10'           INTO ZOO_PESAGEM_LEITE_EQA'
   +#13#10'             ( KZOO_PESAGEM_LEITE, KCAD_FAZENDA, KZOO_LACTACAO, DATA, EQA_LEITE, EQA_GORDURA, EQA_PROTEINA )'
   +#13#10'           VALUES'
   +#13#10'             ( :KZOO_PESAGEM_LEITE, :KCAD_FAZENDA, :KZOO_LACTACAO, :DATAPESAGEM, :EQA_LEITE, :EQA_GORDURA, :EQA_PROTEINA ) ;'
   +#13#10'        END'
   +#13#10'      ELSE IF (   (EQA_LEITE_OLD    IS DISTINCT FROM EQA_LEITE )'
   +#13#10'               OR (EQA_GORDURA_OLD  IS DISTINCT FROM EQA_GORDURA)'
   +#13#10'               OR (EQA_PROTEINA_OLD IS DISTINCT FROM EQA_PROTEINA) ) THEN'
   +#13#10'        BEGIN'
   +#13#10'          EQA_CHANGED = ''T'' ;'
   +#13#10'          UPDATE ZOO_PESAGEM_LEITE_EQA'
   +#13#10'             SET'
   +#13#10'               EQA_LEITE    = :EQA_LEITE,'
   +#13#10'               EQA_GORDURA  = :EQA_GORDURA,'
   +#13#10'               EQA_PROTEINA =  :EQA_PROTEINA'
   +#13#10'          WHERE KZOO_PESAGEM_LEITE = :KZOO_PESAGEM_LEITE ;'
   +#13#10'        END'
   +#13#10'*/'
   +#13#10'      RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLOFF'', ZOO$CLOFF ) ;'
   +#13#10'      RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''JNL$OFF'',   JNL$OFF   ) ;'
   +#13#10''
   +#13#10'      IF ( NL > 1 ) then'
   +#13#10'       PRODUCAO_PREVISTA = PRODUCAO_ANTERIOR - (PRODUCAO_ANTERIOR * ( DEL - DEL_ANTERIOR ) * 0.003) ;'
   +#13#10'      ELSE'
   +#13#10'       PRODUCAO_PREVISTA = PRODUCAO_ANTERIOR - (PRODUCAO_ANTERIOR * ( DEL - DEL_ANTERIOR ) *  0.002) ;'
   +#13#10''
   +#13#10'       -- copia para dados anteriores.'
   +#13#10'      DATA_ANTERIOR         = DATAPESAGEM ;'
   +#13#10'      DEL_ANTERIOR          = DEL  ;'
   +#13#10'      PRODUCAO_ANTERIOR     = PRODUCAO    ;'
   +#13#10'      P_GORDURA_ANTERIOR    = P_GORDURA   ;'
   +#13#10'      P_PROTEINA_ANTERIOR   = P_PROTEINA  ;'
   +#13#10'    end'
   +#13#10''
   +#13#10'   RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLRCL'', ''1'' ) ;'
   +#13#10''
   +#13#10'   if ( CALCULAR305 = ''T'' AND DEL305 is NULL ) then'
   +#13#10'   begin'
   +#13#10'     if ( DPP >= 305 ) then'
   +#13#10'     begin'
   +#13#10'      PL305 = PROJ_PRODUCAO305  ;'
   +#13#10'      PG305 = PROJ_GORDURA305   ;'
   +#13#10'      PP305 = PROJ_PROTEINA305  ;'
   +#13#10'     end'
   +#13#10'   end'
   +#13#10''
   +#13#10'   if ( CALCULAR365 = ''T'' AND DEL365 is NULL ) then'
   +#13#10'   begin'
   +#13#10'     if ( DPP >= 365 ) then'
   +#13#10'     begin'
   +#13#10'       PL365 = (PRODUCAO_1 + PRODUCAO_ACUMULADA) + (PRODUCAO_UC * (365 - DEL)) ;'
   +#13#10'       PG365 = (GORDURA_1  + GORDURA_ACUMULADA ) + (GORDURA_UC  * (365 - DEL)) ;'
   +#13#10'       PP365 = (PROTEINA_1 + PROTEINA_ACUMULADA) + (PROTEINA_UC * (365 - DEL)) ;'
   +#13#10'     end'
   +#13#10'   end'
   +#13#10''
   +#13#10'   EQA_LEITE    = PL305 * FATOR_EQA_LEITE ;'
   +#13#10'   EQA_GORDURA  = PG305 * FATOR_EQA_GP    ;'
   +#13#10'   EQA_PROTEINA = PP305 * FATOR_EQA_GP    ;'
   +#13#10''
   +#13#10'   --- atualização da lactacao'
   +#13#10'   UPDATE ZOO_LACTACOES'
   +#13#10'     SET'
   +#13#10'         NUMERO_ORDENHAS        = :TOTAL_ORDENHAS,'
   +#13#10'         MAX_ORDENHAS_DIA       = :MAX_ORDENHAS_DIA,'
   +#13#10'         NASCIMENTO             = :NASCIMENTO,'
   +#13#10'         KPRIMEIRA_PESAGEMLEITE = :KPRIMEIRA_PESAGEMLEITE,'
   +#13#10'         PRIMEIRA_PESAGEMLEITE  = :PRIMEIRA_PESAGEMLEITE,'
   +#13#10'         KULTIMA_PESAGEMLEITE   = :KULTIMA_PESAGEMLEITE,'
   +#13#10'         ULTIMA_PESAGEMLEITE    = :ULTIMA_PESAGEMLEITE,'
   +#13#10'         KPICO_PESAGEMLEITE     = :KPICO_PESAGEMLEITE,'
   +#13#10'         DATA_PICO              = :DATA_PICO,'
   +#13#10'         PRODUCAO_PICO          = :PRODUCAO_PICO,'
   +#13#10'         PRODUCAO_1             = :PRODUCAO_1,'
   +#13#10'         GORDURA_1              = :GORDURA_1,'
   +#13#10'         PROTEINA_1             = :PROTEINA_1,'
   +#13#10'         PRODUCAO_MEDIA         = :PRODUCAO_ACUMULADA,'
   +#13#10'         GORDURA_MEDIA          = :GORDURA_ACUMULADA,'
   +#13#10'         PROTEINA_MEDIA         = :PROTEINA_ACUMULADA,'
   +#13#10'         PRODUCAO_UC            = :PRODUCAO_UC,'
   +#13#10'         GORDURA_UC             = :GORDURA_UC,'
   +#13#10'         PROTEINA_UC            = :PROTEINA_UC,'
   +#13#10'         PRODUCAO_PREVISTA      = :PRODUCAO_PREVISTA,'
   +#13#10'         DEL305                 = :DEL305,'
   +#13#10'         PL305                  = :PL305,'
   +#13#10'         PG305                  = :PG305,'
   +#13#10'         PP305                  = :PP305,'
   +#13#10'         DEL365                 = :DEL365,'
   +#13#10'         PL365                  = :PL365,'
   +#13#10'         PG365                  = :PG365,'
   +#13#10'         PP365                  = :PP365,'
   +#13#10'         EQA_LEITE              = :EQA_LEITE,'
   +#13#10'         EQA_GORDURA            = :EQA_GORDURA,'
   +#13#10'         EQA_PROTEINA           = :EQA_PROTEINA'
   +#13#10'    WHERE'
   +#13#10'         ( KZOO_LACTACAO = :KZOO_LACTACAO )'
   +#13#10'     AND ( NUMERO_ORDENHAS        IS DISTINCT FROM :TOTAL_ORDENHAS'
   +#13#10'         OR MAX_ORDENHAS_DIA       IS DISTINCT FROM :MAX_ORDENHAS_DIA'
   +#13#10'         OR NASCIMENTO             IS DISTINCT FROM :NASCIMENTO'
   +#13#10'         OR KPRIMEIRA_PESAGEMLEITE IS DISTINCT FROM :KPRIMEIRA_PESAGEMLEITE'
   +#13#10'         OR PRIMEIRA_PESAGEMLEITE  IS DISTINCT FROM :PRIMEIRA_PESAGEMLEITE'
   +#13#10'         OR KULTIMA_PESAGEMLEITE   IS DISTINCT FROM :KULTIMA_PESAGEMLEITE'
   +#13#10'         OR ULTIMA_PESAGEMLEITE    IS DISTINCT FROM :ULTIMA_PESAGEMLEITE'
   +#13#10'         OR KPICO_PESAGEMLEITE     IS DISTINCT FROM :KPICO_PESAGEMLEITE'
   +#13#10'         OR DATA_PICO              IS DISTINCT FROM :DATA_PICO'
   +#13#10'         OR PRODUCAO_PICO          IS DISTINCT FROM :PRODUCAO_PICO'
   +#13#10'         OR PRODUCAO_1             IS DISTINCT FROM :PRODUCAO_1'
   +#13#10'         OR GORDURA_1              IS DISTINCT FROM :GORDURA_1'
   +#13#10'         OR PROTEINA_1             IS DISTINCT FROM :PROTEINA_1'
   +#13#10'         OR PRODUCAO_MEDIA         IS DISTINCT FROM :PRODUCAO_ACUMULADA'
   +#13#10'         OR GORDURA_MEDIA          IS DISTINCT FROM :GORDURA_ACUMULADA'
   +#13#10'         OR PROTEINA_MEDIA         IS DISTINCT FROM :PROTEINA_ACUMULADA'
   +#13#10'         OR PRODUCAO_UC            IS DISTINCT FROM :PRODUCAO_UC'
   +#13#10'         OR GORDURA_UC             IS DISTINCT FROM :GORDURA_UC'
   +#13#10'         OR PROTEINA_UC            IS DISTINCT FROM :PROTEINA_UC'
   +#13#10'         OR PRODUCAO_PREVISTA      IS DISTINCT FROM :PRODUCAO_PREVISTA'
   +#13#10'         OR DEL305                 IS DISTINCT FROM :DEL305'
   +#13#10'         OR PL305                  IS DISTINCT FROM :PL305'
   +#13#10'         OR PG305                  IS DISTINCT FROM :PG305'
   +#13#10'         OR PP305                  IS DISTINCT FROM :PP305'
   +#13#10'         OR DEL365                 IS DISTINCT FROM :DEL365'
   +#13#10'         OR PL365                  IS DISTINCT FROM :PL365'
   +#13#10'         OR PG365                  IS DISTINCT FROM :PG365'
   +#13#10'         OR PP365                  IS DISTINCT FROM :PP365'
   +#13#10'         OR EQA_LEITE              IS DISTINCT FROM :EQA_LEITE'
   +#13#10'         OR EQA_GORDURA            IS DISTINCT FROM :EQA_GORDURA'
   +#13#10'         OR EQA_PROTEINA           IS DISTINCT FROM :EQA_PROTEINA ) ;'
   +#13#10''
   +#13#10'    RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLRCL'', NULL ) ;'
   +#13#10''
   +#13#10'    EQA_LEITE    = 0 ;'
   +#13#10'    EQA_GORDURA  = 0 ;'
   +#13#10'    EQA_PROTEINA = 0 ;'
   +#13#10''
   +#13#10'-- removido em 30.11.2012 a pedido de R.S.M.'
   +#13#10'/*    if (( ULTIMA_PESAGEMLEITE IS NOT NULL ) and ( EQA_CHANGED IS NOT NULL )) THEN'
   +#13#10'      begin'
   +#13#10''
   +#13#10'        INSERT'
   +#13#10'        INTO ZOO_PESAGEM_LEITE_EQA'
   +#13#10'        SELECT * FROM TMP_PESAGEM_LEITE_EQA ;'
   +#13#10''
   +#13#10'        SELECT AVG( EQA_LEITE ), AVG( EQA_GORDURA ), AVG( EQA_PROTEINA )'
   +#13#10'        FROM ZOO_PESAGEM_LEITE_EQA'
   +#13#10'        WHERE KCAD_FAZENDA = :KCAD_FAZENDA AND DATA = :ULTIMA_PESAGEMLEITE'
   +#13#10'        INTO EQA_LEITE, EQA_GORDURA, EQA_PROTEINA ;'
   +#13#10''
   +#13#10'        UPDATE OR INSERT'
   +#13#10'        INTO ZOO_PESAGEM_LEITE_EQAMEDIA'
   +#13#10'          ( KCAD_FAZENDA, DATA, EQA_LEITE, EQA_GORDURA, EQA_PROTEINA )'
   +#13#10'        VALUES'
   +#13#10'          ( :KCAD_FAZENDA, :DATAPESAGEM, :EQA_LEITE, :EQA_GORDURA, :EQA_PROTEINA ) ;'
   +#13#10''
   +#13#10'      end'
   +#13#10'*/'
   +#13#10'END' ;


  _EXECUTE_PROCEDURE_ZOO_RECALC_LACTACAO_FAZENDAS =
    'EXECUTE PROCEDURE ZOO_RECALC_LACTACAO_FAZENDAS' ;

begin
  TryExecuteDirect( _ALTER_PROCEDURE_ZOO_UPDATE_CALCULO_PESAGEM );
  {$IFNDEF _EXPORT}
  TryExecuteDirect( _EXECUTE_PROCEDURE_ZOO_RECALC_LACTACAO_FAZENDAS );
  {$ENDIF}
end;



procedure TDBZootecnicoUpdate._5_002_31;
const
   _ALTER_PROCEDURE_DOIMP_IDEAGRI_CADASTRO =
          'create or alter procedure DOIMP$IDEAGRI_CADASTRO ('
   +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
   +#13#10'    IDEAGRI varchar(1024) collate ISO8859_1,'
   +#13#10'    ACCEPT_NULL_BIRTHDATE SYS$BOOL,'
   +#13#10'    CODIGO_RETIRO SYS$INT,'
   +#13#10'    CODIGO_LOTE SYS$INT)'
   +#13#10'AS'
   +#13#10'declare brinco varchar(32) not null;'
   +#13#10'declare nome_estab varchar(60);'
   +#13#10'declare nome_completo varchar(60);'
   +#13#10'declare registro varchar(15);'
   +#13#10'declare dtnasc date;'
   +#13#10'declare pai varchar(8);'
   +#13#10'declare nome_pai varchar(60);'
   +#13#10'declare registro_pai varchar(15);'
   +#13#10'declare pd_pai varchar(5);'
   +#13#10'declare mae varchar(10);'
   +#13#10'declare nome_mae varchar(60);'
   +#13#10'declare registro_mae varchar(15);'
   +#13#10'declare dtorigem date;'
   +#13#10'declare local_origem varchar(20);'
   +#13#10'declare preco_compra numeric(15, 2);'
   +#13#10'declare dtdesc date;'
   +#13#10'declare razao char(3);'
   +#13#10'declare motivo varchar(5);'
   +#13#10'declare preco_venda numeric(15, 2);'
   +#13#10'declare comprador varchar(40);'
   +#13#10'declare raca char(3);'
   +#13#10'declare gsangue smallint;'
   +#13#10'declare retiro varchar(52);'
   +#13#10'declare lote varchar(52);'
   +#13#10'declare nucleo char(4);'
   +#13#10'declare rebanho varchar(5);'
   +#13#10'declare vaca varchar(8);'
   +#13#10'declare avo_paterno varchar(40);'
   +#13#10'declare reg_avo_paterno varchar(15);'
   +#13#10'declare avo_paterna varchar(40);'
   +#13#10'declare reg_avo_paterna varchar(15);'
   +#13#10'declare avo_materno varchar(40);'
   +#13#10'declare reg_avo_materno varchar(15);'
   +#13#10'declare avo_materna varchar(40);'
   +#13#10'declare reg_avo_materna varchar(15);'
   +#13#10'declare touro1 varchar(8);'
   +#13#10'declare touro2 varchar(8);'
   +#13#10'declare touro3 varchar(8);'
   +#13#10'declare touro4 varchar(8);'
   +#13#10'declare te char(2);'
   +#13#10'declare lote1 char(2);'
   +#13#10'declare data1 date;'
   +#13#10'declare lote2 char(2);'
   +#13#10'declare data2 date;'
   +#13#10'declare lote3 char(2);'
   +#13#10'declare data3 date;'
   +#13#10'declare lote4 char(2);'
   +#13#10'declare data4 date;'
   +#13#10'declare lote5 char(2);'
   +#13#10'declare data5 date;'
   +#13#10'declare lote6 char(2);'
   +#13#10'declare data6 date;'
   +#13#10'declare lote7 char(2);'
   +#13#10'declare data7 date;'
   +#13#10'declare lote8 char(2);'
   +#13#10'declare data8 date;'
   +#13#10'declare status varchar(3) not null;'
   +#13#10'declare criador varchar(40);'
   +#13#10'declare cidcria varchar(25);'
   +#13#10'declare codigo1 char(3);'
   +#13#10'declare codigo2 char(3);'
   +#13#10'declare codigo3 char(3);'
   +#13#10'declare persiste integer;'
   +#13#10'declare potencial integer;'
   +#13#10'declare INTENCAO_DESCARTE char(1);'
   +#13#10'declare SQL_WHERE varchar(100) = '''' ;'
   +#13#10'declare LF_ char;'
   +#13#10'begin'
   +#13#10''
   +#13#10'  LF_ = ASCII_CHAR(10) ;'
   +#13#10'  --DELETE FROM IMP$CADASTRO ;'
   +#13#10''
   +#13#10'  if ( CODIGO_RETIRO > -1 ) THEN'
   +#13#10'     SQL_WHERE = SQL_WHERE || '' AND A.CDSETOR = '' || :CODIGO_RETIRO ;'
   +#13#10''
   +#13#10'  if ( ACCEPT_NULL_BIRTHDATE = ''F'' ) THEN'
   +#13#10'     SQL_WHERE = SQL_WHERE || '' AND A.DTNASCIMENTO IS NOT NULL'' ;'
   +#13#10''
   +#13#10'  FOR EXECUTE STATEMENT'
   +#13#10'    (       ''SELECT A.CDANIMAL, (trim(A.NUMERO) || ''''[*]'''' || coalesce('''' '''' || A.NOME, '''''''')), A.NOMECOMPLETO, A.REGASSOCRACA, A.DTNASCIMENTO, '''
   +#13#10'      ||LF_||''P.CDANIMAL,  P.nomecompleto, P.regassocraca, NULL, '''
   +#13#10'      ||LF_||''M.CDANIMAL,  M.nomecompleto, M.regassocraca, '''
   +#13#10'      ||LF_||''NULL, NULL, NULL, '''
   +#13#10'      ||LF_||''A.DTBAIXA, IIF(A.DTBAIXA IS NOT NULL, ''''DES'''', NULL), A.cdmotivobaixa, '''
   +#13#10'      ||LF_||''NULL, NULL, '''
   +#13#10'      ||LF_||''(SELECT FIRST 1'''
   +#13#10'      ||LF_||''  CASE'''
   +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 175 ) THEN ''''PDS'''' '''
   +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 290, 300, 340 ) THEN ''''GIR'''' '''
   +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 310 ) THEN ''''GHL'''' '''
   +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 365 ) THEN ''''HPB'''' '''
   +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 385 ) THEN ''''JER'''' '''
   +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 635 ) THEN ''''HPV'''' '''
   +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 565 ) THEN ''''SIM'''' '''
   +#13#10'      ||LF_||''  ELSE'''
   +#13#10'      ||LF_||''    ''''XX'''' '''
   +#13#10'      ||LF_||''  END'''
   +#13#10'      ||LF_||''FROM ANIMALRACA AR'''
   +#13#10'      ||LF_||''WHERE AR.CDANIMALRACA = A.CDANIMAL'''
   +#13#10'      ||LF_||''ORDER BY AR.PERCENTUAL DESC'''
   +#13#10'      ||LF_||'') RACA, '''
   +#13#10'      ||LF_||''CASE '''
   +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (1, 2, 3, 4) THEN ''''8'''' '''
   +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (5, 6, 7, 8) THEN ''''1'''' '''
   +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (9, 10, 11, 12) THEN ''''2'''' '''
   +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (13, 14, 15, 16) THEN ''''3'''' '''
   +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (17, 18, 19, 20) THEN ''''4'''' '''
   +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (21, 22, 23, 24) THEN ''''5'''' '''
   +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento > 24 THEN ''''5'''' '''
   +#13#10'      ||LF_||''END, '''
   +#13#10'      ||LF_||''SETOR.NOME, CAST(LOTE.GRUPO AS VARCHAR(32) ),'''
   +#13#10'      ||LF_||''NULL, NULL, NULL,'''
   +#13#10'      ||LF_||''NULL, NULL, NULL, NULL,'''
   +#13#10'      ||LF_||''NULL, NULL, NULL, NULL,'''
   +#13#10'      ||LF_||''NULL, NULL, NULL, NULL,'''
   +#13#10'      ||LF_||''CASE (SELECT AP.TIPO FROM ANIMALPERIODO AP WHERE AP.CDANIMAL = A.CDANIMAL AND AP.TIPO IN (1, 2) AND AP.DATAFIM IS NULL ROWS 1)'''
   +#13#10'      ||LF_||''WHEN 1 THEN ''''TE'''''''
   +#13#10'      ||LF_||''WHEN 2 THEN ''''RE'''''''
   +#13#10'      ||LF_||''END TE,'''
   +#13#10'      ||LF_||''(SELECT ''''T'''' FROM ANIMALPERIODO AP WHERE AP.CDANIMAL = A.CDANIMAL AND AP.TIPO = 3 AND AP.DATAFIM IS NULL ROWS 1) INTENCAO_DESCARTE,'''
   +#13#10'      ||LF_||''NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,'''
   +#13#10'      ||LF_||''NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,'''
   +#13#10'      ||LF_||''CASE'''
   +#13#10'      ||LF_||''    WHEN A.cdcategoria = 1 THEN ''''BEZ'''' '''
   +#13#10'      ||LF_||''    WHEN A.cdcategoria = 6 THEN ''''NOV'''' '''
   +#13#10'      ||LF_||''    WHEN A.cdcategoria = 7 AND A.matrizseca = 0 THEN ''''VL'''' '''
   +#13#10'      ||LF_||''    WHEN A.cdcategoria = 7 AND A.matrizseca = 1 THEN ''''VS'''' '''
   +#13#10'      ||LF_||''    ELSE IIF( A.DTBAIXA IS NULL,  ''''BEZ'''', ''''DES'''' )'''
   +#13#10'      ||LF_||''END,'''
   +#13#10'      ||LF_||''NULL, NULL,'''
   +#13#10'      ||LF_||''NULL, NULL, NULL,'''
   +#13#10'      ||LF_||''NULL, NULL'''
   +#13#10'      ||LF_||''FROM ANIMAL A'''
   +#13#10'      ||LF_||''LEFT JOIN ANIMAL P ON P.cdanimal = A.cdpai '''
   +#13#10'      ||LF_||''LEFT JOIN ANIMAL M ON M.cdanimal = A.cdmae '''
   +#13#10'      ||LF_||''LEFT JOIN SETOR  SETOR ON SETOR.CDSETOR = A.CDSETOR '''
   +#13#10'      ||LF_||''LEFT JOIN SP_GRUPOANIMALESPECIFICO( CURRENT_DATE, '' || COALESCE( :CODIGO_LOTE, -1 ) || '', A.CDANIMAL ) LOTE ON 1=1 '''
   +#13#10'      ||LF_||''WHERE A.SEXO = ''''F'''' AND A.ANIMALREBANHO = 1'' || SQL_WHERE'
   +#13#10'    )'
   +#13#10'  ON EXTERNAL DATA SOURCE :IDEAGRI'
   +#13#10'  WITH COMMON TRANSACTION'
   +#13#10'  INTO'
   +#13#10'     :BRINCO, :NOME_ESTAB, :NOME_COMPLETO, :REGISTRO, :DTNASC, :PAI, :NOME_PAI, :REGISTRO_PAI,'
   +#13#10'     :PD_PAI, :MAE, :NOME_MAE, :REGISTRO_MAE, :DTORIGEM, :LOCAL_ORIGEM, :PRECO_COMPRA, :DTDESC, :RAZAO,'
   +#13#10'     :MOTIVO, :PRECO_VENDA, :COMPRADOR, :RACA, :GSANGUE,'
   +#13#10'     :RETIRO, :LOTE,'
   +#13#10'     :NUCLEO, :REBANHO, :VACA,'
   +#13#10'     :AVO_PATERNO, :REG_AVO_PATERNO, :AVO_PATERNA, :REG_AVO_PATERNA,'
   +#13#10'     :AVO_MATERNO, :REG_AVO_MATERNO, :AVO_MATERNA, :REG_AVO_MATERNA,'
   +#13#10'     :TOURO1, :TOURO2, :TOURO3, :TOURO4,'
   +#13#10'     :TE,'
   +#13#10'     :INTENCAO_DESCARTE,'
   +#13#10'     :LOTE1, :DATA1, :LOTE2, :DATA2, :LOTE3, :DATA3, :LOTE4, :DATA4,'
   +#13#10'     :LOTE5, :DATA5, :LOTE6, :DATA6, :LOTE7, :DATA7, :LOTE8, :DATA8,'
   +#13#10'     :STATUS,'
   +#13#10'     :CRIADOR, :CIDCRIA,'
   +#13#10'     :CODIGO1, :CODIGO2, :CODIGO3, :PERSISTE, :POTENCIAL'
   +#13#10'  DO'
   +#13#10'  begin'
   +#13#10''
   +#13#10'  -- SELECT first 1 COMPOSICAO from doimp$ideagri_raca(:RACA) into :RACA;'
   +#13#10''
   +#13#10'   INSERT INTO IMP$CADASTRO'
   +#13#10'     ('
   +#13#10'       BRINCO, NOME_ESTAB, NOME_COMPLETO, REGISTRO, DTNASC, PAI, NOME_PAI, REGISTRO_PAI,'
   +#13#10'       PD_PAI, MAE, NOME_MAE, REGISTRO_MAE, DTORIGEM, LOCAL_ORIGEM, PRECO_COMPRA, DTDESC, RAZAO,'
   +#13#10'       MOTIVO, PRECO_VENDA, COMPRADOR, RACA, GSANGUE,'
   +#13#10'       RETIRO, LOTE,'
   +#13#10'       NUCLEO, REBANHO, VACA,'
   +#13#10'       AVO_PATERNO, REG_AVO_PATERNO, AVO_PATERNA, REG_AVO_PATERNA,'
   +#13#10'       AVO_MATERNO, REG_AVO_MATERNO, AVO_MATERNA, REG_AVO_MATERNA,'
   +#13#10'       TOURO1, TOURO2, TOURO3, TOURO4,'
   +#13#10'       TE,'
   +#13#10'       INTENCAO_DESCARTE,'
   +#13#10'       LOTE1, DATA1, LOTE2, DATA2, LOTE3, DATA3, LOTE4, DATA4,'
   +#13#10'       LOTE5, DATA5, LOTE6, DATA6, LOTE7, DATA7, LOTE8, DATA8,'
   +#13#10'       STATUS,'
   +#13#10'       CRIADOR, CIDCRIA,'
   +#13#10'       CODIGO1, CODIGO2, CODIGO3,'
   +#13#10'       PERSISTE, POTENCIAL'
   +#13#10'     )'
   +#13#10'   VALUES'
   +#13#10'     ('
   +#13#10'      :BRINCO, :NOME_ESTAB, :NOME_COMPLETO, :REGISTRO, :DTNASC, :PAI, :NOME_PAI, :REGISTRO_PAI,'
   +#13#10'      :PD_PAI, :MAE, :NOME_MAE, :REGISTRO_MAE, :DTORIGEM, :LOCAL_ORIGEM, :PRECO_COMPRA, :DTDESC, :RAZAO,'
   +#13#10'      :MOTIVO, :PRECO_VENDA, :COMPRADOR, :RACA, :GSANGUE,'
   +#13#10'      SUBSTRING ( :RETIRO FROM 1 FOR 32 ), SUBSTRING ( :LOTE FROM 1 FOR 32 ),'
   +#13#10'      :NUCLEO, :REBANHO, :VACA,'
   +#13#10'      :AVO_PATERNO, :REG_AVO_PATERNO, :AVO_PATERNA, :REG_AVO_PATERNA, :AVO_MATERNO, :REG_AVO_MATERNO,'
   +#13#10'      :AVO_MATERNA, :REG_AVO_MATERNA, :TOURO1, :TOURO2, :TOURO3, :TOURO4,'
   +#13#10'      :TE,'
   +#13#10'      :INTENCAO_DESCARTE,'
   +#13#10'      :LOTE1, :DATA1, :LOTE2, :DATA2, :LOTE3, :DATA3, :LOTE4, :DATA4,'
   +#13#10'      :LOTE5, :DATA5, :LOTE6, :DATA6, :LOTE7, :DATA7, :LOTE8, :DATA8,'
   +#13#10'      :STATUS,'
   +#13#10'      :CRIADOR, :CIDCRIA,'
   +#13#10'      :CODIGO1, :CODIGO2, :CODIGO3,'
   +#13#10'      :PERSISTE, :POTENCIAL'
   +#13#10'     ) ;'
   +#13#10'   end'
   +#13#10'end';

begin
  TryExecuteDirect( _ALTER_PROCEDURE_DOIMP_IDEAGRI_CADASTRO );
end;


procedure TDBZootecnicoUpdate._5_002_30;
const
   _ALTER_TABLE_ZOO_PROTOCOLOS =
         'ALTER TABLE ZOO_PROTOCOLOS'
  +#13#10'ALTER NOME TYPE SYS$DESCR' ;
begin
  TryExecuteDirect( _ALTER_TABLE_ZOO_PROTOCOLOS );
end  ;


procedure TDBZootecnicoUpdate._5_002_29;
const
   _UPDATE_PROTOCOLO_TAREAS =
          'EXECUTE BLOCK'
   +#13#10'AS'
   +#13#10'DECLARE KZOO_PROTOCOLO_TAREFA  SYS$FKGUID20 ;'
   +#13#10'DECLARE KZOO_PROTOCOLO SYS$FKGUID20_NN ;'
   +#13#10'DECLARE KZOO_TAREFA    SYS$FKGUID20_NN ;'
   +#13#10'DECLARE EXAME          SYS$BOOL_F ;'
   +#13#10'DECLARE DIA            SYS$INT ;'
   +#13#10'DECLARE VEZES          SYS$INT ;'
   +#13#10'DECLARE VEZ            SYS$INT ;'
   +#13#10'DECLARE REPLICAR       SYS$INT ;'
   +#13#10'DECLARE INTERVALO      SYS$INT ;'
   +#13#10'DECLARE OBS            SYS$BLOBTEXT ;'
   +#13#10'DECLARE SYS$UI         SYS$USERLOGIN ;'
   +#13#10'DECLARE SYS$DI         SYS$DATE ;'
   +#13#10'DECLARE SYS$UU         SYS$USERLOGIN ;'
   +#13#10'DECLARE SYS$DU         SYS$DATE ;'
   +#13#10'DECLARE COUNT_         SYS$INT ;'
   +#13#10'BEGIN'
   +#13#10' FOR SELECT'
   +#13#10'   R.COUNT_'
   +#13#10' , T.KZOO_PROTOCOLO_TAREFA'
   +#13#10' , T.KZOO_PROTOCOLO'
   +#13#10' , T.KZOO_TAREFA'
   +#13#10' , T.EXAME'
   +#13#10' , T.DIA + ( T.INTERVALO * (R.COUNT_ -1) ) - 1 DIA'
   +#13#10' , T.VEZES'
   +#13#10' , V.COUNT_ VEZ'
   +#13#10' , T.REPLICAR'
   +#13#10' , T.INTERVALO'
   +#13#10' , T.OBS'
   +#13#10' , T.SYS$UI'
   +#13#10' , T.SYS$DI'
   +#13#10' , T.SYS$UU'
   +#13#10' , T.SYS$DU'
   +#13#10' FROM ZOO_PROTOCOLO_TAREFAS T'
   +#13#10' LEFT JOIN SYS$REPLICATE( T.REPLICAR + 1 ) R ON 1=1'
   +#13#10' LEFT JOIN SYS$REPLICATE( T.VEZES ) V ON 1=1'
   +#13#10' ORDER BY T.KZOO_PROTOCOLO, T.KZOO_TAREFA, 1'
   +#13#10' INTO'
   +#13#10'   COUNT_'
   +#13#10' , KZOO_PROTOCOLO_TAREFA'
   +#13#10' , KZOO_PROTOCOLO'
   +#13#10' , KZOO_TAREFA'
   +#13#10' , EXAME'
   +#13#10' , DIA'
   +#13#10' , VEZES'
   +#13#10' , VEZ'
   +#13#10' , REPLICAR'
   +#13#10' , INTERVALO'
   +#13#10' , OBS'
   +#13#10' , SYS$UI'
   +#13#10' , SYS$DI'
   +#13#10' , SYS$UU'
   +#13#10' , SYS$DU'
   +#13#10'  DO'
   +#13#10'   IF (COUNT_ = 1 AND VEZ = 1) then'
   +#13#10'     UPDATE ZOO_PROTOCOLO_TAREFAS'
   +#13#10'       SET'
   +#13#10'          DIA       = ::DIA'
   +#13#10'        , VEZES     = 1'
   +#13#10'        , REPLICAR  = 0'
   +#13#10'        , INTERVALO = 1'
   +#13#10'     WHERE KZOO_PROTOCOLO_TAREFA = ::KZOO_PROTOCOLO_TAREFA ;'
   +#13#10'   ELSE'
   +#13#10'     INSERT INTO ZOO_PROTOCOLO_TAREFAS'
   +#13#10'       (  KZOO_PROTOCOLO_TAREFA'
   +#13#10'        , KZOO_PROTOCOLO'
   +#13#10'        , KZOO_TAREFA'
   +#13#10'        , EXAME'
   +#13#10'        , DIA'
   +#13#10'        , VEZES'
   +#13#10'        , REPLICAR'
   +#13#10'        , INTERVALO'
   +#13#10'        , OBS'
   +#13#10'        , SYS$UI'
   +#13#10'        , SYS$DI'
   +#13#10'        , SYS$UU'
   +#13#10'        , SYS$DU'
   +#13#10'       )'
   +#13#10'   VALUES'
   +#13#10'       (   GUID20()'
   +#13#10'        , ::KZOO_PROTOCOLO'
   +#13#10'        , ::KZOO_TAREFA'
   +#13#10'        , ::EXAME'
   +#13#10'        , ::DIA'
   +#13#10'        , 1 --VEZES'
   +#13#10'        , 0 --REPLICAR'
   +#13#10'        , 1 --INTERVALO'
   +#13#10'        , ::OBS'
   +#13#10'        , ::SYS$UI'
   +#13#10'        , ::SYS$DI'
   +#13#10'        , ::SYS$UU'
   +#13#10'        , ::SYS$DU'
   +#13#10'      ) ;'
   +#13#10''
   +#13#10'END' ;
begin
  TTcAbstractDB.GetByAlias('ZOOTECNICO')
    .ISQL( _UPDATE_PROTOCOLO_TAREAS )
    .SQLExec ;
end;

procedure TDBZootecnicoUpdate._5_002_28;
const
  _ALTER_TABLE_ZOO_TAREFAS =
         'ALTER TABLE ZOO_TAREFAS ALTER COLUMN NOME TYPE SYS$DESCR';
begin
  TryExecuteDirect( _ALTER_TABLE_ZOO_TAREFAS );
end;


procedure TDBZootecnicoUpdate._5_002_27 ;
const
  _CREATE_DOMAIN_SYS_CODE_ =
         'CREATE DOMAIN SYS$CODE_ AS'
  +#13#10'VARCHAR(33) CHARACTER SET ISO8859_1'
  +#13#10'COLLATE ISO8859_1' ;


  _CREATE_DOMAIN_SYS_CODE__NN =
         'CREATE DOMAIN SYS$CODE__NN AS'
  +#13#10'VARCHAR(33) CHARACTER SET ISO8859_1'
  +#13#10'NOT NULL'
  +#13#10'COLLATE ISO8859_1' ;


  _ALTER_TABLE_ZOO_DIAGNOSTICOS =
         'ALTER TABLE ZOO_DIAGNOSTICOS'
  +#13#10'  ADD CODIGO_ SYS$CODE__NN '
  +#13#10', ALTER CODIGO_ POSITION 4' ;


  _ALTER_TRIGGER_ZOO_DIAGNOSTICOS_BIU =
         'CREATE OR ALTER TRIGGER ZOO_DIAGNOSTICOS_BIU FOR ZOO_DIAGNOSTICOS'
  +#13#10'ACTIVE BEFORE INSERT OR UPDATE POSITION 1001'
  +#13#10'AS'
  +#13#10'BEGIN'
  +#13#10'  NEW.CODIGO = TRIM ( NEW.CODIGO ) ;'
  +#13#10'  NEW.NOME = TRIM ( NEW.NOME ) ;'
  +#13#10''
  +#13#10'  IF ( NEW.CODIGO IS NULL ) THEN'
  +#13#10'   SELECT MAX( CAST( CODIGO AS INTEGER ) ) + 1'
  +#13#10'   FROM ZOO_DIAGNOSTICOS'
  +#13#10'   WHERE TIPODIAGNOSTICO IS NOT NULL'
  +#13#10'   INTO NEW.CODIGO ;'
  +#13#10''
  +#13#10'  IF ( NEW.CODIGO IS DISTINCT FROM OLD.CODIGO ) THEN'
  +#13#10'      NEW.CODIGO_ = IIF ('
  +#13#10'           TRIM (NEW.CODIGO) SIMILAR TO ''[0-9]{''||CHAR_LENGTH(TRIM(NEW.CODIGO))||''}'''
  +#13#10'         , LPAD ( TRIM(UPPER(NEW.CODIGO)), 16, ''0'' )'
  +#13#10'         , ''A'' || TRIM(UPPER(NEW.CODIGO))'
  +#13#10'      ) ;'
  +#13#10''
  +#13#10'END' ;


  _UPDATE_ZOO_DIAGNOSTICOS_CODIGO_ =
         'UPDATE ZOO_DIAGNOSTICOS'
  +#13#10'SET '
  +#13#10'  CODIGO_ = IIF ('
  +#13#10'           TRIM (CODIGO) SIMILAR TO ''[0-9]{''||CHAR_LENGTH(TRIM(CODIGO))||''}'''
  +#13#10'         , LPAD ( TRIM(UPPER(CODIGO)), 16, ''0'' )'
  +#13#10'         , ''A'' || TRIM(UPPER(CODIGO))'
  +#13#10'      ) ' ;

begin
  TryExecuteDirect ( _CREATE_DOMAIN_SYS_CODE_            ) ;
  TryExecuteDirect ( _CREATE_DOMAIN_SYS_CODE__NN         ) ;
  TryExecuteDirect ( _ALTER_TABLE_ZOO_DIAGNOSTICOS       ) ;
  ExecuteDirect    ( _ALTER_TRIGGER_ZOO_DIAGNOSTICOS_BIU ) ;
  ExecuteDirect    ( _UPDATE_ZOO_DIAGNOSTICOS_CODIGO_    ) ;
end ;


procedure TDBZootecnicoUpdate._5_002_25;
const
   _ALTER_TABLE_ZOO_DIAGNOSTICOS =
         'ALTER TABLE ZOO_DIAGNOSTICOS'
  +#13#10'  ADD PERMITE_EDICAO SYS$BOOL_F'
  +#13#10', ALTER PERMITE_EDICAO POSITION 13' ;


   _ALTER_PROCEDURE_SYS_INIT_DIAGNOSTICOS =
          'CREATE OR ALTER PROCEDURE SYS$INIT_DIAGNOSTICOS ('
   +#13#10'    PKCAD_FAZENDA TYPE OF SYS$FKGUID20_NN)'
   +#13#10'AS'
   +#13#10'DECLARE VKDEF_DIAGNOSTICO TYPE OF SYS$FKGUID20_NN;'
   +#13#10'DECLARE VCODIGO TYPE OF SYS$CODE_NN;'
   +#13#10'DECLARE VNOME TYPE OF SYS$DESCR_NN;'
   +#13#10'DECLARE VDESCRICAO TYPE OF SYS$BLOBTEXT;'
   +#13#10'DECLARE VTIPODIAGNOSTICO TYPE OF SYS$INT;'
   +#13#10'DECLARE VTIPOEVENTO TYPE OF SYS$INT;'
   +#13#10'DECLARE VEVENTOID TYPE OF SYS$ST_TYPEID;'
   +#13#10'DECLARE VPOR_QUARTO TYPE OF SYS$BOOL_F;'
   +#13#10'DECLARE VATIVO TYPE OF SYS$BOOL_T;'
   +#13#10'DECLARE VINTERNAL TYPE OF SYS$BOOL_F;'
   +#13#10'DECLARE SYS$UI TYPE OF SYS$USERLOGIN ;'
   +#13#10'DECLARE SYS$DI TYPE OF SYS$DATE ;'
   +#13#10'DECLARE SYS$UU TYPE OF SYS$USERLOGIN ;'
   +#13#10'DECLARE SYS$DU TYPE OF SYS$DATE ;'
   +#13#10'DECLARE PATH VARCHAR( 256 );'
   +#13#10'BEGIN'
   +#13#10''
   +#13#10''
   +#13#10'  PATH = SU$EXTRACTFILEPATH ( RDB$GET_CONTEXT( ''SYSTEM'', ''DB_NAME'' ) ) ;'
   +#13#10'  PATH = SU$EXTRACTFILEPATH ( SUBSTRING ( PATH FROM 1 FOR char_length( PATH )- 1 ) ) ;'
   +#13#10'  PATH = SU$EXTRACTFILEPATH ( SUBSTRING ( PATH FROM 1 FOR char_length( PATH )- 1 ) ) ;'
   +#13#10''
   +#13#10'  if ( SU$FILEEXISTS( PATH || ''CLAG5.DB'' ) <> 1) then'
   +#13#10'    exit ;'
   +#13#10''
   +#13#10'  SELECT KCAD_FAZENDA FROM CAD_FAZENDAS ROWS 1 INTO :pKCAD_FAZENDA ;'
   +#13#10''
   +#13#10'  FOR EXECUTE STATEMENT ('
   +#13#10'        ''SELECT '''
   +#13#10'      ||'' KDEF_DIAGNOSTICO, CODIGO, NOME, DESCRICAO, TIPODIAGNOSTICO, TIPOEVENTO, SYS$EVENTOID, POR_QUARTO, ATIVO, INTERNAL, SYS$UI, SYS$DI, SYS$UU, SYS$DU '''
   +#13#10'      ||''FROM DEF_DIAGNOSTICOS '''
   +#13#10'    ) ON EXTERNAL DATA SOURCE PATH || ''CLAG5.DB'''
   +#13#10'    WITH COMMON TRANSACTION'
   +#13#10'    INTO vKDEF_DIAGNOSTICO, vCODIGO, vNOME, vDESCRICAO, vTIPODIAGNOSTICO, vTIPOEVENTO, vEVENTOID, vPOR_QUARTO, vATIVO, vINTERNAL, SYS$UI, SYS$DI, SYS$UU, SYS$DU'
   +#13#10'   DO'
   +#13#10'     IF ( EXISTS (SELECT 1 FROM ZOO_DIAGNOSTICOS WHERE KCAD_FAZENDA = :pKCAD_FAZENDA  AND KDEF_DIAGNOSTICO = :vKDEF_DIAGNOSTICO ) ) THEN'
   +#13#10'        UPDATE ZOO_DIAGNOSTICOS'
   +#13#10'        SET'
   +#13#10'           CODIGO          = :vCODIGO,'
   +#13#10'           NOME            = :vNOME,'
   +#13#10'           DESCRICAO       = :vDESCRICAO,'
   +#13#10'           TIPODIAGNOSTICO = :vTIPODIAGNOSTICO,'
   +#13#10'           TIPOEVENTO      = :vTIPOEVENTO,'
   +#13#10'           SYS$EVENTOID    = :vEVENTOID,'
   +#13#10'           POR_QUARTO      = :vPOR_QUARTO,'
   +#13#10'           ATIVO           = :vATIVO,'
   +#13#10'           INTERNAL        = :vINTERNAL,'
   +#13#10'           SYS$UI          = :SYS$UI,'
   +#13#10'           SYS$DI          = :SYS$DI,'
   +#13#10'           SYS$UU          = :SYS$UU,'
   +#13#10'           SYS$DU          = :SYS$DU'
   +#13#10'        WHERE ( KCAD_FAZENDA = :pKCAD_FAZENDA  AND KDEF_DIAGNOSTICO = :vKDEF_DIAGNOSTICO )'
   +#13#10'          AND ( PERMITE_EDICAO = ''F'' )'
   +#13#10'          AND (   ( CODIGO          IS DISTINCT FROM :vCODIGO )'
   +#13#10'               OR ( NOME            IS DISTINCT FROM :vNOME )'
   +#13#10'               OR ( DESCRICAO       IS DISTINCT FROM :vDESCRICAO )'
   +#13#10'               OR ( TIPODIAGNOSTICO IS DISTINCT FROM :vTIPODIAGNOSTICO )'
   +#13#10'               OR ( TIPOEVENTO      IS DISTINCT FROM :vTIPOEVENTO )'
   +#13#10'               OR ( SYS$EVENTOID    IS DISTINCT FROM :vEVENTOID )'
   +#13#10'               OR ( POR_QUARTO      IS DISTINCT FROM :vPOR_QUARTO )'
   +#13#10'               OR ( ATIVO           IS DISTINCT FROM :vATIVO )'
   +#13#10'               OR ( INTERNAL        IS DISTINCT FROM :vINTERNAL )'
   +#13#10'               OR ( SYS$UI          IS DISTINCT FROM :SYS$UI )'
   +#13#10'               OR ( SYS$DI          IS DISTINCT FROM :SYS$DI )'
   +#13#10'               OR ( SYS$UU          IS DISTINCT FROM :SYS$UU )'
   +#13#10'               OR ( SYS$DU          IS DISTINCT FROM :SYS$DU )'
   +#13#10'              ) ;'
   +#13#10'     ELSE'
   +#13#10'       INSERT INTO ZOO_DIAGNOSTICOS ( KZOO_DIAGNOSTICO, KCAD_FAZENDA, CODIGO, NOME, DESCRICAO, TIPODIAGNOSTICO, TIPOEVENTO, SYS$EVENTOID, POR_QUARTO, ATIVO, INTERNAL, KDEF_DIAGNOSTICO, SYS$UI, SYS$DI, SYS$UU, SYS$DU  )'
   +#13#10'         VALUES ( GUID20(), :pKCAD_FAZENDA, :vCODIGO, :vNOME, :vDESCRICAO, :vTIPODIAGNOSTICO, :vTIPOEVENTO, :vEVENTOID, :vPOR_QUARTO, :vATIVO, :vINTERNAL, :vKDEF_DIAGNOSTICO, :SYS$UI, :SYS$DI, :SYS$UU, :SYS$DU  );'
   +#13#10''
   +#13#10'END' ;

   _UPDATE_DIAGNOSTICOS =
          'EXECUTE BLOCK'
   +#13#10'AS'
   +#13#10'DECLARE KZOO_DIAGNOSTICO SYS$FKGUID20 ;'
   +#13#10'DECLARE CODIGO SYS$INT = 16 ;'
   +#13#10'DECLARE LFOUND SYS$INT ;'
   +#13#10'BEGIN'
   +#13#10'  FOR SELECT'
   +#13#10'    KZOO_DIAGNOSTICO'
   +#13#10'  FROM ZOO_DIAGNOSTICOS'
   +#13#10'  WHERE CODIGO = ''0'''
   +#13#10'    AND TIPOEVENTO IS NULL'
   +#13#10'  ORDER BY TIPODIAGNOSTICO, NOME'
   +#13#10'  INTO KZOO_DIAGNOSTICO'
   +#13#10'  DO'
   +#13#10'    BEGIN'
   +#13#10'      LFOUND = 0 ;'
   +#13#10'      SELECT 1'
   +#13#10'      FROM ZOO_ANIMAL_DIAGNOSTICOS'
   +#13#10'      WHERE'
   +#13#10'        KZOO_DIAGNOSTICO = :KZOO_DIAGNOSTICO'
   +#13#10'      ROWS 1'
   +#13#10'      INTO LFOUND ;'
   +#13#10''
   +#13#10'      IF ( LFOUND = 1 ) THEN'
   +#13#10'        BEGIN'
   +#13#10'          UPDATE ZOO_DIAGNOSTICOS'
   +#13#10'          SET'
   +#13#10'              CODIGO    = :CODIGO'
   +#13#10'            , ATIVO     = ''T'''
   +#13#10'            , INTERNAL  = ''F'''
   +#13#10'            , PERMITE_EDICAO = ''T'''
   +#13#10'          WHERE'
   +#13#10'            KZOO_DIAGNOSTICO = :KZOO_DIAGNOSTICO'
   +#13#10'            ;'
   +#13#10'          CODIGO = CODIGO + 1 ;'
   +#13#10'        END'
   +#13#10'    END'
   +#13#10'END' ;

   {$IFDEF _EXPORT}
   procedure UpdateDiagnosticosInExport ;
   var
     LDiagnosticos : TStringList ;
     &String : string ;
   begin

     LDiagnosticos := TStringList.Create ;
     LoadResourceStrings ('SQL_NOVOSDIAGNOSTICOS_EXPORT', LDiagnosticos );
     for &String in  LDiagnosticos do
        if &String <> '' then
           ExecuteDirect ( &String ) ;
     LDiagnosticos.DisposeOf ;
   end ;
   {$ENDIF _EXPORT}

begin

   TryExecuteDirect( _ALTER_TABLE_ZOO_DIAGNOSTICOS ) ;
   ExecuteDirect( _ALTER_PROCEDURE_SYS_INIT_DIAGNOSTICOS  ) ;

   {$IFDEF _EXPORT}
   UpdateDiagnosticosInExport ;
   {$ENDIF _EXPORT}

   ExecuteDirect( _UPDATE_DIAGNOSTICOS ) ;
end;

procedure TDBZootecnicoUpdate._5_002_18;
const
   _ALTER_TABLE_ZOO_HISTORICO_TOQUE_KZOO_ANIMAL_DIAGNOSTICO =
          'ALTER TABLE ZOO_HISTORICO_TOQUE'
   +#13#10'ADD KZOO_ANIMAL_DIAGNOSTICO SYS$FKGUID20';

   _ALTER_TABLE_ZOO_HISTORICO_TOQUE_KZOO_ANIMAL_PROTOCOLO =
          'ALTER TABLE ZOO_HISTORICO_TOQUE'
   +#13#10'ADD KZOO_ANIMAL_PROTOCOLO SYS$FKGUID20';

   _CREATE_OR_ALTER_TRIGGER_ZOO_EVENTOS_ZOOTECNICOS_BIU1 =
          'CREATE OR ALTER TRIGGER ZOO_EVENTOS_ZOOTECNICOS_BIU1 FOR ZOO_EVENTOS_ZOOTECNICOS'
   +#13#10'ACTIVE BEFORE INSERT OR UPDATE POSITION 1001'
   +#13#10'AS'
   +#13#10'declare variable TIPO_INSEMINA type of SYS$INT;'
   +#13#10'declare variable TIPO_MONTA type of SYS$INT;'
   +#13#10'declare variable TIPO_IMPLANTE type of SYS$INT;'
   +#13#10'begin'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''TIPO_EVENTO_ZOO'', ''INSEMINA''  returning_values TIPO_INSEMINA ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''TIPO_EVENTO_ZOO'', ''MONTA''     returning_values TIPO_MONTA ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''TIPO_EVENTO_ZOO'', ''IMPLANTE''  returning_values TIPO_IMPLANTE ;'
   +#13#10''
   +#13#10'  NEW.KZOO_ANIMAL_MACHO_TOUROSEMEN = NULL ;'
   +#13#10'  NEW.KZOO_ANIMAL_MACHO_EMBRIAO = NULL ;'
   +#13#10''
   +#13#10'  if (NEW.TIPOEVENTO IN ( TIPO_INSEMINA, TIPO_MONTA )) then'
   +#13#10'    begin'
   +#13#10'     NEW.KZOO_ANIMAL_MACHO_TOUROSEMEN = NEW.KZOO_ANIMAL_MACHO ;'
   +#13#10'     NEW.KZOO_ANIMAL_MACHO_EMBRIAO = NULL ;'
   +#13#10'    end'
   +#13#10'  else if (NEW.TIPOEVENTO = TIPO_IMPLANTE ) then'
   +#13#10'    begin'
   +#13#10'     NEW.KZOO_ANIMAL_MACHO_EMBRIAO = NEW.KZOO_ANIMAL_MACHO ;'
   +#13#10'     NEW.KZOO_ANIMAL_MACHO_TOUROSEMEN = NULL ;'
   +#13#10'    end'
   +#13#10''
   +#13#10'  else'
   +#13#10'     NEW.KZOO_ANIMAL_MACHO = null ;'
   +#13#10''
   +#13#10'  if ( (Updating) and ( NEW.DATAABORTOPARTO is distinct from OLD.DATAABORTOPARTO ) and ( NEW.DATAABORTOPARTO IS NULL ) ) then'
   +#13#10'    begin'
   +#13#10'      -- revisar... usar campo excluido da linhagem...'
   +#13#10'      DELETE FROM ZOO_ANIMAL_LINHAGEM WHERE KZOO_EVENTO_ZOOTECNICO = OLD.KZOO_EVENTO_ZOOTECNICO ;'
   +#13#10'      DELETE FROM ZOO_LACTACOES WHERE KZOO_EVENTO_ZOOTECNICO = OLD.KZOO_EVENTO_ZOOTECNICO ;'
   +#13#10'    end'
   +#13#10''
   +#13#10''
   +#13#10'  if ( (NEW.DATATOQUE is not null and OLD.DATATOQUE is null) or ( NEW.DATATOQUE > OLD.DATATOQUE ) ) then'
   +#13#10'   begin'
   +#13#10'      insert into ZOO_HISTORICO_TOQUE (KZOO_HISTORICO_TOQUE, KZOO_EVENTO_ZOOTECNICO, DATATOQUE, PRENHEZ, KCAD_VETERINARIO, NOMEVETERINARIO,'
   +#13#10'                                       KZOO_ANIMAL_DIAGNOSTICO, KZOO_ANIMAL_PROTOCOLO)'
   +#13#10'             values (Guid20(), NEW.KZOO_EVENTO_ZOOTECNICO, NEW.DATATOQUE, NEW.PRENHEZ, NEW.KCAD_VETERINARIO, NEW.NOMEVETERINARIO,'
   +#13#10'                               NEW.KZOO_ANIMAL_DIAGNOSTICO, NEW.KZOO_ANIMAL_PROTOCOLO);'
   +#13#10'   end'
   +#13#10'  else if ( NEW.DATATOQUE is not DISTINCT from OLD.DATATOQUE AND NEW.DATATOQUE is not null ) then'
   +#13#10'   begin'
   +#13#10'     update ZOO_HISTORICO_TOQUE'
   +#13#10'        set PRENHEZ = NEW.PRENHEZ, KCAD_VETERINARIO = NEW.KCAD_VETERINARIO, NOMEVETERINARIO = NEW.NOMEVETERINARIO'
   +#13#10'      where KZOO_EVENTO_ZOOTECNICO = NEW.KZOO_EVENTO_ZOOTECNICO and DATATOQUE = OLD.DATATOQUE;'
   +#13#10'   end'
   +#13#10'  else if ( NEW.PRENHEZ is null or NEW.PRENHEZ = ''''  ) then'
   +#13#10'   begin'
   +#13#10'     delete from ZOO_HISTORICO_TOQUE where KZOO_EVENTO_ZOOTECNICO = NEW.KZOO_EVENTO_ZOOTECNICO;'
   +#13#10'   end'
   +#13#10''
   +#13#10'  NEW.QTDE_DIAGNOSTICO = (SELECT COUNT(*) FROM ZOO_HISTORICO_TOQUE WHERE KZOO_EVENTO_ZOOTECNICO = NEW.KZOO_EVENTO_ZOOTECNICO);'
   +#13#10''
   +#13#10'end' ;

   _CREATE_TABLE_ZOO_CONFIG_DIAG_REPR =
          'CREATE TABLE ZOO_CONFIG_DIAG_REPR('
   +#13#10'  KSYS$USER SYS$PKGUID20,'
   +#13#10'  INFO_SEXO_CRIA  SYS$BOOL_F,'
   +#13#10'  INFO_DIAG_SANITARIO  SYS$BOOL_F,'
   +#13#10'  INFO_PROTOCOLO  SYS$BOOL_F,'
   +#13#10'  INFO_RESPONSAVEL  SYS$BOOL_F,'
   +#13#10'  CONSTRAINT PKZOO_CONFIG_DIAG_REPR PRIMARY KEY (KSYS$USER)'
   +#13#10')';


begin
  TryExecuteDirect( _ALTER_TABLE_ZOO_HISTORICO_TOQUE_KZOO_ANIMAL_DIAGNOSTICO );
  TryExecuteDirect( _ALTER_TABLE_ZOO_HISTORICO_TOQUE_KZOO_ANIMAL_PROTOCOLO );
  ExecuteDirect   ( _CREATE_OR_ALTER_TRIGGER_ZOO_EVENTOS_ZOOTECNICOS_BIU1 );
  TryExecuteDirect( _CREATE_TABLE_ZOO_CONFIG_DIAG_REPR );
end;

procedure TDBZootecnicoUpdate._5_002_17;
const
   _ALTER_TABLE_ZOO_EVENTOS_ZOOTECNICOS_KZOO_ANIMAL_DIAGNOSTICO =
          'ALTER TABLE ZOO_EVENTOS_ZOOTECNICOS'
   +#13#10'ADD KZOO_ANIMAL_DIAGNOSTICO SYS$FKGUID20,'
   +#13#10'ALTER KZOO_ANIMAL_DIAGNOSTICO POSITION 36';

   _ALTER_TABLE_ZOO_EVENTOS_ZOOTECNICOS_KZOO_ANIMAL_PROTOCOLO =
          'ALTER TABLE ZOO_EVENTOS_ZOOTECNICOS'
   +#13#10'ADD KZOO_ANIMAL_PROTOCOLO SYS$FKGUID20,'
   +#13#10'ALTER KZOO_ANIMAL_PROTOCOLO POSITION 37';

begin
  TryExecuteDirect( _ALTER_TABLE_ZOO_EVENTOS_ZOOTECNICOS_KZOO_ANIMAL_DIAGNOSTICO );
  TryExecuteDirect( _ALTER_TABLE_ZOO_EVENTOS_ZOOTECNICOS_KZOO_ANIMAL_PROTOCOLO );
end;


procedure TDBZootecnicoUpdate._5_002_16;
const
  _CREATE_OR_ALTER_PROCEDURE_ZOO_GET_QTDE_COBERTURA_LACTACAO =
         'CREATE OR ALTER PROCEDURE ZOO_GET_QTDE_COBERTURA_LACTACAO ('
  +#13#10'    KZOO_ANIMAL_FEMEA SYS$FKGUID20,'
  +#13#10'    DATAEVENTO TIMESTAMP)'
  +#13#10'RETURNS ('
  +#13#10'    QTDE_COBERTURA TYPE OF SYS$INT)'
  +#13#10'AS'
  +#13#10'DECLARE DATA_LACTACAO TIMESTAMP ;'
  +#13#10'DECLARE DATA_SECAGEM  TIMESTAMP;'
  +#13#10'DECLARE DATA_FINAL    TIMESTAMP ;'
  +#13#10'DECLARE EVENTO_CIO SYS$INT;'
  +#13#10'BEGIN'
  +#13#10''
  +#13#10'  QTDE_COBERTURA = 0;'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''TIPO_EVENTO_ZOO'',  ''CIO''  RETURNING_VALUES EVENTO_CIO ;'
  +#13#10''
  +#13#10'  SELECT L.DATALACTACAO, L.DATA_SECAGEM'
  +#13#10'    FROM ZOO_LACTACOES L'
  +#13#10'   WHERE L.KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL_FEMEA AND L.DATALACTACAO <= :DATAEVENTO'
  +#13#10'   ORDER BY L.DATALACTACAO DESC'
  +#13#10'    ROWS 1'
  +#13#10'    INTO :DATA_LACTACAO, :DATA_SECAGEM;'
  +#13#10''
  +#13#10'  /*IF (:DATA_SECAGEM IS NULL OR :DATA_SECAGEM > :DATAEVENTO ) THEN'
  +#13#10'    BEGIN'
  +#13#10'      DATA_FINAL = :DATAEVENTO;'
  +#13#10'    END'
  +#13#10'  ELSE'
  +#13#10'    BEGIN'
  +#13#10'      DATA_FINAL = :DATA_SECAGEM;'
  +#13#10'    END*/'
  +#13#10''
  +#13#10'  DATA_FINAL = :DATAEVENTO;'
  +#13#10''
  +#13#10'  SELECT COUNT(*)'
  +#13#10'    FROM ZOO_EVENTOS_ZOOTECNICOS E'
  +#13#10'   WHERE E.TIPOEVENTO > :EVENTO_CIO'
  +#13#10'     AND E.KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL_FEMEA'
  +#13#10'     AND (:DATA_LACTACAO IS NULL OR E.DATAEVENTO >= :DATA_LACTACAO)'
  +#13#10'     AND (:DATA_FINAL IS NULL OR  E.DATAEVENTO <= :DATA_FINAL)'
  +#13#10'     INTO QTDE_COBERTURA;'
  +#13#10''
  +#13#10'  SUSPEND;'
  +#13#10'END'
  ;

begin
  ExecuteDirect( _CREATE_OR_ALTER_PROCEDURE_ZOO_GET_QTDE_COBERTURA_LACTACAO );
end;


procedure TDBZootecnicoUpdate._5_002_15;
const
   _ALTER_TABLE_ZOO_ANIMAL_TAREFAS_FK =

         'ALTER TABLE ZOO_ANIMAL_TAREFAS'
  +#13#10' ADD CONSTRAINT FKZOO_ANIMAL_TAREFAS_07'
  +#13#10'    FOREIGN KEY (KZOO_ANIMAL_DIAGNOSTICO)'
  +#13#10'    REFERENCES ZOO_ANIMAL_DIAGNOSTICOS (KZOO_ANIMAL_DIAGNOSTICO)'
  +#13#10'    ON DELETE CASCADE ON UPDATE CASCADE' ;
begin
  TryExecuteDirect( _ALTER_TABLE_ZOO_ANIMAL_TAREFAS_FK) ;
end ;


procedure TDBZootecnicoUpdate._5_002_14;
const
   _ALTER_TABLE_ZOO_ANIMAL_TAREFAS =
       'ALTER TABLE ZOO_ANIMAL_TAREFAS'
+#13#10'  ADD KZOO_ANIMAL_DIAGNOSTICO  SYS$FKGUID20'
+#13#10', ALTER KZOO_ANIMAL_DIAGNOSTICO POSITION 3' ;
begin
  TryExecuteDirect( _ALTER_TABLE_ZOO_ANIMAL_TAREFAS ) ;
end ;

procedure TDBZootecnicoUpdate._5_002_13;
begin

  TTcAbstractDB.GetByAlias('ZOOTECNICO')
    .ISQL (
         'DELETE FROM ZOO_ANIMAL_TAREFAS WHERE EXCLUIDO = ''T'''
    )
    .SQLExec ;
  TTcAbstractDB.GetByAlias('ZOOTECNICO')
    .ISQL (
         'DELETE FROM ZOO_ANIMAL_PROTOCOLOS WHERE EXCLUIDO = ''T'''
    ) ;
  TTcAbstractDB.GetByAlias('ZOOTECNICO')
    .ISQL (
         'DELETE FROM ZOO_ANIMAL_DIAGNOSTICOS WHERE EXCLUIDO = ''T'''
    )

end;


procedure TDBZootecnicoUpdate._5_002_12;
const
  _CREATE_OR_ALTER_VIEW_MACHOS_EMBRIOES =
             'CREATE OR ALTER VIEW VW_MACHOS_EMBRIOES'
      +#13#10'AS'
      +#13#10'SELECT A.KZOO_ANIMAL,'
      +#13#10'       A.BRINCO,'
      +#13#10'       A.NOMEESTABULO,'
      +#13#10'       A.NOMECOMPLETO,'
      +#13#10'       A.STATUS,'
      +#13#10'       (SELECT CAST ( SYS$DESCRIPTION AS VARCHAR ( 30 ) ) SYS$DESCRIPTION FROM SYS$TYPES_GETDESCRIPTION( ''STATUS_ANIMAL'', A.STATUS )) STATUS_DESCRICAO,'
      +#13#10'       A.KCAD_FAZENDA,'
      +#13#10'       CAST(AM.DS_ATIVO AS CHAR(1)) AS DS_ATIVO,'
      +#13#10'       A.BRINCO_'
      +#13#10'  FROM ZOO_ANIMAIS A'
      +#13#10'  INNER JOIN ZOO_ANIMAIS_MACHO AM ON AM.KZOO_ANIMAL_MACHO = A.KZOO_ANIMAL'
      +#13#10' UNION ALL'
      +#13#10'SELECT A.KZOO_ANIMAL, '
      +#13#10'       AE.CODIGO_EMBRIAO AS BRINCO,'
      +#13#10'       A.NOMEESTABULO,'
      +#13#10'       A.NOMECOMPLETO,'
      +#13#10'       A.STATUS,'
      +#13#10'       (SELECT CAST ( SYS$DESCRIPTION AS VARCHAR ( 30 ) ) SYS$DESCRIPTION FROM SYS$TYPES_GETDESCRIPTION( ''STATUS_ANIMAL'', A.STATUS )) STATUS_DESCRICAO,'
      +#13#10'       A.KCAD_FAZENDA,'
      +#13#10'       CAST(''T'' AS CHAR(1)) AS DS_ATIVO,'
      +#13#10'       LPAD( AE.CODIGO_EMBRIAO, 16, ''0'' ) AS BRINCO_'
      +#13#10'  FROM ZOO_ANIMAIS A'
      +#13#10'  INNER JOIN ZOO_ANIMAIS_EMBRIAO AE ON AE.KZOO_ANIMAL_EMBRIAO = A.KZOO_ANIMAL'
      +#13#10' ORDER BY 9';

begin
  ExecuteDirect( _CREATE_OR_ALTER_VIEW_MACHOS_EMBRIOES );
end;

procedure TDBZootecnicoUpdate._5_002_09;
const
  _CREATE_OR_ALTER_VIEW_MACHOS_EMBRIOES =
             'CREATE OR ALTER  VIEW VW_MACHOS_EMBRIOES AS'
      +#13#10'SELECT A.KZOO_ANIMAL,'
      +#13#10'       A.BRINCO,'
      +#13#10'       A.NOMEESTABULO,'
      +#13#10'       A.NOMECOMPLETO,'
      +#13#10'       A.STATUS,'
      +#13#10'       (SELECT CAST ( SYS$DESCRIPTION AS VARCHAR ( 30 ) ) SYS$DESCRIPTION FROM SYS$TYPES_GETDESCRIPTION( ''STATUS_ANIMAL'', A.STATUS )) STATUS_DESCRICAO,'
      +#13#10'       A.KCAD_FAZENDA,'
      +#13#10'       A.BRINCO_'
      +#13#10'  FROM ZOO_ANIMAIS A'
      +#13#10'  INNER JOIN ZOO_ANIMAIS_MACHO AM ON AM.KZOO_ANIMAL_MACHO = A.KZOO_ANIMAL'
      +#13#10' UNION ALL'
      +#13#10'SELECT A.KZOO_ANIMAL, '
      +#13#10'       AE.CODIGO_EMBRIAO AS BRINCO,'
      +#13#10'       A.NOMEESTABULO,'
      +#13#10'       A.NOMECOMPLETO,'
      +#13#10'       A.STATUS,'
      +#13#10'       (SELECT CAST ( SYS$DESCRIPTION AS VARCHAR ( 30 ) ) SYS$DESCRIPTION FROM SYS$TYPES_GETDESCRIPTION( ''STATUS_ANIMAL'', A.STATUS )) STATUS_DESCRICAO,'
      +#13#10'       A.KCAD_FAZENDA,'
      +#13#10'       LPAD( AE.CODIGO_EMBRIAO, 16, ''0'' ) AS BRINCO_'
      +#13#10'  FROM ZOO_ANIMAIS A'
      +#13#10'  INNER JOIN ZOO_ANIMAIS_EMBRIAO AE ON AE.KZOO_ANIMAL_EMBRIAO = A.KZOO_ANIMAL'
      +#13#10' ORDER BY 8';

begin
  ExecuteDirect( _CREATE_OR_ALTER_VIEW_MACHOS_EMBRIOES );
end;



procedure TDBZootecnicoUpdate._5_002_08 ;
const
   _CREATE_OR_ALTER_PROCEDURE_ZOO_GET_QTDE_COBERTURA_LACTACAO =
             'CREATE OR ALTER  PROCEDURE ZOO_GET_QTDE_COBERTURA_LACTACAO'
      +#13#10'        (KZOO_ANIMAL_FEMEA SYS$FKGUID20, DATAEVENTO TIMESTAMP )'
      +#13#10'RETURNS ( QTDE_COBERTURA TYPE OF SYS$INT)'
      +#13#10'AS'
      +#13#10'DECLARE DATA_LACTACAO TIMESTAMP ;'
      +#13#10'DECLARE DATA_SECAGEM  TIMESTAMP;'
      +#13#10'DECLARE DATA_FINAL    TIMESTAMP ;'
      +#13#10'DECLARE EVENTO_CIO SYS$INT;'
      +#13#10'BEGIN'
      +#13#10''
      +#13#10'  QTDE_COBERTURA = 0;'
      +#13#10''
      +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''TIPO_EVENTO_ZOO'',  ''CIO''  RETURNING_VALUES EVENTO_CIO ;'
      +#13#10''
      +#13#10'  SELECT L.DATALACTACAO, L.DATA_SECAGEM'
      +#13#10'    FROM ZOO_LACTACOES L'
      +#13#10'   WHERE L.KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL_FEMEA AND L.DATALACTACAO <= :DATAEVENTO'
      +#13#10'   ORDER BY L.DATALACTACAO DESC'
      +#13#10'    ROWS 1'
      +#13#10'    INTO :DATA_LACTACAO, :DATA_SECAGEM;'
      +#13#10''
      +#13#10'  IF (:DATA_SECAGEM IS NULL OR :DATA_SECAGEM > :DATAEVENTO ) THEN'
      +#13#10'    BEGIN'
      +#13#10'      DATA_FINAL = :DATAEVENTO;'
      +#13#10'    END'
      +#13#10'  ELSE'
      +#13#10'    BEGIN'
      +#13#10'      DATA_FINAL = :DATA_SECAGEM;'
      +#13#10'    END'
      +#13#10''
      +#13#10'  SELECT COUNT(*)'
      +#13#10'    FROM ZOO_EVENTOS_ZOOTECNICOS E'
      +#13#10'   WHERE E.TIPOEVENTO > :EVENTO_CIO'
      +#13#10'     AND E.KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL_FEMEA'
      +#13#10'     AND (:DATA_LACTACAO IS NULL OR E.DATAEVENTO >= :DATA_LACTACAO)'
      +#13#10'     AND (:DATA_FINAL IS NULL OR  E.DATAEVENTO <= :DATA_FINAL)'
      +#13#10'     INTO QTDE_COBERTURA;'
      +#13#10''
      +#13#10'  SUSPEND;'
      +#13#10'END';

begin
  ExecuteDirect( _CREATE_OR_ALTER_PROCEDURE_ZOO_GET_QTDE_COBERTURA_LACTACAO );
end;


procedure TDBZootecnicoUpdate._5_002_07 ;
const
   _CREATE_OR_ALTER_PROCEDURE_ZOO_EXEC_INVENTARIO =
             'CREATE OR ALTER PROCEDURE ZOO_EXEC_INVENTARIO ('
      +#13#10'    KZOO_CFGGRUPO_CATEGORIA SYS$FKGUID20)'
      +#13#10'AS'
      +#13#10'--declare     SUMMARY_TYPE SYS$INT ;'
      +#13#10'declare     KZOO_CFGCATEGORIA SYS$FKGUID20 ;'
      +#13#10'declare     KZOO_ANIMAL SYS$FKGUID20 ;'
      +#13#10'declare     BRINCO ZOO$BRINCO ;'
      +#13#10'declare     STATUS_ANIMAL SYS$INT ;'
      +#13#10'declare     SEXO_ANIMAL SYS$SEXO ;'
      +#13#10'declare     IDADE_DIAS SYS$INT ;'
      +#13#10'declare     NL SYS$INT ;'
      +#13#10'declare     DEL SYS$INT ;'
      +#13#10'-- opcoes categoria'
      +#13#10'declare CATEGORIA_STATUS SYS$INT ;'
      +#13#10'declare IDADE_INFERIOR SYS$INT ;'
      +#13#10'declare IDADE_SUPERIOR SYS$INT ;'
      +#13#10'declare DEL_INFERIOR SYS$INT ;'
      +#13#10'declare DEL_SUPERIOR SYS$INT ;'
      +#13#10'declare NL_INFERIOR  SYS$INT ;'
      +#13#10'declare NL_SUPERIOR  SYS$INT ;'
      +#13#10'-- status comparacao ...'
      +#13#10'declare STATUS_DESCARTE SYS$INT ;'
      +#13#10'declare STATUS_VL SYS$INT ;'
      +#13#10'declare STATUS_VS SYS$INT ;'
      +#13#10'declare OCCURRENCE_COUNT SYS$INT ;'
      +#13#10'declare LST_CATEGORIA SYS$FKGUID20 ;'
      +#13#10'declare ANIMAL_COUNT SYS$INT ;'
      +#13#10'declare ANIMAL_REPEAT SYS$INT ;'
      +#13#10''
      +#13#10'--declare cur cursor for'
      +#13#10'--  (select rdb$relation_name, rdb$system_flag from rdb$relations);'
      +#13#10'-- as cursor tcur do'
      +#13#10''
      +#13#10'begin'
      +#13#10''
      +#13#10' ANIMAL_COUNT = 0 ;'
      +#13#10' ANIMAL_REPEAT = 0 ;'
      +#13#10''
      +#13#10' EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_ANIMAL'', ''DESCARTADO''   returning_values STATUS_DESCARTE ;'
      +#13#10' EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_ANIMAL'', ''VACALACTACAO'' returning_values STATUS_VL ;'
      +#13#10' EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_ANIMAL'', ''VACASECA''     returning_values STATUS_VS ;'
      +#13#10''
      +#13#10' DELETE FROM ZOO_INVENTARIO_DETAIL  ;'
      +#13#10' DELETE FROM ZOO_INVENTARIO_SUMMARY ;'
      +#13#10''
      +#13#10'/* SUMMARY_TYPE'
      +#13#10' 0 : <DESCRIPTION> = existent category'
      +#13#10' 1 : (?) = Other'
      +#13#10' 2 : (+)'
      +#13#10' 3 : (-) = Repeat'
      +#13#10' 4 : (=) = Total'
      +#13#10'*/'
      +#13#10''
      +#13#10' -- categorias existentes - SUMMARY_TYPE 0'
      +#13#10' INSERT'
      +#13#10'   INTO ZOO_INVENTARIO_SUMMARY'
      +#13#10'        ( SUMMARY_TYPE, KZOO_CFGCATEGORIA, DESCRICAO, STATUS, IDADE_INFERIOR, IDADE_SUPERIOR,DEL_INFERIOR, DEL_SUPERIOR, NL_INFERIOR, NL_SUPERIOR )'
      +#13#10'   SELECT'
      +#13#10'          0, KZOO_CFGCATEGORIA, DESCRICAO, STATUS, IDADE_INFERIOR, IDADE_SUPERIOR,DEL_INFERIOR, DEL_SUPERIOR, NL_INFERIOR, NL_SUPERIOR'
      +#13#10'   FROM ZOO_CFGCATEGORIAS'
      +#13#10'   --    WHERE KZOO_CFGGRUPO_CATEGORIA = :KZOO_CFGGRUPO_CATEGORIA'
      +#13#10'   ORDER BY STATUS, IDADE_INFERIOR, NL_INFERIOR, DEL_INFERIOR ;'
      +#13#10''
      +#13#10' -- outros ( SUMMARY_TYPE 1 )'
      +#13#10' INSERT'
      +#13#10'   INTO ZOO_INVENTARIO_SUMMARY'
      +#13#10'        ( SUMMARY_TYPE, KZOO_CFGCATEGORIA, DESCRICAO )'
      +#13#10'   VALUES ( 1, NULL, ''(?)'' ) ;'
      +#13#10''
      +#13#10' -- soma ( SUMMARY_TYPE 2 )'
      +#13#10' INSERT'
      +#13#10'   INTO ZOO_INVENTARIO_SUMMARY'
      +#13#10'        ( SUMMARY_TYPE, KZOO_CFGCATEGORIA, DESCRICAO )'
      +#13#10'   VALUES ( 2, NULL, ''(+)'' ) ;'
      +#13#10''
      +#13#10' -- repetidos ( SUMMARY_TYPE 3 )'
      +#13#10' INSERT'
      +#13#10'   INTO ZOO_INVENTARIO_SUMMARY'
      +#13#10'        ( SUMMARY_TYPE, KZOO_CFGCATEGORIA, DESCRICAO )'
      +#13#10'   VALUES ( 3, NULL, ''(-)'' ) ;'
      +#13#10''
      +#13#10' -- total ( total 3 )'
      +#13#10' INSERT'
      +#13#10'   INTO ZOO_INVENTARIO_SUMMARY'
      +#13#10'        ( SUMMARY_TYPE, KZOO_CFGCATEGORIA, DESCRICAO )'
      +#13#10'   VALUES ( 4, NULL, ''(=)'' ) ;'
      +#13#10''
      +#13#10' SEXO_ANIMAL = ''F'' ;'
      +#13#10' FOR SELECT'
      +#13#10'       F.KZOO_ANIMAL_FEMEA,'
      +#13#10'       A.BRINCO,'
      +#13#10'       current_date - cast ( F.NASCIMENTO as date ) IDADE_DIAS,'
      +#13#10'       A.STATUS,'
      +#13#10'       L.NL,'
      +#13#10'       L.DEL'
      +#13#10'     FROM ZOO_ANIMAIS_FEMEA F'
      +#13#10'       inner join ZOO_ANIMAIS   A on A.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA'
      +#13#10'       left  join ZOO_LACTACOES L on L.KZOO_LACTACAO     = F.KULTIMA_LACTACAO'
      +#13#10'     WHERE A.STATUS <> :STATUS_DESCARTE'
      +#13#10'       AND A.ANIMAL_DE_TERCEIRO = ''F'''
      +#13#10' INTO KZOO_ANIMAL,'
      +#13#10'      BRINCO,'
      +#13#10'      IDADE_DIAS,'
      +#13#10'      STATUS_ANIMAL,'
      +#13#10'      NL, '
      +#13#10'      DEL'
      +#13#10' DO'
      +#13#10' BEGIN'
      +#13#10'     ANIMAL_COUNT = ANIMAL_COUNT + 1 ;'
      +#13#10'--     SUMMARY_TYPE = 0 ;'
      +#13#10'     OCCURRENCE_COUNT = 0 ;'
      +#13#10'     LST_CATEGORIA = null ;'
      +#13#10''
      +#13#10'     FOR SELECT'
      +#13#10'          KZOO_CFGCATEGORIA, STATUS,'
      +#13#10'          IDADE_INFERIOR, IDADE_SUPERIOR,'
      +#13#10'          NL_INFERIOR, NL_SUPERIOR,'
      +#13#10'          DEL_INFERIOR, DEL_SUPERIOR'
      +#13#10'         FROM ZOO_INVENTARIO_SUMMARY'
      +#13#10'         ORDER BY STATUS, IDADE_INFERIOR, NL_INFERIOR, DEL_INFERIOR'
      +#13#10'      --    WHERE KZOO_CFGGRUPO_CATEGORIA = :KZOO_CFGGRUPO_CATEGORIA'
      +#13#10'     INTO KZOO_CFGCATEGORIA, CATEGORIA_STATUS,'
      +#13#10'          IDADE_INFERIOR,    IDADE_SUPERIOR,'
      +#13#10'          NL_INFERIOR,       NL_SUPERIOR,'
      +#13#10'          DEL_INFERIOR,      DEL_SUPERIOR'
      +#13#10'     AS CURSOR CURSOR_SUMMARY'
      +#13#10'     do'
      +#13#10'       begin'
      +#13#10'         if (      ( STATUS_ANIMAL = CATEGORIA_STATUS )'
      +#13#10'              and  ( IDADE_DIAS between IDADE_INFERIOR and IDADE_SUPERIOR )'
      +#13#10'              and  (    (STATUS_ANIMAL not in ( STATUS_VL, STATUS_VS ) )'
      +#13#10'                     or (     ( coalesce ( NL, -1  ) between NL_INFERIOR  and NL_SUPERIOR  )'
      +#13#10'                          and ( coalesce ( DEL, 0  ) between DEL_INFERIOR and DEL_SUPERIOR )'
      +#13#10'                        )'
      +#13#10'                   )'
      +#13#10'            ) then'
      +#13#10'             BEGIN'
      +#13#10'              OCCURRENCE_COUNT = OCCURRENCE_COUNT + 1 ;'
      +#13#10''
      +#13#10'              UPDATE ZOO_INVENTARIO_SUMMARY SET ITEMCOUNT = ITEMCOUNT + 1 WHERE CURRENT OF CURSOR_SUMMARY ;'
      +#13#10'       --       UPDATE ZOO_INVENTARIO_SUMMARY SET ITEMCOUNT = ITEMCOUNT + 1 WHERE KZOO_CFGCATEGORIA = :KZOO_CFGCATEGORIA ;'
      +#13#10''
      +#13#10'              INSERT INTO ZOO_INVENTARIO_DETAIL'
      +#13#10'                 ( KZOO_CFGCATEGORIA, KZOO_ANIMAL, BRINCO, STATUS_ANIMAL, SEXO_ANIMAL, IDADE_DIAS, NL, DEL )'
      +#13#10'              VALUES'
      +#13#10'                 ( :KZOO_CFGCATEGORIA, :KZOO_ANIMAL, :BRINCO, :STATUS_ANIMAL, :SEXO_ANIMAL, :IDADE_DIAS, :NL, :DEL ) ;'
      +#13#10''
      +#13#10'              if ( LST_CATEGORIA is not null ) then'
      +#13#10'                BEGIN'
      +#13#10'                  UPDATE ZOO_INVENTARIO_SUMMARY'
      +#13#10'                     SET REPEAT = ''T'''
      +#13#10'                  WHERE KZOO_CFGCATEGORIA = :KZOO_CFGCATEGORIA'
      +#13#10'                    AND REPEAT = ''F'' ;'
      +#13#10'                END'
      +#13#10'              LST_CATEGORIA = KZOO_CFGCATEGORIA ;'
      +#13#10'              -- suspend ; -- FB 2.5.1. BUG ?'
      +#13#10'             END'
      +#13#10'       END'
      +#13#10''
      +#13#10'     -- other'
      +#13#10'     IF (OCCURRENCE_COUNT= 0) then --  1 : (?) = Other'
      +#13#10'        BEGIN'
      +#13#10'          UPDATE ZOO_INVENTARIO_SUMMARY SET ITEMCOUNT = ITEMCOUNT + 1 WHERE SUMMARY_TYPE = 1 ;'
      +#13#10''
      +#13#10'          INSERT INTO ZOO_INVENTARIO_DETAIL'
      +#13#10'            ( KZOO_CFGCATEGORIA, KZOO_ANIMAL, BRINCO, STATUS_ANIMAL, SEXO_ANIMAL, IDADE_DIAS, NL, DEL )'
      +#13#10'          VALUES'
      +#13#10'            ( NULL, :KZOO_ANIMAL, :BRINCO, :STATUS_ANIMAL, :SEXO_ANIMAL, :IDADE_DIAS, :NL, :DEL ) ;'
      +#13#10'          --suspend ;'
      +#13#10'        END'
      +#13#10'     ELSE IF (OCCURRENCE_COUNT > 1) then --  3 : (*) = Repeat'
      +#13#10'        BEGIN'
      +#13#10'          ANIMAL_REPEAT = ANIMAL_REPEAT + 1 ;'
      +#13#10'--          UPDATE ZOO_INVENTARIO_SUMMARY SET ITEMCOUNT = ITEMCOUNT + 1 WHERE SUMMARY_TYPE = 2 ;'
      +#13#10''
      +#13#10'          INSERT INTO ZOO_INVENTARIO_DETAIL'
      +#13#10'            ( KZOO_CFGCATEGORIA, KZOO_ANIMAL, BRINCO, STATUS_ANIMAL, SEXO_ANIMAL, IDADE_DIAS, NL, DEL )'
      +#13#10'          VALUES'
      +#13#10'            ( :KZOO_CFGCATEGORIA, :KZOO_ANIMAL, :BRINCO, :STATUS_ANIMAL, :SEXO_ANIMAL, :IDADE_DIAS, :NL, :DEL ) ;'
      +#13#10''
      +#13#10'          --suspend ;'
      +#13#10'        END'
      +#13#10''
      +#13#10' END'
      +#13#10''
      +#13#10' --  SUMMARY TYPE 2 : (+) = soma'
      +#13#10' UPDATE ZOO_INVENTARIO_SUMMARY SET ITEMCOUNT = :ANIMAL_COUNT + :ANIMAL_REPEAT'
      +#13#10'   WHERE SUMMARY_TYPE = 2 ;'
      +#13#10''
      +#13#10' --  SUMMARY TYPE 3 : (-) = Repeat'
      +#13#10' UPDATE ZOO_INVENTARIO_SUMMARY SET ITEMCOUNT = :ANIMAL_REPEAT'
      +#13#10'   WHERE SUMMARY_TYPE = 3 ;'
      +#13#10''
      +#13#10' --  SUMMARY TYPE 4 : (=) = Total'
      +#13#10' UPDATE ZOO_INVENTARIO_SUMMARY SET ITEMCOUNT = :ANIMAL_COUNT'
      +#13#10'   WHERE SUMMARY_TYPE = 4 ;'
      +#13#10''
      +#13#10'END';

begin
  ExecuteDirect( _CREATE_OR_ALTER_PROCEDURE_ZOO_EXEC_INVENTARIO );
end;


procedure TDBZootecnicoUpdate._5_002_04;
const
   _ALTER_TABLE_ZOO_ANIMAIS_ADD_ANIMAL_DE_TERCEIRO =
          'ALTER TABLE ZOO_ANIMAIS'
   +#13#10'ADD ANIMAL_DE_TERCEIRO SYS$BOOL_F'
   +#13#10', ALTER ANIMAL_DE_TERCEIRO POSITION 26';

begin
  TryExecuteDirect( _ALTER_TABLE_ZOO_ANIMAIS_ADD_ANIMAL_DE_TERCEIRO );
end;


procedure TDBZootecnicoUpdate._5_002_03;
const
   _ALTER_TABLE_ZOO_ANIMAIS_MACHO_ADD_DATARETIRO =
          'ALTER TABLE ZOO_ANIMAIS_MACHO'
   +#13#10'ADD DATARETIRO SYS$DATE, ALTER DATARETIRO POSITION 30';

   _ALTER_TABLE_ZOO_ANIMAIS_MACHO_ADD_LOTE =
          'ALTER TABLE ZOO_ANIMAIS_MACHO'
   +#13#10'ADD LOTE ZOO$LOTE, ALTER LOTE POSITION 31';

   _ALTER_TABLE_ZOO_ANIMAIS_MACHO_ADD_DATALOTE =
          'ALTER TABLE ZOO_ANIMAIS_MACHO'
   +#13#10'ADD DATALOTE SYS$DATE, ALTER DATALOTE POSITION 32';

begin
  TryExecuteDirect( _ALTER_TABLE_ZOO_ANIMAIS_MACHO_ADD_DATARETIRO );
  TryExecuteDirect( _ALTER_TABLE_ZOO_ANIMAIS_MACHO_ADD_LOTE );
  TryExecuteDirect( _ALTER_TABLE_ZOO_ANIMAIS_MACHO_ADD_DATALOTE );
end;


procedure TDBZootecnicoUpdate._5_002_02;
const
   _CREATE_OR_ALTER_TRIGGER_ZOO_EVENTOS_ZOOTECNICOS_BD0 =
          'CREATE OR ALTER TRIGGER ZOO_EVENTOS_ZOOTECNICOS_BD0 FOR ZOO_EVENTOS_ZOOTECNICOS'
   +#13#10'ACTIVE BEFORE DELETE POSITION 1003'
   +#13#10'AS'
   +#13#10'BEGIN'
   +#13#10'  DELETE FROM ZOO_ANIMAL_LINHAGEM WHERE KZOO_EVENTO_ZOOTECNICO = OLD.KZOO_EVENTO_ZOOTECNICO ;'
   +#13#10'END';

begin
  ExecuteDirect( _CREATE_OR_ALTER_TRIGGER_ZOO_EVENTOS_ZOOTECNICOS_BD0 );
end;


procedure TDBZootecnicoUpdate._5_002_01;
const

   _CREATE_OR_ALTER_PROCEDURE_SYS_ENDOFDAY =
          'CREATE OR ALTER PROCEDURE SYS$ENDOFDAY ('
   +#13#10'    ATIMESTAMP TIMESTAMP)'
   +#13#10'RETURNS ('
   +#13#10'    AENDOFDAYTIMESTAMP TIMESTAMP)'
   +#13#10'AS'
   +#13#10'BEGIN'
   +#13#10'  AENDOFDAYTIMESTAMP =  DATEADD(-1 MILLISECOND TO CAST(CAST(ATIMESTAMP AS DATE) + 1 AS TIMESTAMP));'
   +#13#10'  SUSPEND;'
   +#13#10'END' ;

   _CREATE_OR_ALTER_PROCEDURE_SYS_COMPARE_TIMESTAMP =
          'CREATE OR ALTER PROCEDURE SYS$COMPARE_TIMESTAMP ('
   +#13#10'    ATIMESTAMP1 TIMESTAMP,'
   +#13#10'    ATIMESTAMP2 TIMESTAMP)'
   +#13#10'RETURNS ('
   +#13#10'    RESULT INTEGER)'
   +#13#10'AS'
   +#13#10'BEGIN'
   +#13#10'    RESULT = 0;'
   +#13#10'    IF (DATEADD(-1 * EXTRACT(MILLISECOND FROM ATIMESTAMP1) MILLISECOND TO ATIMESTAMP1) ='
   +#13#10'        DATEADD(-1 * EXTRACT(MILLISECOND FROM ATIMESTAMP2) MILLISECOND TO ATIMESTAMP2)) THEN'
   +#13#10'      RESULT = 1;'
   +#13#10'    SUSPEND;'
   +#13#10'END' ;


   _CREATE_OR_ALTER_PROCEDURE_SYS_SPLIT =
          'CREATE OR ALTER PROCEDURE SYS$SPLIT('
   +#13#10'    SEPARATOR VARCHAR(10),'
   +#13#10'    ASTRING VARCHAR(8000))'
   +#13#10'RETURNS ('
   +#13#10'    STRINGITEM VARCHAR(1000))'
   +#13#10'AS'
   +#13#10'DECLARE VARIABLE STR VARCHAR(8000);'
   +#13#10'DECLARE VARIABLE POS INTEGER;'
   +#13#10'DECLARE VARIABLE SEPARATOR_LENGTH INTEGER;'
   +#13#10'BEGIN'
   +#13#10''
   +#13#10'  STR = ASTRING;'
   +#13#10'  SEPARATOR_LENGTH = CHAR_LENGTH(SEPARATOR);'
   +#13#10'  '
   +#13#10'  IF (SEPARATOR_LENGTH>0) THEN'
   +#13#10'  BEGIN'
   +#13#10'    POS = POSITION(SEPARATOR, STR);'
   +#13#10'  '
   +#13#10'    WHILE (POS <> 0) DO'
   +#13#10'    BEGIN'
   +#13#10'      IF (POS>1) THEN'
   +#13#10'      BEGIN'
   +#13#10'        STRINGITEM = SUBSTRING(STR FROM 1 FOR (POS-1));'
   +#13#10'        SUSPEND;'
   +#13#10'      END'
   +#13#10'      STR = SUBSTRING(STR FROM (POS+SEPARATOR_LENGTH) );'
   +#13#10'      POS = POSITION(SEPARATOR, STR);'
   +#13#10'    END'
   +#13#10'  END'
   +#13#10'  '
   +#13#10'  IF (CHAR_LENGTH(STR) >0 ) THEN'
   +#13#10'  BEGIN'
   +#13#10'    STRINGITEM = STR;'
   +#13#10'    SUSPEND;'
   +#13#10'  END'
   +#13#10''
   +#13#10'END' ;


   _CREATE_OR_ALTER_PROCEDURE_SYS_SPLIT_INTEGER_STRING =
          'CREATE OR ALTER PROCEDURE SYS$SPLIT_INTEGER_STRING ('
   +#13#10'    ASTRING VARCHAR(100))'
   +#13#10'RETURNS ('
   +#13#10'    N INTEGER,'
   +#13#10'    AN VARCHAR(100))'
   +#13#10'AS'
   +#13#10'DECLARE VARIABLE I INTEGER;'
   +#13#10'DECLARE VARIABLE TMP_N VARCHAR(100);'
   +#13#10'DECLARE VARIABLE C VARCHAR(1);'
   +#13#10'BEGIN'
   +#13#10'    I = 1;'
   +#13#10'    TMP_N = '''';'
   +#13#10'    N = 0;'
   +#13#10'    AN = '''';'
   +#13#10'    WHILE (I <= CHAR_LENGTH(ASTRING)) DO'
   +#13#10'    BEGIN'
   +#13#10'      C = SUBSTRING(ASTRING FROM I FOR 1);'
   +#13#10'      IF (C IN (''1'',''2'',''3'',''4'',''5'',''6'',''7'',''8'',''9'',''0'') AND (AN = '''')) THEN'
   +#13#10'        TMP_N = TMP_N || C;'
   +#13#10'      ELSE'
   +#13#10'        AN = AN || C;'
   +#13#10'      I = I + 1;'
   +#13#10'    END'
   +#13#10''
   +#13#10'    IF (TMP_N <> '''' ) THEN'
   +#13#10'    BEGIN'
   +#13#10'      N = CAST(TMP_N AS INTEGER);'
   +#13#10'    END'
   +#13#10'    SUSPEND;'
   +#13#10''
   +#13#10'END'  ;

   _CREATE_OR_ALTER_PROCEDURE_SYS_TIMESTAMP_TO_UNIX_TIMESTAMP =
          'CREATE OR ALTER PROCEDURE SYS$TIMESTAMP_TO_UNIX_TIMESTAMP ('
   +#13#10'    ATIMESTAMP TIMESTAMP)'
   +#13#10'RETURNS ('
   +#13#10'    UNIX_TIMESTAMP BIGINT)'
   +#13#10'AS'
   +#13#10'  DECLARE VARIABLE UNIX_OFFSET TIMESTAMP = ''1970-01-01 00:00:00'';'
   +#13#10'BEGIN'
   +#13#10'  IF ((ATIMESTAMP IS NOT NULL) AND (ATIMESTAMP >= UNIX_OFFSET)) THEN'
   +#13#10'    UNIX_TIMESTAMP = DATEDIFF(SECOND, :UNIX_OFFSET, :ATIMESTAMP) * 1000;'
   +#13#10'  ELSE'
   +#13#10'    UNIX_TIMESTAMP = 0;'
   +#13#10'  SUSPEND;'
   +#13#10'END' ;

   _CREATE_OR_ALTER_PROCEDURE_SYS_UNIX_TIMESTAMP_TO_TIMESTAMP =
          'CREATE OR ALTER PROCEDURE SYS$UNIX_TIMESTAMP_TO_TIMESTAMP ('
   +#13#10'    AUNIX_TIMESTAMP BIGINT)'
   +#13#10'RETURNS ('
   +#13#10'    ATIMESTAMP TIMESTAMP)'
   +#13#10'AS'
   +#13#10'  DECLARE VARIABLE UNIX_OFFSET TIMESTAMP = ''1970-01-01 00:00:00'';'
   +#13#10'BEGIN'
   +#13#10'  /* PROCEDURE SYS$TEXT */'
   +#13#10'  ATIMESTAMP = DATEADD(:AUNIX_TIMESTAMP / 1000 SECOND TO :UNIX_OFFSET);'
   +#13#10'  SUSPEND;'
   +#13#10'END' ;


   _CREATE_OR_ALTER_PROCEDURE_SYS_REPLACE_ITEM_IN_STRING =
          'CREATE OR ALTER PROCEDURE SYS$REPLACE_ITEM_IN_STRING ('
   +#13#10'    SEPARATOR VARCHAR(10),'
   +#13#10'    ASTRING VARCHAR(8000),'
   +#13#10'    AOLDVALUE VARCHAR(10),'
   +#13#10'    ANEWVALUE VARCHAR(10))'
   +#13#10'RETURNS ('
   +#13#10'    ARESULT VARCHAR(8000))'
   +#13#10'AS'
   +#13#10'DECLARE VARIABLE STR VARCHAR(8000);'
   +#13#10'DECLARE VARIABLE POS INTEGER;'
   +#13#10'DECLARE VARIABLE STRINGITEM VARCHAR(1000);'
   +#13#10'DECLARE VARIABLE SEPARATOR_LENGTH INTEGER;'
   +#13#10'BEGIN'
   +#13#10''
   +#13#10'  STR = ASTRING;'
   +#13#10'  SEPARATOR_LENGTH = CHAR_LENGTH(SEPARATOR);'
   +#13#10'  '
   +#13#10'  IF (SEPARATOR_LENGTH > 0) THEN'
   +#13#10'  BEGIN'
   +#13#10'    POS = POSITION(SEPARATOR, STR);'
   +#13#10'  '
   +#13#10'    WHILE (POS <> 0) DO'
   +#13#10'    BEGIN'
   +#13#10'      IF (POS > 1) THEN'
   +#13#10'      BEGIN'
   +#13#10'        STRINGITEM = SUBSTRING(STR FROM 1 FOR (POS-1));'
   +#13#10'        IF (STRINGITEM = :AOLDVALUE) THEN'
   +#13#10'          STRINGITEM = :ANEWVALUE;'
   +#13#10''
   +#13#10'        IF (:ARESULT IS NULL) THEN'
   +#13#10'          ARESULT = STRINGITEM;'
   +#13#10'        ELSE IF (:STRINGITEM IS NOT NULL) THEN'
   +#13#10'          ARESULT = ARESULT || SEPARATOR || STRINGITEM;'
   +#13#10''
   +#13#10'      END'
   +#13#10'      STR = SUBSTRING(STR FROM (POS+SEPARATOR_LENGTH) );'
   +#13#10'      POS = POSITION(SEPARATOR, STR);'
   +#13#10'    END'
   +#13#10'  END'
   +#13#10'  '
   +#13#10'  IF (CHAR_LENGTH(STR) > 0 ) THEN'
   +#13#10'  BEGIN'
   +#13#10'    STRINGITEM = STR;'
   +#13#10''
   +#13#10'    IF (STRINGITEM = :AOLDVALUE) THEN'
   +#13#10'      STRINGITEM = :ANEWVALUE;'
   +#13#10''
   +#13#10'    IF (:ARESULT IS NULL) THEN'
   +#13#10'      ARESULT = STRINGITEM;'
   +#13#10'    ELSE IF (:STRINGITEM IS NOT NULL) THEN'
   +#13#10'      ARESULT = ARESULT || SEPARATOR || STRINGITEM;'
   +#13#10''
   +#13#10'  END'
   +#13#10''
   +#13#10'  SUSPEND;'
   +#13#10''
   +#13#10'END' ;

begin
   ExecuteDirect ( _CREATE_OR_ALTER_PROCEDURE_SYS_ENDOFDAY                     ) ;
   ExecuteDirect ( _CREATE_OR_ALTER_PROCEDURE_SYS_COMPARE_TIMESTAMP            ) ;
   ExecuteDirect ( _CREATE_OR_ALTER_PROCEDURE_SYS_SPLIT                        ) ;
   ExecuteDirect ( _CREATE_OR_ALTER_PROCEDURE_SYS_SPLIT_INTEGER_STRING         ) ;
   ExecuteDirect ( _CREATE_OR_ALTER_PROCEDURE_SYS_TIMESTAMP_TO_UNIX_TIMESTAMP  ) ;
   ExecuteDirect ( _CREATE_OR_ALTER_PROCEDURE_SYS_UNIX_TIMESTAMP_TO_TIMESTAMP  ) ;
   ExecuteDirect ( _CREATE_OR_ALTER_PROCEDURE_SYS_REPLACE_ITEM_IN_STRING       ) ;
end ;


procedure TDBZootecnicoUpdate._5_002_00;
const
    _CREATE_OR_ALTER_TRIGGER_ZOO_EVENTOS_ZOOTECNICOS_BIU1 =
                  'CREATE OR ALTER TRIGGER ZOO_EVENTOS_ZOOTECNICOS_BIU1 FOR ZOO_EVENTOS_ZOOTECNICOS'
           +#13#10'ACTIVE BEFORE INSERT OR UPDATE POSITION 1001'
           +#13#10'AS'
           +#13#10'declare variable TIPO_INSEMINA type of SYS$INT;'
           +#13#10'declare variable TIPO_MONTA type of SYS$INT;'
           +#13#10'declare variable TIPO_IMPLANTE type of SYS$INT;'
           +#13#10'begin'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''TIPO_EVENTO_ZOO'', ''INSEMINA''  returning_values TIPO_INSEMINA ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''TIPO_EVENTO_ZOO'', ''MONTA''     returning_values TIPO_MONTA ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''TIPO_EVENTO_ZOO'', ''IMPLANTE''  returning_values TIPO_IMPLANTE ;'
           +#13#10''
           +#13#10'  NEW.KZOO_ANIMAL_MACHO_TOUROSEMEN = NULL ;'
           +#13#10'  NEW.KZOO_ANIMAL_MACHO_EMBRIAO = NULL ;'
           +#13#10''
           +#13#10'  if (NEW.TIPOEVENTO IN ( TIPO_INSEMINA, TIPO_MONTA )) then'
           +#13#10'    begin'
           +#13#10'     NEW.KZOO_ANIMAL_MACHO_TOUROSEMEN = NEW.KZOO_ANIMAL_MACHO ;'
           +#13#10'     NEW.KZOO_ANIMAL_MACHO_EMBRIAO = NULL ;'
           +#13#10'    end'
           +#13#10'  else if (NEW.TIPOEVENTO = TIPO_IMPLANTE ) then'
           +#13#10'    begin'
           +#13#10'     NEW.KZOO_ANIMAL_MACHO_EMBRIAO = NEW.KZOO_ANIMAL_MACHO ;'
           +#13#10'     NEW.KZOO_ANIMAL_MACHO_TOUROSEMEN = NULL ;'
           +#13#10'    end'
           +#13#10''
           +#13#10'  else'
           +#13#10'     NEW.KZOO_ANIMAL_MACHO = null ;'
           +#13#10''
           +#13#10'  if ( (Updating) and ( NEW.DATAABORTOPARTO is distinct from OLD.DATAABORTOPARTO ) and ( NEW.DATAABORTOPARTO IS NULL ) ) then'
           +#13#10'    begin'
           +#13#10'      -- revisar... usar campo excluido da linhagem...'
           +#13#10'      DELETE FROM ZOO_ANIMAL_LINHAGEM WHERE KZOO_EVENTO_ZOOTECNICO = OLD.KZOO_EVENTO_ZOOTECNICO ;'
           +#13#10'      DELETE FROM ZOO_LACTACOES WHERE KZOO_EVENTO_ZOOTECNICO = OLD.KZOO_EVENTO_ZOOTECNICO ;'
           +#13#10'    end'
           +#13#10''
           +#13#10''
           +#13#10'  if ( (NEW.DATATOQUE is not null and OLD.DATATOQUE is null) or ( NEW.DATATOQUE > OLD.DATATOQUE ) ) then'
           +#13#10'   begin'
           +#13#10'      insert into ZOO_HISTORICO_TOQUE (KZOO_HISTORICO_TOQUE, KZOO_EVENTO_ZOOTECNICO, DATATOQUE, PRENHEZ, KCAD_VETERINARIO, NOMEVETERINARIO) '
           +#13#10'             values (Guid20(), NEW.KZOO_EVENTO_ZOOTECNICO, NEW.DATATOQUE, NEW.PRENHEZ, NEW.KCAD_VETERINARIO, NEW.NOMEVETERINARIO);'
           +#13#10'   end'
           +#13#10'  else if ( NEW.DATATOQUE is not DISTINCT from OLD.DATATOQUE AND NEW.DATATOQUE is not null ) then'
           +#13#10'   begin'
           +#13#10'     update ZOO_HISTORICO_TOQUE'
           +#13#10'        set PRENHEZ = NEW.PRENHEZ, KCAD_VETERINARIO = NEW.KCAD_VETERINARIO, NOMEVETERINARIO = NEW.NOMEVETERINARIO'
           +#13#10'      where KZOO_EVENTO_ZOOTECNICO = NEW.KZOO_EVENTO_ZOOTECNICO and DATATOQUE = OLD.DATATOQUE;'
           +#13#10'   end'
           +#13#10'  else if ( NEW.PRENHEZ is null or NEW.PRENHEZ = ''''  ) then'
           +#13#10'   begin'
           +#13#10'     delete from ZOO_HISTORICO_TOQUE where KZOO_EVENTO_ZOOTECNICO = NEW.KZOO_EVENTO_ZOOTECNICO;'
           +#13#10'   end'
           +#13#10''
           +#13#10'  NEW.QTDE_DIAGNOSTICO = (SELECT COUNT(*) FROM ZOO_HISTORICO_TOQUE WHERE KZOO_EVENTO_ZOOTECNICO = NEW.KZOO_EVENTO_ZOOTECNICO);'
           +#13#10''
           +#13#10'end';

begin
  TryExecuteDirect( _CREATE_OR_ALTER_TRIGGER_ZOO_EVENTOS_ZOOTECNICOS_BIU1 );
end;

procedure TDBZootecnicoUpdate._5_001_99;
const
    _CREATE_TABLE_ZOO_HISTORICO_TOQUE =
                  'CREATE TABLE ZOO_HISTORICO_TOQUE ('
           +#13#10'  KZOO_HISTORICO_TOQUE SYS$PKGUID20,'
           +#13#10'  KZOO_EVENTO_ZOOTECNICO SYS$FKGUID20, '
           +#13#10'  DATATOQUE TIMESTAMP, '
           +#13#10'  PRENHEZ SYS$BOOL_NULL, '
           +#13#10'  KCAD_VETERINARIO SYS$FKGUID20,'
           +#13#10'  NOMEVETERINARIO SYS$DESCR,'
           +#13#10'  CONSTRAINT PKZOO_HISTORICO_TOQUE PRIMARY KEY(KZOO_HISTORICO_TOQUE))';

    _ALTER_TABLE_ZOO_EVENTOS_ZOOTECNICOS_ADD_QTDE_DIAGNOSTICO =
                  'ALTER TABLE ZOO_EVENTOS_ZOOTECNICOS'
           +#13#10'ADD QTDE_DIAGNOSTICO SYS$INT_NN_0'
           +#13#10' , ALTER QTDE_DIAGNOSTICO POSITION 34';

    _CREATE_OR_ALTER_TRIGGER_ZOO_EVENTOS_ZOOTECNICOS_BIU1 =
                  'CREATE OR ALTER TRIGGER ZOO_EVENTOS_ZOOTECNICOS_BIU1 FOR ZOO_EVENTOS_ZOOTECNICOS'
           +#13#10'ACTIVE BEFORE INSERT OR UPDATE POSITION 1001'
           +#13#10'AS'
           +#13#10'declare variable TIPO_INSEMINA type of SYS$INT;'
           +#13#10'declare variable TIPO_MONTA type of SYS$INT;'
           +#13#10'declare variable TIPO_IMPLANTE type of SYS$INT;'
           +#13#10'begin'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''TIPO_EVENTO_ZOO'', ''INSEMINA''  returning_values TIPO_INSEMINA ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''TIPO_EVENTO_ZOO'', ''MONTA''     returning_values TIPO_MONTA ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''TIPO_EVENTO_ZOO'', ''IMPLANTE''  returning_values TIPO_IMPLANTE ;'
           +#13#10''
           +#13#10'  NEW.KZOO_ANIMAL_MACHO_TOUROSEMEN = NULL ;'
           +#13#10'  NEW.KZOO_ANIMAL_MACHO_EMBRIAO = NULL ;'
           +#13#10''
           +#13#10'  if (NEW.TIPOEVENTO IN ( TIPO_INSEMINA, TIPO_MONTA )) then'
           +#13#10'    begin'
           +#13#10'     NEW.KZOO_ANIMAL_MACHO_TOUROSEMEN = NEW.KZOO_ANIMAL_MACHO ;'
           +#13#10'     NEW.KZOO_ANIMAL_MACHO_EMBRIAO = NULL ;'
           +#13#10'    end'
           +#13#10'  else if (NEW.TIPOEVENTO = TIPO_IMPLANTE ) then'
           +#13#10'    begin'
           +#13#10'     NEW.KZOO_ANIMAL_MACHO_EMBRIAO = NEW.KZOO_ANIMAL_MACHO ;'
           +#13#10'     NEW.KZOO_ANIMAL_MACHO_TOUROSEMEN = NULL ;'
           +#13#10'    end'
           +#13#10''
           +#13#10'  else'
           +#13#10'     NEW.KZOO_ANIMAL_MACHO = null ;'
           +#13#10''
           +#13#10'  if ( (Updating) and ( NEW.DATAABORTOPARTO is distinct from OLD.DATAABORTOPARTO ) and ( NEW.DATAABORTOPARTO IS NULL ) ) then'
           +#13#10'    begin'
           +#13#10'      -- revisar... usar campo excluido da linhagem...'
           +#13#10'      DELETE FROM ZOO_ANIMAL_LINHAGEM WHERE KZOO_EVENTO_ZOOTECNICO = OLD.KZOO_EVENTO_ZOOTECNICO ;'
           +#13#10'      DELETE FROM ZOO_LACTACOES WHERE KZOO_EVENTO_ZOOTECNICO = OLD.KZOO_EVENTO_ZOOTECNICO ;'
           +#13#10'    end'
           +#13#10''
           +#13#10''
           +#13#10'  if ( (NEW.DATATOQUE is not null and OLD.DATATOQUE is null) or ( NEW.DATATOQUE > OLD.DATATOQUE ) ) then'
           +#13#10'   begin'
           +#13#10'      insert into ZOO_HISTORICO_TOQUE (KZOO_HISTORICO_TOQUE, KZOO_EVENTO_ZOOTECNICO, DATATOQUE, PRENHEZ, KCAD_VETERINARIO, NOMEVETERINARIO) '
           +#13#10'             values (Guid20(), NEW.KZOO_EVENTO_ZOOTECNICO, NEW.DATATOQUE, NEW.PRENHEZ, NEW.KCAD_VETERINARIO, NEW.NOMEVETERINARIO);'
           +#13#10'   end'
           +#13#10'  else if ( NEW.DATATOQUE is not DISTINCT from OLD.DATATOQUE AND NEW.DATATOQUE is not null ) then'
           +#13#10'   begin'
           +#13#10'     update ZOO_HISTORICO_TOQUE'
           +#13#10'        set PRENHEZ = NEW.PRENHEZ, KCAD_VETERINARIO = NEW.KCAD_VETERINARIO, NOMEVETERINARIO = NEW.NOMEVETERINARIO'
           +#13#10'      where KZOO_EVENTO_ZOOTECNICO = NEW.KZOO_EVENTO_ZOOTECNICO and DATATOQUE = OLD.DATATOQUE;'
           +#13#10'   end'
           +#13#10''
           +#13#10'  NEW.QTDE_DIAGNOSTICO = (SELECT COUNT(*) FROM ZOO_HISTORICO_TOQUE WHERE KZOO_EVENTO_ZOOTECNICO = NEW.KZOO_EVENTO_ZOOTECNICO);'
           +#13#10''
           +#13#10'end';

    _INSERT_INTO_ZOO_HISTORICO_TOQUE =
                  'INSERT INTO ZOO_HISTORICO_TOQUE (KZOO_HISTORICO_TOQUE, KZOO_EVENTO_ZOOTECNICO, DATATOQUE, PRENHEZ, KCAD_VETERINARIO, NOMEVETERINARIO)'
           +#13#10'  SELECT Guid20(), E.KZOO_EVENTO_ZOOTECNICO, E.DATATOQUE, E.PRENHEZ, E.KCAD_VETERINARIO, E.NOMEVETERINARIO'
           +#13#10'   FROM  ZOO_EVENTOS_ZOOTECNICOS E'
           +#13#10'   WHERE E.PRENHEZ IS NOT NULL AND E.QTDE_DIAGNOSTICO < 1';

    _UPDATE_ZOO_EVENTOS_ZOOTECNICOS =
                  'UPDATE ZOO_EVENTOS_ZOOTECNICOS E'
           +#13#10'  SET E.GEMELAR = E.GEMELAR'
           +#13#10' WHERE E.PRENHEZ IS NOT NULL'
           +#13#10'   AND E.ABORTOPARTO IS NULL';


begin
  TryExecuteDirect( _CREATE_TABLE_ZOO_HISTORICO_TOQUE );
  TryExecuteDirect( _ALTER_TABLE_ZOO_EVENTOS_ZOOTECNICOS_ADD_QTDE_DIAGNOSTICO );
  TryExecuteDirect( _CREATE_OR_ALTER_TRIGGER_ZOO_EVENTOS_ZOOTECNICOS_BIU1 );
  TryExecuteDirect( _INSERT_INTO_ZOO_HISTORICO_TOQUE );
  TryExecuteDirect( _UPDATE_ZOO_EVENTOS_ZOOTECNICOS );
end;


procedure TDBZootecnicoUpdate._5_001_98;
const
   _ALTER_TABLE_ZOO_EVENTOS_ZOOTECNICOS_ADD_GEMELAR =
                  'ALTER TABLE ZOO_EVENTOS_ZOOTECNICOS'
           +#13#10'ADD GEMELAR SYS$BOOL_NULL'
           +#13#10', ALTER GEMELAR POSITION 32';

   _ALTER_TABLE_ZOO_EVENTOS_ZOOTECNICOS_SEXO_CRIA =
                  'ALTER TABLE ZOO_EVENTOS_ZOOTECNICOS'
           +#13#10'ADD SEXO_CRIA SYS$INT'
           +#13#10', ALTER SEXO_CRIA POSITION 33';
begin
   ExecuteDirect( _ALTER_TABLE_ZOO_EVENTOS_ZOOTECNICOS_ADD_GEMELAR ) ;
   ExecuteDirect( _ALTER_TABLE_ZOO_EVENTOS_ZOOTECNICOS_SEXO_CRIA ) ;
end;


procedure TDBZootecnicoUpdate._5_001_97;
const
   _ALTER_TABLE_ZOO_ANIMAIS_MACHO_ADD_RETIRO =
                  'ALTER TABLE ZOO_ANIMAIS_MACHO'
           +#13#10'ADD RETIRO ZOO$RETIRO'
           +#13#10', ALTER RETIRO POSITION 29'
           ;
begin
  TryExecuteDirect(_ALTER_TABLE_ZOO_ANIMAIS_MACHO_ADD_RETIRO);
end;


procedure TDBZootecnicoUpdate._5_001_96 ;
const
  _ALTER_PROCEDURE_ZOO_GET_STATUS_REPRODUTIVO =

          'CREATE OR ALTER PROCEDURE ZOO_GET_STATUS_REPRODUTIVO ('
   +#13#10'    KZOO_ANIMAL_FEMEA SYS$FKGUID20)'
   +#13#10'RETURNS ('
   +#13#10'    STATUS_REPRODUTIVO_ANIMAL TYPE OF SYS$INT)'
   +#13#10'AS'
   +#13#10'DECLARE KULTIMO_EVENTO_ZOOTECNICO SYS$FKGUID20 ;'
   +#13#10'DECLARE KULTIMA_MONTA SYS$FKGUID20 ;'
   +#13#10'DECLARE PRENHEZ SYS$BOOL_NULL ;'
   +#13#10'DECLARE ABORTOPARTO SYS$INT ;'
   +#13#10'DECLARE DATAABORTOPARTO SYS$DATE ;'
   +#13#10'DECLARE TIPO_ANIMAL SYS$INT ;'
   +#13#10'DECLARE STATUS SYS$INT ;'
   +#13#10'DECLARE INTENCAO_DESCARTE SYS$BOOL_F ;'
   +#13#10'DECLARE IDADE SYS$FLOAT ;'
   +#13#10'DECLARE NUMERO_LACTACAO SYS$INT_NN_0;'
   +#13#10'DECLARE STATUS_BEZ SYS$INT ;'
   +#13#10'DECLARE STATUS_NOV SYS$INT ;'
   +#13#10'DECLARE TABORTO SYS$INT ;'
   +#13#10'DECLARE TCOLETA SYS$INT ;'
   +#13#10'DECLARE TDOADOR SYS$INT ;'
   +#13#10'DECLARE TRECEPTOR SYS$INT ;'
   +#13#10'DECLARE EVENTO SYS$INT;'
   +#13#10'DECLARE EVENTO_CIO SYS$INT;'
   +#13#10'DECLARE EVENTO_IMPLANTE SYS$INT;'
   +#13#10'DECLARE ST_APTA SYS$INT ;'
   +#13#10'DECLARE ST_EMCRESCIMENTO SYS$INT ;'
   +#13#10'DECLARE ST_INSEMINADA SYS$INT ;'
   +#13#10'DECLARE ST_PRENHE SYS$INT ;'
   +#13#10'DECLARE ST_VAZIA SYS$INT ;'
   +#13#10'DECLARE ST_ABORTADA SYS$INT ;'
   +#13#10'DECLARE ST_PEV SYS$INT ;'
   +#13#10'DECLARE ST_NAOINSEMINAR SYS$INT ;'
   +#13#10'DECLARE ST_COLETADA SYS$INT ;'
   +#13#10'DECLARE IDADE_OBS_CIO SYS$INT  ;'
   +#13#10'DECLARE PESO_OBS_CIO SYS$INT  ;'
   +#13#10'DECLARE PEV_PRIMIPARA SYS$INT  ;'
   +#13#10'DECLARE PEV_MULTIPARA SYS$INT  ;'
   +#13#10'DECLARE DPP SYS$INT ;'
   +#13#10'DECLARE ULTIMO_PESO SYS$INT ;'
   +#13#10'BEGIN'
   +#13#10''
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''TIPO_EVENTO_ZOO'',       ''CIO''           RETURNING_VALUES EVENTO_CIO ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''TIPO_EVENTO_ZOO'',       ''IMPLANTE''      RETURNING_VALUES EVENTO_IMPLANTE ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''SIGLA_CATEGORIA_FEMEA'', ''BEZ''           RETURNING_VALUES STATUS_BEZ ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''SIGLA_CATEGORIA_FEMEA'', ''NOV''           RETURNING_VALUES STATUS_NOV ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''TIPO_PARTOABORTO'',      ''ABORTO''        RETURNING_VALUES TABORTO ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''TIPO_PARTOABORTO'',      ''COLETA''        RETURNING_VALUES TCOLETA ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''TIPO_DOADOR_RECEPTOR'',  ''DOADOR''        RETURNING_VALUES TDOADOR ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''TIPO_DOADOR_RECEPTOR'',  ''RECEPTOR''      RETURNING_VALUES TRECEPTOR ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_REPRODUTIVO'',    ''EMCRESCIMENTO'' RETURNING_VALUES ST_EMCRESCIMENTO ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_REPRODUTIVO'',    ''APTA''          RETURNING_VALUES ST_APTA ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_REPRODUTIVO'',    ''INSEMINADA''    RETURNING_VALUES ST_INSEMINADA ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_REPRODUTIVO'',    ''PRENHE''        RETURNING_VALUES ST_PRENHE ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_REPRODUTIVO'',    ''VAZIA''         RETURNING_VALUES ST_VAZIA ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_REPRODUTIVO'',    ''ABORTADA''      RETURNING_VALUES ST_ABORTADA ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_REPRODUTIVO'',    ''COLETADA''      RETURNING_VALUES ST_COLETADA ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_REPRODUTIVO'',    ''PEV''           RETURNING_VALUES ST_PEV ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_REPRODUTIVO'',    ''NAO_INSEMINAR'' RETURNING_VALUES ST_NAOINSEMINAR ;'
   +#13#10''
   +#13#10'  SELECT P.VALOR FROM ZOO_CFGPARAMNOVILHAS P WHERE P.SYS$VALUE = ''IDADE_OBS_CIO'' INTO :IDADE_OBS_CIO;'
   +#13#10'  SELECT P.VALOR FROM ZOO_CFGPARAMNOVILHAS P WHERE P.SYS$VALUE = ''PESO_OBS_CIO''  INTO :PESO_OBS_CIO;'
   +#13#10''
   +#13#10'  SELECT'
   +#13#10'    M.PRIMIPARA, M.MULTIPARA'
   +#13#10'  FROM ZOO_CFGPARAMMATRIZES M'
   +#13#10'  WHERE'
   +#13#10'     M.SYS$VALUE = ''DIAS_POS_PARTO_INSEMINAR'''
   +#13#10'  INTO :PEV_PRIMIPARA, :PEV_MULTIPARA;'
   +#13#10''
   +#13#10'  SELECT'
   +#13#10'    F.KULTIMO_EVENTO_ZOOTECNICO'
   +#13#10'  , F.KULTIMA_MONTA'
   +#13#10'  , E.TIPOEVENTO'
   +#13#10'  , E.PRENHEZ'
   +#13#10'  , E.ABORTOPARTO'
   +#13#10'  , E.DATAABORTOPARTO'
   +#13#10'  , F.DOADOR_RECEPTOR'
   +#13#10'  , A.STATUS'
   +#13#10'  , F.INTENCAO_DESCARTE'
   +#13#10'  , F.NUMERO_LACTACAO'
   +#13#10'  , CAST( CAST ( (CURRENT_TIMESTAMP - NASCIMENTO) / 30.4 AS NUMERIC ( 5, 1 ) ) AS SYS$FLOAT )'
   +#13#10'  , (SELECT C.PESO'
   +#13#10'     FROM ZOO_ANIMAL_CRESCIMENTO C'
   +#13#10'     WHERE C.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA'
   +#13#10'       AND C.PESO > 0'
   +#13#10'     ORDER BY'
   +#13#10'       C.DATA DESC'
   +#13#10'     ROWS 1'
   +#13#10'    ) PESO'
   +#13#10'  FROM ZOO_ANIMAIS_FEMEA F'
   +#13#10'  INNER JOIN ZOO_ANIMAIS A ON A.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA'
   +#13#10'  LEFT  JOIN ZOO_EVENTOS_ZOOTECNICOS E ON E.KZOO_EVENTO_ZOOTECNICO = F.KULTIMO_EVENTO_ZOOTECNICO'
   +#13#10'  WHERE'
   +#13#10'       F.KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL_FEMEA'
   +#13#10'  INTO'
   +#13#10'    KULTIMO_EVENTO_ZOOTECNICO'
   +#13#10'  , KULTIMA_MONTA'
   +#13#10'  , EVENTO'
   +#13#10'  , PRENHEZ'
   +#13#10'  , ABORTOPARTO'
   +#13#10'  , DATAABORTOPARTO'
   +#13#10'  , TIPO_ANIMAL'
   +#13#10'  , STATUS'
   +#13#10'  , INTENCAO_DESCARTE'
   +#13#10'  , NUMERO_LACTACAO'
   +#13#10'  , IDADE'
   +#13#10'  , ULTIMO_PESO ;'
   +#13#10''
   +#13#10'  IF ( INTENCAO_DESCARTE = ''T'' ) THEN'
   +#13#10'     BEGIN'
   +#13#10'       STATUS_REPRODUTIVO_ANIMAL = ST_NAOINSEMINAR ;'
   +#13#10'       SUSPEND ;'
   +#13#10'       EXIT ;'
   +#13#10'     END'
   +#13#10''
   +#13#10'  IF (    ( STATUS = STATUS_BEZ )'
   +#13#10'      OR  (     STATUS = STATUS_NOV'
   +#13#10'            AND (     COALESCE ( ULTIMO_PESO, -1 ) < PESO_OBS_CIO'
   +#13#10'                  AND IDADE < IDADE_OBS_CIO'
   +#13#10'                )'
   +#13#10'            AND KULTIMA_MONTA IS NULL'
   +#13#10'           )'
   +#13#10'     ) THEN'
   +#13#10'     BEGIN'
   +#13#10'       STATUS_REPRODUTIVO_ANIMAL = ST_EMCRESCIMENTO ;'
   +#13#10'       SUSPEND ;'
   +#13#10'       EXIT ;'
   +#13#10'     END'
   +#13#10''
   +#13#10'  STATUS_REPRODUTIVO_ANIMAL = CASE'
   +#13#10'    WHEN ABORTOPARTO = TCOLETA'
   +#13#10'    THEN ST_COLETADA'
   +#13#10''
   +#13#10'    WHEN ABORTOPARTO != TABORTO'
   +#13#10'    THEN ST_PEV'
   +#13#10''
   +#13#10'    WHEN ABORTOPARTO = TABORTO'
   +#13#10'    THEN ST_ABORTADA'
   +#13#10''
   +#13#10'    WHEN PRENHEZ = ''F'''
   +#13#10'    THEN ST_VAZIA'
   +#13#10''
   +#13#10'    WHEN PRENHEZ = ''T'''
   +#13#10'    THEN ST_PRENHE'
   +#13#10''
   +#13#10'    WHEN KULTIMO_EVENTO_ZOOTECNICO = KULTIMA_MONTA'
   +#13#10'    THEN ST_INSEMINADA'
   +#13#10''
   +#13#10'    ELSE ST_APTA'
   +#13#10'  END ;'
   +#13#10''
   +#13#10'  DPP       = TRUNC ( CURRENT_TIMESTAMP - DATAABORTOPARTO );'
   +#13#10'  IF ( NUMERO_LACTACAO IS NULL ) THEN'
   +#13#10'    NUMERO_LACTACAO = 1 ;'
   +#13#10''
   +#13#10'  IF (  TIPO_ANIMAL IS DISTINCT FROM TDOADOR'
   +#13#10'    AND STATUS_REPRODUTIVO_ANIMAL IN ( ST_COLETADA, ST_PEV )'
   +#13#10'    AND (   ( NUMERO_LACTACAO = 1 AND DPP >= PEV_PRIMIPARA )'
   +#13#10'         OR ( NUMERO_LACTACAO > 1 AND DPP >= PEV_MULTIPARA )'
   +#13#10'        )'
   +#13#10'  )'
   +#13#10'  THEN'
   +#13#10'    STATUS_REPRODUTIVO_ANIMAL = ST_APTA ;'
   +#13#10''
   +#13#10'  IF ( STATUS_REPRODUTIVO_ANIMAL != ST_PEV ) THEN'
   +#13#10'    IF (      TIPO_ANIMAL = TRECEPTOR'
   +#13#10'         AND (  EVENTO IS NULL'
   +#13#10'             OR EVENTO = EVENTO_CIO'
   +#13#10'             OR EVENTO = EVENTO_IMPLANTE'
   +#13#10'             )'
   +#13#10'       ) THEN'
   +#13#10'      STATUS_REPRODUTIVO_ANIMAL = STATUS_REPRODUTIVO_ANIMAL - 20 ;'
   +#13#10'    ELSE IF (    TIPO_ANIMAL = TDOADOR'
   +#13#10'             AND STATUS_REPRODUTIVO_ANIMAL'
   +#13#10'                 NOT IN ('
   +#13#10'                   ST_ABORTADA'
   +#13#10'                 , ST_VAZIA'
   +#13#10'                 , ST_PRENHE'
   +#13#10'                 )'
   +#13#10'    ) THEN'
   +#13#10'      STATUS_REPRODUTIVO_ANIMAL = STATUS_REPRODUTIVO_ANIMAL - 10  ;'
   +#13#10''
   +#13#10'  SUSPEND ;'
   +#13#10'END' ;

begin
  ExecuteDirect ( _ALTER_PROCEDURE_ZOO_GET_STATUS_REPRODUTIVO ) ;
end;


procedure TDBZootecnicoUpdate._5_001_95;
const
  _ALTER_TABLE_SYSVERSION_APPVERSION =
     'ALTER TABLE SYS$VERSION ADD SYS$APPVERSION SYS$INT';
begin
  TryExecuteDirect( _ALTER_TABLE_SYSVERSION_APPVERSION );
end;


procedure TDBZootecnicoUpdate._5_001_94;
const

  _CREATE_TABLE_SYS_TYPES =
         'CREATE TABLE SYS$TYPES ('
  +#13#10'    ,KSYS$TYPE        SYS$PKGUID20'
  +#13#10'    ,SYS$TYPE         SYS$ST_TYPE'
  +#13#10'    ,SYS$VALUE        SYS$ST_VALUE_NULL'
  +#13#10'    ,SYS$DESCRIPTION  SYS$ST_DESCRIPTION'
  +#13#10'    ,SYS$ORDER        SYS$ST_ORDER'
  +#13#10'    ,SYS$TYPEID       SYS$ST_TYPEID'
  +#13#10'    ,CONSTRAINT PKSYS$TYPES PRIMARY KEY (KSYS$TYPE)'
  +#13#10'    ,CONSTRAINT UQSYS$TYPES UNIQUE (SYS$TYPE, SYS$VALUE)'
  +#13#10')' ;

  _CREATE_OR_ALTER_PROCEDURE_SYS_TYPES_GETVALUE =
         'CREATE OR ALTER PROCEDURE SYS$TYPES_GETVALUE ('
  +#13#10'    SYS$TYPE TYPE OF SYS$ST_TYPE,'
  +#13#10'    SYS$TYPEID TYPE OF SYS$ST_TYPEID)'
  +#13#10'RETURNS ('
  +#13#10'    SYS$VALUE TYPE OF SYS$ST_VALUE_NULL)'
  +#13#10'AS'
  +#13#10'BEGIN'
  +#13#10''
  +#13#10'  SELECT SYS$VALUE'
  +#13#10'  FROM SYS$TYPES'
  +#13#10'  WHERE SYS$TYPE = :SYS$TYPE AND SYS$TYPEID = :SYS$TYPEID'
  +#13#10'  INTO :SYS$VALUE ;'
  +#13#10'  SUSPEND;'
  +#13#10''
  +#13#10'END' ;

  _CREATE_OR_ALTER_PROCEDURE_SYS_TYPES_GETDESCRIPTION =
         'CREATE OR ALTER PROCEDURE SYS$TYPES_GETDESCRIPTION ('
  +#13#10'    SYS$TYPE TYPE OF SYS$ST_TYPE,'
  +#13#10'    SYS$VALUE TYPE OF SYS$ST_VALUE_NULL)'
  +#13#10'RETURNS ('
  +#13#10'    SYS$DESCRIPTION TYPE OF SYS$ST_DESCRIPTION)'
  +#13#10'AS'
  +#13#10'BEGIN'
  +#13#10'  SELECT SYS$DESCRIPTION'
  +#13#10'  FROM SYS$TYPES'
  +#13#10'  WHERE SYS$TYPE = :SYS$TYPE AND SYS$VALUE = :SYS$VALUE'
  +#13#10'  INTO :SYS$DESCRIPTION ;'
  +#13#10'  SUSPEND;'
  +#13#10'END' ;


  _CREATE_TABLE_SYS_DOMAIN_TYPES =
         'CREATE TABLE SYS$DOMAIN_TYPES ('
  +#13#10'    KSYS$DOMAIN      SYS$PKGUID20'
  +#13#10'  , SYS$TYPE         SYS$ST_TYPE'
  +#13#10'  , SYS$VALUE        SYS$ST_VALUE_NULL'
  +#13#10'  , SYS$DESCRIPTION  SYS$ST_DESCRIPTION'
  +#13#10'  , SYS$ORDER        SYS$ST_ORDER'
  +#13#10'  , SYS$TYPEID       SYS$ST_TYPEID'
  +#13#10'  , CONSTRAINT UQSYS$DOMAIN_TYPES UNIQUE (KSYS$DOMAIN, SYS$TYPE, SYS$VALUE)'
  +#13#10')' ;

  _CREATE_OR_ALTER_PROCEDURE_SYS_DOMAIN_TYPES_GETVALUE =
         'CREATE OR ALTER PROCEDURE SYS$DOMAIN_TYPES_GETVALUE ('
  +#13#10'    KSYS$DOMAIN SYS$PKGUID20,'
  +#13#10'    SYS$TYPE TYPE OF SYS$ST_TYPE,'
  +#13#10'    SYS$TYPEID TYPE OF SYS$ST_TYPEID)'
  +#13#10'RETURNS ('
  +#13#10'    SYS$VALUE TYPE OF SYS$ST_VALUE_NULL)'
  +#13#10'AS'
  +#13#10'DECLARE EXISTS_ SYS$BOOL_NULL ;'
  +#13#10'BEGIN'
  +#13#10''
  +#13#10'  SELECT SYS$VALUE, ''T'''
  +#13#10'  FROM SYS$DOMAIN_TYPES'
  +#13#10'  WHERE KSYS$DOMAIN = :KSYS$DOMAIN AND SYS$TYPE = :SYS$TYPE AND SYS$TYPEID = :SYS$TYPEID'
  +#13#10'  INTO :SYS$VALUE, EXISTS_ ;'
  +#13#10''
  +#13#10'  IF ( EXISTS_ IS DISTINCT FROM ''T'' ) THEN'
  +#13#10'    EXECUTE PROCEDURE SYS$TYPES_GETVALUE ( SYS$TYPE, SYS$TYPEID ) RETURNING_VALUES SYS$VALUE ;'
  +#13#10''
  +#13#10'  SUSPEND;'
  +#13#10''
  +#13#10'END' ;

  _CREATE_OR_ALTER_PROCEDURE_SYS_DOMAIN_TYPES_GETDESCRIPTION =
         'CREATE OR ALTER PROCEDURE SYS$DOMAIN_TYPES_GETDESCRIPTION ('
  +#13#10'    SYS$DOMAIN TYPE OF SYS$ST_TYPE,'
  +#13#10'    SYS$TYPE TYPE OF SYS$ST_TYPE,'
  +#13#10'    SYS$VALUE TYPE OF SYS$ST_VALUE_NULL)'
  +#13#10'RETURNS ('
  +#13#10'    SYS$DESCRIPTION TYPE OF SYS$ST_DESCRIPTION)'
  +#13#10'AS'
  +#13#10'DECLARE VARIABLE EXISTS_  SYS$BOOL_NULL ;'
  +#13#10'BEGIN'
  +#13#10'  SELECT SYS$DESCRIPTION, ''T'''
  +#13#10'  FROM SYS$DOMAIN_TYPES'
  +#13#10'  WHERE KSYS$DOMAIN = :SYS$DOMAIN AND SYS$TYPE = :SYS$TYPE AND SYS$VALUE = :SYS$VALUE'
  +#13#10'  INTO SYS$DESCRIPTION, EXISTS_ ;'
  +#13#10''
  +#13#10'  IF ( EXISTS_ IS DISTINCT FROM ''T'' ) THEN'
  +#13#10'    EXECUTE PROCEDURE SYS$TYPES_GETDESCRIPTION( SYS$TYPE, SYS$VALUE ) RETURNING_VALUES SYS$DESCRIPTION ;'
  +#13#10''
  +#13#10'  SUSPEND;'
  +#13#10'END' ;

  _CREATE_OR_ALTER_PROCEDURE_SYS_REBUILD_STATISTICS =
          'CREATE OR ALTER PROCEDURE SYS$REBUILD_STATISTICS'
  +#13#10'AS'
  +#13#10'DECLARE VARIABLE S VARCHAR(200);'
  +#13#10'BEGIN'
  +#13#10'  FOR SELECT RDB$INDEX_NAME FROM RDB$INDICES INTO :S DO'
  +#13#10'  BEGIN'
  +#13#10'   S = ''SET STATISTICS INDEX '' || S || '';'' ;'
  +#13#10'   EXECUTE STATEMENT :s;'
  +#13#10'  END'
  +#13#10'  SUSPEND;'
  +#13#10'END' ;

   _CREATE_OR_ALTER_PROCEDURE_SYS_REPLICATE =
         'CREATE OR ALTER PROCEDURE SYS$REPLICATE ('
  +#13#10'    X_ INTEGER)'
  +#13#10'RETURNS ('
  +#13#10'    COUNT_ INTEGER)'
  +#13#10'AS'
  +#13#10'BEGIN'
  +#13#10'  COUNT_ = 0 ;'
  +#13#10'  WHILE ( COUNT_ < X_ ) DO'
  +#13#10'     BEGIN'
  +#13#10'        COUNT_ = COUNT_ + 1 ;'
  +#13#10'        SUSPEND ;'
  +#13#10'     END'
  +#13#10'END' ;

begin

  TryExecuteDirect( _CREATE_TABLE_SYS_TYPES ) ;
  ExecuteDirect( _CREATE_OR_ALTER_PROCEDURE_SYS_TYPES_GETVALUE ) ;
  ExecuteDirect( _CREATE_OR_ALTER_PROCEDURE_SYS_TYPES_GETDESCRIPTION ) ;

  TryExecuteDirect( _CREATE_TABLE_SYS_DOMAIN_TYPES ) ;
  ExecuteDirect( _CREATE_OR_ALTER_PROCEDURE_SYS_DOMAIN_TYPES_GETVALUE ) ;
  ExecuteDirect( _CREATE_OR_ALTER_PROCEDURE_SYS_DOMAIN_TYPES_GETDESCRIPTION ) ;

  ExecuteDirect( _CREATE_OR_ALTER_PROCEDURE_SYS_REBUILD_STATISTICS ) ;
  ExecuteDirect( _CREATE_OR_ALTER_PROCEDURE_SYS_REPLICATE ) ;
end;



procedure TDBZootecnicoUpdate._5_001_92;
const
   _ZOO_ANIMAIS_FEMEA_ADD_KCRESCIMENTO_NASCIMENTO =
           'ALTER TABLE ZOO_ANIMAIS_FEMEA'
    +#13#10'ADD KCRESCIMENTO_NASCIMENTO SYS$FKGUID20'
    +#13#10'  , ALTER KCRESCIMENTO_NASCIMENTO POSITION 36';

   _UPDATE_ZOO_ANIMAIS_FEMEA_KCRESCIMENTO_NASCIMENTO =
           'UPDATE ZOO_ANIMAIS_FEMEA F '
    +#13#10'   SET F.KCRESCIMENTO_NASCIMENTO = ( SELECT C.KZOO_ANIMAL_CRESCIMENTO '
                                         +#13#10'  FROM ZOO_ANIMAL_CRESCIMENTO C '
                                         +#13#10' WHERE C.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA AND C.DATA = F.NASCIMENTO)';

   _UPDATE_ZOO_ANIMAIS_FEMEA_KCRESCIMENTO_NASCIMENTO_NULL =
           'UPDATE ZOO_ANIMAIS_FEMEA F SET F.KCRESCIMENTO_NASCIMENTO = GUID20() WHERE F.KCRESCIMENTO_NASCIMENTO IS NULL';

begin
  TryExecuteDirect(_ZOO_ANIMAIS_FEMEA_ADD_KCRESCIMENTO_NASCIMENTO);
  TryExecuteDirect(_UPDATE_ZOO_ANIMAIS_FEMEA_KCRESCIMENTO_NASCIMENTO);
  TryExecuteDirect(_UPDATE_ZOO_ANIMAIS_FEMEA_KCRESCIMENTO_NASCIMENTO_NULL);
end;



procedure TDBZootecnicoUpdate._5_001_91;
const
   _CREATE_OR_REPLACE_ZOO_GET_STATUS_REPRODUTIVO =
          'CREATE OR ALTER PROCEDURE ZOO_GET_STATUS_REPRODUTIVO ('
   +#13#10'    KZOO_ANIMAL_FEMEA SYS$FKGUID20)'
   +#13#10'returns ('
   +#13#10'    STATUS_REPRODUTIVO_ANIMAL type of SYS$INT)'
   +#13#10'AS'
   +#13#10'declare KULTIMO_EVENTO_ZOOTECNICO SYS$FKGUID20 ;'
   +#13#10'declare KULTIMO_CIO SYS$FKGUID20 ;'
   +#13#10'declare NUMERO_MONTA SYS$INT_NN_0;'
   +#13#10'declare TIPO_EVENTO SYS$INT ;'
   +#13#10'declare PRENHEZ SYS$BOOL_NULL ;'
   +#13#10'declare ABORTOPARTO SYS$INT ;'
   +#13#10'declare EMBRIOESCOLETADOS SYS$INT ;'
   +#13#10'declare DOADORRECEPTOR SYS$INT ;'
   +#13#10'declare STATUS SYS$INT ;'
   +#13#10'declare INTENCAO_DESCARTE SYS$BOOL_F ;'
   +#13#10'declare NASCIMENTO SYS$DATE_NN ;'
   +#13#10'declare ULTIMA_LACTACAO SYS$DATE ;'
   +#13#10'declare NUMERO_LACTACAO SYS$INT_NN_0;'
   +#13#10'declare ULTIMO_PARTO SYS$DATE ;'
   +#13#10'declare ULTIMO_PESO SYS$INT ;'
   +#13#10'declare STATUS_BEZ SYS$INT ;'
   +#13#10'declare STATUS_NOV SYS$INT ;'
   +#13#10'declare STATUS_VS SYS$INT ;'
   +#13#10'declare STATUS_VL SYS$INT ;'
   +#13#10'declare TIPO_EVENTO_ZOO_CIO SYS$INT ;'
   +#13#10'declare TIPO_EVENTO_ZOO_EMBRIAO SYS$INT ;'
   +#13#10'declare TIPO_PARTOABORTO_ABORTO SYS$INT ;'
   +#13#10'declare TIPO_PARTOABORTO_ABORTOLACTACAO SYS$INT ;'
   +#13#10'declare TIPO_PARTOABORTO_PARTO SYS$INT ;'
   +#13#10'declare TIPO_PARTOABORTO_COLETAEMBRIAO SYS$INT ;'
   +#13#10'declare TIPO_DOADOR_RECEPTOR_ND SYS$INT ;'
   +#13#10'declare TIPO_DOADOR_RECEPTOR_DOADOR SYS$INT ;'
   +#13#10'declare TIPO_DOADOR_RECEPTOR_RECEPTOR SYS$INT ;'
   +#13#10'declare STATUS_REPRODUTIVO_APTA SYS$INT ;'
   +#13#10'declare STATUS_REPRODUTIVO_EMCRESCIMENTO SYS$INT ;'
   +#13#10'declare STATUS_REPRODUTIVO_INSEMINADA SYS$INT ;'
   +#13#10'declare STATUS_REPRODUTIVO_PRENHE SYS$INT ;'
   +#13#10'declare STATUS_REPRODUTIVO_VAZIA SYS$INT ;'
   +#13#10'declare STATUS_REPRODUTIVO_ABORTADA SYS$INT ;'
   +#13#10'declare STATUS_REPRODUTIVO_PEV SYS$INT ;'
   +#13#10'declare STATUS_REPRODUTIVO_ABERTA SYS$INT ;'
   +#13#10'declare STATUS_REPRODUTIVO_NAOINSEMINAR SYS$INT ;'
   +#13#10'declare STATUS_REPRODUTIVO_DOADORAAPTA SYS$INT ;'
   +#13#10'declare STATUS_REPRODUTIVO_DOADORAINSEMINADA SYS$INT ;'
   +#13#10'declare STATUS_REPRODUTIVO_DOADORACOLETADA SYS$INT ;'
   +#13#10'declare STATUS_REPRODUTIVO_RECEPTORAAPTA SYS$INT ;'
   +#13#10'declare STATUS_REPRODUTIVO_RECEPTORATRANSFERIDA SYS$INT ;'
   +#13#10'declare STATUS_REPRODUTIVO_RECEPTORAPRENHE SYS$INT ;'
   +#13#10'declare STATUS_REPRODUTIVO_RECEPTORAVAZIA SYS$INT ;'
   +#13#10'declare STATUS_REPRODUTIVO_RECEPTORAABORTADA SYS$INT ;'
   +#13#10'declare STATUS_REPRODUTIVO_COLETADA SYS$INT ;'
   +#13#10'declare IDADEOBSCIO SYS$INT  ;'
   +#13#10'declare PESOOBSCIO SYS$INT  ;'
   +#13#10'declare DPP_INSEMINAR_PRIMIPARA SYS$INT  ;'
   +#13#10'declare DPP_INSEMINAR_MULTIPARA SYS$INT  ;'
   +#13#10'declare IDADEMES SYS$FLOAT ;'
   +#13#10'declare DPP SYS$INT ;'
   +#13#10'declare NUMERO_COBERTURA SYS$INT_NN_0;'
   +#13#10'BEGIN'
   +#13#10''
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_CATEGORIA_FEMEA'', ''BEZ'' ) RETURNING_VALUES STATUS_BEZ ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_CATEGORIA_FEMEA'', ''NOV'' ) RETURNING_VALUES STATUS_NOV ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_CATEGORIA_FEMEA'', ''VS''  ) RETURNING_VALUES STATUS_VS ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_CATEGORIA_FEMEA'', ''VL''  ) RETURNING_VALUES STATUS_VL ;'
   +#13#10''
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_EVENTO_ZOO'',  ''CIO''               ) RETURNING_VALUES TIPO_EVENTO_ZOO_CIO ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_EVENTO_ZOO'',  ''IMPLANTE''          ) RETURNING_VALUES TIPO_EVENTO_ZOO_EMBRIAO ;'
   +#13#10''
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_PARTOABORTO'', ''ABORTO''            ) RETURNING_VALUES TIPO_PARTOABORTO_ABORTO ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_PARTOABORTO'', ''ABORTO_LACTACAO''   ) RETURNING_VALUES TIPO_PARTOABORTO_ABORTOLACTACAO ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_PARTOABORTO'', ''PARTO''             ) RETURNING_VALUES TIPO_PARTOABORTO_PARTO ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_PARTOABORTO'', ''COLETA''            ) RETURNING_VALUES TIPO_PARTOABORTO_COLETAEMBRIAO ;'
   +#13#10''
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_DOADOR_RECEPTOR'', ''ND''            ) RETURNING_VALUES TIPO_DOADOR_RECEPTOR_ND ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_DOADOR_RECEPTOR'', ''DOADOR''        ) RETURNING_VALUES TIPO_DOADOR_RECEPTOR_DOADOR ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_DOADOR_RECEPTOR'', ''RECEPTOR''      ) RETURNING_VALUES TIPO_DOADOR_RECEPTOR_RECEPTOR ;'
   +#13#10''
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''APTA''                 ) RETURNING_VALUES STATUS_REPRODUTIVO_APTA ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''EMCRESCIMENTO''        ) RETURNING_VALUES STATUS_REPRODUTIVO_EMCRESCIMENTO ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''INSEMINADA''           ) RETURNING_VALUES STATUS_REPRODUTIVO_INSEMINADA ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''PRENHE''               ) RETURNING_VALUES STATUS_REPRODUTIVO_PRENHE ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''VAZIA''                ) RETURNING_VALUES STATUS_REPRODUTIVO_VAZIA ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''ABORTADA''             ) RETURNING_VALUES STATUS_REPRODUTIVO_ABORTADA ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''PEV''                  ) RETURNING_VALUES STATUS_REPRODUTIVO_PEV ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''ABERTA''               ) RETURNING_VALUES STATUS_REPRODUTIVO_ABERTA ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''NAOINSEMINAR''         ) RETURNING_VALUES STATUS_REPRODUTIVO_NAOINSEMINAR ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''DOADORAAPTA''          ) RETURNING_VALUES STATUS_REPRODUTIVO_DOADORAAPTA ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''DOADORAINSEMINADA''    ) RETURNING_VALUES STATUS_REPRODUTIVO_DOADORAINSEMINADA ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''DOADORACOLETADA''      ) RETURNING_VALUES STATUS_REPRODUTIVO_DOADORACOLETADA ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''RECEPTORAAPTA''        ) RETURNING_VALUES STATUS_REPRODUTIVO_RECEPTORAAPTA ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''RECEPTORATRANSFERIDA'' ) RETURNING_VALUES STATUS_REPRODUTIVO_RECEPTORATRANSFERIDA ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''RECEPTORAPRENHE''      ) RETURNING_VALUES STATUS_REPRODUTIVO_RECEPTORAPRENHE ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''RECEPTORAVAZIA''       ) RETURNING_VALUES STATUS_REPRODUTIVO_RECEPTORAVAZIA ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''RECEPTORAABORTADA''    ) RETURNING_VALUES STATUS_REPRODUTIVO_RECEPTORAABORTADA ;'
   +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''COLETADA''             ) RETURNING_VALUES STATUS_REPRODUTIVO_COLETADA ;'
   +#13#10''
   +#13#10'  SELECT P.VALOR FROM ZOO_CFGPARAMNOVILHAS P WHERE P.SYS$VALUE = ''IDADE_OBS_CIO'' INTO :IDADEOBSCIO;'
   +#13#10'  SELECT P.VALOR FROM ZOO_CFGPARAMNOVILHAS P WHERE P.SYS$VALUE = ''PESO_OBS_CIO''  INTO :PESOOBSCIO;'
   +#13#10''
   +#13#10'  SELECT M.PRIMIPARA, M.MULTIPARA FROM ZOO_CFGPARAMMATRIZES M WHERE M.SYS$VALUE = ''DIAS_POS_PARTO_INSEMINAR'' '
   +#13#10'    INTO :DPP_INSEMINAR_PRIMIPARA, :DPP_INSEMINAR_MULTIPARA;'
   +#13#10''
   +#13#10'  SELECT F.KULTIMO_EVENTO_ZOOTECNICO,'
   +#13#10'         F.KULTIMO_CIO,'
   +#13#10'         F.NUMERO_MONTA,'
   +#13#10'         E.TIPOEVENTO,'
   +#13#10'         E.PRENHEZ,'
   +#13#10'         E.ABORTOPARTO,'
   +#13#10'         E.EMBRIOESCOLETADOS,'
   +#13#10'         F.DOADOR_RECEPTOR,'
   +#13#10'         A.STATUS,'
   +#13#10'         F.INTENCAO_DESCARTE,'
   +#13#10'         F.NASCIMENTO,'
   +#13#10'         F.ULTIMO_PARTO,'
   +#13#10'         F.ULTIMA_LACTACAO,'
   +#13#10'         F.NUMERO_LACTACAO,'
   +#13#10'         C.PESO'
   +#13#10'    FROM ZOO_ANIMAIS_FEMEA F'
   +#13#10'    INNER JOIN ZOO_ANIMAIS A ON A.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA'
   +#13#10'    LEFT  JOIN ZOO_EVENTOS_ZOOTECNICOS E ON E.KZOO_EVENTO_ZOOTECNICO = F.KULTIMO_EVENTO_ZOOTECNICO'
   +#13#10'    LEFT  JOIN ZOO_ANIMAL_CRESCIMENTO C ON C.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA'
   +#13#10'                                       AND C.DATA = (SELECT MAX(DATA)'
   +#13#10'                                                       FROM ZOO_ANIMAL_CRESCIMENTO'
   +#13#10'                                                      WHERE KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA )'
   +#13#10'   WHERE F.KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL_FEMEA'
   +#13#10'   INTO :KULTIMO_EVENTO_ZOOTECNICO,'
   +#13#10'        :KULTIMO_CIO,'
   +#13#10'        :NUMERO_MONTA,'
   +#13#10'        :TIPO_EVENTO,'
   +#13#10'        :PRENHEZ,'
   +#13#10'        :ABORTOPARTO,'
   +#13#10'        :EMBRIOESCOLETADOS,'
   +#13#10'        :DOADORRECEPTOR,'
   +#13#10'        :STATUS,'
   +#13#10'        :INTENCAO_DESCARTE,'
   +#13#10'        :NASCIMENTO,'
   +#13#10'        :ULTIMO_PARTO,'
   +#13#10'        :ULTIMA_LACTACAO,'
   +#13#10'        :NUMERO_LACTACAO,'
   +#13#10'        :ULTIMO_PESO;'
   +#13#10''
   +#13#10'  IDADEMES = CAST( CAST ( (CURRENT_TIMESTAMP - :NASCIMENTO) / 30.4 AS NUMERIC ( 5, 1 ) ) AS SYS$FLOAT );'
   +#13#10'  DPP      = TRUNC ( CURRENT_TIMESTAMP - :ULTIMA_LACTACAO );'
   +#13#10''
   +#13#10'  SELECT COUNT(1) FROM ZOO_EVENTOS_ZOOTECNICOS'
   +#13#10'   WHERE (DATAEVENTO > :ULTIMA_LACTACAO or (:ULTIMA_LACTACAO is null) )'
   +#13#10'     AND TIPOEVENTO > :TIPO_EVENTO_ZOO_CIO'
   +#13#10'     AND ABORTOPARTO IS NULL'
   +#13#10'     AND KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL_FEMEA'
   +#13#10'    INTO :NUMERO_COBERTURA;'
   +#13#10''
   +#13#10'  STATUS_REPRODUTIVO_ANIMAL ='
   +#13#10'  CASE'
   +#13#10'    WHEN ( :INTENCAO_DESCARTE = ''T'' ) THEN'
   +#13#10'          :STATUS_REPRODUTIVO_NAOINSEMINAR'
   +#13#10''
   +#13#10'    WHEN ( :STATUS = :STATUS_BEZ ) THEN'
   +#13#10'          :STATUS_REPRODUTIVO_EMCRESCIMENTO'
   +#13#10''
   +#13#10'    WHEN ( :STATUS = :STATUS_NOV AND :NUMERO_COBERTURA = 0 AND'
   +#13#10'           (:ULTIMO_PESO IS NULL or :ULTIMO_PESO < :PESOOBSCIO) AND :IDADEMES < :IDADEOBSCIO ) THEN'
   +#13#10'          :STATUS_REPRODUTIVO_EMCRESCIMENTO'
   +#13#10''
   +#13#10'    WHEN (:TIPO_EVENTO = :TIPO_EVENTO_ZOO_CIO AND'
   +#13#10'          :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_DOADOR) THEN'
   +#13#10'         :STATUS_REPRODUTIVO_DOADORAAPTA'
   +#13#10''
   +#13#10'    WHEN (:TIPO_EVENTO = :TIPO_EVENTO_ZOO_CIO AND'
   +#13#10'          :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR) THEN'
   +#13#10'         :STATUS_REPRODUTIVO_RECEPTORAAPTA'
   +#13#10''
   +#13#10'    WHEN (:TIPO_EVENTO = :TIPO_EVENTO_ZOO_CIO) THEN'
   +#13#10'         :STATUS_REPRODUTIVO_APTA'
   +#13#10''
   +#13#10'    WHEN ( :NUMERO_COBERTURA > 0 AND (:PRENHEZ IS NULL OR :PRENHEZ = '''') AND'
   +#13#10'           :TIPO_EVENTO <> :TIPO_EVENTO_ZOO_CIO AND'
   +#13#10'           :ABORTOPARTO IS NULL AND'
   +#13#10'           (:KULTIMO_CIO is distinct from :KULTIMO_EVENTO_ZOOTECNICO) AND'
   +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_DOADOR ) THEN'
   +#13#10'         :STATUS_REPRODUTIVO_DOADORAINSEMINADA'
   +#13#10''
   +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND (:PRENHEZ IS NULL OR :PRENHEZ = '''') AND */'
   +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_DOADOR AND'
   +#13#10'           (:KULTIMO_CIO is distinct from :KULTIMO_EVENTO_ZOOTECNICO) AND'
   +#13#10'           :EMBRIOESCOLETADOS IS NOT NULL ) THEN'
   +#13#10'         :STATUS_REPRODUTIVO_DOADORACOLETADA'
   +#13#10''
   +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND*/ (:ABORTOPARTO IS NULL) AND'
   +#13#10'           :TIPO_EVENTO = :TIPO_EVENTO_ZOO_EMBRIAO AND'
   +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR ) THEN'
   +#13#10'         :STATUS_REPRODUTIVO_RECEPTORATRANSFERIDA'
   +#13#10''
   +#13#10'    WHEN ( (:ABORTOPARTO = :TIPO_PARTOABORTO_COLETAEMBRIAO) AND'
   +#13#10'           :NUMERO_COBERTURA = 0 AND'
   +#13#10'           :EMBRIOESCOLETADOS IS NOT NULL ) THEN'
   +#13#10'         :STATUS_REPRODUTIVO_COLETADA'
   +#13#10''
   +#13#10'    WHEN ( :NUMERO_COBERTURA > 0 AND (:PRENHEZ IS NULL OR :PRENHEZ = '''') AND'
   +#13#10'          (:KULTIMO_CIO is distinct from :KULTIMO_EVENTO_ZOOTECNICO/*:KULTIMO_CIO <> :KULTIMO_EVENTO_ZOOTECNICO*/)) THEN'
   +#13#10'         :STATUS_REPRODUTIVO_INSEMINADA'
   +#13#10''
   +#13#10'    WHEN ( :STATUS = :STATUS_NOV AND :NUMERO_COBERTURA = 0 AND'
   +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_DOADOR AND'
   +#13#10'           (:ULTIMO_PESO >= :PESOOBSCIO OR :IDADEMES >= :IDADEOBSCIO) ) THEN'
   +#13#10'          :STATUS_REPRODUTIVO_DOADORAAPTA'
   +#13#10''
   +#13#10'    WHEN ( :STATUS = :STATUS_NOV AND :NUMERO_COBERTURA = 0 AND'
   +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR AND'
   +#13#10'           (:ULTIMO_PESO >= :PESOOBSCIO OR :IDADEMES >= :IDADEOBSCIO) ) THEN'
   +#13#10'          :STATUS_REPRODUTIVO_RECEPTORAAPTA'
   +#13#10''
   +#13#10'    WHEN ( :STATUS = :STATUS_NOV AND (:PRENHEZ = ''F'' or (:PRENHEZ IS NULL OR :PRENHEZ = '''') ) AND'
   +#13#10'          (:ULTIMO_PESO >= :PESOOBSCIO OR :IDADEMES >= :IDADEOBSCIO) ) THEN'
   +#13#10'         :STATUS_REPRODUTIVO_APTA'
   +#13#10''
   +#13#10'    WHEN ( :STATUS = :STATUS_VL AND :NUMERO_COBERTURA = 0 AND'
   +#13#10'          ( ( :NUMERO_LACTACAO = 0 AND :DPP < :DPP_INSEMINAR_PRIMIPARA ) OR'
   +#13#10'            ( :NUMERO_LACTACAO > 0 AND :DPP < :DPP_INSEMINAR_MULTIPARA ) ) ) THEN'
   +#13#10'         :STATUS_REPRODUTIVO_PEV'
   +#13#10''
   +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND */:PRENHEZ = ''T'' AND :ABORTOPARTO = :TIPO_PARTOABORTO_ABORTO AND'
   +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR  ) THEN'
   +#13#10'         :STATUS_REPRODUTIVO_RECEPTORAABORTADA'
   +#13#10''
   +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND*/ :PRENHEZ = ''T'' AND :ABORTOPARTO = :TIPO_PARTOABORTO_ABORTO  ) THEN'
   +#13#10'         :STATUS_REPRODUTIVO_ABORTADA'
   +#13#10''
   +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND*/ :PRENHEZ = ''T'' AND :ABORTOPARTO IS NULL AND'
   +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR) THEN'
   +#13#10'         :STATUS_REPRODUTIVO_RECEPTORAPRENHE'
   +#13#10''
   +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND*/ :PRENHEZ = ''T'' AND :ABORTOPARTO IS NULL ) THEN'
   +#13#10'         :STATUS_REPRODUTIVO_PRENHE'
   +#13#10''
   +#13#10''
   +#13#10''
   +#13#10'    WHEN ( :STATUS = :STATUS_VL AND /*:NUMERO_COBERTURA = 0 AND*/'
   +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_DOADOR AND'
   +#13#10'          ( ( :NUMERO_LACTACAO = 1 AND :DPP >= :DPP_INSEMINAR_PRIMIPARA ) OR'
   +#13#10'            ( :NUMERO_LACTACAO > 1 AND :DPP >= :DPP_INSEMINAR_MULTIPARA ) ) ) THEN'
   +#13#10'         :STATUS_REPRODUTIVO_DOADORAAPTA'
   +#13#10''
   +#13#10'    WHEN ( :STATUS = :STATUS_VL AND /*:NUMERO_COBERTURA = 0 AND*/'
   +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR AND'
   +#13#10'          ( ( :NUMERO_LACTACAO = 1 AND :DPP >= :DPP_INSEMINAR_PRIMIPARA ) OR'
   +#13#10'            ( :NUMERO_LACTACAO > 1 AND :DPP >= :DPP_INSEMINAR_MULTIPARA ) ) ) THEN'
   +#13#10'         :STATUS_REPRODUTIVO_RECEPTORAAPTA'
   +#13#10''
   +#13#10'    WHEN ( :STATUS = :STATUS_VL AND /*:NUMERO_COBERTURA = 0 AND*/'
   +#13#10'          ( ( :NUMERO_LACTACAO = 1 AND :DPP >= :DPP_INSEMINAR_PRIMIPARA ) OR'
   +#13#10'            ( :NUMERO_LACTACAO > 1 AND :DPP >= :DPP_INSEMINAR_MULTIPARA ) ) ) THEN'
   +#13#10'         :STATUS_REPRODUTIVO_APTA'
   +#13#10''
   +#13#10'    WHEN ( :STATUS = :STATUS_VS AND :NUMERO_COBERTURA = 0 ) THEN'
   +#13#10'         :STATUS_REPRODUTIVO_APTA'
   +#13#10''
   +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND*/ (:PRENHEZ = ''F'' or (:PRENHEZ IS NULL OR :PRENHEZ = '''') ) AND'
   +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR ) THEN'
   +#13#10'         :STATUS_REPRODUTIVO_RECEPTORAVAZIA'
   +#13#10''
   +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND*/ (:PRENHEZ = ''F'' or (:PRENHEZ IS NULL OR :PRENHEZ = '''') ) ) THEN'
   +#13#10'         :STATUS_REPRODUTIVO_VAZIA'
   +#13#10''
   +#13#10''
   +#13#10'  END;'
   +#13#10''
   +#13#10''
   +#13#10'  SUSPEND;'
   +#13#10''
   +#13#10'END';

begin
  ExecuteDirect( _CREATE_OR_REPLACE_ZOO_GET_STATUS_REPRODUTIVO );
end;


procedure TDBZootecnicoUpdate._5_001_90;
const
   _ALTER_TABLE_IMP_DIAGNOST =
         'ALTER TABLE IMP$DIAGNOST'
  +#13#10'ALTER CODIGO TYPE VARCHAR(6)' ;

   _ALTER_TABLE_IMP_SANITARI =
         'ALTER TABLE IMP$SANITARI'
  +#13#10'ALTER DIAGNOSTICO TYPE VARCHAR(6)' ;

   _ALTER_TABLE_IMP_TRATASAN =
         'ALTER TABLE IMP$TRATASAN'
  +#13#10'ALTER DIAGNOSTICO TYPE VARCHAR(6)' ;

   _CREATE_OR_ALTER_PROCEDURE_DOIMP_PRODAP_DIAGNOST =
         'create or alter procedure DOIMP$PRODAP_DIAGNOST ('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    PRODAP varchar(1024) collate ISO8859_1)'
  +#13#10'AS'
  +#13#10'DECLARE CODIGO VARCHAR(6) ;'
  +#13#10'DECLARE CLASSE VARCHAR(50) ;'
  +#13#10'BEGIN'
  +#13#10''
  +#13#10' DELETE FROM IMP$DIAGNOST ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   ('
  +#13#10'      ''SELECT cast(CDDOENCA as varchar(6)), NOMECOMUM FROM DOENCA'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'    :CODIGO, :CLASSE'
  +#13#10' DO'
  +#13#10'    INSERT INTO IMP$DIAGNOST'
  +#13#10'     ('
  +#13#10'       CODIGO, CLASSE'
  +#13#10'     )'
  +#13#10'    VALUES'
  +#13#10'    ('
  +#13#10'      :CODIGO, :CLASSE'
  +#13#10'    ) ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   ('
  +#13#10'      ''SELECT cast((500 + CDOCORRENCIA) as varchar(6)), NOME FROM OCORRENCIA'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'    :CODIGO, :CLASSE'
  +#13#10' DO'
  +#13#10'    INSERT INTO IMP$DIAGNOST'
  +#13#10'     ('
  +#13#10'       CODIGO, CLASSE'
  +#13#10'     )'
  +#13#10'    VALUES'
  +#13#10'    ('
  +#13#10'      :CODIGO, :CLASSE'
  +#13#10'    ) ;'
  +#13#10''
  +#13#10'END';

   _CREATE_OR_ALTER_PROCEDURE_DOIMP_PRODAP_SANITARI =
         'create or alter procedure DOIMP$PRODAP_SANITARI ('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    PRODAP varchar(1024) collate ISO8859_1)'
  +#13#10'AS'
  +#13#10'DECLARE BRINCO VARCHAR(10) NOT NULL;'
  +#13#10'DECLARE DTDIAGNO DATE NOT NULL;'
  +#13#10'DECLARE DIAGNOSTICO VARCHAR(6) NOT NULL;'
  +#13#10'BEGIN'
  +#13#10''
  +#13#10' DELETE FROM IMP$SANITARI ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   (      ''SELECT CDANIMAL, DTPESALEITE, CAST(CDDOENCA AS VARCHAR(6)) FROM PESALEITE'''
  +#13#10'      || '' WHERE CDDOENCA IS NOT NULL'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'    :BRINCO, :DTDIAGNO, :DIAGNOSTICO'
  +#13#10' DO'
  +#13#10'    INSERT INTO IMP$SANITARI'
  +#13#10'     ('
  +#13#10'       BRINCO, DTDIAGNO, DIAGNOSTICO'
  +#13#10'     )'
  +#13#10'    VALUES'
  +#13#10'    ('
  +#13#10'      :BRINCO, :DTDIAGNO, :DIAGNOSTICO'
  +#13#10'    ) ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   (      ''SELECT CDANIMAL, DTPESALEITE, CAST(CDDOENCA AS VARCHAR(6)) FROM PESALEITE2'''
  +#13#10'      || '' WHERE CDDOENCA IS NOT NULL'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'    :BRINCO, :DTDIAGNO, :DIAGNOSTICO'
  +#13#10' DO'
  +#13#10'    INSERT INTO IMP$SANITARI'
  +#13#10'     ('
  +#13#10'       BRINCO, DTDIAGNO, DIAGNOSTICO'
  +#13#10'     )'
  +#13#10'    VALUES'
  +#13#10'    ('
  +#13#10'      :BRINCO, :DTDIAGNO, :DIAGNOSTICO'
  +#13#10'    ) ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   (      ''SELECT CDANIMAL, DTPESO, CAST(CDDOENCA AS VARCHAR(6)) FROM PESO'''
  +#13#10'      || '' WHERE CDDOENCA IS NOT NULL'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'    :BRINCO, :DTDIAGNO, :DIAGNOSTICO'
  +#13#10' DO'
  +#13#10'    INSERT INTO IMP$SANITARI'
  +#13#10'     ('
  +#13#10'       BRINCO, DTDIAGNO, DIAGNOSTICO'
  +#13#10'     )'
  +#13#10'    VALUES'
  +#13#10'    ('
  +#13#10'      :BRINCO, :DTDIAGNO, :DIAGNOSTICO'
  +#13#10'    ) ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   (      ''SELECT CDANIMAL, DTPESO, CAST(CDDOENCA AS VARCHAR(6)) FROM PESO2'''
  +#13#10'      || '' WHERE CDDOENCA IS NOT NULL'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'    :BRINCO, :DTDIAGNO, :DIAGNOSTICO'
  +#13#10' DO'
  +#13#10'    INSERT INTO IMP$SANITARI'
  +#13#10'     ('
  +#13#10'       BRINCO, DTDIAGNO, DIAGNOSTICO'
  +#13#10'     )'
  +#13#10'    VALUES'
  +#13#10'    ('
  +#13#10'      :BRINCO, :DTDIAGNO, :DIAGNOSTICO'
  +#13#10'    ) ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   (      ''SELECT CDANIMAL, DTREPRODUCAO, CAST((500 + CDOCORRENCIA) AS VARCHAR(6)) FROM REPRODUCAO'''
  +#13#10'      || '' WHERE CDOCORRENCIA IS NOT NULL'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'    :BRINCO, :DTDIAGNO, :DIAGNOSTICO'
  +#13#10' DO'
  +#13#10'    INSERT INTO IMP$SANITARI'
  +#13#10'     ('
  +#13#10'       BRINCO, DTDIAGNO, DIAGNOSTICO'
  +#13#10'     )'
  +#13#10'    VALUES'
  +#13#10'    ('
  +#13#10'      :BRINCO, :DTDIAGNO, :DIAGNOSTICO'
  +#13#10'    ) ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   (      ''SELECT CDANIMAL, DTREPRODUCAO, CAST((500 + CDOCORRENCIA) AS VARCHAR(6)) FROM REPRODUCAO2'''
  +#13#10'      || '' WHERE CDOCORRENCIA IS NOT NULL'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'    :BRINCO, :DTDIAGNO, :DIAGNOSTICO'
  +#13#10' DO'
  +#13#10'    INSERT INTO IMP$SANITARI'
  +#13#10'     ('
  +#13#10'       BRINCO, DTDIAGNO, DIAGNOSTICO'
  +#13#10'     )'
  +#13#10'    VALUES'
  +#13#10'    ('
  +#13#10'      :BRINCO, :DTDIAGNO, :DIAGNOSTICO'
  +#13#10'    ) ;'
  +#13#10''
  +#13#10'END';


begin
  TryExecuteDirect( _ALTER_TABLE_IMP_DIAGNOST );
  TryExecuteDirect( _ALTER_TABLE_IMP_SANITARI );
  TryExecuteDirect( _ALTER_TABLE_IMP_TRATASAN );

  TryExecuteDirect( _CREATE_OR_ALTER_PROCEDURE_DOIMP_PRODAP_DIAGNOST );
  TryExecuteDirect( _CREATE_OR_ALTER_PROCEDURE_DOIMP_PRODAP_SANITARI );
end;


procedure TDBZootecnicoUpdate._5_001_89;
const
   _CREATE_OR_REPLACE_ZOO_GET_STATUS_REPRODUTIVO =
                         'create or alter procedure ZOO_GET_STATUS_REPRODUTIVO ('
                  +#13#10'    KZOO_ANIMAL_FEMEA SYS$FKGUID20)'
                  +#13#10'returns ('
                  +#13#10'    STATUS_REPRODUTIVO_ANIMAL type of SYS$INT)'
                  +#13#10'AS'
                  +#13#10'declare KULTIMO_EVENTO_ZOOTECNICO SYS$FKGUID20 ;'
                  +#13#10'declare KULTIMO_CIO SYS$FKGUID20 ;'
                  +#13#10'declare NUMERO_MONTA SYS$INT_NN_0;'
                  +#13#10'declare TIPO_EVENTO SYS$INT ;'
                  +#13#10'declare PRENHEZ SYS$BOOL_NULL ;'
                  +#13#10'declare ABORTOPARTO SYS$INT ;'
                  +#13#10'declare EMBRIOESCOLETADOS SYS$INT ;'
                  +#13#10'declare DOADORRECEPTOR SYS$INT ;'
                  +#13#10'declare STATUS SYS$INT ;'
                  +#13#10'declare INTENCAO_DESCARTE SYS$BOOL_F ;'
                  +#13#10'declare NASCIMENTO SYS$DATE_NN ;'
                  +#13#10'declare ULTIMA_LACTACAO SYS$DATE ;'
                  +#13#10'declare NUMERO_LACTACAO SYS$INT_NN_0;'
                  +#13#10'declare ULTIMO_PARTO SYS$DATE ;'
                  +#13#10'declare ULTIMO_PESO SYS$INT ;'
                  +#13#10'declare STATUS_BEZ SYS$INT ;'
                  +#13#10'declare STATUS_NOV SYS$INT ;'
                  +#13#10'declare STATUS_VS SYS$INT ;'
                  +#13#10'declare STATUS_VL SYS$INT ;'
                  +#13#10'declare TIPO_EVENTO_ZOO_CIO SYS$INT ;'
                  +#13#10'declare TIPO_PARTOABORTO_ABORTO SYS$INT ;'
                  +#13#10'declare TIPO_PARTOABORTO_ABORTOLACTACAO SYS$INT ;'
                  +#13#10'declare TIPO_PARTOABORTO_PARTO SYS$INT ;'
                  +#13#10'declare TIPO_PARTOABORTO_COLETAEMBRIAO SYS$INT ;'
                  +#13#10'declare TIPO_DOADOR_RECEPTOR_ND SYS$INT ;'
                  +#13#10'declare TIPO_DOADOR_RECEPTOR_DOADOR SYS$INT ;'
                  +#13#10'declare TIPO_DOADOR_RECEPTOR_RECEPTOR SYS$INT ;'
                  +#13#10'declare STATUS_REPRODUTIVO_APTA SYS$INT ;'
                  +#13#10'declare STATUS_REPRODUTIVO_EMCRESCIMENTO SYS$INT ;'
                  +#13#10'declare STATUS_REPRODUTIVO_INSEMINADA SYS$INT ;'
                  +#13#10'declare STATUS_REPRODUTIVO_PRENHE SYS$INT ;'
                  +#13#10'declare STATUS_REPRODUTIVO_VAZIA SYS$INT ;'
                  +#13#10'declare STATUS_REPRODUTIVO_ABORTADA SYS$INT ;'
                  +#13#10'declare STATUS_REPRODUTIVO_PEV SYS$INT ;'
                  +#13#10'declare STATUS_REPRODUTIVO_ABERTA SYS$INT ;'
                  +#13#10'declare STATUS_REPRODUTIVO_NAOINSEMINAR SYS$INT ;'
                  +#13#10'declare STATUS_REPRODUTIVO_DOADORAAPTA SYS$INT ;'
                  +#13#10'declare STATUS_REPRODUTIVO_DOADORAINSEMINADA SYS$INT ;'
                  +#13#10'declare STATUS_REPRODUTIVO_DOADORACOLETADA SYS$INT ;'
                  +#13#10'declare STATUS_REPRODUTIVO_RECEPTORAAPTA SYS$INT ;'
                  +#13#10'declare STATUS_REPRODUTIVO_RECEPTORATRANSFERIDA SYS$INT ;'
                  +#13#10'declare STATUS_REPRODUTIVO_RECEPTORAPRENHE SYS$INT ;'
                  +#13#10'declare STATUS_REPRODUTIVO_RECEPTORAVAZIA SYS$INT ;'
                  +#13#10'declare STATUS_REPRODUTIVO_RECEPTORAABORTADA SYS$INT ;'
                  +#13#10'declare STATUS_REPRODUTIVO_COLETADA SYS$INT ;'
                  +#13#10'declare IDADEOBSCIO SYS$INT  ;'
                  +#13#10'declare PESOOBSCIO SYS$INT  ;'
                  +#13#10'declare DPP_INSEMINAR_PRIMIPARA SYS$INT  ;'
                  +#13#10'declare DPP_INSEMINAR_MULTIPARA SYS$INT  ;'
                  +#13#10'declare IDADEMES SYS$FLOAT ;'
                  +#13#10'declare DPP SYS$INT ;'
                  +#13#10'declare NUMERO_COBERTURA SYS$INT_NN_0;'
                  +#13#10'BEGIN'
                  +#13#10''
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_CATEGORIA_FEMEA'', ''BEZ'' ) RETURNING_VALUES STATUS_BEZ ;'
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_CATEGORIA_FEMEA'', ''NOV'' ) RETURNING_VALUES STATUS_NOV ;'
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_CATEGORIA_FEMEA'', ''VS''  ) RETURNING_VALUES STATUS_VS ;'
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_CATEGORIA_FEMEA'', ''VL''  ) RETURNING_VALUES STATUS_VL ;'
                  +#13#10''
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_EVENTO_ZOO'',  ''CIO''               ) RETURNING_VALUES TIPO_EVENTO_ZOO_CIO ;'
                  +#13#10''
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_PARTOABORTO'', ''ABORTO''            ) RETURNING_VALUES TIPO_PARTOABORTO_ABORTO ;'
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_PARTOABORTO'', ''ABORTO_LACTACAO''   ) RETURNING_VALUES TIPO_PARTOABORTO_ABORTOLACTACAO ;'
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_PARTOABORTO'', ''PARTO''             ) RETURNING_VALUES TIPO_PARTOABORTO_PARTO ;'
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_PARTOABORTO'', ''COLETA''            ) RETURNING_VALUES TIPO_PARTOABORTO_COLETAEMBRIAO ;'
                  +#13#10''
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_DOADOR_RECEPTOR'', ''ND''            ) RETURNING_VALUES TIPO_DOADOR_RECEPTOR_ND ;'
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_DOADOR_RECEPTOR'', ''DOADOR''        ) RETURNING_VALUES TIPO_DOADOR_RECEPTOR_DOADOR ;'
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_DOADOR_RECEPTOR'', ''RECEPTOR''      ) RETURNING_VALUES TIPO_DOADOR_RECEPTOR_RECEPTOR ;'
                  +#13#10''
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''APTA''                 ) RETURNING_VALUES STATUS_REPRODUTIVO_APTA ;'
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''EMCRESCIMENTO''        ) RETURNING_VALUES STATUS_REPRODUTIVO_EMCRESCIMENTO ;'
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''INSEMINADA''           ) RETURNING_VALUES STATUS_REPRODUTIVO_INSEMINADA ;'
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''PRENHE''               ) RETURNING_VALUES STATUS_REPRODUTIVO_PRENHE ;'
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''VAZIA''                ) RETURNING_VALUES STATUS_REPRODUTIVO_VAZIA ;'
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''ABORTADA''             ) RETURNING_VALUES STATUS_REPRODUTIVO_ABORTADA ;'
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''PEV''                  ) RETURNING_VALUES STATUS_REPRODUTIVO_PEV ;'
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''ABERTA''               ) RETURNING_VALUES STATUS_REPRODUTIVO_ABERTA ;'
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''NAOINSEMINAR''         ) RETURNING_VALUES STATUS_REPRODUTIVO_NAOINSEMINAR ;'
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''DOADORAAPTA''          ) RETURNING_VALUES STATUS_REPRODUTIVO_DOADORAAPTA ;'
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''DOADORAINSEMINADA''    ) RETURNING_VALUES STATUS_REPRODUTIVO_DOADORAINSEMINADA ;'
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''DOADORACOLETADA''      ) RETURNING_VALUES STATUS_REPRODUTIVO_DOADORACOLETADA ;'
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''RECEPTORAAPTA''        ) RETURNING_VALUES STATUS_REPRODUTIVO_RECEPTORAAPTA ;'
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''RECEPTORATRANSFERIDA'' ) RETURNING_VALUES STATUS_REPRODUTIVO_RECEPTORATRANSFERIDA ;'
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''RECEPTORAPRENHE''      ) RETURNING_VALUES STATUS_REPRODUTIVO_RECEPTORAPRENHE ;'
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''RECEPTORAVAZIA''       ) RETURNING_VALUES STATUS_REPRODUTIVO_RECEPTORAVAZIA ;'
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''RECEPTORAABORTADA''    ) RETURNING_VALUES STATUS_REPRODUTIVO_RECEPTORAABORTADA ;'
                  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''COLETADA''             ) RETURNING_VALUES STATUS_REPRODUTIVO_COLETADA ;'
                  +#13#10''
                  +#13#10'  SELECT P.VALOR FROM ZOO_CFGPARAMNOVILHAS P WHERE P.SYS$VALUE = ''IDADE_OBS_CIO'' INTO :IDADEOBSCIO;'
                  +#13#10'  SELECT P.VALOR FROM ZOO_CFGPARAMNOVILHAS P WHERE P.SYS$VALUE = ''PESO_OBS_CIO''  INTO :PESOOBSCIO;'
                  +#13#10''
                  +#13#10'  SELECT M.PRIMIPARA, M.MULTIPARA FROM ZOO_CFGPARAMMATRIZES M WHERE M.SYS$VALUE = ''DIAS_POS_PARTO_INSEMINAR'' '
                  +#13#10'    INTO :DPP_INSEMINAR_PRIMIPARA, :DPP_INSEMINAR_MULTIPARA;'
                  +#13#10''
                  +#13#10'  SELECT F.KULTIMO_EVENTO_ZOOTECNICO,'
                  +#13#10'         F.KULTIMO_CIO,'
                  +#13#10'         F.NUMERO_MONTA,'
                  +#13#10'         E.TIPOEVENTO,'
                  +#13#10'         E.PRENHEZ,'
                  +#13#10'         E.ABORTOPARTO,'
                  +#13#10'         E.EMBRIOESCOLETADOS,'
                  +#13#10'         F.DOADOR_RECEPTOR,'
                  +#13#10'         A.STATUS,'
                  +#13#10'         F.INTENCAO_DESCARTE,'
                  +#13#10'         F.NASCIMENTO,'
                  +#13#10'         F.ULTIMO_PARTO,'
                  +#13#10'         F.ULTIMA_LACTACAO,'
                  +#13#10'         F.NUMERO_LACTACAO,'
                  +#13#10'         C.PESO'
                  +#13#10'    FROM ZOO_ANIMAIS_FEMEA F'
                  +#13#10'    INNER JOIN ZOO_ANIMAIS A ON A.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA'
                  +#13#10'    LEFT  JOIN ZOO_EVENTOS_ZOOTECNICOS E ON E.KZOO_EVENTO_ZOOTECNICO = F.KULTIMO_EVENTO_ZOOTECNICO'
                  +#13#10'    LEFT  JOIN ZOO_ANIMAL_CRESCIMENTO C ON C.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA'
                  +#13#10'                                       AND C.DATA = (SELECT MAX(DATA)'
                  +#13#10'                                                       FROM ZOO_ANIMAL_CRESCIMENTO'
                  +#13#10'                                                      WHERE KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA )'
                  +#13#10'   WHERE F.KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL_FEMEA'
                  +#13#10'   INTO :KULTIMO_EVENTO_ZOOTECNICO,'
                  +#13#10'        :KULTIMO_CIO,'
                  +#13#10'        :NUMERO_MONTA,'
                  +#13#10'        :TIPO_EVENTO,'
                  +#13#10'        :PRENHEZ,'
                  +#13#10'        :ABORTOPARTO,'
                  +#13#10'        :EMBRIOESCOLETADOS,'
                  +#13#10'        :DOADORRECEPTOR,'
                  +#13#10'        :STATUS,'
                  +#13#10'        :INTENCAO_DESCARTE,'
                  +#13#10'        :NASCIMENTO,'
                  +#13#10'        :ULTIMO_PARTO,'
                  +#13#10'        :ULTIMA_LACTACAO,'
                  +#13#10'        :NUMERO_LACTACAO,'
                  +#13#10'        :ULTIMO_PESO;'
                  +#13#10''
                  +#13#10'  IDADEMES = CAST( CAST ( (CURRENT_TIMESTAMP - :NASCIMENTO) / 30.4 AS NUMERIC ( 5, 1 ) ) AS SYS$FLOAT );'
                  +#13#10'  DPP      = TRUNC ( CURRENT_TIMESTAMP - :ULTIMA_LACTACAO );'
                  +#13#10''
                  +#13#10'  SELECT COUNT(1) FROM ZOO_EVENTOS_ZOOTECNICOS'
                  +#13#10'   WHERE (DATAEVENTO > :ULTIMA_LACTACAO or (:ULTIMA_LACTACAO is null) )'
                  +#13#10'     AND TIPOEVENTO > :TIPO_EVENTO_ZOO_CIO'
                  +#13#10'     AND ABORTOPARTO IS NULL'
                  +#13#10'     AND KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL_FEMEA'
                  +#13#10'    INTO :NUMERO_COBERTURA;'
                  +#13#10''
                  +#13#10'  STATUS_REPRODUTIVO_ANIMAL ='
                  +#13#10'  CASE'
                  +#13#10'    WHEN ( :INTENCAO_DESCARTE = ''T'' ) THEN'
                  +#13#10'          :STATUS_REPRODUTIVO_NAOINSEMINAR'
                  +#13#10''
                  +#13#10'    WHEN ( :STATUS = :STATUS_BEZ ) THEN'
                  +#13#10'          :STATUS_REPRODUTIVO_EMCRESCIMENTO'
                  +#13#10''
                  +#13#10'    WHEN ( :STATUS = :STATUS_NOV AND :NUMERO_COBERTURA = 0 AND'
                  +#13#10'           (:ULTIMO_PESO IS NULL or :ULTIMO_PESO < :PESOOBSCIO) AND :IDADEMES < :IDADEOBSCIO ) THEN'
                  +#13#10'          :STATUS_REPRODUTIVO_EMCRESCIMENTO'
                  +#13#10''
                  +#13#10'    WHEN (:TIPO_EVENTO = :TIPO_EVENTO_ZOO_CIO AND'
                  +#13#10'          :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_DOADOR) THEN'
                  +#13#10'         :STATUS_REPRODUTIVO_DOADORAAPTA'
                  +#13#10''
                  +#13#10'    WHEN (:TIPO_EVENTO = :TIPO_EVENTO_ZOO_CIO AND'
                  +#13#10'          :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR) THEN'
                  +#13#10'         :STATUS_REPRODUTIVO_RECEPTORAAPTA'
                  +#13#10''
                  +#13#10'    WHEN (:TIPO_EVENTO = :TIPO_EVENTO_ZOO_CIO) THEN'
                  +#13#10'         :STATUS_REPRODUTIVO_APTA'
                  +#13#10''
                  +#13#10'    WHEN ( :NUMERO_COBERTURA > 0 AND :PRENHEZ IS NULL AND'
                  +#13#10'           :TIPO_EVENTO <> :TIPO_EVENTO_ZOO_CIO AND'
                  +#13#10'           (:KULTIMO_CIO is distinct from :KULTIMO_EVENTO_ZOOTECNICO) AND'
                  +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_DOADOR ) THEN'
                  +#13#10'         :STATUS_REPRODUTIVO_DOADORAINSEMINADA'
                  +#13#10''
                  +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND*/ :PRENHEZ IS NULL AND'
                  +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_DOADOR AND'
                  +#13#10'           (:KULTIMO_CIO is distinct from :KULTIMO_EVENTO_ZOOTECNICO) AND'
                  +#13#10'           :EMBRIOESCOLETADOS IS NOT NULL ) THEN'
                  +#13#10'         :STATUS_REPRODUTIVO_DOADORACOLETADA'
                  +#13#10''
                  +#13#10'    WHEN ( :NUMERO_COBERTURA > 0 AND :PRENHEZ IS NULL AND'
                  +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR ) THEN'
                  +#13#10'         :STATUS_REPRODUTIVO_RECEPTORATRANSFERIDA'
                  +#13#10''
                  +#13#10'    WHEN ( :PRENHEZ IS NULL AND'
                  +#13#10'           :EMBRIOESCOLETADOS IS NOT NULL ) THEN'
                  +#13#10'         :STATUS_REPRODUTIVO_COLETADA'
                  +#13#10''
                  +#13#10'    WHEN ( :NUMERO_COBERTURA > 0 AND :PRENHEZ IS NULL AND'
                  +#13#10'          (:KULTIMO_CIO is distinct from :KULTIMO_EVENTO_ZOOTECNICO/*:KULTIMO_CIO <> :KULTIMO_EVENTO_ZOOTECNICO*/)) THEN'
                  +#13#10'         :STATUS_REPRODUTIVO_INSEMINADA'
                  +#13#10''
                  +#13#10'    WHEN ( :STATUS = :STATUS_NOV AND :NUMERO_COBERTURA = 0 AND'
                  +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_DOADOR AND'
                  +#13#10'           (:ULTIMO_PESO >= :PESOOBSCIO OR :IDADEMES >= :IDADEOBSCIO) ) THEN'
                  +#13#10'          :STATUS_REPRODUTIVO_DOADORAAPTA'
                  +#13#10''
                  +#13#10'    WHEN ( :STATUS = :STATUS_NOV AND :NUMERO_COBERTURA = 0 AND'
                  +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR AND'
                  +#13#10'           (:ULTIMO_PESO >= :PESOOBSCIO OR :IDADEMES >= :IDADEOBSCIO) ) THEN'
                  +#13#10'          :STATUS_REPRODUTIVO_RECEPTORAAPTA'
                  +#13#10''
                  +#13#10'    WHEN ( :STATUS = :STATUS_NOV AND (:PRENHEZ = ''F'' or :PRENHEZ IS NULL ) AND'
                  +#13#10'          (:ULTIMO_PESO >= :PESOOBSCIO OR :IDADEMES >= :IDADEOBSCIO) ) THEN'
                  +#13#10'         :STATUS_REPRODUTIVO_APTA'
                  +#13#10''
                  +#13#10'    WHEN ( :STATUS = :STATUS_VL AND :NUMERO_COBERTURA = 0 AND'
                  +#13#10'          ( ( :NUMERO_LACTACAO = 0 AND :DPP < :DPP_INSEMINAR_PRIMIPARA ) OR'
                  +#13#10'            ( :NUMERO_LACTACAO > 0 AND :DPP < :DPP_INSEMINAR_MULTIPARA ) ) ) THEN'
                  +#13#10'         :STATUS_REPRODUTIVO_PEV'
                  +#13#10''
                  +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND */:PRENHEZ = ''T'' AND :ABORTOPARTO = :TIPO_PARTOABORTO_ABORTO AND'
                  +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR  ) THEN'
                  +#13#10'         :STATUS_REPRODUTIVO_RECEPTORAABORTADA'
                  +#13#10''
                  +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND*/ :PRENHEZ = ''T'' AND :ABORTOPARTO = :TIPO_PARTOABORTO_ABORTO  ) THEN'
                  +#13#10'         :STATUS_REPRODUTIVO_ABORTADA'
                  +#13#10''
                  +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND*/ :PRENHEZ = ''T'' AND :ABORTOPARTO IS NULL AND'
                  +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR) THEN'
                  +#13#10'         :STATUS_REPRODUTIVO_RECEPTORAPRENHE'
                  +#13#10''
                  +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND*/ :PRENHEZ = ''T'' AND :ABORTOPARTO IS NULL ) THEN'
                  +#13#10'         :STATUS_REPRODUTIVO_PRENHE'
                  +#13#10''
                  +#13#10''
                  +#13#10''
                  +#13#10'    WHEN ( :STATUS = :STATUS_VL AND /*:NUMERO_COBERTURA = 0 AND*/'
                  +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_DOADOR AND'
                  +#13#10'          ( ( :NUMERO_LACTACAO = 1 AND :DPP >= :DPP_INSEMINAR_PRIMIPARA ) OR'
                  +#13#10'            ( :NUMERO_LACTACAO > 1 AND :DPP >= :DPP_INSEMINAR_MULTIPARA ) ) ) THEN'
                  +#13#10'         :STATUS_REPRODUTIVO_DOADORAAPTA'
                  +#13#10''
                  +#13#10'    WHEN ( :STATUS = :STATUS_VL AND /*:NUMERO_COBERTURA = 0 AND*/'
                  +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR AND'
                  +#13#10'          ( ( :NUMERO_LACTACAO = 1 AND :DPP >= :DPP_INSEMINAR_PRIMIPARA ) OR'
                  +#13#10'            ( :NUMERO_LACTACAO > 1 AND :DPP >= :DPP_INSEMINAR_MULTIPARA ) ) ) THEN'
                  +#13#10'         :STATUS_REPRODUTIVO_RECEPTORAAPTA'
                  +#13#10''
                  +#13#10'    WHEN ( :STATUS = :STATUS_VL AND /*:NUMERO_COBERTURA = 0 AND*/'
                  +#13#10'          ( ( :NUMERO_LACTACAO = 1 AND :DPP >= :DPP_INSEMINAR_PRIMIPARA ) OR'
                  +#13#10'            ( :NUMERO_LACTACAO > 1 AND :DPP >= :DPP_INSEMINAR_MULTIPARA ) ) ) THEN'
                  +#13#10'         :STATUS_REPRODUTIVO_APTA'
                  +#13#10''
                  +#13#10'    WHEN ( :STATUS = :STATUS_VS AND :NUMERO_COBERTURA = 0 ) THEN'
                  +#13#10'         :STATUS_REPRODUTIVO_APTA'
                  +#13#10''
                  +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND*/ (:PRENHEZ = ''F'' or :PRENHEZ IS NULL ) AND'
                  +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR ) THEN'
                  +#13#10'         :STATUS_REPRODUTIVO_RECEPTORAVAZIA'
                  +#13#10''
                  +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND*/ (:PRENHEZ = ''F'' or :PRENHEZ IS NULL ) ) THEN'
                  +#13#10'         :STATUS_REPRODUTIVO_VAZIA'
                  +#13#10''
                  +#13#10''
                  +#13#10'  END;'
                  +#13#10''
                  +#13#10''
                  +#13#10'  SUSPEND;'
                  +#13#10''
                  +#13#10'END';

begin
  ExecuteDirect ( _CREATE_OR_REPLACE_ZOO_GET_STATUS_REPRODUTIVO );
end;


procedure TDBZootecnicoUpdate._5_001_88;
const
   _CREATE_OR_ALTER_TRIGGER_ZOO_LACTACOES_BID0 =
                    'CREATE OR ALTER TRIGGER ZOO_LACTACOES_BID0 FOR ZOO_LACTACOES'
            +#13#10'ACTIVE BEFORE INSERT OR DELETE POSITION 1001'
            +#13#10'AS'
            +#13#10'declare KPRIMEIRA_LACTACAO SYS$FKGUID20 ;'
            +#13#10'declare KULTIMA_LACTACAO SYS$FKGUID20 ;'
            +#13#10'declare KLACTACAO_ANTERIOR SYS$FKGUID20 ;'
            +#13#10'declare KPESAGEM_LEITE SYS$FKGUID20 ;'
            +#13#10'declare LACTACAO_ANTERIOR SYS$DATE ;'
            +#13#10'declare ULTIMA_PESAGEM    SYS$DATE ;'
            +#13#10'declare STATUS_BEZ SYS$INT ;'
            +#13#10'declare STATUS_NOV SYS$INT ;'
            +#13#10'declare STATUS_VS SYS$INT ;'
            +#13#10'declare STATUS_VL SYS$INT ;'
            +#13#10'declare STATUS_DES SYS$INT ;'
            +#13#10'begin'
            +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_STATUS_ANIMAL'', ''BEZ'' ) RETURNING_VALUES STATUS_BEZ ;'
            +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_STATUS_ANIMAL'', ''NOV'' ) RETURNING_VALUES STATUS_NOV ;'
            +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_STATUS_ANIMAL'', ''VS''  ) RETURNING_VALUES STATUS_VS ;'
            +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_STATUS_ANIMAL'', ''VL''  ) RETURNING_VALUES STATUS_VL ;'
            +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_STATUS_ANIMAL'', ''DES''  ) RETURNING_VALUES STATUS_DES ;'
            +#13#10''
            +#13#10'  if (INSERTING) then'
            +#13#10'    begin'
            +#13#10'      IF (( NEW.KZOO_ANIMAL_FEMEA IS NULL ) or ( NEW.DATALACTACAO IS NULL )) THEN'
            +#13#10'        SELECT KZOO_ANIMAL_FEMEA, DATAABORTOPARTO FROM ZOO_EVENTOs_ZOOTECNICOS'
            +#13#10'        WHERE KZOO_EVENTO_ZOOTECNICO = NEW.KZOO_EVENTO_ZOOTECNICO'
            +#13#10'        INTO NEW.KZOO_ANIMAL_FEMEA, NEW.DATALACTACAO ;'
            +#13#10''
            +#13#10'      IF ( ( NEW.NL IS NULL ) or ( NEW.NL < 1 ) ) THEN'
            +#13#10'        begin'
            +#13#10'           SELECT MAX ( NL ) FROM ZOO_LACTACOES WHERE KZOO_ANIMAL_FEMEA = NEW.KZOO_ANIMAL_FEMEA INTO NEW.NL ;'
            +#13#10'           NEW.NL = COALESCE ( NEW.NL, 0 ) + 1 ;'
            +#13#10'        end'
            +#13#10'    end'
            +#13#10'   if (Deleting) then'
            +#13#10'     begin'
            +#13#10'       SELECT KPRIMEIRA_LACTACAO, KULTIMA_LACTACAO'
            +#13#10'       FROM ZOO_ANIMAIS_FEMEA'
            +#13#10'       WHERE KZOO_ANIMAL_FEMEA = OLD.KZOO_ANIMAL_FEMEA'
            +#13#10'       INTO KPRIMEIRA_LACTACAO, KULTIMA_LACTACAO;'
            +#13#10''
            +#13#10'       if ( OLD.KZOO_LACTACAO <> KPRIMEIRA_LACTACAO ) then'
            +#13#10'         begin'
            +#13#10''
            +#13#10'           KLACTACAO_ANTERIOR = null ;'
            +#13#10''
            +#13#10'           SELECT KZOO_LACTACAO, DATALACTACAO'
            +#13#10'           FROM ZOO_LACTACOES'
            +#13#10'           WHERE KZOO_ANIMAL_FEMEA = OLD.KZOO_ANIMAL_FEMEA'
            +#13#10'             AND DATALACTACAO < OLD.DATALACTACAO'
            +#13#10'           ORDER BY KZOO_ANIMAL_FEMEA, DATALACTACAO DESC, NL DESC'
            +#13#10'           ROWS 1'
            +#13#10'           INTO KLACTACAO_ANTERIOR, LACTACAO_ANTERIOR ;'
            +#13#10''
            +#13#10'           if (KLACTACAO_ANTERIOR is not null ) then'
            +#13#10'             begin'
            +#13#10'               RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLOFF'', ''1'' ) ;'
            +#13#10''
            +#13#10'               FOR SELECT P.KZOO_PESAGEM_LEITE FROM ZOO_PESAGEM_LEITE P'
            +#13#10'                LEFT JOIN ZOO_LOTEPESAGEM_LEITE L ON L.KZOO_LOTEPESAGEM_LEITE = P.KZOO_LOTEPESAGEM_LEITE'
            +#13#10'                WHERE P.KZOO_LACTACAO = OLD.KZOO_LACTACAO AND P.KZOO_LOTEPESAGEM_LEITE IS NOT NULL AND L.PROCESSADO = ''F'''
            +#13#10'               INTO KPESAGEM_LEITE DO'
            +#13#10'                 DELETE FROM ZOO_PESAGEM_LEITE WHERE KZOO_PESAGEM_LEITE = :KPESAGEM_LEITE ;'
            +#13#10''
            +#13#10'               UPDATE ZOO_PESAGEM_LEITE'
            +#13#10'                  SET KZOO_LACTACAO = :KLACTACAO_ANTERIOR,'
            +#13#10'                      DATALACTACAO  = :LACTACAO_ANTERIOR'
            +#13#10'               WHERE KZOO_LACTACAO = OLD.KZOO_LACTACAO ;'
            +#13#10''
            +#13#10'               SELECT MAX ( DATA )'
            +#13#10'               FROM ZOO_PESAGEM_LEITE'
            +#13#10'               WHERE KZOO_LACTACAO = :KLACTACAO_ANTERIOR'
            +#13#10'               INTO :ULTIMA_PESAGEM ;'
            +#13#10''
            +#13#10'               --UPDATE ZOO_LACTACOES'
            +#13#10'               --   SET DATA_SECAGEM = OLD.DATA_SECAGEM,'
            +#13#10'               --       CAUSA_SECAGEM = OLD.CAUSA_SECAGEM'
            +#13#10'               --WHERE KZOO_LACTACAO = :KLACTACAO_ANTERIOR ;'
            +#13#10''
            +#13#10'               UPDATE ZOO_LACTACOES'
            +#13#10'                  SET DATA_SECAGEM = :ULTIMA_PESAGEM'
            +#13#10'               WHERE KZOO_LACTACAO = :KLACTACAO_ANTERIOR'
            +#13#10'                 AND DATA_SECAGEM IS NOT NULL'
            +#13#10'                 AND DATA_SECAGEM <  :ULTIMA_PESAGEM ;'
            +#13#10''
            +#13#10'               RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLOFF'', NULL ) ;'
            +#13#10''
            +#13#10'               EXECUTE PROCEDURE ZOO_UPDATE_CALCULO_PESAGEM :KLACTACAO_ANTERIOR ;'
            +#13#10''
            +#13#10'               UPDATE ZOO_ANIMAIS SET STATUS = :STATUS_VS'
            +#13#10'                WHERE KZOO_ANIMAL = OLD.KZOO_ANIMAL_FEMEA AND STATUS <> :STATUS_DES ;'
            +#13#10'             end'
            +#13#10'           else'
            +#13#10'             begin'
            +#13#10'               UPDATE ZOO_ANIMAIS SET STATUS = :STATUS_NOV'
            +#13#10'                WHERE KZOO_ANIMAL = OLD.KZOO_ANIMAL_FEMEA AND STATUS <> :STATUS_DES ;'
            +#13#10'             end'
            +#13#10'         end'
            +#13#10'       else'
            +#13#10'         begin'
            +#13#10'           UPDATE ZOO_ANIMAIS SET STATUS = :STATUS_NOV'
            +#13#10'            WHERE KZOO_ANIMAL = OLD.KZOO_ANIMAL_FEMEA AND STATUS <> :STATUS_DES ;'
            +#13#10'         end'
            +#13#10'     end'
            +#13#10'end';

begin
  ExecuteDirect( _CREATE_OR_ALTER_TRIGGER_ZOO_LACTACOES_BID0 );
end;


procedure TDBZootecnicoUpdate._5_001_87;
const
   _CREATE_OR_REPLACE_ZOO_GET_STATUS_REPRODUTIVO =
                  'create or alter procedure ZOO_GET_STATUS_REPRODUTIVO ('
           +#13#10'    KZOO_ANIMAL_FEMEA SYS$FKGUID20)'
           +#13#10'returns ('
           +#13#10'   STATUS_REPRODUTIVO_ANIMAL type of SYS$INT)'
           +#13#10'AS'
           +#13#10'declare KULTIMO_EVENTO_ZOOTECNICO SYS$FKGUID20 ;'
           +#13#10'declare KULTIMO_CIO SYS$FKGUID20 ;'
           +#13#10'declare NUMERO_MONTA SYS$INT_NN_0;'
           +#13#10'declare TIPO_EVENTO SYS$INT ;'
           +#13#10'declare PRENHEZ SYS$BOOL_NULL ;'
           +#13#10'declare ABORTOPARTO SYS$INT ;'
           +#13#10'declare EMBRIOESCOLETADOS SYS$INT ;'
           +#13#10'declare DOADORRECEPTOR SYS$INT ;'
           +#13#10'declare STATUS SYS$INT ;'
           +#13#10'declare INTENCAO_DESCARTE SYS$BOOL_F ;'
           +#13#10'declare NASCIMENTO SYS$DATE_NN ;'
           +#13#10'declare ULTIMA_LACTACAO SYS$DATE ;'
           +#13#10'declare NUMERO_LACTACAO SYS$INT_NN_0;'
           +#13#10'declare ULTIMO_PARTO SYS$DATE ;'
           +#13#10'declare ULTIMO_PESO SYS$INT ;'
           +#13#10'declare STATUS_BEZ SYS$INT ;'
           +#13#10'declare STATUS_NOV SYS$INT ;'
           +#13#10'declare STATUS_VS SYS$INT ;'
           +#13#10'declare STATUS_VL SYS$INT ;'
           +#13#10'declare TIPO_EVENTO_ZOO_CIO SYS$INT ;'
           +#13#10'declare TIPO_PARTOABORTO_ABORTO SYS$INT ;'
           +#13#10'declare TIPO_PARTOABORTO_ABORTOLACTACAO SYS$INT ;'
           +#13#10'declare TIPO_PARTOABORTO_PARTO SYS$INT ;'
           +#13#10'declare TIPO_PARTOABORTO_COLETAEMBRIAO SYS$INT ;'
           +#13#10'declare TIPO_DOADOR_RECEPTOR_ND SYS$INT ;'
           +#13#10'declare TIPO_DOADOR_RECEPTOR_DOADOR SYS$INT ;'
           +#13#10'declare TIPO_DOADOR_RECEPTOR_RECEPTOR SYS$INT ;'
           +#13#10'declare STATUS_REPRODUTIVO_APTA SYS$INT ;'
           +#13#10'declare STATUS_REPRODUTIVO_EMCRESCIMENTO SYS$INT ;'
           +#13#10'declare STATUS_REPRODUTIVO_INSEMINADA SYS$INT ;'
           +#13#10'declare STATUS_REPRODUTIVO_PRENHE SYS$INT ;'
           +#13#10'declare STATUS_REPRODUTIVO_VAZIA SYS$INT ;'
           +#13#10'declare STATUS_REPRODUTIVO_ABORTADA SYS$INT ;'
           +#13#10'declare STATUS_REPRODUTIVO_PEV SYS$INT ;'
           +#13#10'declare STATUS_REPRODUTIVO_ABERTA SYS$INT ;'
           +#13#10'declare STATUS_REPRODUTIVO_NAOINSEMINAR SYS$INT ;'
           +#13#10'declare STATUS_REPRODUTIVO_DOADORAAPTA SYS$INT ;'
           +#13#10'declare STATUS_REPRODUTIVO_DOADORAINSEMINADA SYS$INT ;'
           +#13#10'declare STATUS_REPRODUTIVO_DOADORACOLETADA SYS$INT ;'
           +#13#10'declare STATUS_REPRODUTIVO_RECEPTORAAPTA SYS$INT ;'
           +#13#10'declare STATUS_REPRODUTIVO_RECEPTORATRANSFERIDA SYS$INT ;'
           +#13#10'declare STATUS_REPRODUTIVO_RECEPTORAPRENHE SYS$INT ;'
           +#13#10'declare STATUS_REPRODUTIVO_RECEPTORAVAZIA SYS$INT ;'
           +#13#10'declare STATUS_REPRODUTIVO_RECEPTORAABORTADA SYS$INT ;'
           +#13#10'declare STATUS_REPRODUTIVO_COLETADA SYS$INT ;'
           +#13#10'declare IDADEOBSCIO SYS$INT  ;'
           +#13#10'declare PESOOBSCIO SYS$INT  ;'
           +#13#10'declare DPP_INSEMINAR_PRIMIPARA SYS$INT  ;'
           +#13#10'declare DPP_INSEMINAR_MULTIPARA SYS$INT  ;'
           +#13#10'declare IDADEMES SYS$FLOAT ;'
           +#13#10'declare DPP SYS$INT ;'
           +#13#10'declare NUMERO_COBERTURA SYS$INT_NN_0;'
           +#13#10'BEGIN'
           +#13#10''
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_CATEGORIA_FEMEA'', ''BEZ'' ) RETURNING_VALUES STATUS_BEZ ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_CATEGORIA_FEMEA'', ''NOV'' ) RETURNING_VALUES STATUS_NOV ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_CATEGORIA_FEMEA'', ''VS''  ) RETURNING_VALUES STATUS_VS ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_CATEGORIA_FEMEA'', ''VL''  ) RETURNING_VALUES STATUS_VL ;'
           +#13#10''
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_EVENTO_ZOO'',  ''CIO''               ) RETURNING_VALUES TIPO_EVENTO_ZOO_CIO ;'
           +#13#10''
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_PARTOABORTO'', ''ABORTO''            ) RETURNING_VALUES TIPO_PARTOABORTO_ABORTO ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_PARTOABORTO'', ''ABORTO_LACTACAO''   ) RETURNING_VALUES TIPO_PARTOABORTO_ABORTOLACTACAO ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_PARTOABORTO'', ''PARTO''             ) RETURNING_VALUES TIPO_PARTOABORTO_PARTO ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_PARTOABORTO'', ''COLETA''            ) RETURNING_VALUES TIPO_PARTOABORTO_COLETAEMBRIAO ;'
           +#13#10''
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_DOADOR_RECEPTOR'', ''ND''            ) RETURNING_VALUES TIPO_DOADOR_RECEPTOR_ND ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_DOADOR_RECEPTOR'', ''DOADOR''        ) RETURNING_VALUES TIPO_DOADOR_RECEPTOR_DOADOR ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_DOADOR_RECEPTOR'', ''RECEPTOR''      ) RETURNING_VALUES TIPO_DOADOR_RECEPTOR_RECEPTOR ;'
           +#13#10''
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''APTA''                 ) RETURNING_VALUES STATUS_REPRODUTIVO_APTA ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''EMCRESCIMENTO''        ) RETURNING_VALUES STATUS_REPRODUTIVO_EMCRESCIMENTO ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''INSEMINADA''           ) RETURNING_VALUES STATUS_REPRODUTIVO_INSEMINADA ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''PRENHE''               ) RETURNING_VALUES STATUS_REPRODUTIVO_PRENHE ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''VAZIA''                ) RETURNING_VALUES STATUS_REPRODUTIVO_VAZIA ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''ABORTADA''             ) RETURNING_VALUES STATUS_REPRODUTIVO_ABORTADA ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''PEV''                  ) RETURNING_VALUES STATUS_REPRODUTIVO_PEV ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''ABERTA''               ) RETURNING_VALUES STATUS_REPRODUTIVO_ABERTA ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''NAOINSEMINAR''         ) RETURNING_VALUES STATUS_REPRODUTIVO_NAOINSEMINAR ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''DOADORAAPTA''          ) RETURNING_VALUES STATUS_REPRODUTIVO_DOADORAAPTA ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''DOADORAINSEMINADA''    ) RETURNING_VALUES STATUS_REPRODUTIVO_DOADORAINSEMINADA ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''DOADORACOLETADA''      ) RETURNING_VALUES STATUS_REPRODUTIVO_DOADORACOLETADA ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''RECEPTORAAPTA''        ) RETURNING_VALUES STATUS_REPRODUTIVO_RECEPTORAAPTA ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''RECEPTORATRANSFERIDA'' ) RETURNING_VALUES STATUS_REPRODUTIVO_RECEPTORATRANSFERIDA ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''RECEPTORAPRENHE''      ) RETURNING_VALUES STATUS_REPRODUTIVO_RECEPTORAPRENHE ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''RECEPTORAVAZIA''       ) RETURNING_VALUES STATUS_REPRODUTIVO_RECEPTORAVAZIA ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''RECEPTORAABORTADA''    ) RETURNING_VALUES STATUS_REPRODUTIVO_RECEPTORAABORTADA ;'
           +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''COLETADA''             ) RETURNING_VALUES STATUS_REPRODUTIVO_COLETADA ;'
           +#13#10''
           +#13#10'  SELECT P.VALOR FROM ZOO_CFGPARAMNOVILHAS P WHERE P.SYS$VALUE = ''IDADE_OBS_CIO'' INTO :IDADEOBSCIO;'
           +#13#10'  SELECT P.VALOR FROM ZOO_CFGPARAMNOVILHAS P WHERE P.SYS$VALUE = ''PESO_OBS_CIO''  INTO :PESOOBSCIO;'
           +#13#10''
           +#13#10'  SELECT M.PRIMIPARA, M.MULTIPARA FROM ZOO_CFGPARAMMATRIZES M WHERE M.SYS$VALUE = ''DIAS_POS_PARTO_INSEMINAR'' '
           +#13#10'    INTO :DPP_INSEMINAR_PRIMIPARA, :DPP_INSEMINAR_MULTIPARA;'
           +#13#10''
           +#13#10'  SELECT F.KULTIMO_EVENTO_ZOOTECNICO,'
           +#13#10'         F.KULTIMO_CIO,'
           +#13#10'         F.NUMERO_MONTA,'
           +#13#10'         E.TIPOEVENTO,'
           +#13#10'         E.PRENHEZ,'
           +#13#10'         E.ABORTOPARTO,'
           +#13#10'         E.EMBRIOESCOLETADOS,'
           +#13#10'         F.DOADOR_RECEPTOR,'
           +#13#10'         A.STATUS,'
           +#13#10'         F.INTENCAO_DESCARTE,'
           +#13#10'         F.NASCIMENTO,'
           +#13#10'         F.ULTIMO_PARTO,'
           +#13#10'         F.ULTIMA_LACTACAO,'
           +#13#10'         F.NUMERO_LACTACAO,'
           +#13#10'         C.PESO'
           +#13#10'    FROM ZOO_ANIMAIS_FEMEA F'
           +#13#10'    INNER JOIN ZOO_ANIMAIS A ON A.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA'
           +#13#10'    LEFT  JOIN ZOO_EVENTOS_ZOOTECNICOS E ON E.KZOO_EVENTO_ZOOTECNICO = F.KULTIMO_EVENTO_ZOOTECNICO'
           +#13#10'    LEFT  JOIN ZOO_ANIMAL_CRESCIMENTO C ON C.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA'
           +#13#10'                                       AND C.DATA = (SELECT MAX(DATA)'
           +#13#10'                                                       FROM ZOO_ANIMAL_CRESCIMENTO'
           +#13#10'                                                      WHERE KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA )'
           +#13#10'   WHERE F.KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL_FEMEA'
           +#13#10'   INTO :KULTIMO_EVENTO_ZOOTECNICO,'
           +#13#10'        :KULTIMO_CIO,'
           +#13#10'        :NUMERO_MONTA,'
           +#13#10'        :TIPO_EVENTO,'
           +#13#10'        :PRENHEZ,'
           +#13#10'        :ABORTOPARTO,'
           +#13#10'        :EMBRIOESCOLETADOS,'
           +#13#10'        :DOADORRECEPTOR,'
           +#13#10'        :STATUS,'
           +#13#10'        :INTENCAO_DESCARTE,'
           +#13#10'        :NASCIMENTO,'
           +#13#10'        :ULTIMO_PARTO,'
           +#13#10'        :ULTIMA_LACTACAO,'
           +#13#10'        :NUMERO_LACTACAO,'
           +#13#10'        :ULTIMO_PESO;'
           +#13#10''
           +#13#10'  IDADEMES = CAST( CAST ( (CURRENT_TIMESTAMP - :NASCIMENTO) / 30.4 AS NUMERIC ( 5, 1 ) ) AS SYS$FLOAT );'
           +#13#10'  DPP      = TRUNC ( CURRENT_TIMESTAMP - :ULTIMA_LACTACAO );'
           +#13#10''
           +#13#10'  SELECT COUNT(1) FROM ZOO_EVENTOS_ZOOTECNICOS'
           +#13#10'   WHERE (DATAEVENTO > :ULTIMA_LACTACAO or (:ULTIMA_LACTACAO is null) )'
           +#13#10'     AND TIPOEVENTO > :TIPO_EVENTO_ZOO_CIO'
           +#13#10'     AND ABORTOPARTO IS NULL'
           +#13#10'     AND KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL_FEMEA'
           +#13#10'    INTO :NUMERO_COBERTURA;'
           +#13#10''
           +#13#10'  STATUS_REPRODUTIVO_ANIMAL ='
           +#13#10'  CASE'
           +#13#10'    WHEN ( :INTENCAO_DESCARTE = ''T'' ) THEN'
           +#13#10'          :STATUS_REPRODUTIVO_NAOINSEMINAR'
           +#13#10''
           +#13#10'    WHEN ( :STATUS = :STATUS_BEZ ) THEN'
           +#13#10'          :STATUS_REPRODUTIVO_EMCRESCIMENTO'
           +#13#10''
           +#13#10'    WHEN ( :STATUS = :STATUS_NOV AND :NUMERO_COBERTURA = 0 AND'
           +#13#10'           (:ULTIMO_PESO IS NULL or :ULTIMO_PESO < :PESOOBSCIO) AND :IDADEMES < :IDADEOBSCIO ) THEN'
           +#13#10'          :STATUS_REPRODUTIVO_EMCRESCIMENTO'
           +#13#10''
           +#13#10'    WHEN ( :NUMERO_COBERTURA > 0 AND :PRENHEZ IS NULL AND'
           +#13#10'           :TIPO_EVENTO <> :TIPO_EVENTO_ZOO_CIO AND'
           +#13#10'           :KULTIMO_CIO <> :KULTIMO_EVENTO_ZOOTECNICO AND'
           +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_DOADOR ) THEN'
           +#13#10'         :STATUS_REPRODUTIVO_DOADORAINSEMINADA'
           +#13#10''
           +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND*/ :PRENHEZ IS NULL AND'
           +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_DOADOR AND'
           +#13#10'           :KULTIMO_CIO <> :KULTIMO_EVENTO_ZOOTECNICO AND'
           +#13#10'           :EMBRIOESCOLETADOS IS NOT NULL ) THEN'
           +#13#10'         :STATUS_REPRODUTIVO_DOADORACOLETADA'
           +#13#10''
           +#13#10'    WHEN ( :NUMERO_COBERTURA > 0 AND :PRENHEZ IS NULL AND'
           +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR ) THEN'
           +#13#10'         :STATUS_REPRODUTIVO_RECEPTORATRANSFERIDA'
           +#13#10''
           +#13#10'    WHEN ( :PRENHEZ IS NULL AND'
           +#13#10'           :EMBRIOESCOLETADOS IS NOT NULL ) THEN'
           +#13#10'         :STATUS_REPRODUTIVO_COLETADA'
           +#13#10''
           +#13#10'    WHEN ( :NUMERO_COBERTURA > 0 AND :PRENHEZ IS NULL AND'
           +#13#10'           :KULTIMO_CIO <> :KULTIMO_EVENTO_ZOOTECNICO) THEN'
           +#13#10'         :STATUS_REPRODUTIVO_INSEMINADA'
           +#13#10''
           +#13#10'    WHEN ( :STATUS = :STATUS_NOV AND :NUMERO_COBERTURA = 0 AND'
           +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_DOADOR AND'
           +#13#10'           (:ULTIMO_PESO >= :PESOOBSCIO OR :IDADEMES >= :IDADEOBSCIO) ) THEN'
           +#13#10'          :STATUS_REPRODUTIVO_DOADORAAPTA'
           +#13#10''
           +#13#10'    WHEN ( :STATUS = :STATUS_NOV AND :NUMERO_COBERTURA = 0 AND'
           +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR AND'
           +#13#10'           (:ULTIMO_PESO >= :PESOOBSCIO OR :IDADEMES >= :IDADEOBSCIO) ) THEN'
           +#13#10'          :STATUS_REPRODUTIVO_RECEPTORAAPTA'
           +#13#10''
           +#13#10'    WHEN ( :STATUS = :STATUS_NOV AND (:PRENHEZ = ''F'' or :PRENHEZ IS NULL ) AND'
           +#13#10'          (:ULTIMO_PESO >= :PESOOBSCIO OR :IDADEMES >= :IDADEOBSCIO) ) THEN'
           +#13#10'         :STATUS_REPRODUTIVO_APTA'
           +#13#10''
           +#13#10'    WHEN ( :STATUS = :STATUS_VL AND :NUMERO_COBERTURA = 0 AND'
           +#13#10'          ( ( :NUMERO_LACTACAO = 0 AND :DPP < :DPP_INSEMINAR_PRIMIPARA ) OR'
           +#13#10'            ( :NUMERO_LACTACAO > 0 AND :DPP < :DPP_INSEMINAR_MULTIPARA ) ) ) THEN'
           +#13#10'         :STATUS_REPRODUTIVO_PEV'
           +#13#10''
           +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND */:PRENHEZ = ''T'' AND :ABORTOPARTO = :TIPO_PARTOABORTO_ABORTO AND'
           +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR  ) THEN'
           +#13#10'         :STATUS_REPRODUTIVO_RECEPTORAABORTADA'
           +#13#10''
           +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND*/ :PRENHEZ = ''T'' AND :ABORTOPARTO = :TIPO_PARTOABORTO_ABORTO  ) THEN'
           +#13#10'         :STATUS_REPRODUTIVO_ABORTADA'
           +#13#10''
           +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND*/ :PRENHEZ = ''T'' AND :ABORTOPARTO IS NULL AND'
           +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR) THEN'
           +#13#10'         :STATUS_REPRODUTIVO_RECEPTORAPRENHE'
           +#13#10''
           +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND*/ :PRENHEZ = ''T'' AND :ABORTOPARTO IS NULL ) THEN'
           +#13#10'         :STATUS_REPRODUTIVO_PRENHE'
           +#13#10''
           +#13#10''
           +#13#10''
           +#13#10'    WHEN ( :STATUS = :STATUS_VL AND /*:NUMERO_COBERTURA = 0 AND*/'
           +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_DOADOR AND'
           +#13#10'          ( ( :NUMERO_LACTACAO = 1 AND :DPP >= :DPP_INSEMINAR_PRIMIPARA ) OR'
           +#13#10'            ( :NUMERO_LACTACAO > 1 AND :DPP >= :DPP_INSEMINAR_MULTIPARA ) ) ) THEN'
           +#13#10'         :STATUS_REPRODUTIVO_DOADORAAPTA'
           +#13#10''
           +#13#10'    WHEN ( :STATUS = :STATUS_VL AND /*:NUMERO_COBERTURA = 0 AND*/'
           +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR AND'
           +#13#10'          ( ( :NUMERO_LACTACAO = 1 AND :DPP >= :DPP_INSEMINAR_PRIMIPARA ) OR'
           +#13#10'            ( :NUMERO_LACTACAO > 1 AND :DPP >= :DPP_INSEMINAR_MULTIPARA ) ) ) THEN'
           +#13#10'         :STATUS_REPRODUTIVO_RECEPTORAAPTA'
           +#13#10''
           +#13#10'    WHEN ( :STATUS = :STATUS_VL AND /*:NUMERO_COBERTURA = 0 AND*/'
           +#13#10'          ( ( :NUMERO_LACTACAO = 1 AND :DPP >= :DPP_INSEMINAR_PRIMIPARA ) OR'
           +#13#10'            ( :NUMERO_LACTACAO > 1 AND :DPP >= :DPP_INSEMINAR_MULTIPARA ) ) ) THEN'
           +#13#10'         :STATUS_REPRODUTIVO_APTA'
           +#13#10''
           +#13#10'    WHEN ( :STATUS = :STATUS_VS AND :NUMERO_COBERTURA = 0 ) THEN'
           +#13#10'         :STATUS_REPRODUTIVO_APTA'
           +#13#10''
           +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND*/ (:PRENHEZ = ''F'' or :PRENHEZ IS NULL ) AND'
           +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR ) THEN'
           +#13#10'         :STATUS_REPRODUTIVO_RECEPTORAVAZIA'
           +#13#10''
           +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND*/ (:PRENHEZ = ''F'' or :PRENHEZ IS NULL ) ) THEN'
           +#13#10'         :STATUS_REPRODUTIVO_VAZIA'
           +#13#10''
           +#13#10''
           +#13#10'  END;'
           +#13#10''
           +#13#10''
           +#13#10'  SUSPEND;'
           +#13#10''
           +#13#10'END';

   _CREATE_OR_REPLACE_VRPT_FEMEAS =
                  'CREATE OR ALTER VIEW VRPT_FEMEAS('
           +#13#10'    KZOO_ANIMAL_FEMEA,'
           +#13#10'    KCAD_FAZENDA,'
           +#13#10'    BRINCO,'
           +#13#10'    BRINCO_,'
           +#13#10'    NOMEESTABULO,'
           +#13#10'    NOMECOMPLETO,'
           +#13#10'    REGISTRO,'
           +#13#10'    DTORIGEM,'
           +#13#10'    LOCAL_ORIGEM,'
           +#13#10'    PRECO_COMPRA,'
           +#13#10'    VACA,'
           +#13#10'    STATUS,'
           +#13#10'    DATASTATUS,'
           +#13#10'    INTENCAO_DESCARTE,'
           +#13#10'    CRIADOR,'
           +#13#10'    CIDCRIA,'
           +#13#10'    PERSISTE,'
           +#13#10'    POTENCIAL,'
           +#13#10'    DATABRINCO,'
           +#13#10'    RACA,'
           +#13#10'    SISBOV,'
           +#13#10'    GRAUSANGUE,'
           +#13#10'    COMPOSICAORACA,'
           +#13#10'    KULTIMO_EVENTO_ZOOTECNICO,'
           +#13#10'    ULTIMO_EVENTO_ZOOTECNICO,'
           +#13#10'    KULTIMO_CIO,'
           +#13#10'    ULTIMO_CIO,'
           +#13#10'    NUMERO_CIO,'
           +#13#10'    KULTIMA_MONTA,'
           +#13#10'    ULTIMA_MONTA,'
           +#13#10'    NUMERO_MONTA,'
           +#13#10'    KULTIMO_PARTO,'
           +#13#10'    ULTIMO_PARTO,'
           +#13#10'    KPRIMEIRA_LACTACAO,'
           +#13#10'    PRIMEIRA_LACTACAO,'
           +#13#10'    NUMERO_PRIMEIRALACTACAO,'
           +#13#10'    KULTIMA_LACTACAO,'
           +#13#10'    ULTIMA_LACTACAO,'
           +#13#10'    NUMERO_LACTACAO,'
           +#13#10'    NUMERO_ABORTO,'
           +#13#10'    NUMERO_COLETA,'
           +#13#10'    DOADOR_RECEPTOR,'
           +#13#10'    KMAIOR_PESO,'
           +#13#10'    MAIOR_PESO,'
           +#13#10'    NASCIMENTO,'
           +#13#10'    RETIRO,'
           +#13#10'    LOTE,'
           +#13#10'    VLOTE1,'
           +#13#10'    VLOTE2,'
           +#13#10'    VLOTE3,'
           +#13#10'    NUCLEO,'
           +#13#10'    REBANHO,'
           +#13#10'    DATALOTE,'
           +#13#10'    DATARETIRO,'
           +#13#10'    DPPC,'
           +#13#10'    DPP,'
           +#13#10'    DUC,'
           +#13#10'    KPAI,'
           +#13#10'    NOMEPAI,'
           +#13#10'    KMAE,'
           +#13#10'    NOMEMAE,'
           +#13#10'    MAEPAI,'
           +#13#10'    MAEMAE,'
           +#13#10'    PAIPAI,'
           +#13#10'    PAIMAE,'
           +#13#10'    BISF_MAEPAI,'
           +#13#10'    BISF_MAEMAE,'
           +#13#10'    BISF_PAIPAI,'
           +#13#10'    BISF_PAIMAE,'
           +#13#10'    BISM_MAEPAI,'
           +#13#10'    BISM_MAEMAE,'
           +#13#10'    BISM_PAIPAI,'
           +#13#10'    BISM_PAIMAE,'
           +#13#10'    IDADE,'
           +#13#10'    IAP,'
           +#13#10'    KULTIMO_DIAGNOSTICO,'
           +#13#10'    KPENULTIMO_DIAGNOSTICO,'
           +#13#10'    KULTIMO_PROTOCOLO,'
           +#13#10'    KPENULTIMO_PROTOCOLO,'
           +#13#10'    KULTIMA_TAREFA,'
           +#13#10'    KPENULTIMA_TAREFA,'
           +#13#10'    DATADESMAME,'
           +#13#10'    STATUS_REPRODUTIVO)'
           +#13#10'AS'
           +#13#10'SELECT'
           +#13#10'    F.KZOO_ANIMAL_FEMEA,'
           +#13#10'    A.KCAD_FAZENDA,'
           +#13#10'    A.BRINCO,'
           +#13#10'    A.BRINCO_,'
           +#13#10'    A.NOMEESTABULO,'
           +#13#10'    A.NOMECOMPLETO,'
           +#13#10'    A.REGISTRO,'
           +#13#10'    A.DTORIGEM,'
           +#13#10'    A.LOCAL_ORIGEM,'
           +#13#10'    A.PRECO_COMPRA,'
           +#13#10'    A.VACA,'
           +#13#10'    (SELECT SYS$DESCRIPTION FROM SYS$TYPES_GETDESCRIPTION ( ''SIGLA_STATUS_FEMEA'', A.STATUS )) STATUS,'
           +#13#10'    A.DATASTATUS,'
           +#13#10'    F.INTENCAO_DESCARTE,'
           +#13#10'    A.CRIADOR,'
           +#13#10'    A.CIDCRIA,'
           +#13#10'    A.PERSISTE,'
           +#13#10'    A.POTENCIAL,'
           +#13#10'    A.DATABRINCO,'
           +#13#10'    A.RACA,'
           +#13#10'    A.SISBOV,'
           +#13#10'    A.GRAUSANGUE,'
           +#13#10'    A.COMPOSICAORACA,'
           +#13#10'    F.KULTIMO_EVENTO_ZOOTECNICO,'
           +#13#10'    F.ULTIMO_EVENTO_ZOOTECNICO,'
           +#13#10'    F.KULTIMO_CIO,'
           +#13#10'    F.ULTIMO_CIO,'
           +#13#10'    F.NUMERO_CIO,'
           +#13#10'    F.KULTIMA_MONTA,'
           +#13#10'    F.ULTIMA_MONTA,'
           +#13#10'    F.NUMERO_MONTA,'
           +#13#10'    F.KULTIMO_PARTO,'
           +#13#10'    F.ULTIMO_PARTO,'
           +#13#10'    F.KPRIMEIRA_LACTACAO,'
           +#13#10'    F.PRIMEIRA_LACTACAO,'
           +#13#10'    F.NUMERO_PRIMEIRALACTACAO,'
           +#13#10'    F.KULTIMA_LACTACAO,'
           +#13#10'    F.ULTIMA_LACTACAO,'
           +#13#10'    F.NUMERO_LACTACAO,'
           +#13#10'    F.NUMERO_ABORTO,'
           +#13#10'    F.NUMERO_COLETA,'
           +#13#10'    (SELECT SYS$DESCRIPTION FROM SYS$TYPES_GETDESCRIPTION ( ''TIPO_DOADOR_RECEPTOR'', F.DOADOR_RECEPTOR )) DOADOR_RECEPTOR,'
           +#13#10'    F.KMAIOR_PESO,'
           +#13#10'    F.MAIOR_PESO,'
           +#13#10'    F.NASCIMENTO,'
           +#13#10'    F.RETIRO,'
           +#13#10'    F.LOTE,'
           +#13#10'    F.VLOTE1,'
           +#13#10'    F.VLOTE2,'
           +#13#10'    F.VLOTE3,'
           +#13#10'    F.NUCLEO,'
           +#13#10'    F.REBANHO,'
           +#13#10'    F.DATALOTE,'
           +#13#10'    F.DATARETIRO,'
           +#13#10'   (SELECT CAST ( CAST ( E.DATAEVENTO AS DATE ) - CAST ( F.ULTIMA_LACTACAO AS DATE ) AS INTEGER) FROM ZOO_EVENTOS_ZOOTECNICOS E WHERE E.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND E.DATAEVENTO > F.ULTIMA_LACTACAO ORDER BY E.DATAEVENTO ROWS 1) DPPC,'
           +#13#10'  --  0 DPPC,'
           +#13#10'    TRUNC ( CURRENT_TIMESTAMP - F.ULTIMA_LACTACAO ) DPP,'
           +#13#10'    TRUNC ( CURRENT_TIMESTAMP - F.ULTIMO_CIO ) DUC,'
           +#13#10'    DPAI1.KZOO_ANIMAL_PARENT  KPAI,'
           +#13#10'    DPAI1.NOMEANIMAL_PARENTE  NOMEPAI,'
           +#13#10'    DMAE1.KZOO_ANIMAL_PARENT  KMAE,'
           +#13#10'    DMAE1.NOMEANIMAL_PARENTE  NOMEMAE,'
           +#13#10'    DMAEPAI.NOMEANIMAL_PARENTE  MAEPAI,'
           +#13#10'    DMAEMAE.NOMEANIMAL_PARENTE  MAEMAE,'
           +#13#10'    DPAIPAI.NOMEANIMAL_PARENTE  PAIPAI,'
           +#13#10'    DPAIMAE.NOMEANIMAL_PARENTE  PAIMAE,'
           +#13#10''
           +#13#10'    BISF_MAEPAI.NOMEANIMAL_PARENTE BISF_MAEPAI,'
           +#13#10'    BISF_MAEMAE.NOMEANIMAL_PARENTE BISF_MAEMAE,'
           +#13#10'    BISF_PAIPAI.NOMEANIMAL_PARENTE BISF_PAIPAI,'
           +#13#10'    BISF_PAIMAE.NOMEANIMAL_PARENTE BISF_PAIMAE,'
           +#13#10''
           +#13#10'    BISM_MAEPAI.NOMEANIMAL_PARENTE BISM_MAEPAI,'
           +#13#10'    BISM_MAEMAE.NOMEANIMAL_PARENTE BISM_MAEMAE,'
           +#13#10'    BISM_PAIPAI.NOMEANIMAL_PARENTE BISM_PAIPAI,'
           +#13#10'    BISM_PAIMAE.NOMEANIMAL_PARENTE BISM_PAIMAE,'
           +#13#10''
           +#13#10'    CAST ( CAST ( (CURRENT_TIMESTAMP - F.NASCIMENTO) / 30.4 AS NUMERIC ( 5, 1 ) ) AS SYS$FLOAT )IDADE,'
           +#13#10'    CAST ( CAST ( (F.ULTIMO_PARTO - F.NASCIMENTO) / 30.4  AS NUMERIC ( 5, 1 ) ) AS SYS$FLOAT ) IAP,'
           +#13#10'    (SELECT UD.KZOO_ANIMAL_DIAGNOSTICO FROM ZOO_ANIMAL_DIAGNOSTICOS UD WHERE UD.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND UD.EXCLUIDO = ''F'' ORDER BY UD.DATA DESC  ROWS 1 TO 1 ) KULTIMO_DIAGNOSTICO,'
           +#13#10'    (SELECT UD.KZOO_ANIMAL_DIAGNOSTICO FROM ZOO_ANIMAL_DIAGNOSTICOS UD WHERE UD.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND UD.EXCLUIDO = ''F''  ORDER BY UD.DATA DESC  ROWS 2 TO 2 ) KPENULTIMO_DIAGNOSTICO,'
           +#13#10'    (SELECT UP.KZOO_ANIMAL_PROTOCOLO FROM ZOO_ANIMAL_PROTOCOLOS UP WHERE UP.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND UP.EXCLUIDO = ''F'' ORDER BY UP.DATA DESC  ROWS 1 TO 1 ) KULTIMO_PROTOCOLO,'
           +#13#10'    (SELECT UP.KZOO_ANIMAL_PROTOCOLO FROM ZOO_ANIMAL_PROTOCOLOS UP WHERE UP.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND UP.EXCLUIDO = ''F'' ORDER BY UP.DATA DESC  ROWS 2 TO 2 ) KPENULTIMO_PROTOCOLO,'
           +#13#10'    (SELECT UT.KZOO_ANIMAL_TAREFA FROM ZOO_ANIMAL_TAREFAS UT'
           +#13#10'     WHERE UT.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA AND UT.EXCLUIDO = ''F'' AND UT.STATUS = (SELECT SYS$VALUE FROM SYS$TYPES_GETVALUE ( ''STATUS_TAREFA'', ''EXECUTADA'' ))'
           +#13#10'     ORDER BY UT.DATASTATUS DESC  ROWS 1 TO 1 ) KULTIMA_TAREFA,'
           +#13#10'    (SELECT UT.KZOO_ANIMAL_TAREFA FROM ZOO_ANIMAL_TAREFAS UT'
           +#13#10'     WHERE UT.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA AND UT.EXCLUIDO = ''F'' AND UT.STATUS = (SELECT SYS$VALUE FROM SYS$TYPES_GETVALUE ( ''STATUS_TAREFA'', ''EXECUTADA'' ))'
           +#13#10'     ORDER BY UT.DATASTATUS DESC  ROWS 2 TO 2 ) KPENULTIMA_TAREFA,'
           +#13#10'     A.DATADESMAME,'
           +#13#10'     --(SELECT CAST ( SYS$DESCRIPTION AS VARCHAR(50) ) SYS$DESCRIPTION FROM ZOO_GET_STATUS_REPRODUTIVO( F.KZOO_ANIMAL_FEMEA )) "STATUS_REPRODUTIVO"'
           +#13#10'     (SELECT CAST ( STATUS_REPRODUTIVO_ANIMAL AS INTEGER ) SYS$VALUE FROM ZOO_GET_STATUS_REPRODUTIVO( F.KZOO_ANIMAL_FEMEA )) "STATUS_REPRODUTIVO"'
           +#13#10'FROM ZOO_ANIMAIS_FEMEA F'
           +#13#10'INNER JOIN ZOO_ANIMAIS A ON A.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA'
           +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(F.KZOO_ANIMAL_FEMEA, 1, 0) DPAI1 ON DPAI1.TIPOPARENTESCO = 1 AND DPAI1.PARENTLEVEL = 1'
           +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(F.KZOO_ANIMAL_FEMEA, 1, 0) DMAE1 ON DMAE1.TIPOPARENTESCO = 2 AND DMAE1.PARENTLEVEL = 1'
           +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAI1.KZOO_ANIMAL_PARENT, 1, 0) DMAEPAI ON DMAEPAI.TIPOPARENTESCO = 2 AND DMAEPAI.PARENTLEVEL = 1'
           +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAE1.KZOO_ANIMAL_PARENT, 1, 0) DMAEMAE ON DMAEMAE.TIPOPARENTESCO = 2 AND DMAEMAE.PARENTLEVEL = 1'
           +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAI1.KZOO_ANIMAL_PARENT, 1, 0) DPAIPAI ON DPAIPAI.TIPOPARENTESCO = 1 AND DPAIPAI.PARENTLEVEL = 1'
           +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAE1.KZOO_ANIMAL_PARENT, 1, 0) DPAIMAE ON DPAIMAE.TIPOPARENTESCO = 1 AND DPAIMAE.PARENTLEVEL = 1'
           +#13#10''
           +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEPAI.KZOO_ANIMAL_PARENT, 1, 0) BISF_MAEPAI ON BISF_MAEPAI.TIPOPARENTESCO = 2 AND BISF_MAEPAI.PARENTLEVEL = 1'
           +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEMAE.KZOO_ANIMAL_PARENT, 1, 0) BISF_MAEMAE ON BISF_MAEMAE.TIPOPARENTESCO = 2 AND BISF_MAEMAE.PARENTLEVEL = 1'
           +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIPAI.KZOO_ANIMAL_PARENT, 1, 0) BISF_PAIPAI ON BISF_PAIPAI.TIPOPARENTESCO = 2 AND BISF_PAIPAI.PARENTLEVEL = 1'
           +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIMAE.KZOO_ANIMAL_PARENT, 1, 0) BISF_PAIMAE ON BISF_PAIMAE.TIPOPARENTESCO = 2 AND BISF_PAIMAE.PARENTLEVEL = 1'
           +#13#10''
           +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEPAI.KZOO_ANIMAL_PARENT, 1, 0) BISM_MAEPAI ON BISM_MAEPAI.TIPOPARENTESCO = 1 AND BISM_MAEPAI.PARENTLEVEL = 1'
           +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEMAE.KZOO_ANIMAL_PARENT, 1, 0) BISM_MAEMAE ON BISM_MAEMAE.TIPOPARENTESCO = 1 AND BISM_MAEMAE.PARENTLEVEL = 1'
           +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIPAI.KZOO_ANIMAL_PARENT, 1, 0) BISM_PAIPAI ON BISM_PAIPAI.TIPOPARENTESCO = 1 AND BISM_PAIPAI.PARENTLEVEL = 1'
           +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIMAE.KZOO_ANIMAL_PARENT, 1, 0) BISM_PAIMAE ON BISM_PAIMAE.TIPOPARENTESCO = 1 AND BISM_PAIMAE.PARENTLEVEL = 1'
            ;

begin
  ExecuteDirect( _CREATE_OR_REPLACE_ZOO_GET_STATUS_REPRODUTIVO );
  ExecuteDirect( _CREATE_OR_REPLACE_VRPT_FEMEAS );
end;


procedure TDBZootecnicoUpdate._5_001_86;
const
   _CREATE_OR_REPLACE_VRPT_FEMEAS =
                   'CREATE OR ALTER VIEW VRPT_FEMEAS('
            +#13#10'    KZOO_ANIMAL_FEMEA,'
            +#13#10'    KCAD_FAZENDA,'
            +#13#10'    BRINCO,'
            +#13#10'    BRINCO_,'
            +#13#10'    NOMEESTABULO,'
            +#13#10'    NOMECOMPLETO,'
            +#13#10'    REGISTRO,'
            +#13#10'    DTORIGEM,'
            +#13#10'    LOCAL_ORIGEM,'
            +#13#10'    PRECO_COMPRA,'
            +#13#10'    VACA,'
            +#13#10'    STATUS,'
            +#13#10'    DATASTATUS,'
            +#13#10'    INTENCAO_DESCARTE,'
            +#13#10'    CRIADOR,'
            +#13#10'    CIDCRIA,'
            +#13#10'    PERSISTE,'
            +#13#10'    POTENCIAL,'
            +#13#10'    DATABRINCO,'
            +#13#10'    RACA,'
            +#13#10'    SISBOV,'
            +#13#10'    GRAUSANGUE,'
            +#13#10'    COMPOSICAORACA,'
            +#13#10'    KULTIMO_EVENTO_ZOOTECNICO,'
            +#13#10'    ULTIMO_EVENTO_ZOOTECNICO,'
            +#13#10'    KULTIMO_CIO,'
            +#13#10'    ULTIMO_CIO,'
            +#13#10'    NUMERO_CIO,'
            +#13#10'    KULTIMA_MONTA,'
            +#13#10'    ULTIMA_MONTA,'
            +#13#10'    NUMERO_MONTA,'
            +#13#10'    KULTIMO_PARTO,'
            +#13#10'    ULTIMO_PARTO,'
            +#13#10'    KPRIMEIRA_LACTACAO,'
            +#13#10'    PRIMEIRA_LACTACAO,'
            +#13#10'    NUMERO_PRIMEIRALACTACAO,'
            +#13#10'    KULTIMA_LACTACAO,'
            +#13#10'    ULTIMA_LACTACAO,'
            +#13#10'    NUMERO_LACTACAO,'
            +#13#10'    NUMERO_ABORTO,'
            +#13#10'    NUMERO_COLETA,'
            +#13#10'    DOADOR_RECEPTOR,'
            +#13#10'    KMAIOR_PESO,'
            +#13#10'    MAIOR_PESO,'
            +#13#10'    NASCIMENTO,'
            +#13#10'    RETIRO,'
            +#13#10'    LOTE,'
            +#13#10'    VLOTE1,'
            +#13#10'    VLOTE2,'
            +#13#10'    VLOTE3,'
            +#13#10'    NUCLEO,'
            +#13#10'    REBANHO,'
            +#13#10'    DATALOTE,'
            +#13#10'    DATARETIRO,'
            +#13#10'    DPPC,'
            +#13#10'    DPP,'
            +#13#10'    DUC,'
            +#13#10'    KPAI,'
            +#13#10'    NOMEPAI,'
            +#13#10'    KMAE,'
            +#13#10'    NOMEMAE,'
            +#13#10'    MAEPAI,'
            +#13#10'    MAEMAE,'
            +#13#10'    PAIPAI,'
            +#13#10'    PAIMAE,'
            +#13#10'    BISF_MAEPAI,'
            +#13#10'    BISF_MAEMAE,'
            +#13#10'    BISF_PAIPAI,'
            +#13#10'    BISF_PAIMAE,'
            +#13#10'    BISM_MAEPAI,'
            +#13#10'    BISM_MAEMAE,'
            +#13#10'    BISM_PAIPAI,'
            +#13#10'    BISM_PAIMAE,'
            +#13#10'    IDADE,'
            +#13#10'    IAP,'
            +#13#10'    KULTIMO_DIAGNOSTICO,'
            +#13#10'    KPENULTIMO_DIAGNOSTICO,'
            +#13#10'    KULTIMO_PROTOCOLO,'
            +#13#10'    KPENULTIMO_PROTOCOLO,'
            +#13#10'    KULTIMA_TAREFA,'
            +#13#10'    KPENULTIMA_TAREFA,'
            +#13#10'    DATADESMAME,'
            +#13#10'    STATUS_REPRODUTIVO)'
            +#13#10'AS'
            +#13#10'SELECT'
            +#13#10'    F.KZOO_ANIMAL_FEMEA,'
            +#13#10'    A.KCAD_FAZENDA,'
            +#13#10'    A.BRINCO,'
            +#13#10'    A.BRINCO_,'
            +#13#10'    A.NOMEESTABULO,'
            +#13#10'    A.NOMECOMPLETO,'
            +#13#10'    A.REGISTRO,'
            +#13#10'    A.DTORIGEM,'
            +#13#10'    A.LOCAL_ORIGEM,'
            +#13#10'    A.PRECO_COMPRA,'
            +#13#10'    A.VACA,'
            +#13#10'    (SELECT SYS$DESCRIPTION FROM SYS$TYPES_GETDESCRIPTION ( ''SIGLA_STATUS_FEMEA'', A.STATUS )) STATUS,'
            +#13#10'    A.DATASTATUS,'
            +#13#10'    F.INTENCAO_DESCARTE,'
            +#13#10'    A.CRIADOR,'
            +#13#10'    A.CIDCRIA,'
            +#13#10'    A.PERSISTE,'
            +#13#10'    A.POTENCIAL,'
            +#13#10'    A.DATABRINCO,'
            +#13#10'    A.RACA,'
            +#13#10'    A.SISBOV,'
            +#13#10'    A.GRAUSANGUE,'
            +#13#10'    A.COMPOSICAORACA,'
            +#13#10'    F.KULTIMO_EVENTO_ZOOTECNICO,'
            +#13#10'    F.ULTIMO_EVENTO_ZOOTECNICO,'
            +#13#10'    F.KULTIMO_CIO,'
            +#13#10'    F.ULTIMO_CIO,'
            +#13#10'    F.NUMERO_CIO,'
            +#13#10'    F.KULTIMA_MONTA,'
            +#13#10'    F.ULTIMA_MONTA,'
            +#13#10'    F.NUMERO_MONTA,'
            +#13#10'    F.KULTIMO_PARTO,'
            +#13#10'    F.ULTIMO_PARTO,'
            +#13#10'    F.KPRIMEIRA_LACTACAO,'
            +#13#10'    F.PRIMEIRA_LACTACAO,'
            +#13#10'    F.NUMERO_PRIMEIRALACTACAO,'
            +#13#10'    F.KULTIMA_LACTACAO,'
            +#13#10'    F.ULTIMA_LACTACAO,'
            +#13#10'    F.NUMERO_LACTACAO,'
            +#13#10'    F.NUMERO_ABORTO,'
            +#13#10'    F.NUMERO_COLETA,'
            +#13#10'    (SELECT SYS$DESCRIPTION FROM SYS$TYPES_GETDESCRIPTION ( ''TIPO_DOADOR_RECEPTOR'', F.DOADOR_RECEPTOR )) DOADOR_RECEPTOR,'
            +#13#10'    F.KMAIOR_PESO,'
            +#13#10'    F.MAIOR_PESO,'
            +#13#10'    F.NASCIMENTO,'
            +#13#10'    F.RETIRO,'
            +#13#10'    F.LOTE,'
            +#13#10'    F.VLOTE1,'
            +#13#10'    F.VLOTE2,'
            +#13#10'    F.VLOTE3,'
            +#13#10'    F.NUCLEO,'
            +#13#10'    F.REBANHO,'
            +#13#10'    F.DATALOTE,'
            +#13#10'    F.DATARETIRO,'
            +#13#10'   (SELECT CAST ( CAST ( E.DATAEVENTO AS DATE ) - CAST ( F.ULTIMA_LACTACAO AS DATE ) AS INTEGER) FROM ZOO_EVENTOS_ZOOTECNICOS E WHERE E.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND E.DATAEVENTO > F.ULTIMA_LACTACAO ORDER BY E.DATAEVENTO ROWS 1) DPPC,'
            +#13#10'  --  0 DPPC,'
            +#13#10'    TRUNC ( CURRENT_TIMESTAMP - F.ULTIMA_LACTACAO ) DPP,'
            +#13#10'    TRUNC ( CURRENT_TIMESTAMP - F.ULTIMO_CIO ) DUC,'
            +#13#10'    DPAI1.KZOO_ANIMAL_PARENT  KPAI,'
            +#13#10'    DPAI1.NOMEANIMAL_PARENTE  NOMEPAI,'
            +#13#10'    DMAE1.KZOO_ANIMAL_PARENT  KMAE,'
            +#13#10'    DMAE1.NOMEANIMAL_PARENTE  NOMEMAE,'
            +#13#10'    DMAEPAI.NOMEANIMAL_PARENTE  MAEPAI,'
            +#13#10'    DMAEMAE.NOMEANIMAL_PARENTE  MAEMAE,'
            +#13#10'    DPAIPAI.NOMEANIMAL_PARENTE  PAIPAI,'
            +#13#10'    DPAIMAE.NOMEANIMAL_PARENTE  PAIMAE,'
            +#13#10''
            +#13#10'    BISF_MAEPAI.NOMEANIMAL_PARENTE BISF_MAEPAI,'
            +#13#10'    BISF_MAEMAE.NOMEANIMAL_PARENTE BISF_MAEMAE,'
            +#13#10'    BISF_PAIPAI.NOMEANIMAL_PARENTE BISF_PAIPAI,'
            +#13#10'    BISF_PAIMAE.NOMEANIMAL_PARENTE BISF_PAIMAE,'
            +#13#10''
            +#13#10'    BISM_MAEPAI.NOMEANIMAL_PARENTE BISM_MAEPAI,'
            +#13#10'    BISM_MAEMAE.NOMEANIMAL_PARENTE BISM_MAEMAE,'
            +#13#10'    BISM_PAIPAI.NOMEANIMAL_PARENTE BISM_PAIPAI,'
            +#13#10'    BISM_PAIMAE.NOMEANIMAL_PARENTE BISM_PAIMAE,'
            +#13#10''
            +#13#10'    CAST ( CAST ( (CURRENT_TIMESTAMP - F.NASCIMENTO) / 30.4 AS NUMERIC ( 5, 1 ) ) AS SYS$FLOAT )IDADE,'
            +#13#10'    CAST ( CAST ( (F.ULTIMO_PARTO - F.NASCIMENTO) / 30.4  AS NUMERIC ( 5, 1 ) ) AS SYS$FLOAT ) IAP,'
            +#13#10'    (SELECT UD.KZOO_ANIMAL_DIAGNOSTICO FROM ZOO_ANIMAL_DIAGNOSTICOS UD WHERE UD.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND UD.EXCLUIDO = ''F'' ORDER BY UD.DATA DESC  ROWS 1 TO 1 ) KULTIMO_DIAGNOSTICO,'
            +#13#10'    (SELECT UD.KZOO_ANIMAL_DIAGNOSTICO FROM ZOO_ANIMAL_DIAGNOSTICOS UD WHERE UD.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND UD.EXCLUIDO = ''F''  ORDER BY UD.DATA DESC  ROWS 2 TO 2 ) KPENULTIMO_DIAGNOSTICO,'
            +#13#10'    (SELECT UP.KZOO_ANIMAL_PROTOCOLO FROM ZOO_ANIMAL_PROTOCOLOS UP WHERE UP.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND UP.EXCLUIDO = ''F'' ORDER BY UP.DATA DESC  ROWS 1 TO 1 ) KULTIMO_PROTOCOLO,'
            +#13#10'    (SELECT UP.KZOO_ANIMAL_PROTOCOLO FROM ZOO_ANIMAL_PROTOCOLOS UP WHERE UP.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND UP.EXCLUIDO = ''F'' ORDER BY UP.DATA DESC  ROWS 2 TO 2 ) KPENULTIMO_PROTOCOLO,'
            +#13#10'    (SELECT UT.KZOO_ANIMAL_TAREFA FROM ZOO_ANIMAL_TAREFAS UT'
            +#13#10'     WHERE UT.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA AND UT.EXCLUIDO = ''F'' AND UT.STATUS = (SELECT SYS$VALUE FROM SYS$TYPES_GETVALUE ( ''STATUS_TAREFA'', ''EXECUTADA'' ))'
            +#13#10'     ORDER BY UT.DATASTATUS DESC  ROWS 1 TO 1 ) KULTIMA_TAREFA,'
            +#13#10'    (SELECT UT.KZOO_ANIMAL_TAREFA FROM ZOO_ANIMAL_TAREFAS UT'
            +#13#10'     WHERE UT.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA AND UT.EXCLUIDO = ''F'' AND UT.STATUS = (SELECT SYS$VALUE FROM SYS$TYPES_GETVALUE ( ''STATUS_TAREFA'', ''EXECUTADA'' ))'
            +#13#10'     ORDER BY UT.DATASTATUS DESC  ROWS 2 TO 2 ) KPENULTIMA_TAREFA,'
            +#13#10'     A.DATADESMAME,'
            +#13#10'     (SELECT CAST ( SYS$DESCRIPTION AS VARCHAR(50) ) SYS$DESCRIPTION FROM ZOO_GET_STATUS_REPRODUTIVO( F.KZOO_ANIMAL_FEMEA )) "STATUS_REPRODUTIVO"'
            +#13#10'FROM ZOO_ANIMAIS_FEMEA F'
            +#13#10'INNER JOIN ZOO_ANIMAIS A ON A.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(F.KZOO_ANIMAL_FEMEA, 1, 0) DPAI1 ON DPAI1.TIPOPARENTESCO = 1 AND DPAI1.PARENTLEVEL = 1'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(F.KZOO_ANIMAL_FEMEA, 1, 0) DMAE1 ON DMAE1.TIPOPARENTESCO = 2 AND DMAE1.PARENTLEVEL = 1'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAI1.KZOO_ANIMAL_PARENT, 1, 0) DMAEPAI ON DMAEPAI.TIPOPARENTESCO = 2 AND DMAEPAI.PARENTLEVEL = 1'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAE1.KZOO_ANIMAL_PARENT, 1, 0) DMAEMAE ON DMAEMAE.TIPOPARENTESCO = 2 AND DMAEMAE.PARENTLEVEL = 1'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAI1.KZOO_ANIMAL_PARENT, 1, 0) DPAIPAI ON DPAIPAI.TIPOPARENTESCO = 1 AND DPAIPAI.PARENTLEVEL = 1'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAE1.KZOO_ANIMAL_PARENT, 1, 0) DPAIMAE ON DPAIMAE.TIPOPARENTESCO = 1 AND DPAIMAE.PARENTLEVEL = 1'
            +#13#10''
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEPAI.KZOO_ANIMAL_PARENT, 1, 0) BISF_MAEPAI ON BISF_MAEPAI.TIPOPARENTESCO = 2 AND BISF_MAEPAI.PARENTLEVEL = 1'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEMAE.KZOO_ANIMAL_PARENT, 1, 0) BISF_MAEMAE ON BISF_MAEMAE.TIPOPARENTESCO = 2 AND BISF_MAEMAE.PARENTLEVEL = 1'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIPAI.KZOO_ANIMAL_PARENT, 1, 0) BISF_PAIPAI ON BISF_PAIPAI.TIPOPARENTESCO = 2 AND BISF_PAIPAI.PARENTLEVEL = 1'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIMAE.KZOO_ANIMAL_PARENT, 1, 0) BISF_PAIMAE ON BISF_PAIMAE.TIPOPARENTESCO = 2 AND BISF_PAIMAE.PARENTLEVEL = 1'
            +#13#10''
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEPAI.KZOO_ANIMAL_PARENT, 1, 0) BISM_MAEPAI ON BISM_MAEPAI.TIPOPARENTESCO = 1 AND BISM_MAEPAI.PARENTLEVEL = 1'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEMAE.KZOO_ANIMAL_PARENT, 1, 0) BISM_MAEMAE ON BISM_MAEMAE.TIPOPARENTESCO = 1 AND BISM_MAEMAE.PARENTLEVEL = 1'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIPAI.KZOO_ANIMAL_PARENT, 1, 0) BISM_PAIPAI ON BISM_PAIPAI.TIPOPARENTESCO = 1 AND BISM_PAIPAI.PARENTLEVEL = 1'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIMAE.KZOO_ANIMAL_PARENT, 1, 0) BISM_PAIMAE ON BISM_PAIMAE.TIPOPARENTESCO = 1 AND BISM_PAIMAE.PARENTLEVEL = 1'
            ;
begin
  ExecuteDirect( _CREATE_OR_REPLACE_VRPT_FEMEAS );
end;


procedure TDBZootecnicoUpdate._5_001_85;
const
    _CREATE_OR_ALTER_PROCEDURE_ZOO_GET_STATUS_REPRODUTIVO =
               'CREATE OR ALTER PROCEDURE ZOO_GET_STATUS_REPRODUTIVO ('
        +#13#10'    KZOO_ANIMAL_FEMEA SYS$FKGUID20)'
        +#13#10'returns ('
        +#13#10'    SYS$DESCRIPTION type of SYS$ST_DESCRIPTION)'
        +#13#10'AS'
        +#13#10'declare KULTIMO_EVENTO_ZOOTECNICO SYS$FKGUID20 ;'
        +#13#10'declare KULTIMO_CIO SYS$FKGUID20 ;'
        +#13#10'declare NUMERO_MONTA SYS$INT_NN_0;'
        +#13#10'declare TIPO_EVENTO SYS$INT ;'
        +#13#10'declare PRENHEZ SYS$BOOL_NULL ;'
        +#13#10'declare ABORTOPARTO SYS$INT ;'
        +#13#10'declare EMBRIOESCOLETADOS SYS$INT ;'
        +#13#10'declare DOADORRECEPTOR SYS$INT ;'
        +#13#10'declare STATUS SYS$INT ;'
        +#13#10'declare INTENCAO_DESCARTE SYS$BOOL_F ;'
        +#13#10'declare NASCIMENTO SYS$DATE_NN ;'
        +#13#10'declare ULTIMA_LACTACAO SYS$DATE ;'
        +#13#10'declare NUMERO_LACTACAO SYS$INT_NN_0;'
        +#13#10'declare ULTIMO_PARTO SYS$DATE ;'
        +#13#10'declare ULTIMO_PESO SYS$INT ;'
        +#13#10'declare STATUS_BEZ SYS$INT ;'
        +#13#10'declare STATUS_NOV SYS$INT ;'
        +#13#10'declare STATUS_VS SYS$INT ;'
        +#13#10'declare STATUS_VL SYS$INT ;'
        +#13#10'declare TIPO_EVENTO_ZOO_CIO SYS$INT ;'
        +#13#10'declare TIPO_PARTOABORTO_ABORTO SYS$INT ;'
        +#13#10'declare TIPO_PARTOABORTO_ABORTOLACTACAO SYS$INT ;'
        +#13#10'declare TIPO_PARTOABORTO_PARTO SYS$INT ;'
        +#13#10'declare TIPO_PARTOABORTO_COLETAEMBRIAO SYS$INT ;'
        +#13#10'declare TIPO_DOADOR_RECEPTOR_ND SYS$INT ;'
        +#13#10'declare TIPO_DOADOR_RECEPTOR_DOADOR SYS$INT ;'
        +#13#10'declare TIPO_DOADOR_RECEPTOR_RECEPTOR SYS$INT ;'
        +#13#10'declare STATUS_REPRODUTIVO_APTA SYS$INT ;'
        +#13#10'declare STATUS_REPRODUTIVO_EMCRESCIMENTO SYS$INT ;'
        +#13#10'declare STATUS_REPRODUTIVO_INSEMINADA SYS$INT ;'
        +#13#10'declare STATUS_REPRODUTIVO_PRENHE SYS$INT ;'
        +#13#10'declare STATUS_REPRODUTIVO_VAZIA SYS$INT ;'
        +#13#10'declare STATUS_REPRODUTIVO_ABORTADA SYS$INT ;'
        +#13#10'declare STATUS_REPRODUTIVO_PEV SYS$INT ;'
        +#13#10'declare STATUS_REPRODUTIVO_ABERTA SYS$INT ;'
        +#13#10'declare STATUS_REPRODUTIVO_NAOINSEMINAR SYS$INT ;'
        +#13#10'declare STATUS_REPRODUTIVO_DOADORAAPTA SYS$INT ;'
        +#13#10'declare STATUS_REPRODUTIVO_DOADORAINSEMINADA SYS$INT ;'
        +#13#10'declare STATUS_REPRODUTIVO_DOADORACOLETADA SYS$INT ;'
        +#13#10'declare STATUS_REPRODUTIVO_RECEPTORAAPTA SYS$INT ;'
        +#13#10'declare STATUS_REPRODUTIVO_RECEPTORATRANSFERIDA SYS$INT ;'
        +#13#10'declare STATUS_REPRODUTIVO_RECEPTORAPRENHE SYS$INT ;'
        +#13#10'declare STATUS_REPRODUTIVO_RECEPTORAVAZIA SYS$INT ;'
        +#13#10'declare STATUS_REPRODUTIVO_RECEPTORAABORTADA SYS$INT ;'
        +#13#10'declare STATUS_REPRODUTIVO_COLETADA SYS$INT ;'
        +#13#10'declare IDADEOBSCIO SYS$INT  ;'
        +#13#10'declare PESOOBSCIO SYS$INT  ;'
        +#13#10'declare DPP_INSEMINAR_PRIMIPARA SYS$INT  ;'
        +#13#10'declare DPP_INSEMINAR_MULTIPARA SYS$INT  ;'
        +#13#10'declare IDADEMES SYS$FLOAT ;'
        +#13#10'declare DPP SYS$INT ;'
        +#13#10'declare NUMERO_COBERTURA SYS$INT_NN_0;'
        +#13#10'declare STATUS_REPRODUTIVO_ANIMAL SYS$INT ;'
        +#13#10'BEGIN'
        +#13#10''
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_CATEGORIA_FEMEA'', ''BEZ'' ) RETURNING_VALUES STATUS_BEZ ;'
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_CATEGORIA_FEMEA'', ''NOV'' ) RETURNING_VALUES STATUS_NOV ;'
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_CATEGORIA_FEMEA'', ''VS''  ) RETURNING_VALUES STATUS_VS ;'
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_CATEGORIA_FEMEA'', ''VL''  ) RETURNING_VALUES STATUS_VL ;'
        +#13#10''
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_EVENTO_ZOO'',  ''CIO''               ) RETURNING_VALUES TIPO_EVENTO_ZOO_CIO ;'
        +#13#10''
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_PARTOABORTO'', ''ABORTO''            ) RETURNING_VALUES TIPO_PARTOABORTO_ABORTO ;'
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_PARTOABORTO'', ''ABORTO_LACTACAO''   ) RETURNING_VALUES TIPO_PARTOABORTO_ABORTOLACTACAO ;'
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_PARTOABORTO'', ''PARTO''             ) RETURNING_VALUES TIPO_PARTOABORTO_PARTO ;'
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_PARTOABORTO'', ''COLETA''            ) RETURNING_VALUES TIPO_PARTOABORTO_COLETAEMBRIAO ;'
        +#13#10''
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_DOADOR_RECEPTOR'', ''ND''            ) RETURNING_VALUES TIPO_DOADOR_RECEPTOR_ND ;'
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_DOADOR_RECEPTOR'', ''DOADOR''        ) RETURNING_VALUES TIPO_DOADOR_RECEPTOR_DOADOR ;'
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_DOADOR_RECEPTOR'', ''RECEPTOR''      ) RETURNING_VALUES TIPO_DOADOR_RECEPTOR_RECEPTOR ;'
        +#13#10''
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''APTA''                 ) RETURNING_VALUES STATUS_REPRODUTIVO_APTA ;'
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''EMCRESCIMENTO''        ) RETURNING_VALUES STATUS_REPRODUTIVO_EMCRESCIMENTO ;'
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''INSEMINADA''           ) RETURNING_VALUES STATUS_REPRODUTIVO_INSEMINADA ;'
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''PRENHE''               ) RETURNING_VALUES STATUS_REPRODUTIVO_PRENHE ;'
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''VAZIA''                ) RETURNING_VALUES STATUS_REPRODUTIVO_VAZIA ;'
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''ABORTADA''             ) RETURNING_VALUES STATUS_REPRODUTIVO_ABORTADA ;'
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''PEV''                  ) RETURNING_VALUES STATUS_REPRODUTIVO_PEV ;'
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''ABERTA''               ) RETURNING_VALUES STATUS_REPRODUTIVO_ABERTA ;'
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''NAOINSEMINAR''         ) RETURNING_VALUES STATUS_REPRODUTIVO_NAOINSEMINAR ;'
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''DOADORAAPTA''          ) RETURNING_VALUES STATUS_REPRODUTIVO_DOADORAAPTA ;'
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''DOADORAINSEMINADA''    ) RETURNING_VALUES STATUS_REPRODUTIVO_DOADORAINSEMINADA ;'
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''DOADORACOLETADA''      ) RETURNING_VALUES STATUS_REPRODUTIVO_DOADORACOLETADA ;'
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''RECEPTORAAPTA''        ) RETURNING_VALUES STATUS_REPRODUTIVO_RECEPTORAAPTA ;'
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''RECEPTORATRANSFERIDA'' ) RETURNING_VALUES STATUS_REPRODUTIVO_RECEPTORATRANSFERIDA ;'
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''RECEPTORAPRENHE''      ) RETURNING_VALUES STATUS_REPRODUTIVO_RECEPTORAPRENHE ;'
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''RECEPTORAVAZIA''       ) RETURNING_VALUES STATUS_REPRODUTIVO_RECEPTORAVAZIA ;'
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''RECEPTORAABORTADA''    ) RETURNING_VALUES STATUS_REPRODUTIVO_RECEPTORAABORTADA ;'
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''COLETADA''             ) RETURNING_VALUES STATUS_REPRODUTIVO_COLETADA ;'
        +#13#10''
        +#13#10'  SELECT P.VALOR FROM ZOO_CFGPARAMNOVILHAS P WHERE P.SYS$VALUE = ''IDADE_OBS_CIO'' INTO :IDADEOBSCIO;'
        +#13#10'  SELECT P.VALOR FROM ZOO_CFGPARAMNOVILHAS P WHERE P.SYS$VALUE = ''PESO_OBS_CIO''  INTO :PESOOBSCIO;'
        +#13#10''
        +#13#10'  SELECT M.PRIMIPARA, M.MULTIPARA FROM ZOO_CFGPARAMMATRIZES M WHERE M.SYS$VALUE = ''DIAS_POS_PARTO_INSEMINAR'' '
        +#13#10'    INTO :DPP_INSEMINAR_PRIMIPARA, :DPP_INSEMINAR_MULTIPARA;'
        +#13#10''
        +#13#10'  SELECT F.KULTIMO_EVENTO_ZOOTECNICO,'
        +#13#10'         F.KULTIMO_CIO,'
        +#13#10'         F.NUMERO_MONTA,'
        +#13#10'         E.TIPOEVENTO,'
        +#13#10'         E.PRENHEZ,'
        +#13#10'         E.ABORTOPARTO,'
        +#13#10'         E.EMBRIOESCOLETADOS,'
        +#13#10'         F.DOADOR_RECEPTOR,'
        +#13#10'         A.STATUS,'
        +#13#10'         F.INTENCAO_DESCARTE,'
        +#13#10'         F.NASCIMENTO,'
        +#13#10'         F.ULTIMO_PARTO,'
        +#13#10'         F.ULTIMA_LACTACAO,'
        +#13#10'         F.NUMERO_LACTACAO,'
        +#13#10'         C.PESO'
        +#13#10'    FROM ZOO_ANIMAIS_FEMEA F'
        +#13#10'    INNER JOIN ZOO_ANIMAIS A ON A.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA'
        +#13#10'    LEFT  JOIN ZOO_EVENTOS_ZOOTECNICOS E ON E.KZOO_EVENTO_ZOOTECNICO = F.KULTIMO_EVENTO_ZOOTECNICO'
        +#13#10'    LEFT  JOIN ZOO_ANIMAL_CRESCIMENTO C ON C.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA'
        +#13#10'                                       AND C.DATA = (SELECT MAX(DATA)'
        +#13#10'                                                       FROM ZOO_ANIMAL_CRESCIMENTO'
        +#13#10'                                                      WHERE KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA )'
        +#13#10'   WHERE F.KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL_FEMEA'
        +#13#10'   INTO :KULTIMO_EVENTO_ZOOTECNICO,'
        +#13#10'        :KULTIMO_CIO,'
        +#13#10'        :NUMERO_MONTA,'
        +#13#10'        :TIPO_EVENTO,'
        +#13#10'        :PRENHEZ,'
        +#13#10'        :ABORTOPARTO,'
        +#13#10'        :EMBRIOESCOLETADOS,'
        +#13#10'        :DOADORRECEPTOR,'
        +#13#10'        :STATUS,'
        +#13#10'        :INTENCAO_DESCARTE,'
        +#13#10'        :NASCIMENTO,'
        +#13#10'        :ULTIMO_PARTO,'
        +#13#10'        :ULTIMA_LACTACAO,'
        +#13#10'        :NUMERO_LACTACAO,'
        +#13#10'        :ULTIMO_PESO;'
        +#13#10''
        +#13#10'  IDADEMES = CAST( CAST ( (CURRENT_TIMESTAMP - :NASCIMENTO) / 30.4 AS NUMERIC ( 5, 1 ) ) AS SYS$FLOAT );'
        +#13#10'  DPP      = TRUNC ( CURRENT_TIMESTAMP - :ULTIMA_LACTACAO );'
        +#13#10''
        +#13#10'  SELECT COUNT(1) FROM ZOO_EVENTOS_ZOOTECNICOS'
        +#13#10'   WHERE (DATAEVENTO > :ULTIMA_LACTACAO or (:ULTIMA_LACTACAO is null) )'
        +#13#10'     AND TIPOEVENTO > :TIPO_EVENTO_ZOO_CIO'
        +#13#10'     AND ABORTOPARTO IS NULL'
        +#13#10'     AND KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL_FEMEA'
        +#13#10'    INTO :NUMERO_COBERTURA;'
        +#13#10''
        +#13#10'  STATUS_REPRODUTIVO_ANIMAL ='
        +#13#10'  CASE'
        +#13#10'    WHEN ( :INTENCAO_DESCARTE = ''T'' ) THEN'
        +#13#10'          :STATUS_REPRODUTIVO_NAOINSEMINAR'
        +#13#10''
        +#13#10'    WHEN ( :STATUS = :STATUS_BEZ ) THEN'
        +#13#10'          :STATUS_REPRODUTIVO_EMCRESCIMENTO'
        +#13#10''
        +#13#10'    WHEN ( :STATUS = :STATUS_NOV AND :NUMERO_COBERTURA = 0 AND'
        +#13#10'           (:ULTIMO_PESO IS NULL or :ULTIMO_PESO < :PESOOBSCIO) AND :IDADEMES < :IDADEOBSCIO ) THEN'
        +#13#10'          :STATUS_REPRODUTIVO_EMCRESCIMENTO'
        +#13#10''
        +#13#10'    WHEN ( :NUMERO_COBERTURA > 0 AND :PRENHEZ IS NULL AND'
        +#13#10'           :TIPO_EVENTO <> :TIPO_EVENTO_ZOO_CIO AND'
        +#13#10'           :KULTIMO_CIO <> :KULTIMO_EVENTO_ZOOTECNICO AND'
        +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_DOADOR ) THEN'
        +#13#10'         :STATUS_REPRODUTIVO_DOADORAINSEMINADA'
        +#13#10''
        +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND*/ :PRENHEZ IS NULL AND'
        +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_DOADOR AND'
        +#13#10'           :KULTIMO_CIO <> :KULTIMO_EVENTO_ZOOTECNICO AND'
        +#13#10'           :EMBRIOESCOLETADOS IS NOT NULL ) THEN'
        +#13#10'         :STATUS_REPRODUTIVO_DOADORACOLETADA'
        +#13#10''
        +#13#10'    WHEN ( :NUMERO_COBERTURA > 0 AND :PRENHEZ IS NULL AND'
        +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR ) THEN'
        +#13#10'         :STATUS_REPRODUTIVO_RECEPTORATRANSFERIDA'
        +#13#10''
        +#13#10'    WHEN ( :PRENHEZ IS NULL AND'
        +#13#10'           :EMBRIOESCOLETADOS IS NOT NULL ) THEN'
        +#13#10'         :STATUS_REPRODUTIVO_COLETADA'
        +#13#10''
        +#13#10'    WHEN ( :NUMERO_COBERTURA > 0 AND :PRENHEZ IS NULL AND'
        +#13#10'           :KULTIMO_CIO <> :KULTIMO_EVENTO_ZOOTECNICO) THEN'
        +#13#10'         :STATUS_REPRODUTIVO_INSEMINADA'
        +#13#10''
        +#13#10'    WHEN ( :STATUS = :STATUS_NOV AND :NUMERO_COBERTURA = 0 AND'
        +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_DOADOR AND'
        +#13#10'           (:ULTIMO_PESO >= :PESOOBSCIO OR :IDADEMES >= :IDADEOBSCIO) ) THEN'
        +#13#10'          :STATUS_REPRODUTIVO_DOADORAAPTA'
        +#13#10''
        +#13#10'    WHEN ( :STATUS = :STATUS_NOV AND :NUMERO_COBERTURA = 0 AND'
        +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR AND'
        +#13#10'           (:ULTIMO_PESO >= :PESOOBSCIO OR :IDADEMES >= :IDADEOBSCIO) ) THEN'
        +#13#10'          :STATUS_REPRODUTIVO_RECEPTORAAPTA'
        +#13#10''
        +#13#10'    WHEN ( :STATUS = :STATUS_NOV AND (:PRENHEZ = ''F'' or :PRENHEZ IS NULL ) AND'
        +#13#10'          (:ULTIMO_PESO >= :PESOOBSCIO OR :IDADEMES >= :IDADEOBSCIO) ) THEN'
        +#13#10'         :STATUS_REPRODUTIVO_APTA'
        +#13#10''
        +#13#10'    WHEN ( :STATUS = :STATUS_VL AND :NUMERO_COBERTURA = 0 AND'
        +#13#10'          ( ( :NUMERO_LACTACAO = 0 AND :DPP < :DPP_INSEMINAR_PRIMIPARA ) OR'
        +#13#10'            ( :NUMERO_LACTACAO > 0 AND :DPP < :DPP_INSEMINAR_MULTIPARA ) ) ) THEN'
        +#13#10'         :STATUS_REPRODUTIVO_PEV'
        +#13#10''
        +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND */:PRENHEZ = ''T'' AND :ABORTOPARTO = :TIPO_PARTOABORTO_ABORTO AND'
        +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR  ) THEN'
        +#13#10'         :STATUS_REPRODUTIVO_RECEPTORAABORTADA'
        +#13#10''
        +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND*/ :PRENHEZ = ''T'' AND :ABORTOPARTO = :TIPO_PARTOABORTO_ABORTO  ) THEN'
        +#13#10'         :STATUS_REPRODUTIVO_ABORTADA'
        +#13#10''
        +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND*/ :PRENHEZ = ''T'' AND :ABORTOPARTO IS NULL AND'
        +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR) THEN'
        +#13#10'         :STATUS_REPRODUTIVO_RECEPTORAPRENHE'
        +#13#10''
        +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND*/ :PRENHEZ = ''T'' AND :ABORTOPARTO IS NULL ) THEN'
        +#13#10'         :STATUS_REPRODUTIVO_PRENHE'
        +#13#10''
        +#13#10''
        +#13#10''
        +#13#10'    WHEN ( :STATUS = :STATUS_VL AND /*:NUMERO_COBERTURA = 0 AND*/'
        +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_DOADOR AND'
        +#13#10'          ( ( :NUMERO_LACTACAO = 1 AND :DPP >= :DPP_INSEMINAR_PRIMIPARA ) OR'
        +#13#10'            ( :NUMERO_LACTACAO > 1 AND :DPP >= :DPP_INSEMINAR_MULTIPARA ) ) ) THEN'
        +#13#10'         :STATUS_REPRODUTIVO_DOADORAAPTA'
        +#13#10''
        +#13#10'    WHEN ( :STATUS = :STATUS_VL AND /*:NUMERO_COBERTURA = 0 AND*/'
        +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR AND'
        +#13#10'          ( ( :NUMERO_LACTACAO = 1 AND :DPP >= :DPP_INSEMINAR_PRIMIPARA ) OR'
        +#13#10'            ( :NUMERO_LACTACAO > 1 AND :DPP >= :DPP_INSEMINAR_MULTIPARA ) ) ) THEN'
        +#13#10'         :STATUS_REPRODUTIVO_RECEPTORAAPTA'
        +#13#10''
        +#13#10'    WHEN ( :STATUS = :STATUS_VL AND /*:NUMERO_COBERTURA = 0 AND*/'
        +#13#10'          ( ( :NUMERO_LACTACAO = 1 AND :DPP >= :DPP_INSEMINAR_PRIMIPARA ) OR'
        +#13#10'            ( :NUMERO_LACTACAO > 1 AND :DPP >= :DPP_INSEMINAR_MULTIPARA ) ) ) THEN'
        +#13#10'         :STATUS_REPRODUTIVO_APTA'
        +#13#10''
        +#13#10'    WHEN ( :STATUS = :STATUS_VS AND :NUMERO_COBERTURA = 0 ) THEN'
        +#13#10'         :STATUS_REPRODUTIVO_APTA'
        +#13#10''
        +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND*/ (:PRENHEZ = ''F'' or :PRENHEZ IS NULL ) AND'
        +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR ) THEN'
        +#13#10'         :STATUS_REPRODUTIVO_RECEPTORAVAZIA'
        +#13#10''
        +#13#10'    WHEN ( /*:NUMERO_COBERTURA > 0 AND*/ (:PRENHEZ = ''F'' or :PRENHEZ IS NULL ) ) THEN'
        +#13#10'         :STATUS_REPRODUTIVO_VAZIA'
        +#13#10''
        +#13#10''
        +#13#10'  END;'
        +#13#10''
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETDESCRIPTION( ''STATUS_REPRODUTIVO'', :STATUS_REPRODUTIVO_ANIMAL   ) RETURNING_VALUES :SYS$DESCRIPTION ;'
        +#13#10''
        +#13#10'  SUSPEND;'
        +#13#10''
        +#13#10'END';
begin
  ExecuteDirect ( _CREATE_OR_ALTER_PROCEDURE_ZOO_GET_STATUS_REPRODUTIVO );
end;

procedure TDBZootecnicoUpdate._5_001_84;
const
   _ALTER_TABLE_ZOO_ANIMAIS_ADD_DATADESMAME =
           'ALTER TABLE ZOO_ANIMAIS'
    +#13#10' ADD DATADESMAME SYS$DATE'
    +#13#10', ALTER DATADESMAME POSITION 25';

   _CREATE_OR_REPLACE_VRPT_FEMEAS =
            'CREATE OR ALTER VIEW VRPT_FEMEAS('
            +#13#10'    KZOO_ANIMAL_FEMEA,'
            +#13#10'    KCAD_FAZENDA,'
            +#13#10'    BRINCO,'
            +#13#10'    BRINCO_,'
            +#13#10'    NOMEESTABULO,'
            +#13#10'    NOMECOMPLETO,'
            +#13#10'    REGISTRO,'
            +#13#10'    DTORIGEM,'
            +#13#10'    LOCAL_ORIGEM,'
            +#13#10'    PRECO_COMPRA,'
            +#13#10'    VACA,'
            +#13#10'    STATUS,'
            +#13#10'    DATASTATUS,'
            +#13#10'    INTENCAO_DESCARTE,'
            +#13#10'    CRIADOR,'
            +#13#10'    CIDCRIA,'
            +#13#10'    PERSISTE,'
            +#13#10'    POTENCIAL,'
            +#13#10'    DATABRINCO,'
            +#13#10'    RACA,'
            +#13#10'    SISBOV,'
            +#13#10'    GRAUSANGUE,'
            +#13#10'    COMPOSICAORACA,'
            +#13#10'    KULTIMO_EVENTO_ZOOTECNICO,'
            +#13#10'    ULTIMO_EVENTO_ZOOTECNICO,'
            +#13#10'    KULTIMO_CIO,'
            +#13#10'    ULTIMO_CIO,'
            +#13#10'    NUMERO_CIO,'
            +#13#10'    KULTIMA_MONTA,'
            +#13#10'    ULTIMA_MONTA,'
            +#13#10'    NUMERO_MONTA,'
            +#13#10'    KULTIMO_PARTO,'
            +#13#10'    ULTIMO_PARTO,'
            +#13#10'    KPRIMEIRA_LACTACAO,'
            +#13#10'    PRIMEIRA_LACTACAO,'
            +#13#10'    NUMERO_PRIMEIRALACTACAO,'
            +#13#10'    KULTIMA_LACTACAO,'
            +#13#10'    ULTIMA_LACTACAO,'
            +#13#10'    NUMERO_LACTACAO,'
            +#13#10'    NUMERO_ABORTO,'
            +#13#10'    NUMERO_COLETA,'
            +#13#10'    DOADOR_RECEPTOR,'
            +#13#10'    KMAIOR_PESO,'
            +#13#10'    MAIOR_PESO,'
            +#13#10'    NASCIMENTO,'
            +#13#10'    RETIRO,'
            +#13#10'    LOTE,'
            +#13#10'    VLOTE1,'
            +#13#10'    VLOTE2,'
            +#13#10'    VLOTE3,'
            +#13#10'    NUCLEO,'
            +#13#10'    REBANHO,'
            +#13#10'    DATALOTE,'
            +#13#10'    DATARETIRO,'
            +#13#10'    DPPC,'
            +#13#10'    DPP,'
            +#13#10'    DUC,'
            +#13#10'    KPAI,'
            +#13#10'    NOMEPAI,'
            +#13#10'    KMAE,'
            +#13#10'    NOMEMAE,'
            +#13#10'    MAEPAI,'
            +#13#10'    MAEMAE,'
            +#13#10'    PAIPAI,'
            +#13#10'    PAIMAE,'
            +#13#10'    BISF_MAEPAI,'
            +#13#10'    BISF_MAEMAE,'
            +#13#10'    BISF_PAIPAI,'
            +#13#10'    BISF_PAIMAE,'
            +#13#10'    BISM_MAEPAI,'
            +#13#10'    BISM_MAEMAE,'
            +#13#10'    BISM_PAIPAI,'
            +#13#10'    BISM_PAIMAE,'
            +#13#10'    IDADE,'
            +#13#10'    IAP,'
            +#13#10'    KULTIMO_DIAGNOSTICO,'
            +#13#10'    KPENULTIMO_DIAGNOSTICO,'
            +#13#10'    KULTIMO_PROTOCOLO,'
            +#13#10'    KPENULTIMO_PROTOCOLO,'
            +#13#10'    KULTIMA_TAREFA,'
            +#13#10'    KPENULTIMA_TAREFA,'
            +#13#10'    DATADESMAME)'
            +#13#10'AS'
            +#13#10'SELECT'
            +#13#10'    F.KZOO_ANIMAL_FEMEA,'
            +#13#10'    A.KCAD_FAZENDA,'
            +#13#10'    A.BRINCO,'
            +#13#10'    A.BRINCO_,'
            +#13#10'    A.NOMEESTABULO,'
            +#13#10'    A.NOMECOMPLETO,'
            +#13#10'    A.REGISTRO,'
            +#13#10'    A.DTORIGEM,'
            +#13#10'    A.LOCAL_ORIGEM,'
            +#13#10'    A.PRECO_COMPRA,'
            +#13#10'    A.VACA,'
            +#13#10'    (SELECT SYS$DESCRIPTION FROM SYS$TYPES_GETDESCRIPTION ( ''SIGLA_STATUS_FEMEA'', A.STATUS )) STATUS,'
            +#13#10'    A.DATASTATUS,'
            +#13#10'    F.INTENCAO_DESCARTE,'
            +#13#10'    A.CRIADOR,'
            +#13#10'    A.CIDCRIA,'
            +#13#10'    A.PERSISTE,'
            +#13#10'    A.POTENCIAL,'
            +#13#10'    A.DATABRINCO,'
            +#13#10'    A.RACA,'
            +#13#10'    A.SISBOV,'
            +#13#10'    A.GRAUSANGUE,'
            +#13#10'    A.COMPOSICAORACA,'
            +#13#10'    F.KULTIMO_EVENTO_ZOOTECNICO,'
            +#13#10'    F.ULTIMO_EVENTO_ZOOTECNICO,'
            +#13#10'    F.KULTIMO_CIO,'
            +#13#10'    F.ULTIMO_CIO,'
            +#13#10'    F.NUMERO_CIO,'
            +#13#10'    F.KULTIMA_MONTA,'
            +#13#10'    F.ULTIMA_MONTA,'
            +#13#10'    F.NUMERO_MONTA,'
            +#13#10'    F.KULTIMO_PARTO,'
            +#13#10'    F.ULTIMO_PARTO,'
            +#13#10'    F.KPRIMEIRA_LACTACAO,'
            +#13#10'    F.PRIMEIRA_LACTACAO,'
            +#13#10'    F.NUMERO_PRIMEIRALACTACAO,'
            +#13#10'    F.KULTIMA_LACTACAO,'
            +#13#10'    F.ULTIMA_LACTACAO,'
            +#13#10'    F.NUMERO_LACTACAO,'
            +#13#10'    F.NUMERO_ABORTO,'
            +#13#10'    F.NUMERO_COLETA,'
            +#13#10'    (SELECT SYS$DESCRIPTION FROM SYS$TYPES_GETDESCRIPTION ( ''TIPO_DOADOR_RECEPTOR'', F.DOADOR_RECEPTOR )) DOADOR_RECEPTOR,'
            +#13#10'    F.KMAIOR_PESO,'
            +#13#10'    F.MAIOR_PESO,'
            +#13#10'    F.NASCIMENTO,'
            +#13#10'    F.RETIRO,'
            +#13#10'    F.LOTE,'
            +#13#10'    F.VLOTE1,'
            +#13#10'    F.VLOTE2,'
            +#13#10'    F.VLOTE3,'
            +#13#10'    F.NUCLEO,'
            +#13#10'    F.REBANHO,'
            +#13#10'    F.DATALOTE,'
            +#13#10'    F.DATARETIRO,'
            +#13#10'   (SELECT CAST ( CAST ( E.DATAEVENTO AS DATE ) - CAST ( F.ULTIMA_LACTACAO AS DATE ) AS INTEGER) FROM ZOO_EVENTOS_ZOOTECNICOS E WHERE E.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND E.DATAEVENTO > F.ULTIMA_LACTACAO ORDER BY E.DATAEVENTO ROWS 1) DPPC,'
            +#13#10'  --  0 DPPC,'
            +#13#10'    TRUNC ( CURRENT_TIMESTAMP - F.ULTIMA_LACTACAO ) DPP,'
            +#13#10'    TRUNC ( CURRENT_TIMESTAMP - F.ULTIMO_CIO ) DUC,'
            +#13#10'    DPAI1.KZOO_ANIMAL_PARENT  KPAI,'
            +#13#10'    DPAI1.NOMEANIMAL_PARENTE  NOMEPAI,'
            +#13#10'    DMAE1.KZOO_ANIMAL_PARENT  KMAE,'
            +#13#10'    DMAE1.NOMEANIMAL_PARENTE  NOMEMAE,'
            +#13#10'    DMAEPAI.NOMEANIMAL_PARENTE  MAEPAI,'
            +#13#10'    DMAEMAE.NOMEANIMAL_PARENTE  MAEMAE,'
            +#13#10'    DPAIPAI.NOMEANIMAL_PARENTE  PAIPAI,'
            +#13#10'    DPAIMAE.NOMEANIMAL_PARENTE  PAIMAE,'
            +#13#10''
            +#13#10'    BISF_MAEPAI.NOMEANIMAL_PARENTE BISF_MAEPAI,'
            +#13#10'    BISF_MAEMAE.NOMEANIMAL_PARENTE BISF_MAEMAE,'
            +#13#10'    BISF_PAIPAI.NOMEANIMAL_PARENTE BISF_PAIPAI,'
            +#13#10'    BISF_PAIMAE.NOMEANIMAL_PARENTE BISF_PAIMAE,'
            +#13#10''
            +#13#10'    BISM_MAEPAI.NOMEANIMAL_PARENTE BISM_MAEPAI,'
            +#13#10'    BISM_MAEMAE.NOMEANIMAL_PARENTE BISM_MAEMAE,'
            +#13#10'    BISM_PAIPAI.NOMEANIMAL_PARENTE BISM_PAIPAI,'
            +#13#10'    BISM_PAIMAE.NOMEANIMAL_PARENTE BISM_PAIMAE,'
            +#13#10''
            +#13#10'    CAST ( CAST ( (CURRENT_TIMESTAMP - F.NASCIMENTO) / 30.4 AS NUMERIC ( 5, 1 ) ) AS SYS$FLOAT )IDADE,'
            +#13#10'    CAST ( CAST ( (F.ULTIMO_PARTO - F.NASCIMENTO) / 30.4  AS NUMERIC ( 5, 1 ) ) AS SYS$FLOAT ) IAP,'
            +#13#10'    (SELECT UD.KZOO_ANIMAL_DIAGNOSTICO FROM ZOO_ANIMAL_DIAGNOSTICOS UD WHERE UD.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND UD.EXCLUIDO = ''F'' ORDER BY UD.DATA DESC  ROWS 1 TO 1 ) KULTIMO_DIAGNOSTICO,'
            +#13#10'    (SELECT UD.KZOO_ANIMAL_DIAGNOSTICO FROM ZOO_ANIMAL_DIAGNOSTICOS UD WHERE UD.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND UD.EXCLUIDO = ''F''  ORDER BY UD.DATA DESC  ROWS 2 TO 2 ) KPENULTIMO_DIAGNOSTICO,'
            +#13#10'    (SELECT UP.KZOO_ANIMAL_PROTOCOLO FROM ZOO_ANIMAL_PROTOCOLOS UP WHERE UP.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND UP.EXCLUIDO = ''F'' ORDER BY UP.DATA DESC  ROWS 1 TO 1 ) KULTIMO_PROTOCOLO,'
            +#13#10'    (SELECT UP.KZOO_ANIMAL_PROTOCOLO FROM ZOO_ANIMAL_PROTOCOLOS UP WHERE UP.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND UP.EXCLUIDO = ''F'' ORDER BY UP.DATA DESC  ROWS 2 TO 2 ) KPENULTIMO_PROTOCOLO,'
            +#13#10'    (SELECT UT.KZOO_ANIMAL_TAREFA FROM ZOO_ANIMAL_TAREFAS UT'
            +#13#10'     WHERE UT.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA AND UT.EXCLUIDO = ''F'' AND UT.STATUS = (SELECT SYS$VALUE FROM SYS$TYPES_GETVALUE ( ''STATUS_TAREFA'', ''EXECUTADA'' ))'
            +#13#10'     ORDER BY UT.DATASTATUS DESC  ROWS 1 TO 1 ) KULTIMA_TAREFA,'
            +#13#10'    (SELECT UT.KZOO_ANIMAL_TAREFA FROM ZOO_ANIMAL_TAREFAS UT'
            +#13#10'     WHERE UT.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA AND UT.EXCLUIDO = ''F'' AND UT.STATUS = (SELECT SYS$VALUE FROM SYS$TYPES_GETVALUE ( ''STATUS_TAREFA'', ''EXECUTADA'' ))'
            +#13#10'     ORDER BY UT.DATASTATUS DESC  ROWS 2 TO 2 ) KPENULTIMA_TAREFA,'
            +#13#10'     A.DATADESMAME'
            +#13#10'FROM ZOO_ANIMAIS_FEMEA F'
            +#13#10'INNER JOIN ZOO_ANIMAIS A ON A.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(F.KZOO_ANIMAL_FEMEA, 1, 0) DPAI1 ON DPAI1.TIPOPARENTESCO = 1 AND DPAI1.PARENTLEVEL = 1'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(F.KZOO_ANIMAL_FEMEA, 1, 0) DMAE1 ON DMAE1.TIPOPARENTESCO = 2 AND DMAE1.PARENTLEVEL = 1'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAI1.KZOO_ANIMAL_PARENT, 1, 0) DMAEPAI ON DMAEPAI.TIPOPARENTESCO = 2 AND DMAEPAI.PARENTLEVEL = 1'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAE1.KZOO_ANIMAL_PARENT, 1, 0) DMAEMAE ON DMAEMAE.TIPOPARENTESCO = 2 AND DMAEMAE.PARENTLEVEL = 1'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAI1.KZOO_ANIMAL_PARENT, 1, 0) DPAIPAI ON DPAIPAI.TIPOPARENTESCO = 1 AND DPAIPAI.PARENTLEVEL = 1'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAE1.KZOO_ANIMAL_PARENT, 1, 0) DPAIMAE ON DPAIMAE.TIPOPARENTESCO = 1 AND DPAIMAE.PARENTLEVEL = 1'
            +#13#10''
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEPAI.KZOO_ANIMAL_PARENT, 1, 0) BISF_MAEPAI ON BISF_MAEPAI.TIPOPARENTESCO = 2 AND BISF_MAEPAI.PARENTLEVEL = 1'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEMAE.KZOO_ANIMAL_PARENT, 1, 0) BISF_MAEMAE ON BISF_MAEMAE.TIPOPARENTESCO = 2 AND BISF_MAEMAE.PARENTLEVEL = 1'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIPAI.KZOO_ANIMAL_PARENT, 1, 0) BISF_PAIPAI ON BISF_PAIPAI.TIPOPARENTESCO = 2 AND BISF_PAIPAI.PARENTLEVEL = 1'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIMAE.KZOO_ANIMAL_PARENT, 1, 0) BISF_PAIMAE ON BISF_PAIMAE.TIPOPARENTESCO = 2 AND BISF_PAIMAE.PARENTLEVEL = 1'
            +#13#10''
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEPAI.KZOO_ANIMAL_PARENT, 1, 0) BISM_MAEPAI ON BISM_MAEPAI.TIPOPARENTESCO = 1 AND BISM_MAEPAI.PARENTLEVEL = 1'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEMAE.KZOO_ANIMAL_PARENT, 1, 0) BISM_MAEMAE ON BISM_MAEMAE.TIPOPARENTESCO = 1 AND BISM_MAEMAE.PARENTLEVEL = 1'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIPAI.KZOO_ANIMAL_PARENT, 1, 0) BISM_PAIPAI ON BISM_PAIPAI.TIPOPARENTESCO = 1 AND BISM_PAIPAI.PARENTLEVEL = 1'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIMAE.KZOO_ANIMAL_PARENT, 1, 0) BISM_PAIMAE ON BISM_PAIMAE.TIPOPARENTESCO = 1 AND BISM_PAIMAE.PARENTLEVEL = 1';

begin
  ExecuteDirect( _ALTER_TABLE_ZOO_ANIMAIS_ADD_DATADESMAME );
  ExecuteDirect( _CREATE_OR_REPLACE_VRPT_FEMEAS );
end;

procedure TDBZootecnicoUpdate._5_001_83;
const
   _CREATE_SEQUENCE_BRINCO_EMBRIAO =
           'CREATE SEQUENCE BRINCO_EMBRIAO';

   _CREATE_DOMAIN_ZOO_CODIGO_EMBRIAO =
           'CREATE DOMAIN ZOO$CODIGO_EMBRIAO AS'
    +#13#10'VARCHAR(35) CHARACTER SET ISO8859_1'
    +#13#10'NOT NULL'
    +#13#10'COLLATE ISO8859_1';

   _ALTER_TABLE_ZOO_ANIMAIS_EMBRIAO =
           'ALTER TABLE ZOO_ANIMAIS_EMBRIAO'
    +#13#10'ADD CODIGO_EMBRIAO ZOO$CODIGO_EMBRIAO';

   _UPDATE_ZOO_ANIMAIS_EMBRIAO =
           'UPDATE ZOO_ANIMAIS_EMBRIAO'
    +#13#10'   SET CODIGO_EMBRIAO = (SELECT BRINCO FROM ZOO_ANIMAIS'
    +#13#10'                          WHERE KZOO_ANIMAL = ZOO_ANIMAIS_EMBRIAO.KZOO_ANIMAL_EMBRIAO)';
begin
  ExecuteDirect( _CREATE_SEQUENCE_BRINCO_EMBRIAO );
  ExecuteDirect( _CREATE_DOMAIN_ZOO_CODIGO_EMBRIAO );
  ExecuteDirect( _ALTER_TABLE_ZOO_ANIMAIS_EMBRIAO );
  ExecuteDirect( _UPDATE_ZOO_ANIMAIS_EMBRIAO );
end;


procedure TDBZootecnicoUpdate._5_001_71;
const
   _CREATE_PROCEDURE_ZOO_GET_STATUS_REPRODUTIVO =
         'create or alter procedure ZOO_GET_STATUS_REPRODUTIVO ('
  +#13#10'    KZOO_ANIMAL_FEMEA SYS$FKGUID20)'
  +#13#10'  returns ('
  +#13#10'    SYS$DESCRIPTION type of SYS$ST_DESCRIPTION)'
  +#13#10'AS'
  +#13#10'declare KULTIMO_EVENTO_ZOOTECNICO SYS$FKGUID20 ;'
  +#13#10'declare NUMERO_MONTA SYS$INT_NN_0;'
  +#13#10'declare PRENHEZ SYS$BOOL_NULL ;'
  +#13#10'declare ABORTOPARTO SYS$INT ;'
  +#13#10'declare EMBRIOESCOLETADOS SYS$INT ;'
  +#13#10'declare DOADORRECEPTOR SYS$INT ;'
  +#13#10'declare STATUS SYS$INT ;'
  +#13#10'declare INTENCAO_DESCARTE SYS$BOOL_F ;'
  +#13#10'declare NASCIMENTO SYS$DATE_NN ;'
  +#13#10'declare ULTIMA_LACTACAO SYS$DATE ;'
  +#13#10'declare NUMERO_LACTACAO SYS$INT_NN_0;'
  +#13#10'declare ULTIMO_PARTO SYS$DATE ;'
  +#13#10'declare ULTIMO_PESO SYS$INT ;'
  +#13#10'declare STATUS_BEZ SYS$INT ;'
  +#13#10'declare STATUS_NOV SYS$INT ;'
  +#13#10'declare STATUS_VS SYS$INT ;'
  +#13#10'declare STATUS_VL SYS$INT ;'
  +#13#10'declare TIPO_EVENTO_ZOO_CIO SYS$INT ;'
  +#13#10'declare TIPO_PARTOABORTO_ABORTO SYS$INT ;'
  +#13#10'declare TIPO_PARTOABORTO_ABORTOLACTACAO SYS$INT ;'
  +#13#10'declare TIPO_PARTOABORTO_PARTO SYS$INT ;'
  +#13#10'declare TIPO_PARTOABORTO_COLETAEMBRIAO SYS$INT ;'
  +#13#10'declare TIPO_DOADOR_RECEPTOR_ND SYS$INT ;'
  +#13#10'declare TIPO_DOADOR_RECEPTOR_DOADOR SYS$INT ;'
  +#13#10'declare TIPO_DOADOR_RECEPTOR_RECEPTOR SYS$INT ;'
  +#13#10'declare STATUS_REPRODUTIVO_APTA SYS$INT ;'
  +#13#10'declare STATUS_REPRODUTIVO_EMCRESCIMENTO SYS$INT ;'
  +#13#10'declare STATUS_REPRODUTIVO_INSEMINADA SYS$INT ;'
  +#13#10'declare STATUS_REPRODUTIVO_PRENHE SYS$INT ;'
  +#13#10'declare STATUS_REPRODUTIVO_VAZIA SYS$INT ;'
  +#13#10'declare STATUS_REPRODUTIVO_ABORTADA SYS$INT ;'
  +#13#10'declare STATUS_REPRODUTIVO_PEV SYS$INT ;'
  +#13#10'declare STATUS_REPRODUTIVO_ABERTA SYS$INT ;'
  +#13#10'declare STATUS_REPRODUTIVO_NAOINSEMINAR SYS$INT ;'
  +#13#10'declare STATUS_REPRODUTIVO_DOADORAAPTA SYS$INT ;'
  +#13#10'declare STATUS_REPRODUTIVO_DOADORAINSEMINADA SYS$INT ;'
  +#13#10'declare STATUS_REPRODUTIVO_DOADORACOLETADA SYS$INT ;'
  +#13#10'declare STATUS_REPRODUTIVO_RECEPTORAAPTA SYS$INT ;'
  +#13#10'declare STATUS_REPRODUTIVO_RECEPTORATRANSFERIDA SYS$INT ;'
  +#13#10'declare STATUS_REPRODUTIVO_RECEPTORAPRENHE SYS$INT ;'
  +#13#10'declare STATUS_REPRODUTIVO_RECEPTORAVAZIA SYS$INT ;'
  +#13#10'declare STATUS_REPRODUTIVO_RECEPTORAABORTADA SYS$INT ;'
  +#13#10'declare IDADEOBSCIO SYS$INT  ;'
  +#13#10'declare PESOOBSCIO SYS$INT  ;'
  +#13#10'declare DPP_INSEMINAR_PRIMIPARA SYS$INT  ;'
  +#13#10'declare DPP_INSEMINAR_MULTIPARA SYS$INT  ;'
  +#13#10'declare IDADEMES SYS$FLOAT ;'
  +#13#10'declare DPP SYS$INT ;'
  +#13#10'declare NUMERO_COBERTURA SYS$INT_NN_0;'
  +#13#10'declare STATUS_REPRODUTIVO_ANIMAL SYS$INT ;'
  +#13#10'BEGIN'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_CATEGORIA_FEMEA'', ''BEZ'' ) RETURNING_VALUES STATUS_BEZ ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_CATEGORIA_FEMEA'', ''NOV'' ) RETURNING_VALUES STATUS_NOV ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_CATEGORIA_FEMEA'', ''VS''  ) RETURNING_VALUES STATUS_VS ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_CATEGORIA_FEMEA'', ''VL''  ) RETURNING_VALUES STATUS_VL ;'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_EVENTO_ZOO'',  ''CIO''               ) RETURNING_VALUES TIPO_EVENTO_ZOO_CIO ;'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_PARTOABORTO'', ''ABORTO''            ) RETURNING_VALUES TIPO_PARTOABORTO_ABORTO ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_PARTOABORTO'', ''ABORTO_LACTACAO''   ) RETURNING_VALUES TIPO_PARTOABORTO_ABORTOLACTACAO ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_PARTOABORTO'', ''PARTO''             ) RETURNING_VALUES TIPO_PARTOABORTO_PARTO ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_PARTOABORTO'', ''COLETA''            ) RETURNING_VALUES TIPO_PARTOABORTO_COLETAEMBRIAO ;'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_DOADOR_RECEPTOR'', ''ND''            ) RETURNING_VALUES TIPO_DOADOR_RECEPTOR_ND ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_DOADOR_RECEPTOR'', ''DOADOR''        ) RETURNING_VALUES TIPO_DOADOR_RECEPTOR_DOADOR ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''TIPO_DOADOR_RECEPTOR'', ''RECEPTOR''      ) RETURNING_VALUES TIPO_DOADOR_RECEPTOR_RECEPTOR ;'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''APTA''                 ) RETURNING_VALUES STATUS_REPRODUTIVO_APTA ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''EMCRESCIMENTO''        ) RETURNING_VALUES STATUS_REPRODUTIVO_EMCRESCIMENTO ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''INSEMINADA''           ) RETURNING_VALUES STATUS_REPRODUTIVO_INSEMINADA ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''PRENHE''               ) RETURNING_VALUES STATUS_REPRODUTIVO_PRENHE ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''VAZIA''                ) RETURNING_VALUES STATUS_REPRODUTIVO_VAZIA ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''ABORTADA''             ) RETURNING_VALUES STATUS_REPRODUTIVO_ABORTADA ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''PEV''                  ) RETURNING_VALUES STATUS_REPRODUTIVO_PEV ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''ABERTA''               ) RETURNING_VALUES STATUS_REPRODUTIVO_ABERTA ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''NAOINSEMINAR''         ) RETURNING_VALUES STATUS_REPRODUTIVO_NAOINSEMINAR ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''DOADORAAPTA''          ) RETURNING_VALUES STATUS_REPRODUTIVO_DOADORAAPTA ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''DOADORAINSEMINADA''    ) RETURNING_VALUES STATUS_REPRODUTIVO_DOADORAINSEMINADA ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''DOADORACOLETADA''      ) RETURNING_VALUES STATUS_REPRODUTIVO_DOADORACOLETADA ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''RECEPTORAAPTA''        ) RETURNING_VALUES STATUS_REPRODUTIVO_RECEPTORAAPTA ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''RECEPTORATRANSFERIDA'' ) RETURNING_VALUES STATUS_REPRODUTIVO_RECEPTORATRANSFERIDA ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''RECEPTORAPRENHE''      ) RETURNING_VALUES STATUS_REPRODUTIVO_RECEPTORAPRENHE ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''RECEPTORAVAZIA''       ) RETURNING_VALUES STATUS_REPRODUTIVO_RECEPTORAVAZIA ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''STATUS_REPRODUTIVO'', ''RECEPTORAABORTADA''    ) RETURNING_VALUES STATUS_REPRODUTIVO_RECEPTORAABORTADA ;'
  +#13#10''
  +#13#10'  SELECT P.VALOR FROM ZOO_CFGPARAMNOVILHAS P WHERE P.SYS$VALUE = ''IDADE_OBS_CIO'' INTO :IDADEOBSCIO;'
  +#13#10'  SELECT P.VALOR FROM ZOO_CFGPARAMNOVILHAS P WHERE P.SYS$VALUE = ''PESO_OBS_CIO''  INTO :PESOOBSCIO;'
  +#13#10''
  +#13#10'  SELECT M.PRIMIPARA, M.MULTIPARA FROM ZOO_CFGPARAMMATRIZES M WHERE M.SYS$VALUE = ''DIAS_POS_PARTO_INSEMINAR'' '
  +#13#10'    INTO :DPP_INSEMINAR_PRIMIPARA, :DPP_INSEMINAR_MULTIPARA;'
  +#13#10''
  +#13#10'  SELECT F.KULTIMO_EVENTO_ZOOTECNICO,'
  +#13#10'         F.NUMERO_MONTA,'
  +#13#10'         E.PRENHEZ,'
  +#13#10'         E.ABORTOPARTO,'
  +#13#10'         E.EMBRIOESCOLETADOS,'
  +#13#10'         F.DOADOR_RECEPTOR,'
  +#13#10'         A.STATUS,'
  +#13#10'         F.INTENCAO_DESCARTE,'
  +#13#10'         F.NASCIMENTO,'
  +#13#10'         F.ULTIMO_PARTO,'
  +#13#10'         F.ULTIMA_LACTACAO,'
  +#13#10'         F.NUMERO_LACTACAO,'
  +#13#10'         C.PESO'
  +#13#10'    FROM ZOO_ANIMAIS_FEMEA F'
  +#13#10'    INNER JOIN ZOO_ANIMAIS A ON A.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA'
  +#13#10'    LEFT  JOIN ZOO_EVENTOS_ZOOTECNICOS E ON E.KZOO_EVENTO_ZOOTECNICO = F.KULTIMO_EVENTO_ZOOTECNICO'
  +#13#10'    LEFT  JOIN ZOO_ANIMAL_CRESCIMENTO C ON C.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA'
  +#13#10'                                       AND C.DATA = (SELECT MAX(DATA)'
  +#13#10'                                                       FROM ZOO_ANIMAL_CRESCIMENTO'
  +#13#10'                                                      WHERE KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA )'
  +#13#10'   WHERE F.KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL_FEMEA'
  +#13#10'   INTO :KULTIMO_EVENTO_ZOOTECNICO,'
  +#13#10'        :NUMERO_MONTA,'
  +#13#10'        :PRENHEZ,'
  +#13#10'        :ABORTOPARTO,'
  +#13#10'        :EMBRIOESCOLETADOS,'
  +#13#10'        :DOADORRECEPTOR,'
  +#13#10'        :STATUS,'
  +#13#10'        :INTENCAO_DESCARTE,'
  +#13#10'        :NASCIMENTO,'
  +#13#10'        :ULTIMO_PARTO,'
  +#13#10'        :ULTIMA_LACTACAO,'
  +#13#10'        :NUMERO_LACTACAO,'
  +#13#10'        :ULTIMO_PESO;'
  +#13#10''
  +#13#10'  IDADEMES = CAST( CAST ( (CURRENT_TIMESTAMP - :NASCIMENTO) / 30.4 AS NUMERIC ( 5, 1 ) ) AS SYS$FLOAT );'
  +#13#10'  DPP      = TRUNC ( CURRENT_TIMESTAMP - :ULTIMA_LACTACAO );'
  +#13#10''
  +#13#10'  SELECT COUNT(1) FROM ZOO_EVENTOS_ZOOTECNICOS'
  +#13#10'   WHERE (DATAEVENTO > :ULTIMA_LACTACAO or (:ULTIMA_LACTACAO is null) )'
  +#13#10'     AND TIPOEVENTO > :TIPO_EVENTO_ZOO_CIO'
  +#13#10'     AND KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL_FEMEA'
  +#13#10'    INTO :NUMERO_COBERTURA;'
  +#13#10''
  +#13#10'  STATUS_REPRODUTIVO_ANIMAL ='
  +#13#10'  CASE'
  +#13#10'    WHEN ( :INTENCAO_DESCARTE = ''T'' ) THEN'
  +#13#10'          :STATUS_REPRODUTIVO_NAOINSEMINAR'
  +#13#10''
  +#13#10'    WHEN ( :STATUS = :STATUS_BEZ ) THEN'
  +#13#10'          :STATUS_REPRODUTIVO_EMCRESCIMENTO'
  +#13#10''
  +#13#10'    WHEN ( :STATUS = :STATUS_NOV AND :NUMERO_COBERTURA = 0 AND'
  +#13#10'           :ULTIMO_PESO < :PESOOBSCIO AND :IDADEMES < :IDADEOBSCIO ) THEN'
  +#13#10'          :STATUS_REPRODUTIVO_EMCRESCIMENTO'
  +#13#10''
  +#13#10'    WHEN ( :NUMERO_COBERTURA > 0 AND :PRENHEZ IS NULL AND'
  +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_DOADOR AND'
  +#13#10'           :EMBRIOESCOLETADOS IS NOT NULL ) THEN'
  +#13#10'         :STATUS_REPRODUTIVO_DOADORACOLETADA'
  +#13#10''
  +#13#10'    WHEN ( :NUMERO_COBERTURA > 0 AND :PRENHEZ IS NULL AND'
  +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_DOADOR ) THEN'
  +#13#10'         :STATUS_REPRODUTIVO_DOADORAINSEMINADA'
  +#13#10''
  +#13#10'    WHEN ( :NUMERO_COBERTURA > 0 AND :PRENHEZ IS NULL AND'
  +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR ) THEN'
  +#13#10'         :STATUS_REPRODUTIVO_RECEPTORATRANSFERIDA'
  +#13#10''
  +#13#10'    WHEN ( :NUMERO_COBERTURA > 0 AND :PRENHEZ IS NULL ) THEN'
  +#13#10'         :STATUS_REPRODUTIVO_INSEMINADA'
  +#13#10''
  +#13#10'    WHEN ( :NUMERO_COBERTURA > 0 AND :PRENHEZ = ''T'' AND :ABORTOPARTO = :TIPO_PARTOABORTO_ABORTO AND'
  +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR  ) THEN'
  +#13#10'         :STATUS_REPRODUTIVO_RECEPTORAABORTADA'
  +#13#10''
  +#13#10'    WHEN ( :NUMERO_COBERTURA > 0 AND :PRENHEZ = ''T'' AND :ABORTOPARTO = :TIPO_PARTOABORTO_ABORTO  ) THEN'
  +#13#10'         :STATUS_REPRODUTIVO_ABORTADA'
  +#13#10''
  +#13#10'    WHEN ( :NUMERO_COBERTURA > 0 AND :PRENHEZ = ''T'' AND :ABORTOPARTO IS NULL AND'
  +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR) THEN'
  +#13#10'         :STATUS_REPRODUTIVO_RECEPTORAPRENHE'
  +#13#10''
  +#13#10'    WHEN ( :NUMERO_COBERTURA > 0 AND :PRENHEZ = ''T'' AND :ABORTOPARTO IS NULL ) THEN'
  +#13#10'         :STATUS_REPRODUTIVO_PRENHE'
  +#13#10''
  +#13#10'    WHEN ( :NUMERO_COBERTURA > 0 AND :PRENHEZ = ''F'' AND'
  +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR ) THEN'
  +#13#10'         :STATUS_REPRODUTIVO_RECEPTORAVAZIA'
  +#13#10''
  +#13#10'    WHEN ( :NUMERO_COBERTURA > 0 AND :PRENHEZ = ''F'' ) THEN'
  +#13#10'         :STATUS_REPRODUTIVO_VAZIA'
  +#13#10''
  +#13#10'    WHEN ( :STATUS = :STATUS_NOV AND :NUMERO_COBERTURA = 0 AND'
  +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_DOADOR AND'
  +#13#10'           (:ULTIMO_PESO >= :PESOOBSCIO OR :IDADEMES >= :IDADEOBSCIO) ) THEN'
  +#13#10'          :STATUS_REPRODUTIVO_DOADORAAPTA'
  +#13#10''
  +#13#10'    WHEN ( :STATUS = :STATUS_NOV AND :NUMERO_COBERTURA = 0 AND'
  +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR AND'
  +#13#10'           (:ULTIMO_PESO >= :PESOOBSCIO OR :IDADEMES >= :IDADEOBSCIO) ) THEN'
  +#13#10'          :STATUS_REPRODUTIVO_RECEPTORAAPTA'
  +#13#10''
  +#13#10'    WHEN ( :STATUS = :STATUS_NOV AND :NUMERO_COBERTURA = 0 ) THEN'
  +#13#10'         :STATUS_REPRODUTIVO_APTA'
  +#13#10''
  +#13#10'    WHEN ( :STATUS = :STATUS_VL AND :NUMERO_COBERTURA = 0 AND'
  +#13#10'          ( ( :NUMERO_LACTACAO = 0 AND :DPP < :DPP_INSEMINAR_PRIMIPARA ) OR'
  +#13#10'            ( :NUMERO_LACTACAO > 0 AND :DPP < :DPP_INSEMINAR_MULTIPARA ) ) ) THEN'
  +#13#10'         :STATUS_REPRODUTIVO_PEV'
  +#13#10''
  +#13#10'    WHEN ( :STATUS = :STATUS_VL AND :NUMERO_COBERTURA = 0 AND'
  +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_DOADOR AND'
  +#13#10'          ( ( :NUMERO_LACTACAO = 0 AND :DPP >= :DPP_INSEMINAR_PRIMIPARA ) OR'
  +#13#10'            ( :NUMERO_LACTACAO > 0 AND :DPP >= :DPP_INSEMINAR_MULTIPARA ) ) ) THEN'
  +#13#10'         :STATUS_REPRODUTIVO_DOADORAAPTA'
  +#13#10''
  +#13#10'    WHEN ( :STATUS = :STATUS_VL AND :NUMERO_COBERTURA = 0 AND'
  +#13#10'           :DOADORRECEPTOR = :TIPO_DOADOR_RECEPTOR_RECEPTOR AND'
  +#13#10'          ( ( :NUMERO_LACTACAO = 0 AND :DPP >= :DPP_INSEMINAR_PRIMIPARA ) OR'
  +#13#10'            ( :NUMERO_LACTACAO > 0 AND :DPP >= :DPP_INSEMINAR_MULTIPARA ) ) ) THEN'
  +#13#10'         :STATUS_REPRODUTIVO_RECEPTORAAPTA'
  +#13#10''
  +#13#10'    WHEN ( :STATUS = :STATUS_VL AND :NUMERO_COBERTURA = 0 AND'
  +#13#10'          ( ( :NUMERO_LACTACAO = 0 AND :DPP >= :DPP_INSEMINAR_PRIMIPARA ) OR'
  +#13#10'            ( :NUMERO_LACTACAO > 0 AND :DPP >= :DPP_INSEMINAR_MULTIPARA ) ) ) THEN'
  +#13#10'         :STATUS_REPRODUTIVO_APTA'
  +#13#10''
  +#13#10'    WHEN ( :STATUS = :STATUS_VS AND :NUMERO_COBERTURA = 0 ) THEN'
  +#13#10'         :STATUS_REPRODUTIVO_ABERTA'
  +#13#10''
  +#13#10''
  +#13#10'  END;'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETDESCRIPTION( ''STATUS_REPRODUTIVO'', :STATUS_REPRODUTIVO_ANIMAL   ) RETURNING_VALUES :SYS$DESCRIPTION ;'
  +#13#10''
  +#13#10'  SUSPEND;'
  +#13#10''
  +#13#10'END';


begin
  ExecuteDirect ( _CREATE_PROCEDURE_ZOO_GET_STATUS_REPRODUTIVO );
end;


procedure TDBZootecnicoUpdate._5_001_69;
const
  //Atauliza o sexo e o nascimento dos animais na tabela ZOO_ANIMAL_LINHAGEM
   _EXECUTE_BLOCK_UPDATE_ZOO_ANIMAL_LINHAGEM_SEXO =
         'EXECUTE BLOCK'
  +#13#10'AS'
  +#13#10'DECLARE KZOO_ANIMAL_LINHAGEM SYS$PKGUID20;'
  +#13#10'DECLARE NASCIMENTO TIMESTAMP;'
  +#13#10'DECLARE SEXO SYS$SEXO;'
  +#13#10'BEGIN'
  +#13#10'  FOR'
  +#13#10'    SELECT L.KZOO_ANIMAL_LINHAGEM,'
  +#13#10'           M.NASCIMENTO,'
  +#13#10'           ''M'' "SEXO"'
  +#13#10'      FROM ZOO_ANIMAL_LINHAGEM L'
  +#13#10'      INNER JOIN ZOO_ANIMAIS_MACHO M ON M.KZOO_ANIMAL_MACHO = L.KZOO_ANIMAL'
  +#13#10'     UNION'
  +#13#10'    SELECT L.KZOO_ANIMAL_LINHAGEM,'
  +#13#10'           F.NASCIMENTO,'
  +#13#10'           ''F'' "SEXO"'
  +#13#10'      FROM ZOO_ANIMAL_LINHAGEM L'
  +#13#10'      INNER JOIN ZOO_ANIMAIS_FEMEA F ON F.KZOO_ANIMAL_FEMEA = L.KZOO_ANIMAL'
  +#13#10'     INTO  :KZOO_ANIMAL_LINHAGEM,'
  +#13#10'           :NASCIMENTO,'
  +#13#10'           :SEXO'
  +#13#10'  DO'
  +#13#10'   BEGIN'
  +#13#10'     UPDATE ZOO_ANIMAL_LINHAGEM'
  +#13#10'        SET SEXO = :SEXO,'
  +#13#10'            NASCIMENTO = :NASCIMENTO'
  +#13#10'      WHERE ( KZOO_ANIMAL_LINHAGEM = :KZOO_ANIMAL_LINHAGEM );'
  +#13#10'   END'
  +#13#10'END';
begin
  ExecuteDirect ( _EXECUTE_BLOCK_UPDATE_ZOO_ANIMAL_LINHAGEM_SEXO );
end;


procedure TDBZootecnicoUpdate._5_001_65;
const
  //vincula os partos com a linhagem
   _EXECUTE_BLOCK_UPDATE_ZOO_ANIMAL_LINHAGEM_EVENTOS =
         'EXECUTE BLOCK'
  +#13#10'AS'
  +#13#10'DECLARE KZOO_ANIMAL_LINHAGEM SYS$PKGUID20;'
  +#13#10'DECLARE KZOO_ANIMAL_FEMEA_LINHAGEM SYS$PKGUID20;'
  +#13#10'DECLARE NASCIMENTO TIMESTAMP;'
  +#13#10'BEGIN'
  +#13#10'  FOR'
  +#13#10'    SELECT L.KZOO_ANIMAL_LINHAGEM,'
  +#13#10'           L.KZOO_ANIMAL_FEMEA,'
  +#13#10'           M.NASCIMENTO'
  +#13#10'      FROM ZOO_ANIMAL_LINHAGEM L'
  +#13#10'      INNER JOIN ZOO_ANIMAIS_MACHO M ON M.KZOO_ANIMAL_MACHO = L.KZOO_ANIMAL'
  +#13#10'     WHERE (L.KZOO_EVENTO_ZOOTECNICO IS NULL OR L.KZOO_EVENTO_ZOOTECNICO = '''')'
  +#13#10'       AND (L.KZOO_ANIMAL_FEMEA IS NOT NULL AND L.KZOO_ANIMAL_FEMEA <> '''')'
  +#13#10'     UNION'
  +#13#10'    SELECT L.KZOO_ANIMAL_LINHAGEM,'
  +#13#10'           L.KZOO_ANIMAL_FEMEA,'
  +#13#10'           F.NASCIMENTO'
  +#13#10'      FROM ZOO_ANIMAL_LINHAGEM L'
  +#13#10'      INNER JOIN ZOO_ANIMAIS_FEMEA F ON F.KZOO_ANIMAL_FEMEA = L.KZOO_ANIMAL'
  +#13#10'     WHERE (L.KZOO_EVENTO_ZOOTECNICO IS NULL OR L.KZOO_EVENTO_ZOOTECNICO = '''')'
  +#13#10'       AND (L.KZOO_ANIMAL_FEMEA IS NOT NULL AND L.KZOO_ANIMAL_FEMEA <> '''')'
  +#13#10'     INTO  :KZOO_ANIMAL_LINHAGEM,'
  +#13#10'           :KZOO_ANIMAL_FEMEA_LINHAGEM,'
  +#13#10'           :NASCIMENTO'
  +#13#10'  DO'
  +#13#10'   BEGIN'
  +#13#10'     IF ( 1 = ( (SELECT COUNT(1)'
  +#13#10'                   FROM ZOO_EVENTOS_ZOOTECNICOS E'
  +#13#10'                  WHERE E.DATAABORTOPARTO = :NASCIMENTO'
  +#13#10'                    AND E.ABORTOPARTO = 3'//Parto
  +#13#10'                    AND E.TIPOEVENTO NOT IN (4)'//Embrião
  +#13#10'                    AND E.KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL_FEMEA_LINHAGEM) ) ) THEN'
  +#13#10'      BEGIN'
  +#13#10'        UPDATE ZOO_ANIMAL_LINHAGEM'
  +#13#10'           SET KZOO_EVENTO_ZOOTECNICO ='
  +#13#10'                 ( SELECT E.KZOO_EVENTO_ZOOTECNICO'
  +#13#10'                     FROM ZOO_EVENTOS_ZOOTECNICOS E'
  +#13#10'                    WHERE E.DATAABORTOPARTO = :NASCIMENTO'
  +#13#10'                      AND E.ABORTOPARTO = 3'//Parto
  +#13#10'                      AND E.TIPOEVENTO NOT IN (4)'//Embrião
  +#13#10'                      AND E.KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL_FEMEA_LINHAGEM'
  +#13#10'                  ),'
  +#13#10'               NASCIMENTO = :NASCIMENTO'
  +#13#10'         WHERE ( KZOO_ANIMAL_LINHAGEM = :KZOO_ANIMAL_LINHAGEM );'
  +#13#10'     END'
  +#13#10'   END'
  +#13#10'END';

  //Atualiza o macho que inseminou a fêmea de acordo com o pai do animal informado no cadastro
   _EXECUTE_BLOCK_UPDATE_ZOO_EVENTOS_ZOOTECNICOS =
         'EXECUTE BLOCK'
  +#13#10'AS'
  +#13#10'DECLARE KZOO_EVENTO_ZOOTECNICO SYS$PKGUID20;'
  +#13#10'DECLARE KZOO_ANIMAL_MACHO_LINHAGEM SYS$PKGUID20;'
  +#13#10'DECLARE CONTADOR INT;'
  +#13#10'BEGIN'
  +#13#10'  FOR'
  +#13#10'    SELECT L.KZOO_ANIMAL_MACHO,'
  +#13#10'           L.KZOO_EVENTO_ZOOTECNICO'
  +#13#10'      FROM ZOO_ANIMAL_LINHAGEM L'
  +#13#10'     WHERE (L.KZOO_EVENTO_ZOOTECNICO IS NOT NULL AND L.KZOO_EVENTO_ZOOTECNICO <> '''')'
  +#13#10'       AND (L.KZOO_ANIMAL_MACHO IS NOT NULL AND L.KZOO_ANIMAL_MACHO <> '''')'
  +#13#10'     INTO  :KZOO_ANIMAL_MACHO_LINHAGEM,'
  +#13#10'           :KZOO_EVENTO_ZOOTECNICO'
  +#13#10'  DO'
  +#13#10'   BEGIN'
  +#13#10'     IF ( 0 < (SELECT COUNT(1) FROM ZOO_ANIMAIS_MACHO WHERE KZOO_ANIMAL_MACHO = :KZOO_ANIMAL_MACHO_LINHAGEM AND '
  +#13#10'                    ( KZOO_ANIMAL_MACHO IS NOT NULL AND  KZOO_ANIMAL_MACHO <> '''' ) ) ) THEN'
  +#13#10'      BEGIN'
  +#13#10'        UPDATE ZOO_EVENTOS_ZOOTECNICOS'
  +#13#10'           SET KZOO_ANIMAL_MACHO = :KZOO_ANIMAL_MACHO_LINHAGEM,'
  +#13#10'               KZOO_ANIMAL_MACHO_TOUROSEMEN = :KZOO_ANIMAL_MACHO_LINHAGEM'
  +#13#10'         WHERE KZOO_EVENTO_ZOOTECNICO = :KZOO_EVENTO_ZOOTECNICO'
  +#13#10'           AND TIPOEVENTO NOT IN (4);'//Embrião
  +#13#10'      END'
  +#13#10'   END'
  +#13#10'END';

  //Ajusta os pais na linhagem após ajusta-los nos eventos
   _EXECUTE_BLOCK_UPDATE_ZOO_ANIMAL_LINHAGEM_MACHOS =
         'EXECUTE BLOCK'
  +#13#10'AS'
  +#13#10'DECLARE KZOO_EVENTO_ZOOTECNICO SYS$PKGUID20;'
  +#13#10'DECLARE KZOO_ANIMAL_MACHO SYS$PKGUID20;'
  +#13#10'DECLARE NOME_MACHO ZOO$NOMEANIMAL;'
  +#13#10'DECLARE COMPOSICAO_RACA_MACHO ZOO$COMPOSICAORACA;'
  +#13#10'DECLARE GRAUSANGUE_MACHO ZOO$GRAUSANGUE;'
  +#13#10'BEGIN'
  +#13#10'  FOR'
  +#13#10'   SELECT E.KZOO_EVENTO_ZOOTECNICO,'
  +#13#10'          E.KZOO_ANIMAL_MACHO_TOUROSEMEN,'
  +#13#10'          AM.NOMEESTABULO,'
  +#13#10'          AM.COMPOSICAORACA,'
  +#13#10'          AM.GRAUSANGUE'
  +#13#10'     FROM ZOO_EVENTOS_ZOOTECNICOS E'
  +#13#10'     INNER JOIN ZOO_ANIMAIS AM ON E.KZOO_ANIMAL_MACHO_TOUROSEMEN = AM.KZOO_ANIMAL'
  +#13#10'    WHERE E.ABORTOPARTO = 3' //PARTO
  +#13#10'      AND E.TIPOEVENTO NOT IN (4)'//Embrião
  +#13#10'   INTO :KZOO_EVENTO_ZOOTECNICO,'
  +#13#10'        :KZOO_ANIMAL_MACHO,'
  +#13#10'        :NOME_MACHO,'
  +#13#10'        :COMPOSICAO_RACA_MACHO,'
  +#13#10'        :GRAUSANGUE_MACHO'
  +#13#10'  DO'
  +#13#10'   BEGIN'
  +#13#10'     IF ( :KZOO_ANIMAL_MACHO IS NOT NULL ) THEN'
  +#13#10'      BEGIN'
  +#13#10'        UPDATE ZOO_ANIMAL_LINHAGEM'
  +#13#10'           SET KZOO_ANIMAL_MACHO = :KZOO_ANIMAL_MACHO,'
  +#13#10'               NOMEPAI =:NOME_MACHO,'
  +#13#10'               COMPOSICAORACAPAI = :COMPOSICAO_RACA_MACHO,'
  +#13#10'               GRAUSANGUEPAI =:GRAUSANGUE_MACHO'
  +#13#10'         WHERE KZOO_EVENTO_ZOOTECNICO = :KZOO_EVENTO_ZOOTECNICO;'
  +#13#10'      END'
  +#13#10'   END'
  +#13#10'END';

begin
  ExecuteDirect ( _EXECUTE_BLOCK_UPDATE_ZOO_ANIMAL_LINHAGEM_EVENTOS );
  ExecuteDirect ( _EXECUTE_BLOCK_UPDATE_ZOO_EVENTOS_ZOOTECNICOS );
  ExecuteDirect ( _EXECUTE_BLOCK_UPDATE_ZOO_ANIMAL_LINHAGEM_MACHOS );
end;


procedure TDBZootecnicoUpdate._5_001_61 ;
const
   _CREATE_TABLE_ZOO_PESOALTURA_REFERENCIA =
         'CREATE TABLE ZOO_PESOALTURA_REFERENCIA ('
      +#13#10' MIN_IDADE SYS$INT_NN,'
      +#13#10' MAX_IDADE SYS$INT_NN,'
      +#13#10' MIN_PESO SYS$FLOAT_NN,'
      +#13#10' MAX_PESO SYS$FLOAT_NN,'
      +#13#10' MIN_ALTURA SYS$FLOAT,'
      +#13#10' MAX_ALTURA SYS$FLOAT,'
      +#13#10' RACA_PRINCIPAL ZOO$COMPOSICAORACA,'
      +#13#10' CONSTRAINT PKZOO_PESOALTURA_REFERENCIA PRIMARY KEY (RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE)'
      +#13#10') ';

   _EXECUTE_BLOCK_INSERT_ZOO_PESOALTURA_REFERENCIA =
             'EXECUTE BLOCK'
      +#13#10'AS'
      +#13#10'BEGIN'
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (0, 1, 60, 70, 81, 84, ''HPB'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE );  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (1, 2, 81, 95, 85, 89, ''HPB'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (2, 3, 102, 119, 89, 94, ''HPB'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (3, 4, 123, 145, 94, 99, ''HPB'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (4, 5, 145, 170, 98, 103, ''HPB'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (5, 6, 167, 195, 101, 107, ''HPB'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (6, 7, 189, 220, 104, 110, ''HPB'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (7, 8, 211, 245, 107, 113, ''HPB'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (8, 9, 233, 271, 110, 116, ''HPB'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (9, 10, 255, 296, 113, 119, ''HPB'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (10, 11, 277, 321, 115, 121, ''HPB'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (11, 12, 299, 345, 118, 123, ''HPB'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (12, 13, 320, 369, 120, 125, ''HPB'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (13, 14, 341, 393, 121, 127, ''HPB'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (14, 15, 362, 416, 123, 129, ''HPB'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (15, 16, 368, 438, 125, 130, ''HPB'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (16, 17, 388, 460, 126, 131, ''HPB'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (17, 18, 420, 481, 128, 132, ''HPB'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (18, 19, 438, 502, 129, 134, ''HPB'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (19, 20, 456, 521, 130, 135, ''HPB'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (20, 21, 472, 539, 131, 135, ''HPB'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (21, 22, 488, 557, 131, 136, ''HPB'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (22, 23, 502, 573, 132, 137, ''HPB'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (23, 24, 516, 588, 133, 138, ''HPB'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (0, 1, 42, 49, 74, 81, ''JER'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (1, 2, 55, 66, 76, 84, ''JER'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (2, 3, 70, 80, 81, 86, ''JER'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (3, 4, 83, 98, 86, 91, ''JER'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (4, 5, 106, 126, 89, 97, ''JER'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (5, 6, 118, 146, 91, 98, ''JER'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (6, 7, 137, 164, 97, 102, ''JER'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (7, 8, 152, 187, 99, 104, ''JER'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (8, 9, 169, 198, 100, 105, ''JER'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (9, 10, 177, 219, 102, 107, ''JER'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (10, 11, 194, 226, 104, 109, ''JER'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (11, 12, 214, 249, 107, 112, ''JER'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (12, 13, 227, 259, 108, 113, ''JER'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (13, 14, 243, 273, 112, 114, ''JER'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (14, 15, 256, 290, 113, 117, ''JER'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (15, 16, 264, 300, 113, 118, ''JER'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (16, 17, 276, 316, 114, 118, ''JER'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (17, 18, 290, 342, 115, 119, ''JER'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (18, 19, 295, 349, 116, 120, ''JER'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (19, 20, 317, 369, 117, 121, ''JER'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (20, 21, 326, 375, 118, 122, ''JER'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (21, 22, 344, 390, 119, 125, ''JER'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (22, 23, 345, 398, 121, 125, ''JER'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'     UPDATE OR INSERT INTO ZOO_PESOALTURA_REFERENCIA (MIN_IDADE, MAX_IDADE, MIN_PESO, MAX_PESO, MIN_ALTURA, MAX_ALTURA, RACA_PRINCIPAL) VALUES (23, 24, 358, 405, 122, 126, ''JER'') MATCHING( RACA_PRINCIPAL, MIN_IDADE, MAX_IDADE ) ;  '
      +#13#10'END' ;

begin
  ExecuteDirect ( _CREATE_TABLE_ZOO_PESOALTURA_REFERENCIA );
  ExecuteDirect ( _EXECUTE_BLOCK_INSERT_ZOO_PESOALTURA_REFERENCIA );
end;


procedure TDBZootecnicoUpdate._5_001_37 ;
const

   _ALTER_TRIGGER_ZOO_EVENTOS_ZOOTECNICOS_AIUD0 =
         'CREATE OR ALTER TRIGGER ZOO_EVENTOS_ZOOTECNICOS_AIUD0 FOR ZOO_EVENTOS_ZOOTECNICOS'
  +#13#10'ACTIVE AFTER INSERT OR UPDATE OR DELETE POSITION 20001'
  +#13#10'AS'
  +#13#10'declare TIPO_CIO type of SYS$INT;'
  +#13#10'declare TIPO_INSEMINA type of SYS$INT;'
  +#13#10'declare TIPO_IMPLANTE type of SYS$INT;'
  +#13#10'begin'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''TIPO_EVENTO_ZOO'', ''CIO''       returning_values TIPO_CIO ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''TIPO_EVENTO_ZOO'', ''INSEMINA''  returning_values TIPO_INSEMINA ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''TIPO_EVENTO_ZOO'', ''IMPLANTE''  returning_values TIPO_IMPLANTE ;'
  +#13#10''
  +#13#10'  if ( inserting ) then'
  +#13#10'    begin'
  +#13#10'      /* atualiza ultimo evento do animal */'
  +#13#10'      EXECUTE PROCEDURE ZOO_UPDATE_ULTIMO_EVENTO_FEMEA NEW.KZOO_ANIMAL_FEMEA ;'
  +#13#10'      EXECUTE PROCEDURE ZOO_UPDATE_NUMERO_EVENTOS NEW.KZOO_ANIMAL_FEMEA,  NEW.TIPOEVENTO, 1, 0 ;'
  +#13#10''
  +#13#10'      /* incrementa aborto/parto/coleta do animail */'
  +#13#10'      if ( NEW.ABORTOPARTO is not null ) then'
  +#13#10'        begin'
  +#13#10'           EXECUTE PROCEDURE ZOO_UPDATE_ULTIMO_PARTO_FEMEA  NEW.KZOO_ANIMAL_FEMEA ;'
  +#13#10'           EXECUTE PROCEDURE ZOO_UPDATE_NUMERO_ABORTOPARTO NEW.KZOO_ANIMAL_FEMEA, NEW.ABORTOPARTO, 1, 0 ;'
  +#13#10'        end'
  +#13#10''
  +#13#10'      /* atualiza semem/embriao */'
  +#13#10'      if (NEW.KZOO_ANIMAL_MACHO is not null) then'
  +#13#10'        begin'
  +#13#10'           if ( NEW.TIPOEVENTO = TIPO_INSEMINA ) then'
  +#13#10'              EXECUTE PROCEDURE ZOO_UPDATE_ESTOQUE_MACHO NEW.KZOO_ANIMAL_MACHO, NEW.TIPOEVENTO, 0, NEW.DOSES ;'
  +#13#10'           else if ( NEW.TIPOEVENTO = TIPO_IMPLANTE ) then'
  +#13#10'              EXECUTE PROCEDURE ZOO_UPDATE_ESTOQUE_MACHO NEW.KZOO_ANIMAL_MACHO, NEW.TIPOEVENTO, 0, 1 ;'
  +#13#10'        end'
  +#13#10''
  +#13#10'    end'
  +#13#10''
  +#13#10'  else if (updating) then'
  +#13#10'    begin'
  +#13#10'      if ( OLD.KZOO_ANIMAL_FEMEA is distinct from  NEW.KZOO_ANIMAL_FEMEA  ) then'
  +#13#10'       begin'
  +#13#10'          EXECUTE PROCEDURE ZOO_UPDATE_ULTIMO_EVENTO_FEMEA OLD.KZOO_ANIMAL_FEMEA ;'
  +#13#10'          EXECUTE PROCEDURE ZOO_UPDATE_NUMERO_EVENTOS OLD.KZOO_ANIMAL_FEMEA,  OLD.TIPOEVENTO, 0, 1 ;'
  +#13#10'          EXECUTE PROCEDURE ZOO_UPDATE_NUMERO_EVENTOS NEW.KZOO_ANIMAL_FEMEA,  NEW.TIPOEVENTO, 1, 0 ;'
  +#13#10'       end'
  +#13#10''
  +#13#10'      EXECUTE PROCEDURE ZOO_UPDATE_ULTIMO_EVENTO_FEMEA NEW.KZOO_ANIMAL_FEMEA ;'
  +#13#10''
  +#13#10'      if ( OLD.TIPOEVENTO is distinct from NEW.TIPOEVENTO  ) then'
  +#13#10'        begin'
  +#13#10'          if ( OLD.KZOO_ANIMAL_FEMEA is not distinct from  NEW.KZOO_ANIMAL_FEMEA  ) then'
  +#13#10'              EXECUTE PROCEDURE ZOO_UPDATE_NUMERO_EVENTOS NEW.KZOO_ANIMAL_FEMEA,  OLD.TIPOEVENTO, 0, 1 ;'
  +#13#10'          EXECUTE PROCEDURE ZOO_UPDATE_NUMERO_EVENTOS NEW.KZOO_ANIMAL_FEMEA,  NEW.TIPOEVENTO, 1, 0 ;'
  +#13#10'        end'
  +#13#10''
  +#13#10'      /* decrementa aborto/parto/coleta do animail */'
  +#13#10'      if (   ( OLD.KZOO_ANIMAL_FEMEA is distinct from NEW.KZOO_ANIMAL_FEMEA )'
  +#13#10'          or ( OLD.ABORTOPARTO is distinct from NEW.ABORTOPARTO)'
  +#13#10'          or ( OLD.DATAABORTOPARTO is distinct from NEW.DATAABORTOPARTO)'
  +#13#10'         ) then'
  +#13#10'        begin'
  +#13#10'         if ( OLD.ABORTOPARTO is not null ) then'
  +#13#10'            begin'
  +#13#10'              EXECUTE PROCEDURE ZOO_UPDATE_ULTIMO_PARTO_FEMEA OLD.KZOO_ANIMAL_FEMEA ;'
  +#13#10'              EXECUTE PROCEDURE ZOO_UPDATE_NUMERO_ABORTOPARTO OLD.KZOO_ANIMAL_FEMEA, OLD.ABORTOPARTO, 0, 1 ;'
  +#13#10'            end'
  +#13#10''
  +#13#10'         if ( NEW.ABORTOPARTO is not null ) then'
  +#13#10'             begin'
  +#13#10'               EXECUTE PROCEDURE ZOO_UPDATE_ULTIMO_PARTO_FEMEA NEW.KZOO_ANIMAL_FEMEA ;'
  +#13#10'               EXECUTE PROCEDURE ZOO_UPDATE_NUMERO_ABORTOPARTO NEW.KZOO_ANIMAL_FEMEA, NEW.ABORTOPARTO, 1, 0 ;'
  +#13#10'             end'
  +#13#10''
  +#13#10'        end'
  +#13#10''
  +#13#10'      /* atualiza semem/embriao */'
  +#13#10'      if (    (OLD.TIPOEVENTO        is distinct from NEW.TIPOEVENTO )'
  +#13#10'           or (OLD.KZOO_ANIMAL_MACHO is distinct from NEW.KZOO_ANIMAL_MACHO )'
  +#13#10'           or (OLD.DOSES             is distinct from NEW.DOSES )'
  +#13#10'         ) then'
  +#13#10'        begin'
  +#13#10''
  +#13#10'             if (OLD.KZOO_ANIMAL_MACHO is not null) then'
  +#13#10'               begin'
  +#13#10'                 if ( OLD.TIPOEVENTO = TIPO_INSEMINA ) then'
  +#13#10'                    EXECUTE PROCEDURE ZOO_UPDATE_ESTOQUE_MACHO OLD.KZOO_ANIMAL_MACHO, OLD.TIPOEVENTO, OLD.DOSES, 0 ;'
  +#13#10'                 else if ( OLD.TIPOEVENTO = TIPO_IMPLANTE ) then'
  +#13#10'                    EXECUTE PROCEDURE ZOO_UPDATE_ESTOQUE_MACHO OLD.KZOO_ANIMAL_MACHO, OLD.TIPOEVENTO, 1, 0 ;'
  +#13#10'               end'
  +#13#10''
  +#13#10'             if (NEW.KZOO_ANIMAL_MACHO is not null) then'
  +#13#10'               begin'
  +#13#10'                 if ( NEW.TIPOEVENTO = TIPO_INSEMINA ) then'
  +#13#10'                    EXECUTE PROCEDURE ZOO_UPDATE_ESTOQUE_MACHO NEW.KZOO_ANIMAL_MACHO, NEW.TIPOEVENTO, 0, NEW.DOSES ;'
  +#13#10'                 else if ( NEW.TIPOEVENTO = TIPO_IMPLANTE ) then'
  +#13#10'                    EXECUTE PROCEDURE ZOO_UPDATE_ESTOQUE_MACHO NEW.KZOO_ANIMAL_MACHO, NEW.TIPOEVENTO, 0, 1 ;'
  +#13#10'               end'
  +#13#10'        end'
  +#13#10'    end'
  +#13#10'  else if (deleting) then'
  +#13#10'    begin'
  +#13#10'       EXECUTE PROCEDURE ZOO_UPDATE_ULTIMO_EVENTO_FEMEA ( OLD.KZOO_ANIMAL_FEMEA ) ;'
  +#13#10'       EXECUTE PROCEDURE ZOO_UPDATE_NUMERO_EVENTOS OLD.KZOO_ANIMAL_FEMEA,  OLD.TIPOEVENTO, 0, 1 ;'
  +#13#10''
  +#13#10'       if ( OLD.ABORTOPARTO is not null ) then'
  +#13#10'         begin'
  +#13#10'          EXECUTE PROCEDURE ZOO_UPDATE_ULTIMO_PARTO_FEMEA OLD.KZOO_ANIMAL_FEMEA ;'
  +#13#10'          EXECUTE PROCEDURE ZOO_UPDATE_NUMERO_ABORTOPARTO OLD.KZOO_ANIMAL_FEMEA, OLD.ABORTOPARTO, 0, 1 ;'
  +#13#10'         end'
  +#13#10''
  +#13#10'      /* atualiza semem/embriao */'
  +#13#10'      if (OLD.KZOO_ANIMAL_MACHO is not null) then'
  +#13#10'        begin'
  +#13#10'           if ( OLD.TIPOEVENTO = TIPO_INSEMINA ) then'
  +#13#10'              EXECUTE PROCEDURE ZOO_UPDATE_ESTOQUE_MACHO OLD.KZOO_ANIMAL_MACHO, OLD.TIPOEVENTO, OLD.DOSES, 0 ;'
  +#13#10'           else if ( OLD.TIPOEVENTO = TIPO_IMPLANTE ) then'
  +#13#10'              EXECUTE PROCEDURE ZOO_UPDATE_ESTOQUE_MACHO OLD.KZOO_ANIMAL_MACHO, OLD.TIPOEVENTO, 1, 0 ;'
  +#13#10'        end'
  +#13#10''
  +#13#10'    end'
  +#13#10''
  +#13#10'end' ;

begin
   TryExecuteDirect ( _ALTER_TRIGGER_ZOO_EVENTOS_ZOOTECNICOS_AIUD0 ) ;
end ;

procedure TDBZootecnicoUpdate._5_001_36 ;
const
   _ALTER_PROCEDURE_ZOO_UPDATE_ULTIMO_PARTO_FEMEA =
         'CREATE OR ALTER PROCEDURE ZOO_UPDATE_ULTIMO_PARTO_FEMEA ('
  +#13#10'    KZOO_ANIMAL_FEMEA TYPE OF SYS$PKGUID20)'
  +#13#10'AS'
  +#13#10'DECLARE VARIABLE KULTIMO_PARTO TYPE OF SYS$FKGUID20;'
  +#13#10'DECLARE VARIABLE ULTIMO_PARTO TYPE OF SYS$DATE;'
  +#13#10'DECLARE VARIABLE TIPO_CIO TYPE OF SYS$INT;'
  +#13#10'DECLARE VARIABLE TIPO_PARTO TYPE OF SYS$INT;'
  +#13#10'BEGIN'
  +#13#10''
  +#13#10'   KULTIMO_PARTO = NULL ;'
  +#13#10'   ULTIMO_PARTO  = NULL ;'
  +#13#10''
  +#13#10'   EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''TIPO_EVENTO_ZOO'',  ''CIO''   RETURNING_VALUES TIPO_CIO ;'
  +#13#10'   EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''TIPO_PARTOABORTO'', ''PARTO'' RETURNING_VALUES TIPO_PARTO ;'
  +#13#10''
  +#13#10'   SELECT'
  +#13#10'         KZOO_EVENTO_ZOOTECNICO, DATAABORTOPARTO'
  +#13#10'   FROM ZOO_EVENTOS_ZOOTECNICOS'
  +#13#10'   WHERE'
  +#13#10'         KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL_FEMEA'
  +#13#10'     AND TIPOEVENTO <> :TIPO_CIO'
  +#13#10'     AND ABORTOPARTO = :TIPO_PARTO'
  +#13#10'   ORDER BY DATAABORTOPARTO DESC'
  +#13#10'   ROWS 1'
  +#13#10'   INTO :KULTIMO_PARTO, :ULTIMO_PARTO ;'
  +#13#10''
  +#13#10'   UPDATE ZOO_ANIMAIS_FEMEA'
  +#13#10'      SET'
  +#13#10'         KULTIMO_PARTO = :KULTIMO_PARTO,'
  +#13#10'         ULTIMO_PARTO  = :ULTIMO_PARTO'
  +#13#10'   WHERE ( KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL_FEMEA )'
  +#13#10'    AND  (    ( :KULTIMO_PARTO IS NULL)'
  +#13#10'           OR ( KULTIMO_PARTO IS NULL )'
  +#13#10'           OR ( KULTIMO_PARTO = :KULTIMO_PARTO AND ULTIMO_PARTO IS DISTINCT FROM :ULTIMO_PARTO )'
  +#13#10'         ) ;'
  +#13#10''
  +#13#10'END' ;

begin
  ExecuteDirect ( _ALTER_PROCEDURE_ZOO_UPDATE_ULTIMO_PARTO_FEMEA ) ;
end;

procedure TDBZootecnicoUpdate._5_001_35 ;
const
 _ALTER_PROCEDURE_DOIMP_IDEAGRI_CIOSCOB =
        'CREATE OR ALTER PROCEDURE DOIMP$IDEAGRI_CIOSCOB ('
 +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
 +#13#10'    IDEAGRI varchar(1024) collate ISO8859_1)'
 +#13#10'AS'
 +#13#10'DECLARE BRINCO VARCHAR(10) NOT NULL;'
 +#13#10'DECLARE DTUCIO DATE NOT NULL;'
 +#13#10'DECLARE DTUCOB DATE;'
 +#13#10'DECLARE TOURO VARCHAR(8);'
 +#13#10'DECLARE IM CHAR(1);'
 +#13#10'DECLARE DOSES SMALLINT;'
 +#13#10'DECLARE CIO CHAR(1);'
 +#13#10'DECLARE AB_SP CHAR(1);'
 +#13#10'DECLARE DATACONF DATE;'
 +#13#10'DECLARE DATA_AB DATE;'
 +#13#10'DECLARE NUM_COM VARCHAR(6);'
 +#13#10'DECLARE FUNCIONAR CHAR(2);'
 +#13#10'DECLARE OBSERVACAO VARCHAR(15);'
 +#13#10'DECLARE REEXAMINAR CHAR(1);'
 +#13#10'DECLARE CONF CHAR(1);'
 +#13#10'DECLARE INTERVALO SMALLINT;'
 +#13#10'DECLARE DTPARTO DATE;'
 +#13#10'DECLARE SEXO1 CHAR(1);'
 +#13#10'DECLARE SEXO2 CHAR(1);'
 +#13#10'DECLARE EMBRIOES SMALLINT;'
 +#13#10'DECLARE CDTIPOPARTO SMALLINT;'
 +#13#10'DECLARE RETENCAOPLACENTA SMALLINT;'
 +#13#10'declare LF_ char;'
 +#13#10'begin'
 +#13#10''
 +#13#10' LF_ = ASCII_CHAR(10) ;'
 +#13#10''
 +#13#10' DELETE FROM IMP$CIOSCOB ;'
 +#13#10''
 +#13#10' FOR EXECUTE STATEMENT'
 +#13#10'   ('
 +#13#10'          ''SELECT '''
 +#13#10'   ||LF_||'' R.CDANIMAL BRINCO,'''
 +#13#10'   ||LF_||'' DATA DTUCIO,'''
 +#13#10'   ||LF_||'' NULL DTUCOB,'''
 +#13#10'   ||LF_||'' R.CDREPRODUTOR TOURO,'''
 +#13#10'   ||LF_||'' CASE '''
 +#13#10'   ||LF_||''  WHEN R.CDTIPOREPRODUCAO = 4 THEN ''''C'''''''
 +#13#10'   ||LF_||''  WHEN R.CDTIPOREPRODUCAO = 1 THEN ''''I'''''''
 +#13#10'   ||LF_||''  WHEN R.CDTIPOREPRODUCAO = 2 THEN ''''M'''''''
 +#13#10'   ||LF_||''  WHEN R.CDTIPOREPRODUCAO = 3 THEN ''''E'''''''
 +#13#10'   ||LF_||'' END IM,'''
 +#13#10'   ||LF_||'' IIF(R.CDTIPOREPRODUCAO = 1, 1, NULL) DOSES,'''
 +#13#10'   ||LF_||'' NULL CIO,'''
 +#13#10'   ||LF_||'' NULL AB_SP,'''
 +#13#10'   ||LF_||'' NULL DATACONF,'''
 +#13#10'   ||LF_||'' NULL DATA_AB,'''
 +#13#10'   ||LF_||'' CR.CODIGO NUM_COM,'''
 +#13#10'   ||LF_||'' NULL FUNCIONAR,'''
 +#13#10'   ||LF_||'' NULL OBSERVACAO,'''
 +#13#10'   ||LF_||'' NULL REEXAMINAR,'''
 +#13#10'   ||LF_||'' NULL CONF,'''
 +#13#10'   ||LF_||'' NULL INTERVALO,'''
 +#13#10'   ||LF_||'' NULL DTPARTO,'''
 +#13#10'   ||LF_||'' R.SEXOCRIA1 SEXO1,'''
 +#13#10'   ||LF_||'' R.SEXOCRIA2 SEXO2,'''
 +#13#10'   ||LF_||'' IIF(R.CDTIPOREPRODUCAO = 3, 1, null) EMBRIOES'''
 +#13#10'   ||LF_||''FROM REPRODUCAO R'''
 +#13#10'   ||LF_||''LEFT JOIN COMUNICACAOREGISTRO CR ON CR.CDCOMUNICACAOREGISTRO = R.CDCOMUNICACAOREGISTRO'''
 +#13#10'   ||LF_||''WHERE R.CDTIPOREPRODUCAO IN (1,2,3) OR (R.CDTIPOREPRODUCAO = 4 AND CIO =1)'''
 +#13#10'   )'
 +#13#10' ON EXTERNAL DATA SOURCE :IDEAGRI'
 +#13#10' WITH COMMON TRANSACTION'
 +#13#10' INTO'
 +#13#10'   :BRINCO,:DTUCIO,:DTUCOB,:TOURO,'
 +#13#10'   :IM,'
 +#13#10'   :DOSES,'
 +#13#10'   :CIO, :AB_SP,:DATACONF,:DATA_AB,:NUM_COM,:FUNCIONAR,'
 +#13#10'   :OBSERVACAO,:REEXAMINAR,:CONF,:INTERVALO,:DTPARTO,'
 +#13#10'   :SEXO1,:SEXO2,'
 +#13#10'   :EMBRIOES'
 +#13#10' DO'
 +#13#10'    INSERT INTO IMP$CIOSCOB'
 +#13#10'     ('
 +#13#10'      BRINCO,DTUCIO,DTUCOB,TOURO,IM,DOSES,CIO,AB_SP,DATACONF,DATA_AB,NUM_COM,FUNCIONAR,'
 +#13#10'      OBSERVACAO,REEXAMINAR,CONF,INTERVALO,DTPARTO,SEXO1,SEXO2,EMBRIOES'
 +#13#10'     )'
 +#13#10'    VALUES'
 +#13#10'    ('
 +#13#10'       :BRINCO,:DTUCIO,:DTUCOB,:TOURO,:IM,:DOSES,:CIO,:AB_SP,:DATACONF,:DATA_AB,:NUM_COM,:FUNCIONAR,'
 +#13#10'       :OBSERVACAO,:REEXAMINAR,:CONF,:INTERVALO,:DTPARTO,:SEXO1,:SEXO2,:EMBRIOES'
 +#13#10'    ) ;'
 +#13#10''
 +#13#10' FOR EXECUTE STATEMENT'
 +#13#10'   ('
 +#13#10'          ''SELECT'''
 +#13#10'   ||LF_||'' R.CDANIMAL,'''
 +#13#10'   ||LF_||'' R.DATA,'''
 +#13#10'   ||LF_||'' IIF(R.DIAGNOSTICO = ''''P'''', ''''S'''', ''''N'''')'''
 +#13#10'   ||LF_||''FROM REPRODUCAO R'''
 +#13#10'   ||LF_||''WHERE R.CDTIPOREPRODUCAO = 4 AND R.DIAGNOSTICO IS NOT NULL'''
 +#13#10'   )'
 +#13#10' ON EXTERNAL DATA SOURCE :IDEAGRI'
 +#13#10' WITH COMMON TRANSACTION'
 +#13#10' INTO'
 +#13#10'   :BRINCO,:DATACONF,:CONF'
 +#13#10' DO'
 +#13#10' BEGIN'
 +#13#10'    UPDATE IMP$CIOSCOB SET DATACONF = :DATACONF, CONF = :CONF'
 +#13#10'    WHERE BRINCO = :BRINCO AND'
 +#13#10'    DTUCIO = (SELECT FIRST 1 CC.DTUCIO FROM IMP$CIOSCOB CC WHERE CC.DTUCIO < :DATACONF'
 +#13#10'    AND CC.BRINCO = :BRINCO AND IM <> ''C'''
 +#13#10'    ORDER BY CC.DTUCIO DESC);'
 +#13#10' END'
 +#13#10''
 +#13#10' FOR EXECUTE STATEMENT'
 +#13#10'   ('
 +#13#10'          ''SELECT'''
 +#13#10'   ||LF_||'' R.CDANIMAL,'''
 +#13#10'   ||LF_||'' R.DATA,'''
 +#13#10'   ||LF_||'' R.CDTIPOPARTO,'''
 +#13#10'   ||LF_||'' R.RETENCAOPLACENTA'''
 +#13#10'   ||LF_||''FROM REPRODUCAO R'''
 +#13#10'   ||LF_||''WHERE R.CDTIPOREPRODUCAO = 7'''
 +#13#10'   )'
 +#13#10' ON EXTERNAL DATA SOURCE :IDEAGRI'
 +#13#10' WITH COMMON TRANSACTION'
 +#13#10' INTO'
 +#13#10'   :BRINCO,:DTPARTO, :CDTIPOPARTO, :RETENCAOPLACENTA'
 +#13#10' DO'
 +#13#10' BEGIN'
 +#13#10'    IF ( CDTIPOPARTO = 3 ) THEN'
 +#13#10'      UPDATE IMP$CIOSCOB'
 +#13#10'        SET'
 +#13#10'          DATA_AB = :DTPARTO,'
 +#13#10'          AB_SP = ''a'''
 +#13#10'      WHERE BRINCO = :BRINCO'
 +#13#10'        AND DTUCIO = (SELECT'
 +#13#10'                       CC.DTUCIO'
 +#13#10'                      FROM IMP$CIOSCOB CC'
 +#13#10'                      WHERE CC.DTUCIO < :DTPARTO'
 +#13#10'                        AND CC.IM <> ''C'''
 +#13#10'                        AND CC.BRINCO = :BRINCO'
 +#13#10'                      ORDER BY CC.DTUCIO DESC'
 +#13#10'                      ROWS 1);'
 +#13#10'    ELSE'
 +#13#10'      UPDATE IMP$CIOSCOB'
 +#13#10'        SET'
 +#13#10'          DTPARTO = :DTPARTO,'
 +#13#10'          CDTIPOPARTO = :CDTIPOPARTO,'
 +#13#10'          RETENCAOPLACENTA = :RETENCAOPLACENTA'
 +#13#10'      WHERE BRINCO = :BRINCO'
 +#13#10'        AND DTUCIO = (SELECT  CC.DTUCIO'
 +#13#10'                      FROM IMP$CIOSCOB CC'
 +#13#10'                      WHERE CC.DTUCIO < :DTPARTO'
 +#13#10'                        AND CC.IM <> ''C'''
 +#13#10'                        AND CC.BRINCO = :BRINCO'
 +#13#10'                      ORDER BY CC.DTUCIO DESC'
 +#13#10'                      ROWS 1);'
 +#13#10' END'
 +#13#10'END' ;

  _ALTER_PROCEDURE_DOIMP_IDEAGRI_CADTOURO =
         'CREATE OR ALTER PROCEDURE DOIMP$IDEAGRI_CADTOURO ('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    IDEAGRI VARCHAR(1024) COLLATE ISO8859_1)'
  +#13#10'AS'
  +#13#10'DECLARE CODIGO VARCHAR(8) NOT NULL;'
  +#13#10'DECLARE NOME_ESTAB VARCHAR(60);'
  +#13#10'DECLARE NOME_COMPLETO VARCHAR(60);'
  +#13#10'DECLARE REGISTRO VARCHAR(15);'
  +#13#10'DECLARE DTNASC DATE;'
  +#13#10'DECLARE PAI VARCHAR(8);'
  +#13#10'DECLARE NOME_PAI VARCHAR(60);'
  +#13#10'DECLARE REGISTRO_PAI VARCHAR(15);'
  +#13#10'DECLARE MAE VARCHAR(10);'
  +#13#10'DECLARE NOME_MAE VARCHAR(60);'
  +#13#10'DECLARE REGISTRO_MAE VARCHAR(15);'
  +#13#10'DECLARE LEITE INTEGER;'
  +#13#10'DECLARE TIPO NUMERIC(15,2);'
  +#13#10'DECLARE UBERE NUMERIC(15,2);'
  +#13#10'DECLARE PERNAPE NUMERIC(15,2);'
  +#13#10'DECLARE PARTO INTEGER;'
  +#13#10'DECLARE QESTOQUE INTEGER;'
  +#13#10'DECLARE QUSADA SMALLINT;'
  +#13#10'DECLARE CONCEPCAO INTEGER;'
  +#13#10'DECLARE VALOR NUMERIC(15,2);'
  +#13#10'DECLARE STATUS CHAR(1) NOT NULL;'
  +#13#10'DECLARE GSANGUE SMALLINT;'
  +#13#10'DECLARE RACA CHAR(3);'
  +#13#10'DECLARE RETIRO CHAR(2);'
  +#13#10'DECLARE LOTE CHAR(2);'
  +#13#10'DECLARE BOJAO SMALLINT;'
  +#13#10'DECLARE CANECA SMALLINT;'
  +#13#10'DECLARE HACK VARCHAR(10);'
  +#13#10'DECLARE DTDESC DATE;'
  +#13#10'DECLARE RAZAO CHAR(3);'
  +#13#10'DECLARE MOTIVO VARCHAR(5);'
  +#13#10'DECLARE PRECO_VENDA NUMERIC(15,2);'
  +#13#10'DECLARE COMPRADOR VARCHAR(40);'
  +#13#10'DECLARE AVO_PATERNO VARCHAR(40);'
  +#13#10'DECLARE REG_AVO_PATERNO VARCHAR(15);'
  +#13#10'DECLARE AVO_PATERNA VARCHAR(40);'
  +#13#10'DECLARE REG_AVO_PATERNA VARCHAR(15);'
  +#13#10'DECLARE AVO_MATERNO VARCHAR(40);'
  +#13#10'DECLARE REG_AVO_MATERNO VARCHAR(15);'
  +#13#10'DECLARE AVO_MATERNA VARCHAR(40);'
  +#13#10'DECLARE REG_AVO_MATERNA VARCHAR(15);'
  +#13#10'DECLARE LF_ CHAR;'
  +#13#10'BEGIN'
  +#13#10''
  +#13#10' LF_ = ASCII_CHAR(10) ;'
  +#13#10' DELETE FROM IMP$CADTOURO ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   ('
  +#13#10'           ''SELECT A.CDANIMAL, (TRIM(A.NUMERO) || ''''[*]'''' || coalesce('''' '''' || A.NOME, '''''''')), A.NOMECOMPLETO, A.REGASSOCRACA, A.DTNASCIMENTO, '''
  +#13#10'   ||LF_||''P.CDANIMAL,  P.nomecompleto, P.regassocraca, '''
  +#13#10'   ||LF_||''M.CDANIMAL,  M.nomecompleto, M.regassocraca, '''
  +#13#10'   ||LF_||''NULL LEITE, NULL TIPO, NULL UBERE, NULL PERNAPE, NULL PARTO, 0 QESTOQUE, 0 QUSADA, NULL CONCEPCAO, NULL VALOR, '''
  +#13#10'   ||LF_||''CASE '''
  +#13#10'   ||LF_||''    WHEN (A.SEXO IS NULL) OR (A.TIPOANIMAL=''''S'''') THEN ''''I'''' '''
  +#13#10'   ||LF_||''    WHEN A.CDCATEGORIA = 1 THEN ''''B'''' '''
  +#13#10'   ||LF_||''    WHEN A.CDCATEGORIA = 2 THEN ''''M'''' '''
  +#13#10'   ||LF_||''    WHEN A.CDCATEGORIA = 3 THEN ''''M'''' '''
  +#13#10'   ||LF_||''    WHEN A.CDCATEGORIA = 4 THEN ''''M'''' '''
  +#13#10'   ||LF_||''    ELSE ''''M'''''''
  +#13#10'   ||LF_||''END STATUS, '''
  +#13#10'   ||LF_||''CASE '''
  +#13#10'   ||LF_||''    WHEN A.cdgraucruzamento IN (1,2,3,4) THEN ''''8'''' '''
  +#13#10'   ||LF_||''    WHEN A.cdgraucruzamento IN (5,6,7,8) THEN ''''1'''' '''
  +#13#10'   ||LF_||''    WHEN A.cdgraucruzamento IN (9,10,11,12) THEN ''''2'''' '''
  +#13#10'   ||LF_||''    WHEN A.cdgraucruzamento IN (13,14,15,16) THEN ''''3'''' '''
  +#13#10'   ||LF_||''    WHEN A.cdgraucruzamento IN (17,18,19,20) THEN ''''4'''' '''
  +#13#10'   ||LF_||''    WHEN A.cdgraucruzamento IN (21,22,23,24) THEN ''''5'''' '''
  +#13#10'   ||LF_||''    WHEN A.cdgraucruzamento > 24 THEN ''''5'''' '''
  +#13#10'   ||LF_||''END GSANGUE, '''
  +#13#10'   ||LF_||''(SELECT FIRST 1'''
  +#13#10'   ||LF_||''  CASE'''
  +#13#10'   ||LF_||''    WHEN AR.CDRACA IN ( 175 ) THEN ''''PDS'''' '''
  +#13#10'   ||LF_||''    WHEN AR.CDRACA IN ( 290, 300, 340 ) THEN ''''GIR'''' '''
  +#13#10'   ||LF_||''    WHEN AR.CDRACA IN ( 310 ) THEN ''''GHL'''' '''
  +#13#10'   ||LF_||''    WHEN AR.CDRACA IN ( 365 ) THEN ''''HPB'''' '''
  +#13#10'   ||LF_||''    WHEN AR.CDRACA IN ( 385 ) THEN ''''JER'''' '''
  +#13#10'   ||LF_||''    WHEN AR.CDRACA IN ( 635 ) THEN ''''HPV'''' '''
  +#13#10'   ||LF_||''    WHEN AR.CDRACA IN ( 565 ) THEN ''''SIM'''' '''
  +#13#10'   ||LF_||''  ELSE'''
  +#13#10'   ||LF_||''    ''''XX'''' '''
  +#13#10'   ||LF_||''  END'''
  +#13#10'   ||LF_||''FROM ANIMALRACA AR'''
  +#13#10'   ||LF_||''WHERE AR.CDANIMALRACA = A.CDANIMAL'''
  +#13#10'   ||LF_||''ORDER BY AR.PERCENTUAL DESC'''
  +#13#10'   ||LF_||'') RACA, '''
  +#13#10'   ||LF_||''A.animalrebanho, NULL, NULL, NULL, NULL, '''
  +#13#10'   ||LF_||''A.DTBAIXA, IIF(A.DTBAIXA IS NOT NULL, ''''DES'''', NULL), A.cdmotivobaixa, '''
  +#13#10'   ||LF_||''NULL,NULL,NULL,NULL, NULL,NULL,NULL,NULL,NULL,NULL '''
  +#13#10'   ||LF_||''FROM ANIMAL A '''
  +#13#10'   ||LF_||''LEFT JOIN ANIMAL P ON P.cdanimal = A.cdpai '''
  +#13#10'   ||LF_||''LEFT JOIN ANIMAL M ON M.cdanimal = A.cdmae '''
  +#13#10'   ||LF_||''WHERE (A.SEXO = ''''M'''') or (A.TIPOANIMAL IS DISTINCT FROM ''''A'''')'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :IDEAGRI'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'    :CODIGO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,:MAE,:NOME_MAE,'
  +#13#10'    :REGISTRO_MAE,:LEITE,:TIPO,:UBERE,:PERNAPE,:PARTO,:QESTOQUE,:QUSADA,:CONCEPCAO,:VALOR,:STATUS,:GSANGUE,'
  +#13#10'    :RACA,:RETIRO,:LOTE,:BOJAO,:CANECA,:HACK,:DTDESC,:RAZAO,:MOTIVO,:PRECO_VENDA,:COMPRADOR,:AVO_PATERNO,'
  +#13#10'    :REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,:AVO_MATERNA,:REG_AVO_MATERNA'
  +#13#10'  DO'
  +#13#10'  BEGIN'
  +#13#10''
  +#13#10'--     SELECT first 1 COMPOSICAO from doimp$ideagri_raca(:RACA) into :RACA;'
  +#13#10''
  +#13#10'    INSERT INTO IMP$CADTOURO'
  +#13#10'     ('
  +#13#10'       CODIGO,NOME_ESTAB,NOME_COMPLETO,REGISTRO,DTNASC,PAI,NOME_PAI,REGISTRO_PAI,MAE,NOME_MAE,'
  +#13#10'       REGISTRO_MAE,LEITE,TIPO,UBERE,PERNAPE,PARTO,QESTOQUE,QUSADA,CONCEPCAO,VALOR,STATUS,GSANGUE,'
  +#13#10'       RACA,RETIRO,LOTE,BOJAO,CANECA,HACK,DTDESC,RAZAO,MOTIVO,PRECO_VENDA,COMPRADOR,AVO_PATERNO,'
  +#13#10'       REG_AVO_PATERNO,AVO_PATERNA,REG_AVO_PATERNA,AVO_MATERNO,REG_AVO_MATERNO,AVO_MATERNA,REG_AVO_MATERNA'
  +#13#10'     )'
  +#13#10'    VALUES'
  +#13#10'    ('
  +#13#10'      :CODIGO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,:MAE,:NOME_MAE,'
  +#13#10'      :REGISTRO_MAE,:LEITE,:TIPO,:UBERE,:PERNAPE,:PARTO,:QESTOQUE,:QUSADA,:CONCEPCAO,:VALOR,:STATUS,:GSANGUE,'
  +#13#10'      :RACA,:RETIRO,:LOTE,:BOJAO,:CANECA,:HACK,:DTDESC,:RAZAO,:MOTIVO,:PRECO_VENDA,:COMPRADOR,:AVO_PATERNO,'
  +#13#10'      :REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,:AVO_MATERNA,:REG_AVO_MATERNA'
  +#13#10'    ) ;'
  +#13#10'  END'
  +#13#10'END' ;


 begin
 ExecuteDirect( _ALTER_PROCEDURE_DOIMP_IDEAGRI_CIOSCOB ) ;
 ExecuteDirect( _ALTER_PROCEDURE_DOIMP_IDEAGRI_CADTOURO ) ;
end;

procedure TDBZootecnicoUpdate._5_001_34 ;
const
  _UPDATE_ZOO_CFGPARAMNOVILHAS =
            'EXECUTE BLOCK'
     +#13#10'AS'
     +#13#10'BEGIN'
     {$IFDEF _EXPORT}
     +#13#10'  RDB$SET_CONTEXT( ''USER_SESSION'', ''JNL$OFF'',  ''1'' ) ;'
     {$ENDIF _EXPORT}
     +#13#10'  UPDATE ZOO_CFGPARAMNOVILHAS'
     +#13#10'  SET'
     +#13#10'   VALOR=VALOR*30'
     +#13#10'  WHERE'
     +#13#10'        ( SYS$VALUE = ''IDADE_DESMAME'' )'
     +#13#10'    AND ( VALOR<30 ) ;'
     {$IFDEF _EXPORT}
     +#13#10'  RDB$SET_CONTEXT( ''USER_SESSION'', ''JNL$OFF'',  NULL ) ;'
     {$ENDIF _EXPORT}
     +#13#10'END' ;
begin
  {$IFDEF _EXPORT}
  ExecuteDirect ( 'ALTER TRIGGER JNL$ZOO_CFGPARAMNOVILHAS INACTIVE' ) ;
  {$ENDIF _EXPORT}
  ExecuteDirect ( _UPDATE_ZOO_CFGPARAMNOVILHAS )
end ;

procedure TDBZootecnicoUpdate._5_001_33 ;
const
  _ALTER_PROCEDURE_ZOO_UPDATE_CALCULO_PESAGEM =
         'CREATE OR ALTER PROCEDURE ZOO_UPDATE_CALCULO_PESAGEM ('
  +#13#10'    KZOO_LACTACAO type of SYS$FKGUID20_NN)'
  +#13#10'AS'
  +#13#10'declare KCAD_FAZENDA type of SYS$FKGUID20;'
  +#13#10'declare KZOO_PESAGEM_LEITE type of SYS$FKGUID20;'
  +#13#10'declare KPRIMEIRA_PESAGEMLEITE type of SYS$FKGUID20;'
  +#13#10'declare PRIMEIRA_PESAGEMLEITE type of SYS$DATE;'
  +#13#10'declare KULTIMA_PESAGEMLEITE type of SYS$FKGUID20;'
  +#13#10'declare ULTIMA_PESAGEMLEITE type of SYS$DATE;'
  +#13#10'declare NL type of SYS$INT;'
  +#13#10'declare KZOO_ANIMAL_FEMEA type of SYS$FKGUID20;'
  +#13#10'declare DATALACTACAO type of SYS$DATE;'
  +#13#10'declare DATA_SECAGEM type of SYS$DATE;'
  +#13#10'declare DATAPESAGEM type of SYS$DATE;'
  +#13#10'declare DEL type of SYS$INT;'
  +#13#10'declare DEL_PCL type of SYS$INT;'
  +#13#10'declare DATA_PICO SYS$DATE;'
  +#13#10'declare KPICO_PESAGEMLEITE type of SYS$FKGUID20;'
  +#13#10'declare PRODUCAO_PICO type of SYS$FLOAT;'
  +#13#10'declare PRODUCAO type of SYS$FLOAT;'
  +#13#10'declare P_GORDURA type of SYS$FLOAT;'
  +#13#10'declare GORDURA type of SYS$FLOAT;'
  +#13#10'declare P_PROTEINA type of SYS$FLOAT;'
  +#13#10'declare PROTEINA type of SYS$FLOAT;'
  +#13#10'declare DATA_ANTERIOR type of SYS$DATE;'
  +#13#10'declare DEL_ANTERIOR type of SYS$INT;'
  +#13#10'declare PRODUCAO_ANTERIOR type of SYS$FLOAT;'
  +#13#10'declare P_GORDURA_ANTERIOR type of SYS$FLOAT;'
  +#13#10'declare GORDURA_ANTERIOR type of SYS$FLOAT;'
  +#13#10'declare P_PROTEINA_ANTERIOR type of SYS$FLOAT;'
  +#13#10'declare PROTEINA_ANTERIOR type of SYS$FLOAT;'
  +#13#10'declare INTERVALO_DEL type of SYS$INT;'
  +#13#10'declare PRODUCAO_1 type of SYS$FLOAT;'
  +#13#10'declare GORDURA_1 type of SYS$FLOAT;'
  +#13#10'declare PROTEINA_1 type of SYS$FLOAT;'
  +#13#10'declare PRODUCAO_MEDIA type of SYS$FLOAT;'
  +#13#10'declare GORDURA_MEDIA type of SYS$FLOAT;'
  +#13#10'declare PROTEINA_MEDIA type of SYS$FLOAT;'
  +#13#10'declare PRODUCAO_UC type of SYS$FLOAT;'
  +#13#10'declare GORDURA_UC type of SYS$FLOAT;'
  +#13#10'declare PROTEINA_UC type of SYS$FLOAT;'
  +#13#10'declare NASCIMENTO type of SYS$DATE;'
  +#13#10'declare FATOR_PROJECAO_L305 type of ZOO$PROJECAOPRODUCAO;'
  +#13#10'declare FATOR_PROJECAO_GP305 type of ZOO$PROJECAOPRODUCAO;'
  +#13#10'declare IDADE_DIAS type of SYS$INT;'
  +#13#10'declare IDADE_MESES type of SYS$INT;'
  +#13#10'declare IDADE_ANOS type of SYS$INT;'
  +#13#10'declare PRODUCAO_ACUMULADA type of SYS$FLOAT;'
  +#13#10'declare GORDURA_ACUMULADA type of SYS$FLOAT;'
  +#13#10'declare PROTEINA_ACUMULADA type of SYS$FLOAT;'
  +#13#10'declare PROJ_PRODUCAO305 type of SYS$FLOAT;'
  +#13#10'declare PROJ_GORDURA305 type of SYS$FLOAT;'
  +#13#10'declare PROJ_PROTEINA305 type of SYS$FLOAT;'
  +#13#10'declare DPP type of SYS$INT;'
  +#13#10'declare DEL305 type of SYS$INT;'
  +#13#10'declare PL305 type of SYS$FLOAT;'
  +#13#10'declare PG305 type of SYS$FLOAT;'
  +#13#10'declare PP305 type of SYS$FLOAT;'
  +#13#10'declare DEL365 type of SYS$INT;'
  +#13#10'declare PL365 type of SYS$FLOAT;'
  +#13#10'declare PG365 type of SYS$FLOAT;'
  +#13#10'declare PP365 type of SYS$FLOAT;'
  +#13#10'declare FATOR_EQA_LEITE type of SYS$FLOAT;'
  +#13#10'declare FATOR_EQA_GP type of SYS$FLOAT;'
  +#13#10'declare FATOR_PCL type of ZOO$FATORPCL;'
  +#13#10'declare EQA_LEITE type of SYS$FLOAT;'
  +#13#10'declare EQA_GORDURA type of SYS$FLOAT;'
  +#13#10'declare EQA_PROTEINA type of SYS$FLOAT;'
  +#13#10'declare PRODUCAO_PREVISTA type of SYS$FLOAT;'
  +#13#10'declare NUMERO_ORDENHAS type of SYS$INT;'
  +#13#10'declare MAX_ORDENHAS_DIA type of SYS$INT;'
  +#13#10'declare TOTAL_ORDENHAS type of SYS$INT;'
  +#13#10'declare KLOTE_NAOPROCESSADO type of SYS$FKGUID20;'
  +#13#10'declare KZOO_LOTEPESAGEM_LEITE type of SYS$FKGUID20;'
  +#13#10'declare KZOO_PESAGEM_LEITE_EQA type of SYS$FKGUID20;'
  +#13#10'declare EQA_LEITE_OLD type of SYS$FLOAT;'
  +#13#10'declare EQA_GORDURA_OLD type of SYS$FLOAT;'
  +#13#10'declare EQA_PROTEINA_OLD type of SYS$FLOAT;'
  +#13#10'declare EQA_CHANGED varchar( 1 ) = null ;'
  +#13#10'declare JNL$OFF varchar( 1 ) ;'
  +#13#10'declare ZOO$CLOFF varchar( 1 ) ;'
  +#13#10'declare CG integer ;'
  +#13#10'BEGIN'
  +#13#10''
  +#13#10'  if ( RDB$GET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLOFF'' ) = ''1'' ) THEN'
  +#13#10'     EXIT ;'
  +#13#10''
  +#13#10'  KPRIMEIRA_PESAGEMLEITE = null ;'
  +#13#10'  KULTIMA_PESAGEMLEITE   = null ;'
  +#13#10'  KPICO_PESAGEMLEITE     = null ;'
  +#13#10'  KCAD_FAZENDA           = null ;'
  +#13#10'  DEL                    = null ;'
  +#13#10'  KLOTE_NAOPROCESSADO    = null ;'
  +#13#10'  TOTAL_ORDENHAS         = 0 ;'
  +#13#10'  MAX_ORDENHAS_DIA       = 0 ;'
  +#13#10''
  +#13#10''
  +#13#10'  SELECT L.KCAD_FAZENDA, L.KZOO_ANIMAL_FEMEA, L.DATALACTACAO, L.NL, L.DATA_SECAGEM FROM ZOO_LACTACOES  L'
  +#13#10'  WHERE KZOO_LACTACAO = :KZOO_LACTACAO'
  +#13#10'  INTO  :KCAD_FAZENDA, :KZOO_ANIMAL_FEMEA, DATALACTACAO, NL, DATA_SECAGEM ;'
  +#13#10''
  +#13#10'  if ( KCAD_FAZENDA is null ) then'
  +#13#10'     exit ;'
  +#13#10''
  +#13#10'  DPP = COALESCE( CAST( DATA_SECAGEM AS DATE ), CURRENT_DATE ) - CAST( DATALACTACAO AS DATE );'
  +#13#10''
  +#13#10'  -- idade do animal na lactação'
  +#13#10'  SELECT NASCIMENTO FROM ZOO_ANIMAIS_FEMEA WHERE KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL_FEMEA INTO :NASCIMENTO ;'
  +#13#10''
  +#13#10'  IDADE_DIAS  = CAST ( DATALACTACAO - NASCIMENTO AS INTEGER) ;'
  +#13#10'  IDADE_MESES = CAST ( IDADE_DIAS / 30.4 AS INTEGER ) ;'
  +#13#10'  IDADE_ANOS  = CAST ( IDADE_DIAS / 365.0 AS INTEGER ) ;'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE ZOO_GET_EQA IDADE_MESES returning_values :FATOR_EQA_LEITE, :FATOR_EQA_GP ;'
  +#13#10''
  +#13#10'  SELECT KZOO_LOTEPESAGEM_LEITE FROM ZOO_LOTEPESAGEM_LEITE'
  +#13#10'  WHERE KCAD_FAZENDA = :KCAD_FAZENDA AND PROCESSADO = ''F'''
  +#13#10'  ORDER BY DATA'
  +#13#10'  ROWS 1'
  +#13#10'  INTO KLOTE_NAOPROCESSADO  ;'
  +#13#10''
  +#13#10'--  IN AUTONOMOUS TRANSACTION DO'
  +#13#10'--     DELETE FROM ZOO_PESAGEM_LEITE_EQA WHERE  KZOO_LACTACAO = :KZOO_LACTACAO ;'
  +#13#10'--  IN AUTONOMOUS TRANSACTION DO'
  +#13#10'--     SELECT COUNT(*) FROM ZOO_PESAGEM_LEITE_EQA WHERE KZOO_LACTACAO = :KZOO_LACTACAO INTO CG ;'
  +#13#10''
  +#13#10'  FOR'
  +#13#10'   SELECT'
  +#13#10'    KZOO_PESAGEM_LEITE,'
  +#13#10'    KZOO_LOTEPESAGEM_LEITE,'
  +#13#10'    DATA,'
  +#13#10'    (IIF( ORD1 IS null, 0, 1 ) + IIF( ORD2 IS null, 0, 1 ) +IIF( ORD3 IS null, 0, 1 )),'
  +#13#10'    TOTAL'
  +#13#10'   FROM ZOO_PESAGEM_LEITE'
  +#13#10'   WHERE KZOO_LACTACAO = :KZOO_LACTACAO'
  +#13#10'     AND ANIMAL_DOENTE = ''F'''
  +#13#10'     AND DATA > :DATALACTACAO'
  +#13#10'--   PLAN (ZOO_PESAGEM_LEITE INDEX (IXZOO_PESAGEM_LEITE_02))'
  +#13#10'   ORDER BY KZOO_LACTACAO, DATA'
  +#13#10'  INTO KZOO_PESAGEM_LEITE, KZOO_LOTEPESAGEM_LEITE, DATAPESAGEM, NUMERO_ORDENHAS, PRODUCAO'
  +#13#10'  AS CURSOR PESAGEM_LEITE'
  +#13#10'  DO'
  +#13#10'    IF (( KZOO_LOTEPESAGEM_LEITE IS NULL ) OR (KLOTE_NAOPROCESSADO IS NULL) or (KZOO_LOTEPESAGEM_LEITE <> KLOTE_NAOPROCESSADO )) then'
  +#13#10'    begin'
  +#13#10''
  +#13#10'      TOTAL_ORDENHAS = TOTAL_ORDENHAS + NUMERO_ORDENHAS ;'
  +#13#10'      if ( NUMERO_ORDENHAS >  MAX_ORDENHAS_DIA ) then'
  +#13#10'        MAX_ORDENHAS_DIA = NUMERO_ORDENHAS ;'
  +#13#10''
  +#13#10'      --DEL = CAST(DATAPESAGEM - DATALACTACAO AS INTEGER) ;'
  +#13#10'      DEL = CAST( (CAST ( DATAPESAGEM AS DATE ) - CAST ( DATALACTACAO AS DATE )) AS INTEGER) ;'
  +#13#10'      INTERVALO_DEL = DEL - DEL_ANTERIOR ; --COALESCE ( DEL_ANTERIOR, 0 ) ;'
  +#13#10''
  +#13#10'      EXECUTE PROCEDURE ZOO_GET_PROJECAO_PRODUCAO DEL, IDADE_MESES returning_values :FATOR_PROJECAO_L305, :FATOR_PROJECAO_GP305 ;'
  +#13#10''
  +#13#10'      if ( KPRIMEIRA_PESAGEMLEITE is null ) then'
  +#13#10'        begin'
  +#13#10''
  +#13#10'           -- porcentagem de gordura, proteina da 1a analise da lactacao'
  +#13#10'           SELECT A.GORDURA / 100 GORDURA, A.PROTEINA / 100 GORDURA'
  +#13#10'           FROM ZOO_PESAGEM_LEITE_ANALISE A'
  +#13#10'           WHERE A.KZOO_LACTACAO     = :KZOO_LACTACAO'
  +#13#10'           ORDER BY A.KZOO_LACTACAO, A.DATA'
  +#13#10'           ROWS 1'
  +#13#10'           INTO P_GORDURA, P_PROTEINA ;'
  +#13#10''
  +#13#10'           -- calculo Gordura, Proteina'
  +#13#10'           GORDURA  = PRODUCAO * P_GORDURA  ;'
  +#13#10'           PROTEINA = PRODUCAO * P_PROTEINA ;'
  +#13#10''
  +#13#10'           -- atualiza a 1a pesagem'
  +#13#10'           DEL_PCL    = DEL ;'
  +#13#10'           KPRIMEIRA_PESAGEMLEITE = KZOO_PESAGEM_LEITE ;'
  +#13#10'           PRIMEIRA_PESAGEMLEITE  = DATAPESAGEM ;'
  +#13#10''
  +#13#10'           -- fator pcl em funcao do del / idade em anos'
  +#13#10'           EXECUTE PROCEDURE ZOO_GET_FCPCL ( DEL_PCL, IDADE_ANOS ) returning_values FATOR_PCL ;'
  +#13#10''
  +#13#10'           PRODUCAO_1 = PRODUCAO * FATOR_PCL * DEL_PCL ;'
  +#13#10'           GORDURA_1  = GORDURA  * FATOR_PCL * DEL_PCL ;'
  +#13#10'           PROTEINA_1 = PROTEINA * FATOR_PCL * DEL_PCL ;'
  +#13#10''
  +#13#10'        end'
  +#13#10'      else -- checa se existe uma analise na pesagem atual'
  +#13#10'        begin'
  +#13#10''
  +#13#10'          SELECT IIF ( A.GORDURA = 0, :P_GORDURA, A.GORDURA / 100 ), IIF ( A.PROTEINA = 0, :P_PROTEINA, A.PROTEINA / 100)'
  +#13#10'            FROM ZOO_PESAGEM_LEITE_ANALISE A'
  +#13#10'            WHERE A.KZOO_PESAGEM_LEITE = :KZOO_PESAGEM_LEITE'
  +#13#10'          INTO P_GORDURA, P_PROTEINA ;'
  +#13#10''
  +#13#10'          -- calculo Gordura, Proteina'
  +#13#10'          GORDURA  = PRODUCAO * P_GORDURA  ;'
  +#13#10'          PROTEINA = PRODUCAO * P_PROTEINA ;'
  +#13#10'         end'
  +#13#10''
  +#13#10'      -- calculo Gordura, Proteina anteriror'
  +#13#10'      GORDURA_ANTERIOR       = PRODUCAO_ANTERIOR * P_GORDURA_ANTERIOR  ;'
  +#13#10'      PROTEINA_ANTERIOR      = PRODUCAO_ANTERIOR * P_PROTEINA_ANTERIOR ;'
  +#13#10'      -- dados da ultima pesagem'
  +#13#10'      KULTIMA_PESAGEMLEITE = KZOO_PESAGEM_LEITE ;'
  +#13#10'      ULTIMA_PESAGEMLEITE  = DATAPESAGEM ;'
  +#13#10'      PRODUCAO_UC = PRODUCAO ;'
  +#13#10'      GORDURA_UC  = GORDURA  ;'
  +#13#10'      PROTEINA_UC = PROTEINA ;'
  +#13#10''
  +#13#10'      -- dados do pico'
  +#13#10'      if (   ( DEL BETWEEN 45 AND 90 )'
  +#13#10'         AND (    (KPICO_PESAGEMLEITE IS NULL)'
  +#13#10'               or (PRODUCAO > PRODUCAO_PICO)'
  +#13#10'              )'
  +#13#10'         ) then'
  +#13#10'        begin'
  +#13#10'         KPICO_PESAGEMLEITE = KZOO_PESAGEM_LEITE ;'
  +#13#10'         DATA_PICO           = DATAPESAGEM       ;'
  +#13#10'         PRODUCAO_PICO       = PRODUCAO          ;'
  +#13#10'        end'
  +#13#10''
  +#13#10''
  +#13#10'      -- calculo média de Produção, Gordura, Proteina'
  +#13#10'      PRODUCAO_MEDIA    = ((PRODUCAO + PRODUCAO_ANTERIOR)/2) * INTERVALO_DEL ;'
  +#13#10'      GORDURA_MEDIA     = ((GORDURA  + GORDURA_ANTERIOR )/2) * INTERVALO_DEL ;'
  +#13#10'      PROTEINA_MEDIA    = ((PROTEINA + PROTEINA_ANTERIOR)/2) * INTERVALO_DEL ;'
  +#13#10''
  +#13#10'      if ( KZOO_PESAGEM_LEITE = KPRIMEIRA_PESAGEMLEITE ) then'
  +#13#10'        begin'
  +#13#10'           PRODUCAO_ACUMULADA    = 0 ; -- PRODUCAO ;'
  +#13#10'           GORDURA_ACUMULADA     = 0 ; -- GORDURA  ;'
  +#13#10'           PROTEINA_ACUMULADA    = 0 ; -- PROTEINA ;'
  +#13#10'        end'
  +#13#10'      else'
  +#13#10'        begin'
  +#13#10'           -- projecao de Produção, Gordura, Proteina'
  +#13#10'          PRODUCAO_ACUMULADA    = PRODUCAO_ACUMULADA + PRODUCAO_MEDIA ;'
  +#13#10'          GORDURA_ACUMULADA     = GORDURA_ACUMULADA  + GORDURA_MEDIA  ;'
  +#13#10'          PROTEINA_ACUMULADA    = PROTEINA_ACUMULADA + PROTEINA_MEDIA ;'
  +#13#10'        end'
  +#13#10''
  +#13#10'      PROJ_PRODUCAO305  = (PRODUCAO_1 + PRODUCAO_ACUMULADA) * FATOR_PROJECAO_L305  ;'
  +#13#10'      PROJ_GORDURA305   = (GORDURA_1  + GORDURA_ACUMULADA ) * FATOR_PROJECAO_GP305 ;'
  +#13#10'      PROJ_PROTEINA305  = (PROTEINA_1 + PROTEINA_ACUMULADA) * FATOR_PROJECAO_GP305 ;'
  +#13#10''
  +#13#10'      if ( DEL >= 305 AND DEL305 IS NULL ) then'
  +#13#10'        begin'
  +#13#10'           DEL305 = DEL ;'
  +#13#10'           PL305 = (PRODUCAO_1 + PRODUCAO_ACUMULADA) + ((PRODUCAO_MEDIA / INTERVALO_DEL) * (305 - DEL)) ;'
  +#13#10'           PG305 = (GORDURA_1  + GORDURA_ACUMULADA ) + ((GORDURA_MEDIA  / INTERVALO_DEL) * (305 - DEL)) ;'
  +#13#10'           PP305 = (PROTEINA_1 + PROTEINA_ACUMULADA) + ((PROTEINA_MEDIA / INTERVALO_DEL) * (305 - DEL)) ;'
  +#13#10'        end'
  +#13#10''
  +#13#10'      if ( DEL >= 365 AND DEL365 IS NULL ) then'
  +#13#10'        begin'
  +#13#10'           DEL365 = DEL ;'
  +#13#10'           PL365 = (PRODUCAO_1 + PRODUCAO_ACUMULADA) + ((PRODUCAO_MEDIA / INTERVALO_DEL) * (365 - DEL)) ;'
  +#13#10'           PG365 = (GORDURA_1  + GORDURA_ACUMULADA ) + ((GORDURA_MEDIA  / INTERVALO_DEL) * (365 - DEL)) ;'
  +#13#10'           PP365 = (PROTEINA_1 + PROTEINA_ACUMULADA) + ((PROTEINA_MEDIA / INTERVALO_DEL) * (365 - DEL)) ;'
  +#13#10'        end'
  +#13#10''
  +#13#10'      --EQA_LEITE    = COALESCE ( PL305, PROJ_PRODUCAO305 ) * FATOR_EQA_LEITE ;'
  +#13#10'      --EQA_GORDURA  = COALESCE ( PG305, PROJ_GORDURA305  ) * FATOR_EQA_GP    ;'
  +#13#10'      --EQA_PROTEINA = COALESCE ( PP305, PROJ_PROTEINA305 ) * FATOR_EQA_GP    ;'
  +#13#10''
  +#13#10'      JNL$OFF   = RDB$GET_CONTEXT( ''USER_TRANSACTION'', ''JNL$OFF'' ) ;'
  +#13#10'      RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''JNL$OFF'', ''1'' ) ;'
  +#13#10''
  +#13#10'      ZOO$CLOFF = RDB$GET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLOFF'' ) ;'
  +#13#10'      RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLOFF'', ''1'' ) ;'
  +#13#10''
  +#13#10'-- removido 30.11.2012 a pedido de R.S.M.'
  +#13#10'--     INSERT'
  +#13#10'--      INTO TMP_PESAGEM_LEITE_EQA'
  +#13#10'--       ( KZOO_PESAGEM_LEITE, KCAD_FAZENDA, KZOO_LACTACAO, DATA, EQA_LEITE, EQA_GORDURA, EQA_PROTEINA )'
  +#13#10'--      VALUES'
  +#13#10'--       ( :KZOO_PESAGEM_LEITE, :KCAD_FAZENDA, :KZOO_LACTACAO, :DATAPESAGEM, :EQA_LEITE, :EQA_GORDURA, :EQA_PROTEINA ) ;'
  +#13#10''
  +#13#10'/* versao antiga'
  +#13#10'      KZOO_PESAGEM_LEITE_EQA = NULL ;'
  +#13#10'      SELECT KZOO_PESAGEM_LEITE, EQA_LEITE, EQA_GORDURA, EQA_PROTEINA FROM ZOO_PESAGEM_LEITE_EQA'
  +#13#10'      WHERE KZOO_PESAGEM_LEITE = :KZOO_PESAGEM_LEITE'
  +#13#10'      INTO KZOO_PESAGEM_LEITE_EQA, EQA_LEITE_OLD, EQA_GORDURA_OLD, EQA_PROTEINA_OLD ;'
  +#13#10''
  +#13#10'      IF ( KZOO_PESAGEM_LEITE_EQA IS NULL ) THEN'
  +#13#10'        BEGIN'
  +#13#10'          EQA_CHANGED = ''T'' ;'
  +#13#10'          INSERT'
  +#13#10'           INTO ZOO_PESAGEM_LEITE_EQA'
  +#13#10'             ( KZOO_PESAGEM_LEITE, KCAD_FAZENDA, KZOO_LACTACAO, DATA, EQA_LEITE, EQA_GORDURA, EQA_PROTEINA )'
  +#13#10'           VALUES'
  +#13#10'             ( :KZOO_PESAGEM_LEITE, :KCAD_FAZENDA, :KZOO_LACTACAO, :DATAPESAGEM, :EQA_LEITE, :EQA_GORDURA, :EQA_PROTEINA ) ;'
  +#13#10'        END'
  +#13#10'      ELSE IF (   (EQA_LEITE_OLD    IS DISTINCT FROM EQA_LEITE )'
  +#13#10'               OR (EQA_GORDURA_OLD  IS DISTINCT FROM EQA_GORDURA)'
  +#13#10'               OR (EQA_PROTEINA_OLD IS DISTINCT FROM EQA_PROTEINA) ) THEN'
  +#13#10'        BEGIN'
  +#13#10'          EQA_CHANGED = ''T'' ;'
  +#13#10'          UPDATE ZOO_PESAGEM_LEITE_EQA'
  +#13#10'             SET'
  +#13#10'               EQA_LEITE    = :EQA_LEITE,'
  +#13#10'               EQA_GORDURA  = :EQA_GORDURA,'
  +#13#10'               EQA_PROTEINA =  :EQA_PROTEINA'
  +#13#10'          WHERE KZOO_PESAGEM_LEITE = :KZOO_PESAGEM_LEITE ;'
  +#13#10'        END'
  +#13#10'*/'
  +#13#10'      RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLOFF'', ZOO$CLOFF ) ;'
  +#13#10'      RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''JNL$OFF'',   JNL$OFF   ) ;'
  +#13#10''
  +#13#10'      IF ( NL > 1 ) then'
  +#13#10'       PRODUCAO_PREVISTA = PRODUCAO_ANTERIOR - (PRODUCAO_ANTERIOR * ( DEL - DEL_ANTERIOR ) * 0.003) ;'
  +#13#10'      ELSE'
  +#13#10'       PRODUCAO_PREVISTA = PRODUCAO_ANTERIOR - (PRODUCAO_ANTERIOR * ( DEL - DEL_ANTERIOR ) *  0.002) ;'
  +#13#10''
  +#13#10'       -- copia para dados anteriores.'
  +#13#10'      DATA_ANTERIOR         = DATAPESAGEM ;'
  +#13#10'      DEL_ANTERIOR          = DEL  ;'
  +#13#10'      PRODUCAO_ANTERIOR     = PRODUCAO    ;'
  +#13#10'      P_GORDURA_ANTERIOR    = P_GORDURA   ;'
  +#13#10'      P_PROTEINA_ANTERIOR   = P_PROTEINA  ;'
  +#13#10'    end'
  +#13#10''
  +#13#10'   RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLRCL'', ''1'' ) ;'
  +#13#10''
  +#13#10'   if ( DEL305 is NULL ) then'
  +#13#10'   begin'
  +#13#10'     if ( DPP >= 305 ) then'
  +#13#10'     begin'
  +#13#10'      PL305 = PROJ_PRODUCAO305  ;'
  +#13#10'      PG305 = PROJ_GORDURA305   ;'
  +#13#10'      PP305 = PROJ_PROTEINA305  ;'
  +#13#10'     end'
  +#13#10'   end'
  +#13#10''
  +#13#10'   if ( DEL365 is NULL ) then'
  +#13#10'   begin'
  +#13#10'     if ( DPP >= 365 ) then'
  +#13#10'     begin'
  +#13#10'       PL365 = (PRODUCAO_1 + PRODUCAO_ACUMULADA) + (PRODUCAO_UC * (365 - DEL)) ;'
  +#13#10'       PG365 = (GORDURA_1  + GORDURA_ACUMULADA ) + (GORDURA_UC  * (365 - DEL)) ;'
  +#13#10'       PP365 = (PROTEINA_1 + PROTEINA_ACUMULADA) + (PROTEINA_UC * (365 - DEL)) ;'
  +#13#10'     end'
  +#13#10'   end'
  +#13#10''
  +#13#10'   EQA_LEITE    = PL305 * FATOR_EQA_LEITE ;'
  +#13#10'   EQA_GORDURA  = PG305 * FATOR_EQA_GP    ;'
  +#13#10'   EQA_PROTEINA = PP305 * FATOR_EQA_GP    ;'
  +#13#10''
  +#13#10'   --- atualização da lactacao'
  +#13#10'   UPDATE ZOO_LACTACOES'
  +#13#10'     SET'
  +#13#10'         NUMERO_ORDENHAS        = :TOTAL_ORDENHAS,'
  +#13#10'         MAX_ORDENHAS_DIA       = :MAX_ORDENHAS_DIA,'
  +#13#10'         NASCIMENTO             = :NASCIMENTO,'
  +#13#10'         KPRIMEIRA_PESAGEMLEITE = :KPRIMEIRA_PESAGEMLEITE,'
  +#13#10'         PRIMEIRA_PESAGEMLEITE  = :PRIMEIRA_PESAGEMLEITE,'
  +#13#10'         KULTIMA_PESAGEMLEITE   = :KULTIMA_PESAGEMLEITE,'
  +#13#10'         ULTIMA_PESAGEMLEITE    = :ULTIMA_PESAGEMLEITE,'
  +#13#10'         KPICO_PESAGEMLEITE     = :KPICO_PESAGEMLEITE,'
  +#13#10'         DATA_PICO              = :DATA_PICO,'
  +#13#10'         PRODUCAO_PICO          = :PRODUCAO_PICO,'
  +#13#10'         PRODUCAO_1             = :PRODUCAO_1,'
  +#13#10'         GORDURA_1              = :GORDURA_1,'
  +#13#10'         PROTEINA_1             = :PROTEINA_1,'
  +#13#10'         PRODUCAO_MEDIA         = :PRODUCAO_ACUMULADA,'
  +#13#10'         GORDURA_MEDIA          = :GORDURA_ACUMULADA,'
  +#13#10'         PROTEINA_MEDIA         = :PROTEINA_ACUMULADA,'
  +#13#10'         PRODUCAO_UC            = :PRODUCAO_UC,'
  +#13#10'         GORDURA_UC             = :GORDURA_UC,'
  +#13#10'         PROTEINA_UC            = :PROTEINA_UC,'
  +#13#10'         PRODUCAO_PREVISTA      = :PRODUCAO_PREVISTA,'
  +#13#10'         DEL305                 = :DEL305,'
  +#13#10'         PL305                  = :PL305,'
  +#13#10'         PG305                  = :PG305,'
  +#13#10'         PP305                  = :PP305,'
  +#13#10'         DEL365                 = :DEL365,'
  +#13#10'         PL365                  = :PL365,'
  +#13#10'         PG365                  = :PG365,'
  +#13#10'         PP365                  = :PP365,'
  +#13#10'         EQA_LEITE              = :EQA_LEITE,'
  +#13#10'         EQA_GORDURA            = :EQA_GORDURA,'
  +#13#10'         EQA_PROTEINA           = :EQA_PROTEINA'
  +#13#10'    WHERE'
  +#13#10'         ( KZOO_LACTACAO = :KZOO_LACTACAO )'
  +#13#10'     AND ( NUMERO_ORDENHAS        IS DISTINCT FROM :TOTAL_ORDENHAS'
  +#13#10'         OR MAX_ORDENHAS_DIA       IS DISTINCT FROM :MAX_ORDENHAS_DIA'
  +#13#10'         OR NASCIMENTO             IS DISTINCT FROM :NASCIMENTO'
  +#13#10'         OR KPRIMEIRA_PESAGEMLEITE IS DISTINCT FROM :KPRIMEIRA_PESAGEMLEITE'
  +#13#10'         OR PRIMEIRA_PESAGEMLEITE  IS DISTINCT FROM :PRIMEIRA_PESAGEMLEITE'
  +#13#10'         OR KULTIMA_PESAGEMLEITE   IS DISTINCT FROM :KULTIMA_PESAGEMLEITE'
  +#13#10'         OR ULTIMA_PESAGEMLEITE    IS DISTINCT FROM :ULTIMA_PESAGEMLEITE'
  +#13#10'         OR KPICO_PESAGEMLEITE     IS DISTINCT FROM :KPICO_PESAGEMLEITE'
  +#13#10'         OR DATA_PICO              IS DISTINCT FROM :DATA_PICO'
  +#13#10'         OR PRODUCAO_PICO          IS DISTINCT FROM :PRODUCAO_PICO'
  +#13#10'         OR PRODUCAO_1             IS DISTINCT FROM :PRODUCAO_1'
  +#13#10'         OR GORDURA_1              IS DISTINCT FROM :GORDURA_1'
  +#13#10'         OR PROTEINA_1             IS DISTINCT FROM :PROTEINA_1'
  +#13#10'         OR PRODUCAO_MEDIA         IS DISTINCT FROM :PRODUCAO_ACUMULADA'
  +#13#10'         OR GORDURA_MEDIA          IS DISTINCT FROM :GORDURA_ACUMULADA'
  +#13#10'         OR PROTEINA_MEDIA         IS DISTINCT FROM :PROTEINA_ACUMULADA'
  +#13#10'         OR PRODUCAO_UC            IS DISTINCT FROM :PRODUCAO_UC'
  +#13#10'         OR GORDURA_UC             IS DISTINCT FROM :GORDURA_UC'
  +#13#10'         OR PROTEINA_UC            IS DISTINCT FROM :PROTEINA_UC'
  +#13#10'         OR PRODUCAO_PREVISTA      IS DISTINCT FROM :PRODUCAO_PREVISTA'
  +#13#10'         OR DEL305                 IS DISTINCT FROM :DEL305'
  +#13#10'         OR PL305                  IS DISTINCT FROM :PL305'
  +#13#10'         OR PG305                  IS DISTINCT FROM :PG305'
  +#13#10'         OR PP305                  IS DISTINCT FROM :PP305'
  +#13#10'         OR DEL365                 IS DISTINCT FROM :DEL365'
  +#13#10'         OR PL365                  IS DISTINCT FROM :PL365'
  +#13#10'         OR PG365                  IS DISTINCT FROM :PG365'
  +#13#10'         OR PP365                  IS DISTINCT FROM :PP365'
  +#13#10'         OR EQA_LEITE              IS DISTINCT FROM :EQA_LEITE'
  +#13#10'         OR EQA_GORDURA            IS DISTINCT FROM :EQA_GORDURA'
  +#13#10'         OR EQA_PROTEINA           IS DISTINCT FROM :EQA_PROTEINA ) ;'
  +#13#10''
  +#13#10'    RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLRCL'', NULL ) ;'
  +#13#10''
  +#13#10'    EQA_LEITE    = 0 ;'
  +#13#10'    EQA_GORDURA  = 0 ;'
  +#13#10'    EQA_PROTEINA = 0 ;'
  +#13#10''
  +#13#10'-- removido em 30.11.2012 a pedido de R.S.M.'
  +#13#10'/*    if (( ULTIMA_PESAGEMLEITE IS NOT NULL ) and ( EQA_CHANGED IS NOT NULL )) THEN'
  +#13#10'      begin'
  +#13#10''
  +#13#10'        INSERT'
  +#13#10'        INTO ZOO_PESAGEM_LEITE_EQA'
  +#13#10'        SELECT * FROM TMP_PESAGEM_LEITE_EQA ;'
  +#13#10''
  +#13#10'        SELECT AVG( EQA_LEITE ), AVG( EQA_GORDURA ), AVG( EQA_PROTEINA )'
  +#13#10'        FROM ZOO_PESAGEM_LEITE_EQA'
  +#13#10'        WHERE KCAD_FAZENDA = :KCAD_FAZENDA AND DATA = :ULTIMA_PESAGEMLEITE'
  +#13#10'        INTO EQA_LEITE, EQA_GORDURA, EQA_PROTEINA ;'
  +#13#10''
  +#13#10'        UPDATE OR INSERT'
  +#13#10'        INTO ZOO_PESAGEM_LEITE_EQAMEDIA'
  +#13#10'          ( KCAD_FAZENDA, DATA, EQA_LEITE, EQA_GORDURA, EQA_PROTEINA )'
  +#13#10'        VALUES'
  +#13#10'          ( :KCAD_FAZENDA, :DATAPESAGEM, :EQA_LEITE, :EQA_GORDURA, :EQA_PROTEINA ) ;'
  +#13#10''
  +#13#10'      end'
  +#13#10'*/'
  +#13#10'END' ;

begin
   ExecuteDirect ( _ALTER_PROCEDURE_ZOO_UPDATE_CALCULO_PESAGEM ) ;
end;

procedure TDBZootecnicoUpdate._5_001_32 ;
const
  _CREATE_ALTER_VIEW_VRPT_FEMEAS =
         'CREATE OR ALTER VIEW VRPT_FEMEAS('
  +#13#10'    KZOO_ANIMAL_FEMEA,'
  +#13#10'    KCAD_FAZENDA,'
  +#13#10'    BRINCO,'
  +#13#10'    BRINCO_,'
  +#13#10'    NOMEESTABULO,'
  +#13#10'    NOMECOMPLETO,'
  +#13#10'    REGISTRO,'
  +#13#10'    DTORIGEM,'
  +#13#10'    LOCAL_ORIGEM,'
  +#13#10'    PRECO_COMPRA,'
  +#13#10'    VACA,'
  +#13#10'    STATUS,'
  +#13#10'    DATASTATUS,'
  +#13#10'    INTENCAO_DESCARTE,'
  +#13#10'    CRIADOR,'
  +#13#10'    CIDCRIA,'
  +#13#10'    PERSISTE,'
  +#13#10'    POTENCIAL,'
  +#13#10'    DATABRINCO,'
  +#13#10'    RACA,'
  +#13#10'    SISBOV,'
  +#13#10'    GRAUSANGUE,'
  +#13#10'    COMPOSICAORACA,'
  +#13#10'    KULTIMO_EVENTO_ZOOTECNICO,'
  +#13#10'    ULTIMO_EVENTO_ZOOTECNICO,'
  +#13#10'    KULTIMO_CIO,'
  +#13#10'    ULTIMO_CIO,'
  +#13#10'    NUMERO_CIO,'
  +#13#10'    KULTIMA_MONTA,'
  +#13#10'    ULTIMA_MONTA,'
  +#13#10'    NUMERO_MONTA,'
  +#13#10'    KULTIMO_PARTO,'
  +#13#10'    ULTIMO_PARTO,'
  +#13#10'    KPRIMEIRA_LACTACAO,'
  +#13#10'    PRIMEIRA_LACTACAO,'
  +#13#10'    NUMERO_PRIMEIRALACTACAO,'
  +#13#10'    KULTIMA_LACTACAO,'
  +#13#10'    ULTIMA_LACTACAO,'
  +#13#10'    NUMERO_LACTACAO,'
  +#13#10'    NUMERO_ABORTO,'
  +#13#10'    NUMERO_COLETA,'
  +#13#10'    DOADOR_RECEPTOR,'
  +#13#10'    KMAIOR_PESO,'
  +#13#10'    MAIOR_PESO,'
  +#13#10'    NASCIMENTO,'
  +#13#10'    RETIRO,'
  +#13#10'    LOTE,'
  +#13#10'    VLOTE1,'
  +#13#10'    VLOTE2,'
  +#13#10'    VLOTE3,'
  +#13#10'    NUCLEO,'
  +#13#10'    REBANHO,'
  +#13#10'    DATALOTE,'
  +#13#10'    DATARETIRO,'
  +#13#10'    DPPC,'
  +#13#10'    DPP,'
  +#13#10'    DUC,'
  +#13#10'    KPAI,'
  +#13#10'    NOMEPAI,'
  +#13#10'    KMAE,'
  +#13#10'    NOMEMAE,'
  +#13#10'    MAEPAI,'
  +#13#10'    MAEMAE,'
  +#13#10'    PAIPAI,'
  +#13#10'    PAIMAE,'
  +#13#10'    BISF_MAEPAI,'
  +#13#10'    BISF_MAEMAE,'
  +#13#10'    BISF_PAIPAI,'
  +#13#10'    BISF_PAIMAE,'
  +#13#10'    BISM_MAEPAI,'
  +#13#10'    BISM_MAEMAE,'
  +#13#10'    BISM_PAIPAI,'
  +#13#10'    BISM_PAIMAE,'
  +#13#10'    IDADE,'
  +#13#10'    IAP,'
  +#13#10'    KULTIMO_DIAGNOSTICO,'
  +#13#10'    KPENULTIMO_DIAGNOSTICO,'
  +#13#10'    KULTIMO_PROTOCOLO,'
  +#13#10'    KPENULTIMO_PROTOCOLO,'
  +#13#10'    KULTIMA_TAREFA,'
  +#13#10'    KPENULTIMA_TAREFA)'
  +#13#10'AS'
  +#13#10'SELECT'
  +#13#10'    F.KZOO_ANIMAL_FEMEA,'
  +#13#10'    A.KCAD_FAZENDA,'
  +#13#10'    A.BRINCO,'
  +#13#10'    A.BRINCO_,'
  +#13#10'    A.NOMEESTABULO,'
  +#13#10'    A.NOMECOMPLETO,'
  +#13#10'    A.REGISTRO,'
  +#13#10'    A.DTORIGEM,'
  +#13#10'    A.LOCAL_ORIGEM,'
  +#13#10'    A.PRECO_COMPRA,'
  +#13#10'    A.VACA,'
  +#13#10'    (SELECT SYS$DESCRIPTION FROM SYS$TYPES_GETDESCRIPTION ( ''SIGLA_STATUS_FEMEA'', A.STATUS )) STATUS,'
  +#13#10'    A.DATASTATUS,'
  +#13#10'    F.INTENCAO_DESCARTE,'
  +#13#10'    A.CRIADOR,'
  +#13#10'    A.CIDCRIA,'
  +#13#10'    A.PERSISTE,'
  +#13#10'    A.POTENCIAL,'
  +#13#10'    A.DATABRINCO,'
  +#13#10'    A.RACA,'
  +#13#10'    A.SISBOV,'
  +#13#10'    A.GRAUSANGUE,'
  +#13#10'    A.COMPOSICAORACA,'
  +#13#10'    F.KULTIMO_EVENTO_ZOOTECNICO,'
  +#13#10'    F.ULTIMO_EVENTO_ZOOTECNICO,'
  +#13#10'    F.KULTIMO_CIO,'
  +#13#10'    F.ULTIMO_CIO,'
  +#13#10'    F.NUMERO_CIO,'
  +#13#10'    F.KULTIMA_MONTA,'
  +#13#10'    F.ULTIMA_MONTA,'
  +#13#10'    F.NUMERO_MONTA,'
  +#13#10'    F.KULTIMO_PARTO,'
  +#13#10'    F.ULTIMO_PARTO,'
  +#13#10'    F.KPRIMEIRA_LACTACAO,'
  +#13#10'    F.PRIMEIRA_LACTACAO,'
  +#13#10'    F.NUMERO_PRIMEIRALACTACAO,'
  +#13#10'    F.KULTIMA_LACTACAO,'
  +#13#10'    F.ULTIMA_LACTACAO,'
  +#13#10'    F.NUMERO_LACTACAO,'
  +#13#10'    F.NUMERO_ABORTO,'
  +#13#10'    F.NUMERO_COLETA,'
  +#13#10'    (SELECT SYS$DESCRIPTION FROM SYS$TYPES_GETDESCRIPTION ( ''TIPO_DOADOR_RECEPTOR'', F.DOADOR_RECEPTOR )) DOADOR_RECEPTOR,'
  +#13#10'    F.KMAIOR_PESO,'
  +#13#10'    F.MAIOR_PESO,'
  +#13#10'    F.NASCIMENTO,'
  +#13#10'    F.RETIRO,'
  +#13#10'    F.LOTE,'
  +#13#10'    F.VLOTE1,'
  +#13#10'    F.VLOTE2,'
  +#13#10'    F.VLOTE3,'
  +#13#10'    F.NUCLEO,'
  +#13#10'    F.REBANHO,'
  +#13#10'    F.DATALOTE,'
  +#13#10'    F.DATARETIRO,'
  +#13#10'   (SELECT CAST ( CAST ( E.DATAEVENTO AS DATE ) - CAST ( F.ULTIMA_LACTACAO AS DATE ) AS INTEGER) FROM ZOO_EVENTOS_ZOOTECNICOS E WHERE E.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND E.DATAEVENTO > F.ULTIMA_LACTACAO ORDER BY E.DATAEVENTO ROWS 1) DPPC,'
  +#13#10'  --  0 DPPC,'
  +#13#10'    TRUNC ( CURRENT_TIMESTAMP - F.ULTIMA_LACTACAO ) DPP,'
  +#13#10'    TRUNC ( CURRENT_TIMESTAMP - F.ULTIMO_CIO ) DUC,'
  +#13#10'    DPAI1.KZOO_ANIMAL_PARENT  KPAI,'
  +#13#10'    DPAI1.NOMEANIMAL_PARENTE  NOMEPAI,'
  +#13#10'    DMAE1.KZOO_ANIMAL_PARENT  KMAE,'
  +#13#10'    DMAE1.NOMEANIMAL_PARENTE  NOMEMAE,'
  +#13#10'    DMAEPAI.NOMEANIMAL_PARENTE  MAEPAI,'
  +#13#10'    DMAEMAE.NOMEANIMAL_PARENTE  MAEMAE,'
  +#13#10'    DPAIPAI.NOMEANIMAL_PARENTE  PAIPAI,'
  +#13#10'    DPAIMAE.NOMEANIMAL_PARENTE  PAIMAE,'
  +#13#10''
  +#13#10'    BISF_MAEPAI.NOMEANIMAL_PARENTE BISF_MAEPAI,'
  +#13#10'    BISF_MAEMAE.NOMEANIMAL_PARENTE BISF_MAEMAE,'
  +#13#10'    BISF_PAIPAI.NOMEANIMAL_PARENTE BISF_PAIPAI,'
  +#13#10'    BISF_PAIMAE.NOMEANIMAL_PARENTE BISF_PAIMAE,'
  +#13#10''
  +#13#10'    BISM_MAEPAI.NOMEANIMAL_PARENTE BISM_MAEPAI,'
  +#13#10'    BISM_MAEMAE.NOMEANIMAL_PARENTE BISM_MAEMAE,'
  +#13#10'    BISM_PAIPAI.NOMEANIMAL_PARENTE BISM_PAIPAI,'
  +#13#10'    BISM_PAIMAE.NOMEANIMAL_PARENTE BISM_PAIMAE,'
  +#13#10''
  +#13#10'    CAST ( CAST ( (CURRENT_TIMESTAMP - F.NASCIMENTO) / 30.4 AS NUMERIC ( 5, 1 ) ) AS SYS$FLOAT )IDADE,'
  +#13#10'    CAST ( CAST ( (F.ULTIMO_PARTO - F.NASCIMENTO) / 30.4  AS NUMERIC ( 5, 1 ) ) AS SYS$FLOAT ) IAP,'
  +#13#10'    (SELECT UD.KZOO_ANIMAL_DIAGNOSTICO FROM ZOO_ANIMAL_DIAGNOSTICOS UD WHERE UD.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND UD.EXCLUIDO = ''F'' ORDER BY UD.DATA DESC  ROWS 1 TO 1 ) KULTIMO_DIAGNOSTICO,'
  +#13#10'    (SELECT UD.KZOO_ANIMAL_DIAGNOSTICO FROM ZOO_ANIMAL_DIAGNOSTICOS UD WHERE UD.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND UD.EXCLUIDO = ''F''  ORDER BY UD.DATA DESC  ROWS 2 TO 2 ) KPENULTIMO_DIAGNOSTICO,'
  +#13#10'    (SELECT UP.KZOO_ANIMAL_PROTOCOLO FROM ZOO_ANIMAL_PROTOCOLOS UP WHERE UP.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND UP.EXCLUIDO = ''F'' ORDER BY UP.DATA DESC  ROWS 1 TO 1 ) KULTIMO_PROTOCOLO,'
  +#13#10'    (SELECT UP.KZOO_ANIMAL_PROTOCOLO FROM ZOO_ANIMAL_PROTOCOLOS UP WHERE UP.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND UP.EXCLUIDO = ''F'' ORDER BY UP.DATA DESC  ROWS 2 TO 2 ) KPENULTIMO_PROTOCOLO,'
  +#13#10'    (SELECT UT.KZOO_ANIMAL_TAREFA FROM ZOO_ANIMAL_TAREFAS UT'
  +#13#10'     WHERE UT.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA AND UT.EXCLUIDO = ''F'' AND UT.STATUS = (SELECT SYS$VALUE FROM SYS$TYPES_GETVALUE ( ''STATUS_TAREFA'', ''EXECUTADA'' ))'
  +#13#10'     ORDER BY UT.DATASTATUS DESC  ROWS 1 TO 1 ) KULTIMA_TAREFA,'
  +#13#10'    (SELECT UT.KZOO_ANIMAL_TAREFA FROM ZOO_ANIMAL_TAREFAS UT'
  +#13#10'     WHERE UT.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA AND UT.EXCLUIDO = ''F'' AND UT.STATUS = (SELECT SYS$VALUE FROM SYS$TYPES_GETVALUE ( ''STATUS_TAREFA'', ''EXECUTADA'' ))'
  +#13#10'     ORDER BY UT.DATASTATUS DESC  ROWS 2 TO 2 ) KPENULTIMA_TAREFA'
  +#13#10'FROM ZOO_ANIMAIS_FEMEA F'
  +#13#10'INNER JOIN ZOO_ANIMAIS A ON A.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(F.KZOO_ANIMAL_FEMEA, 1, 0) DPAI1 ON DPAI1.TIPOPARENTESCO = 1 AND DPAI1.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(F.KZOO_ANIMAL_FEMEA, 1, 0) DMAE1 ON DMAE1.TIPOPARENTESCO = 2 AND DMAE1.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAI1.KZOO_ANIMAL_PARENT, 1, 0) DMAEPAI ON DMAEPAI.TIPOPARENTESCO = 2 AND DMAEPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAE1.KZOO_ANIMAL_PARENT, 1, 0) DMAEMAE ON DMAEMAE.TIPOPARENTESCO = 2 AND DMAEMAE.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAI1.KZOO_ANIMAL_PARENT, 1, 0) DPAIPAI ON DPAIPAI.TIPOPARENTESCO = 1 AND DPAIPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAE1.KZOO_ANIMAL_PARENT, 1, 0) DPAIMAE ON DPAIMAE.TIPOPARENTESCO = 1 AND DPAIMAE.PARENTLEVEL = 1'
  +#13#10''
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEPAI.KZOO_ANIMAL_PARENT, 1, 0) BISF_MAEPAI ON BISF_MAEPAI.TIPOPARENTESCO = 2 AND BISF_MAEPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEMAE.KZOO_ANIMAL_PARENT, 1, 0) BISF_MAEMAE ON BISF_MAEMAE.TIPOPARENTESCO = 2 AND BISF_MAEMAE.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIPAI.KZOO_ANIMAL_PARENT, 1, 0) BISF_PAIPAI ON BISF_PAIPAI.TIPOPARENTESCO = 2 AND BISF_PAIPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIMAE.KZOO_ANIMAL_PARENT, 1, 0) BISF_PAIMAE ON BISF_PAIMAE.TIPOPARENTESCO = 2 AND BISF_PAIMAE.PARENTLEVEL = 1'
  +#13#10''
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEPAI.KZOO_ANIMAL_PARENT, 1, 0) BISM_MAEPAI ON BISM_MAEPAI.TIPOPARENTESCO = 1 AND BISM_MAEPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEMAE.KZOO_ANIMAL_PARENT, 1, 0) BISM_MAEMAE ON BISM_MAEMAE.TIPOPARENTESCO = 1 AND BISM_MAEMAE.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIPAI.KZOO_ANIMAL_PARENT, 1, 0) BISM_PAIPAI ON BISM_PAIPAI.TIPOPARENTESCO = 1 AND BISM_PAIPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIMAE.KZOO_ANIMAL_PARENT, 1, 0) BISM_PAIMAE ON BISM_PAIMAE.TIPOPARENTESCO = 1 AND BISM_PAIMAE.PARENTLEVEL = 1' ;

begin
  ExecuteDirect ( _CREATE_ALTER_VIEW_VRPT_FEMEAS ) ;
end;

procedure TDBZootecnicoUpdate._5_001_25 ;
const

  _DROP_TABLE_ZOO_ANIMAL_LINHAGEM_TMP =
     'DROP TABLE ZOO_ANIMAL_LINHAGEM_TMP' ;

  _DROP_TABLE_ZOO_ANIMAL_LINHAGEM_OLD =
     'DROP TABLE ZOO_ANIMAL_LINHAGEM_OLD' ;

  _ALTER_TABLE_IMP_CIOSCOB_CDTIPOPARTO =
         'ALTER TABLE IMP$CIOSCOB'
  +#13#10'ADD CDTIPOPARTO SMALLINT' ;

  _ALTER_TABLE_IMP_CIOSCOB_RETENCAOPLACENTA =
         'ALTER TABLE IMP$CIOSCOB'
  +#13#10'ADD RETENCAOPLACENTA SMALLINT' ;

 _ALTER_PROCEDURE_DOIMP_DEAGRI_CIOSCOB =
         'CREATE OR ALTER PROCEDURE DOIMP$IDEAGRI_CIOSCOB ('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    IDEAGRI varchar(1024) collate ISO8859_1)'
  +#13#10'AS'
  +#13#10'DECLARE BRINCO VARCHAR(10) NOT NULL;'
  +#13#10'DECLARE DTUCIO DATE NOT NULL;'
  +#13#10'DECLARE DTUCOB DATE;'
  +#13#10'DECLARE TOURO VARCHAR(8);'
  +#13#10'DECLARE IM CHAR(1);'
  +#13#10'DECLARE DOSES SMALLINT;'
  +#13#10'DECLARE CIO CHAR(1);'
  +#13#10'DECLARE AB_SP CHAR(1);'
  +#13#10'DECLARE DATACONF DATE;'
  +#13#10'DECLARE DATA_AB DATE;'
  +#13#10'DECLARE NUM_COM VARCHAR(6);'
  +#13#10'DECLARE FUNCIONAR CHAR(2);'
  +#13#10'DECLARE OBSERVACAO VARCHAR(15);'
  +#13#10'DECLARE REEXAMINAR CHAR(1);'
  +#13#10'DECLARE CONF CHAR(1);'
  +#13#10'DECLARE INTERVALO SMALLINT;'
  +#13#10'DECLARE DTPARTO DATE;'
  +#13#10'DECLARE SEXO1 CHAR(1);'
  +#13#10'DECLARE SEXO2 CHAR(1);'
  +#13#10'DECLARE EMBRIOES SMALLINT;'
  +#13#10'DECLARE CDTIPOPARTO SMALLINT;'
  +#13#10'DECLARE RETENCAOPLACENTA SMALLINT;'
  +#13#10'declare LF_ char;'
  +#13#10'begin'
  +#13#10''
  +#13#10' LF_ = ascii_char(10) ;'
  +#13#10''
  +#13#10' DELETE FROM IMP$CIOSCOB ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   ('
  +#13#10'          ''SELECT '''
  +#13#10'   ||LF_||'' R.CDANIMAL BRINCO,'''
  +#13#10'   ||LF_||'' DATA DTUCIO,'''
  +#13#10'   ||LF_||'' NULL DTUCOB,'''
  +#13#10'   ||LF_||'' R.CDREPRODUTOR TOURO,'''
  +#13#10'   ||LF_||'' CASE '''
  +#13#10'   ||LF_||''  WHEN R.CDTIPOREPRODUCAO = 1 THEN ''''I'''''''
  +#13#10'   ||LF_||''  WHEN R.CDTIPOREPRODUCAO = 2 THEN ''''M'''''''
  +#13#10'   ||LF_||''  WHEN R.CDTIPOREPRODUCAO = 3 THEN ''''E'''''''
  +#13#10'   ||LF_||'' END IM,'''
  +#13#10'   ||LF_||'' IIF(R.CDTIPOREPRODUCAO = 1, 1, NULL) DOSES,'''
  +#13#10'   ||LF_||'' NULL CIO,'''
  +#13#10'   ||LF_||'' NULL AB_SP,'''
  +#13#10'   ||LF_||'' NULL DATACONF,'''
  +#13#10'   ||LF_||'' NULL DATA_AB,'''
  +#13#10'   ||LF_||'' CR.CODIGO NUM_COM,'''
  +#13#10'   ||LF_||'' NULL FUNCIONAR,'''
  +#13#10'   ||LF_||'' NULL OBSERVACAO,'''
  +#13#10'   ||LF_||'' NULL REEXAMINAR,'''
  +#13#10'   ||LF_||'' NULL CONF,'''
  +#13#10'   ||LF_||'' NULL INTERVALO,'''
  +#13#10'   ||LF_||'' NULL DTPARTO,'''
  +#13#10'   ||LF_||'' R.SEXOCRIA1 SEXO1,'''
  +#13#10'   ||LF_||'' R.SEXOCRIA2 SEXO2,'''
  +#13#10'   ||LF_||'' IIF(R.CDTIPOREPRODUCAO = 3, 1, null) EMBRIOES'''
  +#13#10'   ||LF_||''FROM REPRODUCAO R'''
  +#13#10'   ||LF_||''LEFT JOIN COMUNICACAOREGISTRO CR ON CR.CDCOMUNICACAOREGISTRO = R.CDCOMUNICACAOREGISTRO'''
  +#13#10'   ||LF_||''WHERE R.CDTIPOREPRODUCAO IN (1,2,3)'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :IDEAGRI'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' into'
  +#13#10'   :BRINCO,:DTUCIO,:DTUCOB,:TOURO,'
  +#13#10'   :IM,'
  +#13#10'   :DOSES,'
  +#13#10'   :CIO, :AB_SP,:DATACONF,:DATA_AB,:NUM_COM,:FUNCIONAR,'
  +#13#10'   :OBSERVACAO,:REEXAMINAR,:CONF,:INTERVALO,:DTPARTO,'
  +#13#10'   :SEXO1,:SEXO2,'
  +#13#10'   :EMBRIOES'
  +#13#10' do'
  +#13#10'    insert into IMP$CIOSCOB'
  +#13#10'     ('
  +#13#10'      BRINCO,DTUCIO,DTUCOB,TOURO,IM,DOSES,CIO,AB_SP,DATACONF,DATA_AB,NUM_COM,FUNCIONAR,'
  +#13#10'      OBSERVACAO,REEXAMINAR,CONF,INTERVALO,DTPARTO,SEXO1,SEXO2,EMBRIOES'
  +#13#10'     )'
  +#13#10'    values'
  +#13#10'    ('
  +#13#10'       :BRINCO,:DTUCIO,:DTUCOB,:TOURO,:IM,:DOSES,:CIO,:AB_SP,:DATACONF,:DATA_AB,:NUM_COM,:FUNCIONAR,'
  +#13#10'       :OBSERVACAO,:REEXAMINAR,:CONF,:INTERVALO,:DTPARTO,:SEXO1,:SEXO2,:EMBRIOES'
  +#13#10'    ) ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   ('
  +#13#10'          ''SELECT'''
  +#13#10'   ||LF_||'' R.CDANIMAL,'''
  +#13#10'   ||LF_||'' R.DATA,'''
  +#13#10'   ||LF_||'' IIF(R.diagnostico = ''''P'''', ''''S'''', ''''N'''')'''
  +#13#10'   ||LF_||''FROM REPRODUCAO R'''
  +#13#10'   ||LF_||''WHERE R.CDTIPOREPRODUCAO = 4'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :IDEAGRI'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'   :BRINCO,:DATACONF,:CONF'
  +#13#10' DO'
  +#13#10' BEGIN'
  +#13#10'    UPDATE IMP$CIOSCOB SET DATACONF = :DATACONF, CONF = :CONF'
  +#13#10'    WHERE BRINCO = :BRINCO AND'
  +#13#10'    DTUCIO = (SELECT FIRST 1 CC.DTUCIO FROM IMP$CIOSCOB CC WHERE CC.DTUCIO < :DATACONF'
  +#13#10'    AND CC.BRINCO = :BRINCO AND IM <> ''C'''
  +#13#10'    ORDER BY CC.DTUCIO DESC);'
  +#13#10' END'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   ('
  +#13#10'          ''SELECT'''
  +#13#10'   ||LF_||''R.CDANIMAL,'''
  +#13#10'   ||LF_||''R.DATA,'''
  +#13#10'   ||LF_||''R.CDTIPOPARTO,'''
  +#13#10'   ||LF_||''R.RETENCAOPLACENTA'''
  +#13#10'   ||LF_||''FROM REPRODUCAO R'''
  +#13#10'   ||LF_||''WHERE R.CDTIPOREPRODUCAO = 7'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :IDEAGRI'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'   :BRINCO,:DTPARTO, :CDTIPOPARTO, :RETENCAOPLACENTA'
  +#13#10' DO'
  +#13#10' BEGIN'
  +#13#10'    IF ( CDTIPOPARTO = 3 ) THEN'
  +#13#10'      UPDATE IMP$CIOSCOB'
  +#13#10'        SET'
  +#13#10'          DATA_AB = :DTPARTO,'
  +#13#10'          AB_SP = ''a'''
  +#13#10'      WHERE BRINCO = :BRINCO'
  +#13#10'        AND DTUCIO = (SELECT'
  +#13#10'                       CC.DTUCIO'
  +#13#10'                      FROM IMP$CIOSCOB CC'
  +#13#10'                      WHERE CC.DTUCIO < :DTPARTO'
  +#13#10'                        AND CC.IM <> ''C'''
  +#13#10'                        AND CC.BRINCO = :BRINCO'
  +#13#10'                      ORDER BY CC.DTUCIO DESC'
  +#13#10'                      ROWS 1);'
  +#13#10'    ELSE'
  +#13#10'      UPDATE IMP$CIOSCOB'
  +#13#10'        SET'
  +#13#10'          DTPARTO = :DTPARTO,'
  +#13#10'          CDTIPOPARTO = :CDTIPOPARTO,'
  +#13#10'          RETENCAOPLACENTA = :RETENCAOPLACENTA'
  +#13#10'      WHERE BRINCO = :BRINCO'
  +#13#10'        AND DTUCIO = (SELECT  CC.DTUCIO'
  +#13#10'                      FROM IMP$CIOSCOB CC'
  +#13#10'                      WHERE CC.DTUCIO < :DTPARTO'
  +#13#10'                        AND CC.IM <> ''C'''
  +#13#10'                        AND CC.BRINCO = :BRINCO'
  +#13#10'                      ORDER BY CC.DTUCIO DESC'
  +#13#10'                      ROWS 1);'
  +#13#10' END'
  +#13#10'END' ;

  _CREATE_GTT_IMP_DOENCAANIMAL_IDEAGRI =
        'CREATE GLOBAL TEMPORARY TABLE IMP$DOENCAANIMAL_IDEAGRI ('
  +#13#10'   CDDOENCAANIMAL  INTEGER NOT NULL,'
  +#13#10'   CDANIMAL        INTEGER NOT NULL,'
  +#13#10'   CDDOENCA        INTEGER NOT NULL,'
  +#13#10'   DTINICIO        DATE NOT NULL,'
  +#13#10'   DTFIM           DATE,'
  +#13#10'   OBSERVACAO      VARCHAR(200)'
  +#13#10') ON COMMIT PRESERVE ROWS' ;

  _CREATE_PROCEDURE_DOIMP_IDEAGRI_DOENCA =
         'CREATE OR ALTER PROCEDURE DOIMP$IDEAGRI_DOENCA('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    IDEAGRI varchar(1024) collate ISO8859_1 )'
  +#13#10'AS'
  +#13#10'DECLARE CDDOENCAANIMAL  INTEGER ;'
  +#13#10'DECLARE CDANIMAL        INTEGER ;'
  +#13#10'DECLARE CDDOENCA        INTEGER ;'
  +#13#10'DECLARE DTINICIO        DATE ;'
  +#13#10'DECLARE DTFIM           DATE ;'
  +#13#10'DECLARE OBSERVACAO      VARCHAR(200) ;'
  +#13#10'DECLARE LF_ char;'
  +#13#10'BEGIN'
  +#13#10''
  +#13#10' LF_ = ASCII_CHAR(10) ;'
  +#13#10''
  +#13#10' DELETE FROM IMP$DOENCAANIMAL_IDEAGRI ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   (    ''SELECT CDDOENCAANIMAL, CDANIMAL, CDDOENCA, DTINICIO, DTFIM, OBSERVACAO '''
  +#13#10'     ||LF_||''FROM DOENCAANIMAL'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :IDEAGRI'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO CDDOENCAANIMAL, CDANIMAL, CDDOENCA, DTINICIO, DTFIM, OBSERVACAO'
  +#13#10' DO'
  +#13#10'  INSERT INTO IMP$DOENCAANIMAL_IDEAGRI'
  +#13#10'    ( CDDOENCAANIMAL, CDANIMAL, CDDOENCA, DTINICIO, DTFIM, OBSERVACAO'
  +#13#10'    )'
  +#13#10'  VALUES'
  +#13#10'   ('
  +#13#10'    :CDDOENCAANIMAL, :CDANIMAL, :CDDOENCA, :DTINICIO, :DTFIM, :OBSERVACAO'
  +#13#10'   );'
  +#13#10''
  +#13#10'END' ;

  _CREATE_PROCEDURE_DOIMP_IDEAGRI_CONDCORP =
         'CREATE OR ALTER PROCEDURE DOIMP$IDEAGRI_CONDCORP ('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    IDEAGRI varchar(1024) collate ISO8859_1)'
  +#13#10'AS'
  +#13#10'DECLARE CDANIMAL INTEGER ;'
  +#13#10'DECLARE DATA     DATE ;'
  +#13#10'DECLARE VALOR    DOUBLE PRECISION ;'
  +#13#10'DECLARE STMT_    VARCHAR(256) ;'
  +#13#10'DECLARE LF_ CHAR;'
  +#13#10'DECLARE USE_VALORDOUBLE INTEGER ;'
  +#13#10'BEGIN'
  +#13#10''
  +#13#10' LF_ = ASCII_CHAR(10) ;'
  +#13#10''
  +#13#10' DELETE FROM IMP$CONDCORP ;'
  +#13#10''
  +#13#10' USE_VALORDOUBLE = 0 ;'
  +#13#10''
  +#13#10' STMT_ =  ''SELECT 1'''
  +#13#10'   ||LF_||''FROM RDB$RELATION_FIELDS'''
  +#13#10'   ||LF_||''WHERE'''
  +#13#10'   ||LF_||''RDB$RELATION_NAME = ''''MEDIDA'''''''
  +#13#10'   ||LF_||''AND  RDB$FIELD_NAME = ''''VALORDOUBLE'''''' ;'
  +#13#10''
  +#13#10' EXECUTE STATEMENT'
  +#13#10'   ( STMT_'
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :IDEAGRI'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO USE_VALORDOUBLE ;'
  +#13#10''
  +#13#10' IF (USE_VALORDOUBLE = 1) THEN'
  +#13#10'    STMT_ = ''SELECT M.CDANIMAL, M.DTMEDIDA, M.VALORDOUBLE'''
  +#13#10'     ||LF_||''FROM MEDIDA M'''
  +#13#10'     ||LF_||''JOIN TIPOMEDIDA TM ON TM.CDTIPOMEDIDA = M.CDTIPOMEDIDA'''
  +#13#10'     ||LF_||''WHERE TM.PADRAO = 2'' ;'
  +#13#10' ELSE'
  +#13#10'    STMT_ = ''SELECT M.CDANIMAL, M.DTMEDIDA, M.VALOR'''
  +#13#10'     ||LF_||''FROM MEDIDA M'''
  +#13#10'     ||LF_||''JOIN TIPOMEDIDA TM ON TM.CDTIPOMEDIDA = M.CDTIPOMEDIDA'''
  +#13#10'     ||LF_||''WHERE TM.PADRAO = 2'' ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   ( STMT_'
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :IDEAGRI'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO CDANIMAL, DATA, VALOR'
  +#13#10' DO'
  +#13#10'  INSERT INTO IMP$CONDCORP'
  +#13#10'    ( BRINCO, DATA, CC'
  +#13#10'    )'
  +#13#10'  VALUES'
  +#13#10'   ('
  +#13#10'    :CDANIMAL, :DATA, :VALOR'
  +#13#10'   );'
  +#13#10''
  +#13#10'END' ;


  _CREATE_PROCEDURE_DOIMP_IDEAGRI_PESO =
         'CREATE OR ALTER PROCEDURE DOIMP$IDEAGRI_PESO ('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    IDEAGRI varchar(1024) collate ISO8859_1)'
  +#13#10'AS'
  +#13#10'DECLARE CDANIMAL INTEGER ;'
  +#13#10'DECLARE DATA     DATE ;'
  +#13#10'DECLARE VALOR    DOUBLE PRECISION ;'
  +#13#10'DECLARE LF_ CHAR;'
  +#13#10'BEGIN'
  +#13#10''
  +#13#10'  LF_ = ASCII_CHAR(10) ;'
  +#13#10''
  +#13#10'  DELETE FROM IMP$PESO ;'
  +#13#10''
  +#13#10'  FOR EXECUTE STATEMENT'
  +#13#10'    (        ''SELECT PESO.CDANIMAL, PESO.DTPESO, PESO.PESO'''
  +#13#10'      ||LF_||''FROM PESO'''
  +#13#10'      ||LF_||''INNER JOIN ANIMAL ON ANIMAL.CDANIMAL = PESO.CDANIMAL'''
  +#13#10'      ||LF_||''WHERE ANIMAL.TIPOANIMAL = ''''A'''' AND ANIMAL.SEXO = ''''F'''''''
  +#13#10'    )'
  +#13#10'  ON EXTERNAL DATA SOURCE :IDEAGRI'
  +#13#10'  WITH COMMON TRANSACTION'
  +#13#10'  INTO CDANIMAL, DATA, VALOR'
  +#13#10'  DO'
  +#13#10'   INSERT INTO IMP$PESO'
  +#13#10'     ( BRINCO, DATA, PESO, GUID'
  +#13#10'     )'
  +#13#10'   VALUES'
  +#13#10'    ('
  +#13#10'     :CDANIMAL, :DATA, :VALOR, GUID20()'
  +#13#10'    );'
  +#13#10''
  +#13#10'END' ;


  _ALTER_PROCEDURE_DOIMP_IDEAGRI =
         'CREATE OR ALTER PROCEDURE DOIMP$IDEAGRI ('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    IDEAGRI VARCHAR(1024) COLLATE ISO8859_1,'
  +#13#10'    ACCEPT_NULL_BIRTHDATE SYS$BOOL,'
  +#13#10'    CODIGO_RETIRO SYS$INT,'
  +#13#10'    CODIGO_LOTE SYS$INT)'
  +#13#10'AS'
  +#13#10'BEGIN'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE DOIMP$LIMPARBASE( KCAD_FAZENDA );'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE DOIMP$DEFAULT_GSANGUE  ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_CADASTRO ( KCAD_FAZENDA, IDEAGRI, ACCEPT_NULL_BIRTHDATE, CODIGO_RETIRO, CODIGO_LOTE ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_CADTOURO ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_CIOSCOB  ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_DADOPROD ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_PESAGENS ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_MAMITE   ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_DOENCA   ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_CONDCORP ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_PESO     ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  /*'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_BST      ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_CMT      ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_FILHOS   ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_FUNCIONA ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_DIAGNOST ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_SANITARI ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_TRATASAN ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_TRATAMEN ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_PMACHO   ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_LINEARCA ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  */'
  +#13#10'END' ;

begin
  ExecuteDirect( 'ALTER TRIGGER ON_CONNECT INACTIVE' ) ;
  Reconnect ;
  TryExecuteDirect( _DROP_TABLE_ZOO_ANIMAL_LINHAGEM_TMP       ) ;
  Reconnect ;
  TryExecuteDirect( _DROP_TABLE_ZOO_ANIMAL_LINHAGEM_OLD       ) ;
  Reconnect ;
  TryExecuteDirect( _ALTER_TABLE_IMP_CIOSCOB_CDTIPOPARTO      ) ;
  Reconnect ;
  TryExecuteDirect( _ALTER_TABLE_IMP_CIOSCOB_RETENCAOPLACENTA ) ;
  Reconnect ;
  TryExecuteDirect( _CREATE_GTT_IMP_DOENCAANIMAL_IDEAGRI      ) ;
  Reconnect ;
  ExecuteDirect   ( _ALTER_PROCEDURE_DOIMP_DEAGRI_CIOSCOB     ) ;
  Reconnect ;
  ExecuteDirect   ( _CREATE_PROCEDURE_DOIMP_IDEAGRI_DOENCA    ) ;
  Reconnect ;
  ExecuteDirect   ( _CREATE_PROCEDURE_DOIMP_IDEAGRI_CONDCORP  ) ;
  Reconnect ;
  ExecuteDirect   ( _CREATE_PROCEDURE_DOIMP_IDEAGRI_PESO      ) ;
  Reconnect ;
  ExecuteDirect   ( _ALTER_PROCEDURE_DOIMP_IDEAGRI            ) ;
  ExecuteDirect( 'ALTER TRIGGER ON_CONNECT ACTIVE' ) ;
  Reconnect ;
end;

procedure TDBZootecnicoUpdate._5_001_15;
const
  _CREATE_PROCEDURE_SYS_INIT_PARAMMATRIZ =
        'CREATE OR ALTER PROCEDURE SYS$INIT_PARAMMATRIZ ('
 +#13#10'     PKCAD_FAZENDA TYPE OF SYS$FKGUID20_NN)'
  +#13#10'AS'
  +#13#10'DECLARE VVALUE TYPE OF SYS$ST_VALUE;'
  +#13#10'DECLARE VDESCRICAO TYPE OF SYS$DESCR_NN;'
  +#13#10'DECLARE VPRIMIPARA TYPE OF SYS$FLOAT;'
  +#13#10'DECLARE VMULTIPARA TYPE OF SYS$FLOAT;'
  +#13#10'DECLARE VATIVO TYPE OF SYS$BOOL_T;'
  +#13#10'DECLARE VINTERNAL TYPE OF SYS$BOOL_F;'
  +#13#10'DECLARE SYS$DU TYPE OF SYS$DATE ;'
  +#13#10'DECLARE PATH VARCHAR( 256 );'
  +#13#10'BEGIN'
  +#13#10''
  +#13#10''
  +#13#10'  PATH = SU$EXTRACTFILEPATH ( RDB$GET_CONTEXT( ''SYSTEM'', ''DB_NAME'' ) ) ;'
  +#13#10'  PATH = SU$EXTRACTFILEPATH ( SUBSTRING ( PATH FROM 1 FOR char_length( PATH )- 1 ) ) ;'
  +#13#10'  PATH = SU$EXTRACTFILEPATH ( SUBSTRING ( PATH FROM 1 FOR char_length( PATH )- 1 ) ) ;'
  +#13#10''
  +#13#10'  if ( SU$FILEEXISTS( PATH || ''CLAG5.DB'' ) <> 1) then'
  +#13#10'    exit ;'
  +#13#10''
  +#13#10'  FOR EXECUTE STATEMENT ('
  +#13#10'        ''SELECT '''
  +#13#10'      ||'' SYS$VALUE, PRIMIPARA, MULTIPARA, ATIVO, INTERNAL, SYS$DU '''
  +#13#10'      ||''FROM DEF_CFGPARAMMATRIZES'''
  +#13#10'      ) ON EXTERNAL DATA SOURCE PATH || ''CLAG5.DB'''
  +#13#10'      WITH COMMON TRANSACTION'
  +#13#10'      INTO vVALUE, vPRIMIPARA, vMULTIPARA, vATIVO, vINTERNAL, SYS$DU'
  +#13#10'  DO'
  +#13#10'     IF ( EXISTS (SELECT 1 FROM ZOO_CFGPARAMMATRIZES WHERE KCAD_FAZENDA = :pKCAD_FAZENDA AND SYS$VALUE = :vVALUE ) ) THEN'
  +#13#10'       UPDATE ZOO_CFGPARAMMATRIZES'
  +#13#10'        SET'
  +#13#10'          SYS$VALUE = :vVALUE,'
  +#13#10'          PRIMIPARA = :vPRIMIPARA,'
  +#13#10'          MULTIPARA = :vMULTIPARA,'
  +#13#10'          ATIVO     = :vATIVO,'
  +#13#10'          INTERNAL  = :vINTERNAL,'
  +#13#10'          SYS$DU    = :SYS$DU'
  +#13#10'       WHERE (KCAD_FAZENDA = :pKCAD_FAZENDA AND SYS$VALUE = :vVALUE)'
  +#13#10'         AND ((SYS$DU IS NULL) OR (SYS$DU < :SYS$DU) ) ;'
  +#13#10'     ELSE'
  +#13#10'       INSERT INTO ZOO_CFGPARAMMATRIZES ( KCAD_FAZENDA, SYS$VALUE, PRIMIPARA, MULTIPARA, ATIVO, INTERNAL )'
  +#13#10'       VALUES ( :pKCAD_FAZENDA, :vVALUE, :vPRIMIPARA, :vMULTIPARA, :vATIVO, :vINTERNAL );'
  +#13#10''
  +#13#10'END' ;
begin
  ExecuteDirect ( _CREATE_PROCEDURE_SYS_INIT_PARAMMATRIZ ) ;
end;

procedure TDBZootecnicoUpdate._5_001_12 ;
const
 _CREATE_PROCEDURE_DOIMP_IDEAGRI_CADASTRO =
        'CREATE OR ALTER PROCEDURE DOIMP$IDEAGRI_CADASTRO ('
 +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
 +#13#10'    IDEAGRI varchar(1024) collate ISO8859_1,'
 +#13#10'    ACCEPT_NULL_BIRTHDATE SYS$BOOL,'
 +#13#10'    CODIGO_RETIRO SYS$INT,'
 +#13#10'    CODIGO_LOTE SYS$INT)'
 +#13#10'AS'
 +#13#10'declare brinco varchar(10) not null;'
 +#13#10'declare nome_estab varchar(60);'
 +#13#10'declare nome_completo varchar(60);'
 +#13#10'declare registro varchar(15);'
 +#13#10'declare dtnasc date;'
 +#13#10'declare pai varchar(8);'
 +#13#10'declare nome_pai varchar(60);'
 +#13#10'declare registro_pai varchar(15);'
 +#13#10'declare pd_pai varchar(5);'
 +#13#10'declare mae varchar(10);'
 +#13#10'declare nome_mae varchar(60);'
 +#13#10'declare registro_mae varchar(15);'
 +#13#10'declare dtorigem date;'
 +#13#10'declare local_origem varchar(20);'
 +#13#10'declare preco_compra numeric(15, 2);'
 +#13#10'declare dtdesc date;'
 +#13#10'declare razao char(3);'
 +#13#10'declare motivo varchar(5);'
 +#13#10'declare preco_venda numeric(15, 2);'
 +#13#10'declare comprador varchar(40);'
 +#13#10'declare raca char(3);'
 +#13#10'declare gsangue smallint;'
 +#13#10'declare retiro varchar(52);'
 +#13#10'declare lote varchar(52);'
 +#13#10'declare nucleo char(4);'
 +#13#10'declare rebanho varchar(5);'
 +#13#10'declare vaca varchar(8);'
 +#13#10'declare avo_paterno varchar(40);'
 +#13#10'declare reg_avo_paterno varchar(15);'
 +#13#10'declare avo_paterna varchar(40);'
 +#13#10'declare reg_avo_paterna varchar(15);'
 +#13#10'declare avo_materno varchar(40);'
 +#13#10'declare reg_avo_materno varchar(15);'
 +#13#10'declare avo_materna varchar(40);'
 +#13#10'declare reg_avo_materna varchar(15);'
 +#13#10'declare touro1 varchar(8);'
 +#13#10'declare touro2 varchar(8);'
 +#13#10'declare touro3 varchar(8);'
 +#13#10'declare touro4 varchar(8);'
 +#13#10'declare te char(2);'
 +#13#10'declare lote1 char(2);'
 +#13#10'declare data1 date;'
 +#13#10'declare lote2 char(2);'
 +#13#10'declare data2 date;'
 +#13#10'declare lote3 char(2);'
 +#13#10'declare data3 date;'
 +#13#10'declare lote4 char(2);'
 +#13#10'declare data4 date;'
 +#13#10'declare lote5 char(2);'
 +#13#10'declare data5 date;'
 +#13#10'declare lote6 char(2);'
 +#13#10'declare data6 date;'
 +#13#10'declare lote7 char(2);'
 +#13#10'declare data7 date;'
 +#13#10'declare lote8 char(2);'
 +#13#10'declare data8 date;'
 +#13#10'declare status varchar(3) not null;'
 +#13#10'declare criador varchar(40);'
 +#13#10'declare cidcria varchar(25);'
 +#13#10'declare codigo1 char(3);'
 +#13#10'declare codigo2 char(3);'
 +#13#10'declare codigo3 char(3);'
 +#13#10'declare persiste integer;'
 +#13#10'declare potencial integer;'
 +#13#10'declare INTENCAO_DESCARTE char(1);'
 +#13#10'declare SQL_WHERE varchar(100) = '''' ;'
 +#13#10'declare LF_ char;'
 +#13#10'begin'
 +#13#10''
 +#13#10'  LF_ = ASCII_CHAR(10) ;'
 +#13#10'  --DELETE FROM IMP$CADASTRO ;'
 +#13#10''
 +#13#10'  if ( CODIGO_RETIRO > -1 ) THEN'
 +#13#10'     SQL_WHERE = SQL_WHERE || '' AND A.CDSETOR = '' || :CODIGO_RETIRO ;'
 +#13#10''
 +#13#10'  if ( ACCEPT_NULL_BIRTHDATE = ''F'' ) THEN'
 +#13#10'     SQL_WHERE = SQL_WHERE || '' AND A.DTNASCIMENTO IS NOT NULL'' ;'
 +#13#10''
 +#13#10'  FOR EXECUTE STATEMENT'
 +#13#10'    (       ''SELECT A.CDANIMAL, (trim(A.NUMERO) || ''''[*]'''' || coalesce('''' '''' || A.NOME, '''''''')), A.NOMECOMPLETO, A.REGASSOCRACA, A.DTNASCIMENTO, '''
 +#13#10'      ||LF_||''P.CDANIMAL,  P.nomecompleto, P.regassocraca, NULL, '''
 +#13#10'      ||LF_||''M.CDANIMAL,  M.nomecompleto, M.regassocraca, '''
 +#13#10'      ||LF_||''NULL, NULL, NULL, '''
 +#13#10'      ||LF_||''A.DTBAIXA, IIF(A.DTBAIXA IS NOT NULL, ''''DES'''', NULL), A.cdmotivobaixa, '''
 +#13#10'      ||LF_||''NULL, NULL, '''
 +#13#10'      ||LF_||''(SELECT FIRST 1'''
 +#13#10'      ||LF_||''  CASE'''
 +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 175 ) THEN ''''PDS'''' '''
 +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 290, 300, 340 ) THEN ''''GIR'''' '''
 +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 310 ) THEN ''''GHL'''' '''
 +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 365 ) THEN ''''HPB'''' '''
 +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 385 ) THEN ''''JER'''' '''
 +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 635 ) THEN ''''HPV'''' '''
 +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 565 ) THEN ''''SIM'''' '''
 +#13#10'      ||LF_||''  ELSE'''
 +#13#10'      ||LF_||''    ''''XX'''' '''
 +#13#10'      ||LF_||''  END'''
 +#13#10'      ||LF_||''FROM ANIMALRACA AR'''
 +#13#10'      ||LF_||''WHERE AR.CDANIMALRACA = A.CDANIMAL'''
 +#13#10'      ||LF_||''ORDER BY AR.PERCENTUAL DESC'''
 +#13#10'      ||LF_||'') RACA, '''
 +#13#10'      ||LF_||''CASE '''
 +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (1, 2, 3, 4) THEN ''''8'''' '''
 +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (5, 6, 7, 8) THEN ''''1'''' '''
 +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (9, 10, 11, 12) THEN ''''2'''' '''
 +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (13, 14, 15, 16) THEN ''''3'''' '''
 +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (17, 18, 19, 20) THEN ''''4'''' '''
 +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (21, 22, 23, 24) THEN ''''5'''' '''
 +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento > 24 THEN ''''5'''' '''
 +#13#10'      ||LF_||''END, '''
 +#13#10'      ||LF_||''SETOR.NOME, LOTE.DESCRICAO,'''
 +#13#10'      ||LF_||''NULL, NULL, NULL,'''
 +#13#10'      ||LF_||''NULL, NULL, NULL, NULL,'''
 +#13#10'      ||LF_||''NULL, NULL, NULL, NULL,'''
 +#13#10'      ||LF_||''NULL, NULL, NULL, NULL,'''
 +#13#10'      ||LF_||''CASE (SELECT AP.TIPO FROM ANIMALPERIODO AP WHERE AP.CDANIMAL = A.CDANIMAL AND AP.TIPO IN (1, 2) AND AP.DATAFIM IS NULL ROWS 1)'''
 +#13#10'      ||LF_||''WHEN 1 THEN ''''TE'''''''
 +#13#10'      ||LF_||''WHEN 2 THEN ''''RE'''''''
 +#13#10'      ||LF_||''END TE,'''
 +#13#10'      ||LF_||''(SELECT ''''T'''' FROM ANIMALPERIODO AP WHERE AP.CDANIMAL = A.CDANIMAL AND AP.TIPO = 3 AND AP.DATAFIM IS NULL ROWS 1) INTENCAO_DESCARTE,'''
 +#13#10'      ||LF_||''NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,'''
 +#13#10'      ||LF_||''NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,'''
 +#13#10'      ||LF_||''CASE'''
 +#13#10'      ||LF_||''    WHEN A.cdcategoria = 1 THEN ''''BEZ'''' '''
 +#13#10'      ||LF_||''    WHEN A.cdcategoria = 6 THEN ''''NOV'''' '''
 +#13#10'      ||LF_||''    WHEN A.cdcategoria = 7 AND A.matrizseca = 0 THEN ''''VL'''' '''
 +#13#10'      ||LF_||''    WHEN A.cdcategoria = 7 AND A.matrizseca = 1 THEN ''''VS'''' '''
 +#13#10'      ||LF_||''    ELSE IIF( A.DTBAIXA IS NULL,  ''''BEZ'''', ''''DES'''' )'''
 +#13#10'      ||LF_||''END,'''
 +#13#10'      ||LF_||''NULL, NULL,'''
 +#13#10'      ||LF_||''NULL, NULL, NULL,'''
 +#13#10'      ||LF_||''NULL, NULL'''
 +#13#10'      ||LF_||''FROM ANIMAL A'''
 +#13#10'      ||LF_||''LEFT JOIN ANIMAL P ON P.cdanimal = A.cdpai '''
 +#13#10'      ||LF_||''LEFT JOIN ANIMAL M ON M.cdanimal = A.cdmae '''
 +#13#10'      ||LF_||''LEFT JOIN SETOR  SETOR ON SETOR.CDSETOR = A.CDSETOR '''
 +#13#10'      ||LF_||''LEFT JOIN SP_GRUPOANIMALESPECIFICO( CURRENT_DATE, '' || COALESCE( :CODIGO_LOTE, -1 ) || '', A.CDANIMAL ) LOTE ON 1=1 '''
 +#13#10'      ||LF_||''WHERE A.SEXO = ''''F'''' AND A.ANIMALREBANHO = 1'' || SQL_WHERE'
 +#13#10'    )'
 +#13#10'  ON EXTERNAL DATA SOURCE :IDEAGRI'
 +#13#10'  WITH COMMON TRANSACTION'
 +#13#10'  INTO'
 +#13#10'     :BRINCO, :NOME_ESTAB, :NOME_COMPLETO, :REGISTRO, :DTNASC, :PAI, :NOME_PAI, :REGISTRO_PAI,'
 +#13#10'     :PD_PAI, :MAE, :NOME_MAE, :REGISTRO_MAE, :DTORIGEM, :LOCAL_ORIGEM, :PRECO_COMPRA, :DTDESC, :RAZAO,'
 +#13#10'     :MOTIVO, :PRECO_VENDA, :COMPRADOR, :RACA, :GSANGUE,'
 +#13#10'     :RETIRO, :LOTE,'
 +#13#10'     :NUCLEO, :REBANHO, :VACA,'
 +#13#10'     :AVO_PATERNO, :REG_AVO_PATERNO, :AVO_PATERNA, :REG_AVO_PATERNA,'
 +#13#10'     :AVO_MATERNO, :REG_AVO_MATERNO, :AVO_MATERNA, :REG_AVO_MATERNA,'
 +#13#10'     :TOURO1, :TOURO2, :TOURO3, :TOURO4,'
 +#13#10'     :TE,'
 +#13#10'     :INTENCAO_DESCARTE,'
 +#13#10'     :LOTE1, :DATA1, :LOTE2, :DATA2, :LOTE3, :DATA3, :LOTE4, :DATA4,'
 +#13#10'     :LOTE5, :DATA5, :LOTE6, :DATA6, :LOTE7, :DATA7, :LOTE8, :DATA8,'
 +#13#10'     :STATUS,'
 +#13#10'     :CRIADOR, :CIDCRIA,'
 +#13#10'     :CODIGO1, :CODIGO2, :CODIGO3, :PERSISTE, :POTENCIAL'
 +#13#10'  DO'
 +#13#10'  begin'
 +#13#10''
 +#13#10'  -- SELECT first 1 COMPOSICAO from doimp$ideagri_raca(:RACA) into :RACA;'
 +#13#10''
 +#13#10'   INSERT INTO IMP$CADASTRO'
 +#13#10'     ('
 +#13#10'       BRINCO, NOME_ESTAB, NOME_COMPLETO, REGISTRO, DTNASC, PAI, NOME_PAI, REGISTRO_PAI,'
 +#13#10'       PD_PAI, MAE, NOME_MAE, REGISTRO_MAE, DTORIGEM, LOCAL_ORIGEM, PRECO_COMPRA, DTDESC, RAZAO,'
 +#13#10'       MOTIVO, PRECO_VENDA, COMPRADOR, RACA, GSANGUE,'
 +#13#10'       RETIRO, LOTE,'
 +#13#10'       NUCLEO, REBANHO, VACA,'
 +#13#10'       AVO_PATERNO, REG_AVO_PATERNO, AVO_PATERNA, REG_AVO_PATERNA,'
 +#13#10'       AVO_MATERNO, REG_AVO_MATERNO, AVO_MATERNA, REG_AVO_MATERNA,'
 +#13#10'       TOURO1, TOURO2, TOURO3, TOURO4,'
 +#13#10'       TE,'
 +#13#10'       INTENCAO_DESCARTE,'
 +#13#10'       LOTE1, DATA1, LOTE2, DATA2, LOTE3, DATA3, LOTE4, DATA4,'
 +#13#10'       LOTE5, DATA5, LOTE6, DATA6, LOTE7, DATA7, LOTE8, DATA8,'
 +#13#10'       STATUS,'
 +#13#10'       CRIADOR, CIDCRIA,'
 +#13#10'       CODIGO1, CODIGO2, CODIGO3,'
 +#13#10'       PERSISTE, POTENCIAL'
 +#13#10'     )'
 +#13#10'   VALUES'
 +#13#10'     ('
 +#13#10'      :BRINCO, :NOME_ESTAB, :NOME_COMPLETO, :REGISTRO, :DTNASC, :PAI, :NOME_PAI, :REGISTRO_PAI,'
 +#13#10'      :PD_PAI, :MAE, :NOME_MAE, :REGISTRO_MAE, :DTORIGEM, :LOCAL_ORIGEM, :PRECO_COMPRA, :DTDESC, :RAZAO,'
 +#13#10'      :MOTIVO, :PRECO_VENDA, :COMPRADOR, :RACA, :GSANGUE,'
 +#13#10'      SUBSTRING ( :RETIRO FROM 1 FOR 32 ), SUBSTRING ( :LOTE FROM 1 FOR 32 ),'
 +#13#10'      :NUCLEO, :REBANHO, :VACA,'
 +#13#10'      :AVO_PATERNO, :REG_AVO_PATERNO, :AVO_PATERNA, :REG_AVO_PATERNA, :AVO_MATERNO, :REG_AVO_MATERNO,'
 +#13#10'      :AVO_MATERNA, :REG_AVO_MATERNA, :TOURO1, :TOURO2, :TOURO3, :TOURO4,'
 +#13#10'      :TE,'
 +#13#10'      :INTENCAO_DESCARTE,'
 +#13#10'      :LOTE1, :DATA1, :LOTE2, :DATA2, :LOTE3, :DATA3, :LOTE4, :DATA4,'
 +#13#10'      :LOTE5, :DATA5, :LOTE6, :DATA6, :LOTE7, :DATA7, :LOTE8, :DATA8,'
 +#13#10'      :STATUS,'
 +#13#10'      :CRIADOR, :CIDCRIA,'
 +#13#10'      :CODIGO1, :CODIGO2, :CODIGO3,'
 +#13#10'      :PERSISTE, :POTENCIAL'
 +#13#10'     ) ;'
 +#13#10'   end'
 +#13#10'end' ;

begin
  ExecuteDirect( _CREATE_PROCEDURE_DOIMP_IDEAGRI_CADASTRO ) ;
end ;

procedure TDBZootecnicoUpdate._5_001_11 ;
const
 _ALTER_PROCEDURE_ZOO_UPDATE_CALCULO_PESAGEM =
         'CREATE OR ALTER PROCEDURE ZOO_UPDATE_CALCULO_PESAGEM('
  +#13#10'    KZOO_LACTACAO TYPE OF SYS$FKGUID20_NN)'
  +#13#10'AS'
  +#13#10'declare KCAD_FAZENDA type of SYS$FKGUID20;'
  +#13#10'declare KZOO_PESAGEM_LEITE type of SYS$FKGUID20;'
  +#13#10'declare KPRIMEIRA_PESAGEMLEITE type of SYS$FKGUID20;'
  +#13#10'declare PRIMEIRA_PESAGEMLEITE type of SYS$DATE;'
  +#13#10'declare KULTIMA_PESAGEMLEITE type of SYS$FKGUID20;'
  +#13#10'declare ULTIMA_PESAGEMLEITE type of SYS$DATE;'
  +#13#10'declare NL type of SYS$INT;'
  +#13#10'declare KZOO_ANIMAL_FEMEA type of SYS$FKGUID20;'
  +#13#10'declare DATALACTACAO type of SYS$DATE;'
  +#13#10'declare DATA_SECAGEM type of SYS$DATE;'
  +#13#10'declare DATAPESAGEM type of SYS$DATE;'
  +#13#10'declare DEL type of SYS$INT;'
  +#13#10'declare DEL_PCL type of SYS$INT;'
  +#13#10'declare DATA_PICO SYS$DATE;'
  +#13#10'declare KPICO_PESAGEMLEITE type of SYS$FKGUID20;'
  +#13#10'declare PRODUCAO_PICO type of SYS$FLOAT;'
  +#13#10'declare PRODUCAO type of SYS$FLOAT;'
  +#13#10'declare P_GORDURA type of SYS$FLOAT;'
  +#13#10'declare GORDURA type of SYS$FLOAT;'
  +#13#10'declare P_PROTEINA type of SYS$FLOAT;'
  +#13#10'declare PROTEINA type of SYS$FLOAT;'
  +#13#10'declare DATA_ANTERIOR type of SYS$DATE;'
  +#13#10'declare DEL_ANTERIOR type of SYS$INT;'
  +#13#10'declare PRODUCAO_ANTERIOR type of SYS$FLOAT;'
  +#13#10'declare P_GORDURA_ANTERIOR type of SYS$FLOAT;'
  +#13#10'declare GORDURA_ANTERIOR type of SYS$FLOAT;'
  +#13#10'declare P_PROTEINA_ANTERIOR type of SYS$FLOAT;'
  +#13#10'declare PROTEINA_ANTERIOR type of SYS$FLOAT;'
  +#13#10'declare INTERVALO_DEL type of SYS$INT;'
  +#13#10'declare PRODUCAO_1 type of SYS$FLOAT;'
  +#13#10'declare GORDURA_1 type of SYS$FLOAT;'
  +#13#10'declare PROTEINA_1 type of SYS$FLOAT;'
  +#13#10'declare PRODUCAO_MEDIA type of SYS$FLOAT;'
  +#13#10'declare GORDURA_MEDIA type of SYS$FLOAT;'
  +#13#10'declare PROTEINA_MEDIA type of SYS$FLOAT;'
  +#13#10'declare PRODUCAO_UC type of SYS$FLOAT;'
  +#13#10'declare GORDURA_UC type of SYS$FLOAT;'
  +#13#10'declare PROTEINA_UC type of SYS$FLOAT;'
  +#13#10'declare NASCIMENTO type of SYS$DATE;'
  +#13#10'declare FATOR_PROJECAO_L305 type of ZOO$PROJECAOPRODUCAO;'
  +#13#10'declare FATOR_PROJECAO_GP305 type of ZOO$PROJECAOPRODUCAO;'
  +#13#10'declare IDADE_DIAS type of SYS$INT;'
  +#13#10'declare IDADE_MESES type of SYS$INT;'
  +#13#10'declare IDADE_ANOS type of SYS$INT;'
  +#13#10'declare PRODUCAO_ACUMULADA type of SYS$FLOAT;'
  +#13#10'declare GORDURA_ACUMULADA type of SYS$FLOAT;'
  +#13#10'declare PROTEINA_ACUMULADA type of SYS$FLOAT;'
  +#13#10'declare PROJ_PRODUCAO305 type of SYS$FLOAT;'
  +#13#10'declare PROJ_GORDURA305 type of SYS$FLOAT;'
  +#13#10'declare PROJ_PROTEINA305 type of SYS$FLOAT;'
  +#13#10'declare DPP type of SYS$INT;'
  +#13#10'declare DEL305 type of SYS$INT;'
  +#13#10'declare PL305 type of SYS$FLOAT;'
  +#13#10'declare PG305 type of SYS$FLOAT;'
  +#13#10'declare PP305 type of SYS$FLOAT;'
  +#13#10'declare DEL365 type of SYS$INT;'
  +#13#10'declare PL365 type of SYS$FLOAT;'
  +#13#10'declare PG365 type of SYS$FLOAT;'
  +#13#10'declare PP365 type of SYS$FLOAT;'
  +#13#10'declare FATOR_EQA_LEITE type of SYS$FLOAT;'
  +#13#10'declare FATOR_EQA_GP type of SYS$FLOAT;'
  +#13#10'declare FATOR_PCL type of ZOO$FATORPCL;'
  +#13#10'declare EQA_LEITE type of SYS$FLOAT;'
  +#13#10'declare EQA_GORDURA type of SYS$FLOAT;'
  +#13#10'declare EQA_PROTEINA type of SYS$FLOAT;'
  +#13#10'declare PRODUCAO_PREVISTA type of SYS$FLOAT;'
  +#13#10'declare NUMERO_ORDENHAS type of SYS$INT;'
  +#13#10'declare MAX_ORDENHAS_DIA type of SYS$INT;'
  +#13#10'declare TOTAL_ORDENHAS type of SYS$INT;'
  +#13#10'declare KLOTE_NAOPROCESSADO type of SYS$FKGUID20;'
  +#13#10'declare KZOO_LOTEPESAGEM_LEITE type of SYS$FKGUID20;'
  +#13#10'declare KZOO_PESAGEM_LEITE_EQA type of SYS$FKGUID20;'
  +#13#10'declare EQA_LEITE_OLD type of SYS$FLOAT;'
  +#13#10'declare EQA_GORDURA_OLD type of SYS$FLOAT;'
  +#13#10'declare EQA_PROTEINA_OLD type of SYS$FLOAT;'
  +#13#10'declare EQA_CHANGED varchar( 1 ) = null ;'
  +#13#10'declare JNL$OFF varchar( 1 ) ;'
  +#13#10'declare ZOO$CLOFF varchar( 1 ) ;'
  +#13#10'declare CG integer ;'
  +#13#10'BEGIN'
  +#13#10''
  +#13#10'  if ( RDB$GET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLOFF'' ) = ''1'' ) THEN'
  +#13#10'     EXIT ;'
  +#13#10''
  +#13#10'  KPRIMEIRA_PESAGEMLEITE = null ;'
  +#13#10'  KULTIMA_PESAGEMLEITE   = null ;'
  +#13#10'  KPICO_PESAGEMLEITE     = null ;'
  +#13#10'  KCAD_FAZENDA           = null ;'
  +#13#10'  DEL                    = null ;'
  +#13#10'  KLOTE_NAOPROCESSADO    = null ;'
  +#13#10'  TOTAL_ORDENHAS         = 0 ;'
  +#13#10'  MAX_ORDENHAS_DIA       = 0 ;'
  +#13#10''
  +#13#10''
  +#13#10'  SELECT L.KCAD_FAZENDA, L.KZOO_ANIMAL_FEMEA, L.DATALACTACAO, L.NL, L.DATA_SECAGEM FROM ZOO_LACTACOES  L'
  +#13#10'  WHERE KZOO_LACTACAO = :KZOO_LACTACAO'
  +#13#10'  INTO  :KCAD_FAZENDA, :KZOO_ANIMAL_FEMEA, DATALACTACAO, NL, DATA_SECAGEM ;'
  +#13#10''
  +#13#10'  if ( KCAD_FAZENDA is null ) then'
  +#13#10'     exit ;'
  +#13#10''
  +#13#10'  DPP = COALESCE( CAST( DATA_SECAGEM AS DATE ), CURRENT_DATE ) - CAST( DATALACTACAO AS DATE );'
  +#13#10''
  +#13#10'  -- idade do animal na lactação'
  +#13#10'  SELECT NASCIMENTO FROM ZOO_ANIMAIS_FEMEA WHERE KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL_FEMEA INTO :NASCIMENTO ;'
  +#13#10''
  +#13#10'  IDADE_DIAS  = CAST ( DATALACTACAO - NASCIMENTO AS INTEGER) ;'
  +#13#10'  IDADE_MESES = CAST ( IDADE_DIAS / 30.4 AS INTEGER ) ;'
  +#13#10'  IDADE_ANOS  = CAST ( IDADE_DIAS / 365.0 AS INTEGER ) ;'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE ZOO_GET_EQA IDADE_MESES returning_values :FATOR_EQA_LEITE, :FATOR_EQA_GP ;'
  +#13#10''
  +#13#10'  SELECT KZOO_LOTEPESAGEM_LEITE FROM ZOO_LOTEPESAGEM_LEITE'
  +#13#10'  WHERE KCAD_FAZENDA = :KCAD_FAZENDA AND PROCESSADO = ''F'''
  +#13#10'  INTO KLOTE_NAOPROCESSADO  ;'
  +#13#10''
  +#13#10'--  IN AUTONOMOUS TRANSACTION DO'
  +#13#10'--     DELETE FROM ZOO_PESAGEM_LEITE_EQA WHERE  KZOO_LACTACAO = :KZOO_LACTACAO ;'
  +#13#10'--  IN AUTONOMOUS TRANSACTION DO'
  +#13#10'--     SELECT COUNT(*) FROM ZOO_PESAGEM_LEITE_EQA WHERE KZOO_LACTACAO = :KZOO_LACTACAO INTO CG ;'
  +#13#10''
  +#13#10'  FOR'
  +#13#10'   SELECT'
  +#13#10'    KZOO_PESAGEM_LEITE,'
  +#13#10'    KZOO_LOTEPESAGEM_LEITE,'
  +#13#10'    DATA,'
  +#13#10'    (IIF( ORD1 IS null, 0, 1 ) + IIF( ORD2 IS null, 0, 1 ) +IIF( ORD3 IS null, 0, 1 )),'
  +#13#10'    TOTAL'
  +#13#10'   FROM ZOO_PESAGEM_LEITE'
  +#13#10'   WHERE KZOO_LACTACAO = :KZOO_LACTACAO'
  +#13#10'     AND ANIMAL_DOENTE = ''F'''
  +#13#10'     AND DATA > :DATALACTACAO'
  +#13#10'--   PLAN (ZOO_PESAGEM_LEITE INDEX (IXZOO_PESAGEM_LEITE_02))'
  +#13#10'   ORDER BY KZOO_LACTACAO, DATA'
  +#13#10'  INTO KZOO_PESAGEM_LEITE, KZOO_LOTEPESAGEM_LEITE, DATAPESAGEM, NUMERO_ORDENHAS, PRODUCAO'
  +#13#10'  AS CURSOR PESAGEM_LEITE'
  +#13#10'  DO'
  +#13#10'    IF (( KZOO_LOTEPESAGEM_LEITE IS NULL ) OR (KLOTE_NAOPROCESSADO IS NULL) or (KZOO_LOTEPESAGEM_LEITE <> KLOTE_NAOPROCESSADO )) then'
  +#13#10'    begin'
  +#13#10''
  +#13#10'      TOTAL_ORDENHAS = TOTAL_ORDENHAS + NUMERO_ORDENHAS ;'
  +#13#10'      if ( NUMERO_ORDENHAS >  MAX_ORDENHAS_DIA ) then'
  +#13#10'        MAX_ORDENHAS_DIA = NUMERO_ORDENHAS ;'
  +#13#10''
  +#13#10'      --DEL = CAST(DATAPESAGEM - DATALACTACAO AS INTEGER) ;'
  +#13#10'      DEL = CAST( (CAST ( DATAPESAGEM AS DATE ) - CAST ( DATALACTACAO AS DATE )) AS INTEGER) ;'
  +#13#10'      INTERVALO_DEL = DEL - DEL_ANTERIOR ; --COALESCE ( DEL_ANTERIOR, 0 ) ;'
  +#13#10''
  +#13#10'      EXECUTE PROCEDURE ZOO_GET_PROJECAO_PRODUCAO DEL, IDADE_MESES returning_values :FATOR_PROJECAO_L305, :FATOR_PROJECAO_GP305 ;'
  +#13#10''
  +#13#10'      if ( KPRIMEIRA_PESAGEMLEITE is null ) then'
  +#13#10'        begin'
  +#13#10''
  +#13#10'           -- porcentagem de gordura, proteina da 1a analise da lactacao'
  +#13#10'           SELECT A.GORDURA / 100 GORDURA, A.PROTEINA / 100 GORDURA'
  +#13#10'           FROM ZOO_PESAGEM_LEITE_ANALISE A'
  +#13#10'           WHERE A.KZOO_LACTACAO     = :KZOO_LACTACAO'
  +#13#10'           ORDER BY A.KZOO_LACTACAO, A.DATA'
  +#13#10'           ROWS 1'
  +#13#10'           INTO P_GORDURA, P_PROTEINA ;'
  +#13#10''
  +#13#10'           -- calculo Gordura, Proteina'
  +#13#10'           GORDURA  = PRODUCAO * P_GORDURA  ;'
  +#13#10'           PROTEINA = PRODUCAO * P_PROTEINA ;'
  +#13#10''
  +#13#10'           -- atualiza a 1a pesagem'
  +#13#10'           DEL_PCL    = DEL ;'
  +#13#10'           KPRIMEIRA_PESAGEMLEITE = KZOO_PESAGEM_LEITE ;'
  +#13#10'           PRIMEIRA_PESAGEMLEITE  = DATAPESAGEM ;'
  +#13#10''
  +#13#10'           -- fator pcl em funcao do del / idade em anos'
  +#13#10'           EXECUTE PROCEDURE ZOO_GET_FCPCL ( DEL_PCL, IDADE_ANOS ) returning_values FATOR_PCL ;'
  +#13#10''
  +#13#10'           PRODUCAO_1 = PRODUCAO * FATOR_PCL * DEL_PCL ;'
  +#13#10'           GORDURA_1  = GORDURA  * FATOR_PCL * DEL_PCL ;'
  +#13#10'           PROTEINA_1 = PROTEINA * FATOR_PCL * DEL_PCL ;'
  +#13#10''
  +#13#10'        end'
  +#13#10'      else -- checa se existe uma analise na pesagem atual'
  +#13#10'        begin'
  +#13#10''
  +#13#10'          SELECT IIF ( A.GORDURA = 0, :P_GORDURA, A.GORDURA / 100 ), IIF ( A.PROTEINA = 0, :P_PROTEINA, A.PROTEINA / 100)'
  +#13#10'            FROM ZOO_PESAGEM_LEITE_ANALISE A'
  +#13#10'            WHERE A.KZOO_PESAGEM_LEITE = :KZOO_PESAGEM_LEITE'
  +#13#10'          INTO P_GORDURA, P_PROTEINA ;'
  +#13#10''
  +#13#10'          -- calculo Gordura, Proteina'
  +#13#10'          GORDURA  = PRODUCAO * P_GORDURA  ;'
  +#13#10'          PROTEINA = PRODUCAO * P_PROTEINA ;'
  +#13#10'         end'
  +#13#10''
  +#13#10'      -- calculo Gordura, Proteina anteriror'
  +#13#10'      GORDURA_ANTERIOR       = PRODUCAO_ANTERIOR * P_GORDURA_ANTERIOR  ;'
  +#13#10'      PROTEINA_ANTERIOR      = PRODUCAO_ANTERIOR * P_PROTEINA_ANTERIOR ;'
  +#13#10'      -- dados da ultima pesagem'
  +#13#10'      KULTIMA_PESAGEMLEITE = KZOO_PESAGEM_LEITE ;'
  +#13#10'      ULTIMA_PESAGEMLEITE  = DATAPESAGEM ;'
  +#13#10'      PRODUCAO_UC = PRODUCAO ;'
  +#13#10'      GORDURA_UC  = GORDURA  ;'
  +#13#10'      PROTEINA_UC = PROTEINA ;'
  +#13#10''
  +#13#10'      -- dados do pico'
  +#13#10'      if (   ( DEL BETWEEN 45 AND 90 )'
  +#13#10'         AND (    (KPICO_PESAGEMLEITE IS NULL)'
  +#13#10'               or (PRODUCAO > PRODUCAO_PICO)'
  +#13#10'              )'
  +#13#10'         ) then'
  +#13#10'        begin'
  +#13#10'         KPICO_PESAGEMLEITE = KZOO_PESAGEM_LEITE ;'
  +#13#10'         DATA_PICO           = DATAPESAGEM       ;'
  +#13#10'         PRODUCAO_PICO       = PRODUCAO          ;'
  +#13#10'        end'
  +#13#10''
  +#13#10''
  +#13#10'      -- calculo média de Produção, Gordura, Proteina'
  +#13#10'      PRODUCAO_MEDIA    = ((PRODUCAO + PRODUCAO_ANTERIOR)/2) * INTERVALO_DEL ;'
  +#13#10'      GORDURA_MEDIA     = ((GORDURA  + GORDURA_ANTERIOR )/2) * INTERVALO_DEL ;'
  +#13#10'      PROTEINA_MEDIA    = ((PROTEINA + PROTEINA_ANTERIOR)/2) * INTERVALO_DEL ;'
  +#13#10''
  +#13#10'      if ( KZOO_PESAGEM_LEITE = KPRIMEIRA_PESAGEMLEITE ) then'
  +#13#10'        begin'
  +#13#10'           PRODUCAO_ACUMULADA    = 0 ; -- PRODUCAO ;'
  +#13#10'           GORDURA_ACUMULADA     = 0 ; -- GORDURA  ;'
  +#13#10'           PROTEINA_ACUMULADA    = 0 ; -- PROTEINA ;'
  +#13#10'        end'
  +#13#10'      else'
  +#13#10'        begin'
  +#13#10'           -- projecao de Produção, Gordura, Proteina'
  +#13#10'          PRODUCAO_ACUMULADA    = PRODUCAO_ACUMULADA + PRODUCAO_MEDIA ;'
  +#13#10'          GORDURA_ACUMULADA     = GORDURA_ACUMULADA  + GORDURA_MEDIA  ;'
  +#13#10'          PROTEINA_ACUMULADA    = PROTEINA_ACUMULADA + PROTEINA_MEDIA ;'
  +#13#10'        end'
  +#13#10''
  +#13#10'      PROJ_PRODUCAO305  = (PRODUCAO_1 + PRODUCAO_ACUMULADA) * FATOR_PROJECAO_L305  ;'
  +#13#10'      PROJ_GORDURA305   = (GORDURA_1  + GORDURA_ACUMULADA ) * FATOR_PROJECAO_GP305 ;'
  +#13#10'      PROJ_PROTEINA305  = (PROTEINA_1 + PROTEINA_ACUMULADA) * FATOR_PROJECAO_GP305 ;'
  +#13#10''
  +#13#10'      if ( DEL >= 305 AND DEL305 IS NULL ) then'
  +#13#10'        begin'
  +#13#10'           DEL305 = DEL ;'
  +#13#10'           PL305 = (PRODUCAO_1 + PRODUCAO_ACUMULADA) + ((PRODUCAO_MEDIA / INTERVALO_DEL) * (305 - DEL)) ;'
  +#13#10'           PG305 = (GORDURA_1  + GORDURA_ACUMULADA ) + ((GORDURA_MEDIA  / INTERVALO_DEL) * (305 - DEL)) ;'
  +#13#10'           PP305 = (PROTEINA_1 + PROTEINA_ACUMULADA) + ((PROTEINA_MEDIA / INTERVALO_DEL) * (305 - DEL)) ;'
  +#13#10'        end'
  +#13#10''
  +#13#10'      if ( DEL >= 365 AND DEL365 IS NULL ) then'
  +#13#10'        begin'
  +#13#10'           DEL365 = DEL ;'
  +#13#10'           PL365 = (PRODUCAO_1 + PRODUCAO_ACUMULADA) + ((PRODUCAO_MEDIA / INTERVALO_DEL) * (365 - DEL)) ;'
  +#13#10'           PG365 = (GORDURA_1  + GORDURA_ACUMULADA ) + ((GORDURA_MEDIA  / INTERVALO_DEL) * (365 - DEL)) ;'
  +#13#10'           PP365 = (PROTEINA_1 + PROTEINA_ACUMULADA) + ((PROTEINA_MEDIA / INTERVALO_DEL) * (365 - DEL)) ;'
  +#13#10'        end'
  +#13#10''
  +#13#10'      --EQA_LEITE    = COALESCE ( PL305, PROJ_PRODUCAO305 ) * FATOR_EQA_LEITE ;'
  +#13#10'      --EQA_GORDURA  = COALESCE ( PG305, PROJ_GORDURA305  ) * FATOR_EQA_GP    ;'
  +#13#10'      --EQA_PROTEINA = COALESCE ( PP305, PROJ_PROTEINA305 ) * FATOR_EQA_GP    ;'
  +#13#10''
  +#13#10'      JNL$OFF   = RDB$GET_CONTEXT( ''USER_TRANSACTION'', ''JNL$OFF'' ) ;'
  +#13#10'      RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''JNL$OFF'', ''1'' ) ;'
  +#13#10''
  +#13#10'      ZOO$CLOFF = RDB$GET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLOFF'' ) ;'
  +#13#10'      RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLOFF'', ''1'' ) ;'
  +#13#10''
  +#13#10'-- removido 30.11.2012 a pedido de R.S.M.'
  +#13#10'--     INSERT'
  +#13#10'--      INTO TMP_PESAGEM_LEITE_EQA'
  +#13#10'--       ( KZOO_PESAGEM_LEITE, KCAD_FAZENDA, KZOO_LACTACAO, DATA, EQA_LEITE, EQA_GORDURA, EQA_PROTEINA )'
  +#13#10'--      VALUES'
  +#13#10'--       ( :KZOO_PESAGEM_LEITE, :KCAD_FAZENDA, :KZOO_LACTACAO, :DATAPESAGEM, :EQA_LEITE, :EQA_GORDURA, :EQA_PROTEINA ) ;'
  +#13#10''
  +#13#10'/* versao antiga'
  +#13#10'      KZOO_PESAGEM_LEITE_EQA = NULL ;'
  +#13#10'      SELECT KZOO_PESAGEM_LEITE, EQA_LEITE, EQA_GORDURA, EQA_PROTEINA FROM ZOO_PESAGEM_LEITE_EQA'
  +#13#10'      WHERE KZOO_PESAGEM_LEITE = :KZOO_PESAGEM_LEITE'
  +#13#10'      INTO KZOO_PESAGEM_LEITE_EQA, EQA_LEITE_OLD, EQA_GORDURA_OLD, EQA_PROTEINA_OLD ;'
  +#13#10''
  +#13#10'      IF ( KZOO_PESAGEM_LEITE_EQA IS NULL ) THEN'
  +#13#10'        BEGIN'
  +#13#10'          EQA_CHANGED = ''T'' ;'
  +#13#10'          INSERT'
  +#13#10'           INTO ZOO_PESAGEM_LEITE_EQA'
  +#13#10'             ( KZOO_PESAGEM_LEITE, KCAD_FAZENDA, KZOO_LACTACAO, DATA, EQA_LEITE, EQA_GORDURA, EQA_PROTEINA )'
  +#13#10'           VALUES'
  +#13#10'             ( :KZOO_PESAGEM_LEITE, :KCAD_FAZENDA, :KZOO_LACTACAO, :DATAPESAGEM, :EQA_LEITE, :EQA_GORDURA, :EQA_PROTEINA ) ;'
  +#13#10'        END'
  +#13#10'      ELSE IF (   (EQA_LEITE_OLD    IS DISTINCT FROM EQA_LEITE )'
  +#13#10'               OR (EQA_GORDURA_OLD  IS DISTINCT FROM EQA_GORDURA)'
  +#13#10'               OR (EQA_PROTEINA_OLD IS DISTINCT FROM EQA_PROTEINA) ) THEN'
  +#13#10'        BEGIN'
  +#13#10'          EQA_CHANGED = ''T'' ;'
  +#13#10'          UPDATE ZOO_PESAGEM_LEITE_EQA'
  +#13#10'             SET'
  +#13#10'               EQA_LEITE    = :EQA_LEITE,'
  +#13#10'               EQA_GORDURA  = :EQA_GORDURA,'
  +#13#10'               EQA_PROTEINA =  :EQA_PROTEINA'
  +#13#10'          WHERE KZOO_PESAGEM_LEITE = :KZOO_PESAGEM_LEITE ;'
  +#13#10'        END'
  +#13#10'*/'
  +#13#10'      RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLOFF'', ZOO$CLOFF ) ;'
  +#13#10'      RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''JNL$OFF'',   JNL$OFF   ) ;'
  +#13#10''
  +#13#10'      IF ( NL > 1 ) then'
  +#13#10'       PRODUCAO_PREVISTA = PRODUCAO_ANTERIOR - (PRODUCAO_ANTERIOR * ( DEL - DEL_ANTERIOR ) * 0.003) ;'
  +#13#10'      ELSE'
  +#13#10'       PRODUCAO_PREVISTA = PRODUCAO_ANTERIOR - (PRODUCAO_ANTERIOR * ( DEL - DEL_ANTERIOR ) *  0.002) ;'
  +#13#10''
  +#13#10'       -- copia para dados anteriores.'
  +#13#10'      DATA_ANTERIOR         = DATAPESAGEM ;'
  +#13#10'      DEL_ANTERIOR          = DEL  ;'
  +#13#10'      PRODUCAO_ANTERIOR     = PRODUCAO    ;'
  +#13#10'      P_GORDURA_ANTERIOR    = P_GORDURA   ;'
  +#13#10'      P_PROTEINA_ANTERIOR   = P_PROTEINA  ;'
  +#13#10'    end'
  +#13#10''
  +#13#10'   RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLRCL'', ''1'' ) ;'
  +#13#10''
  +#13#10'   if ( DEL305 is NULL ) then'
  +#13#10'   begin'
  +#13#10'     if ( DPP >= 305 ) then'
  +#13#10'     begin'
  +#13#10'      PL305 = PROJ_PRODUCAO305  ;'
  +#13#10'      PG305 = PROJ_GORDURA305   ;'
  +#13#10'      PP305 = PROJ_PROTEINA305  ;'
  +#13#10'     end'
  +#13#10'   end'
  +#13#10''
  +#13#10'   if ( DEL365 is NULL ) then'
  +#13#10'   begin'
  +#13#10'     if ( DPP >= 365 ) then'
  +#13#10'     begin'
  +#13#10'       PL365 = (PRODUCAO_1 + PRODUCAO_ACUMULADA) + (PRODUCAO_UC * (365 - DEL)) ;'
  +#13#10'       PG365 = (GORDURA_1  + GORDURA_ACUMULADA ) + (GORDURA_UC  * (365 - DEL)) ;'
  +#13#10'       PP365 = (PROTEINA_1 + PROTEINA_ACUMULADA) + (PROTEINA_UC * (365 - DEL)) ;'
  +#13#10'     end'
  +#13#10'   end'
  +#13#10''
  +#13#10'   EQA_LEITE    = PL305 * FATOR_EQA_LEITE ;'
  +#13#10'   EQA_GORDURA  = PG305 * FATOR_EQA_GP    ;'
  +#13#10'   EQA_PROTEINA = PP305 * FATOR_EQA_GP    ;'
  +#13#10''
  +#13#10'   --- atualização da lactacao'
  +#13#10'   UPDATE ZOO_LACTACOES'
  +#13#10'     SET'
  +#13#10'         NUMERO_ORDENHAS        = :TOTAL_ORDENHAS,'
  +#13#10'         MAX_ORDENHAS_DIA       = :MAX_ORDENHAS_DIA,'
  +#13#10'         NASCIMENTO             = :NASCIMENTO,'
  +#13#10'         KPRIMEIRA_PESAGEMLEITE = :KPRIMEIRA_PESAGEMLEITE,'
  +#13#10'         PRIMEIRA_PESAGEMLEITE  = :PRIMEIRA_PESAGEMLEITE,'
  +#13#10'         KULTIMA_PESAGEMLEITE   = :KULTIMA_PESAGEMLEITE,'
  +#13#10'         ULTIMA_PESAGEMLEITE    = :ULTIMA_PESAGEMLEITE,'
  +#13#10'         KPICO_PESAGEMLEITE     = :KPICO_PESAGEMLEITE,'
  +#13#10'         DATA_PICO              = :DATA_PICO,'
  +#13#10'         PRODUCAO_PICO          = :PRODUCAO_PICO,'
  +#13#10'         PRODUCAO_1             = :PRODUCAO_1,'
  +#13#10'         GORDURA_1              = :GORDURA_1,'
  +#13#10'         PROTEINA_1             = :PROTEINA_1,'
  +#13#10'         PRODUCAO_MEDIA         = :PRODUCAO_ACUMULADA,'
  +#13#10'         GORDURA_MEDIA          = :GORDURA_ACUMULADA,'
  +#13#10'         PROTEINA_MEDIA         = :PROTEINA_ACUMULADA,'
  +#13#10'         PRODUCAO_UC            = :PRODUCAO_UC,'
  +#13#10'         GORDURA_UC             = :GORDURA_UC,'
  +#13#10'         PROTEINA_UC            = :PROTEINA_UC,'
  +#13#10'         PRODUCAO_PREVISTA      = :PRODUCAO_PREVISTA,'
  +#13#10'         DEL305                 = :DEL305,'
  +#13#10'         PL305                  = :PL305,'
  +#13#10'         PG305                  = :PG305,'
  +#13#10'         PP305                  = :PP305,'
  +#13#10'         DEL365                 = :DEL365,'
  +#13#10'         PL365                  = :PL365,'
  +#13#10'         PG365                  = :PG365,'
  +#13#10'         PP365                  = :PP365,'
  +#13#10'         EQA_LEITE              = :EQA_LEITE,'
  +#13#10'         EQA_GORDURA            = :EQA_GORDURA,'
  +#13#10'         EQA_PROTEINA           = :EQA_PROTEINA'
  +#13#10'    WHERE'
  +#13#10'         ( KZOO_LACTACAO = :KZOO_LACTACAO )'
  +#13#10'     AND ( NUMERO_ORDENHAS        IS DISTINCT FROM :TOTAL_ORDENHAS'
  +#13#10'         OR MAX_ORDENHAS_DIA       IS DISTINCT FROM :MAX_ORDENHAS_DIA'
  +#13#10'         OR NASCIMENTO             IS DISTINCT FROM :NASCIMENTO'
  +#13#10'         OR KPRIMEIRA_PESAGEMLEITE IS DISTINCT FROM :KPRIMEIRA_PESAGEMLEITE'
  +#13#10'         OR PRIMEIRA_PESAGEMLEITE  IS DISTINCT FROM :PRIMEIRA_PESAGEMLEITE'
  +#13#10'         OR KULTIMA_PESAGEMLEITE   IS DISTINCT FROM :KULTIMA_PESAGEMLEITE'
  +#13#10'         OR ULTIMA_PESAGEMLEITE    IS DISTINCT FROM :ULTIMA_PESAGEMLEITE'
  +#13#10'         OR KPICO_PESAGEMLEITE     IS DISTINCT FROM :KPICO_PESAGEMLEITE'
  +#13#10'         OR DATA_PICO              IS DISTINCT FROM :DATA_PICO'
  +#13#10'         OR PRODUCAO_PICO          IS DISTINCT FROM :PRODUCAO_PICO'
  +#13#10'         OR PRODUCAO_1             IS DISTINCT FROM :PRODUCAO_1'
  +#13#10'         OR GORDURA_1              IS DISTINCT FROM :GORDURA_1'
  +#13#10'         OR PROTEINA_1             IS DISTINCT FROM :PROTEINA_1'
  +#13#10'         OR PRODUCAO_MEDIA         IS DISTINCT FROM :PRODUCAO_ACUMULADA'
  +#13#10'         OR GORDURA_MEDIA          IS DISTINCT FROM :GORDURA_ACUMULADA'
  +#13#10'         OR PROTEINA_MEDIA         IS DISTINCT FROM :PROTEINA_ACUMULADA'
  +#13#10'         OR PRODUCAO_UC            IS DISTINCT FROM :PRODUCAO_UC'
  +#13#10'         OR GORDURA_UC             IS DISTINCT FROM :GORDURA_UC'
  +#13#10'         OR PROTEINA_UC            IS DISTINCT FROM :PROTEINA_UC'
  +#13#10'         OR PRODUCAO_PREVISTA      IS DISTINCT FROM :PRODUCAO_PREVISTA'
  +#13#10'         OR DEL305                 IS DISTINCT FROM :DEL305'
  +#13#10'         OR PL305                  IS DISTINCT FROM :PL305'
  +#13#10'         OR PG305                  IS DISTINCT FROM :PG305'
  +#13#10'         OR PP305                  IS DISTINCT FROM :PP305'
  +#13#10'         OR DEL365                 IS DISTINCT FROM :DEL365'
  +#13#10'         OR PL365                  IS DISTINCT FROM :PL365'
  +#13#10'         OR PG365                  IS DISTINCT FROM :PG365'
  +#13#10'         OR PP365                  IS DISTINCT FROM :PP365'
  +#13#10'         OR EQA_LEITE              IS DISTINCT FROM :EQA_LEITE'
  +#13#10'         OR EQA_GORDURA            IS DISTINCT FROM :EQA_GORDURA'
  +#13#10'         OR EQA_PROTEINA           IS DISTINCT FROM :EQA_PROTEINA ) ;'
  +#13#10''
  +#13#10'    RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLRCL'', NULL ) ;'
  +#13#10''
  +#13#10'    EQA_LEITE    = 0 ;'
  +#13#10'    EQA_GORDURA  = 0 ;'
  +#13#10'    EQA_PROTEINA = 0 ;'
  +#13#10''
  +#13#10'-- removido em 30.11.2012 a pedido de R.S.M.'
  +#13#10'/*    if (( ULTIMA_PESAGEMLEITE IS NOT NULL ) and ( EQA_CHANGED IS NOT NULL )) THEN'
  +#13#10'      begin'
  +#13#10''
  +#13#10'        INSERT'
  +#13#10'        INTO ZOO_PESAGEM_LEITE_EQA'
  +#13#10'        SELECT * FROM TMP_PESAGEM_LEITE_EQA ;'
  +#13#10''
  +#13#10'        SELECT AVG( EQA_LEITE ), AVG( EQA_GORDURA ), AVG( EQA_PROTEINA )'
  +#13#10'        FROM ZOO_PESAGEM_LEITE_EQA'
  +#13#10'        WHERE KCAD_FAZENDA = :KCAD_FAZENDA AND DATA = :ULTIMA_PESAGEMLEITE'
  +#13#10'        INTO EQA_LEITE, EQA_GORDURA, EQA_PROTEINA ;'
  +#13#10''
  +#13#10'        UPDATE OR INSERT'
  +#13#10'        INTO ZOO_PESAGEM_LEITE_EQAMEDIA'
  +#13#10'          ( KCAD_FAZENDA, DATA, EQA_LEITE, EQA_GORDURA, EQA_PROTEINA )'
  +#13#10'        VALUES'
  +#13#10'          ( :KCAD_FAZENDA, :DATAPESAGEM, :EQA_LEITE, :EQA_GORDURA, :EQA_PROTEINA ) ;'
  +#13#10''
  +#13#10'      end'
  +#13#10'*/'
  +#13#10'END' ;

begin
  ExecuteDirect ( _ALTER_PROCEDURE_ZOO_UPDATE_CALCULO_PESAGEM ) ;
end ;

procedure TDBZootecnicoUpdate._5_001_08 ;
const
 _ALTER_TABLE_IMP_CADASTRO_MOTIVO   = 'ALTER TABLE IMP$CADASTRO ALTER MOTIVO TYPE VARCHAR( 5 )'  ;
 _ALTER_TABLE_IMP_CADASTRO_NOME_MAE = 'ALTER TABLE IMP$CADASTRO ALTER NOME_MAE TYPE VARCHAR( 60 )' ;
 _ALTER_TABLE_IMP_CADASTRO_NOME_PAI = 'ALTER TABLE IMP$CADASTRO ALTER NOME_PAI TYPE VARCHAR( 60 )'  ;

 _CREATE_PROCEDURE_DOIMP_IDEAGRI_CADASTRO =
         'CREATE OR ALTER PROCEDURE DOIMP$IDEAGRI_CADASTRO('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    IDEAGRI VARCHAR(1024) COLLATE ISO8859_1,'
  +#13#10'    ACCEPT_NULL_BIRTHDATE SYS$BOOL,'
  +#13#10'    CODIGO_RETIRO SYS$INT,'
  +#13#10'    CODIGO_LOTE SYS$INT)'
  +#13#10'AS'
  +#13#10'declare brinco varchar(10) not null;'
  +#13#10'declare nome_estab varchar(60);'
  +#13#10'declare nome_completo varchar(60);'
  +#13#10'declare registro varchar(15);'
  +#13#10'declare dtnasc date;'
  +#13#10'declare pai varchar(8);'
  +#13#10'declare nome_pai varchar(60);'
  +#13#10'declare registro_pai varchar(15);'
  +#13#10'declare pd_pai varchar(5);'
  +#13#10'declare mae varchar(10);'
  +#13#10'declare nome_mae varchar(60);'
  +#13#10'declare registro_mae varchar(15);'
  +#13#10'declare dtorigem date;'
  +#13#10'declare local_origem varchar(20);'
  +#13#10'declare preco_compra numeric(15, 2);'
  +#13#10'declare dtdesc date;'
  +#13#10'declare razao char(3);'
  +#13#10'declare motivo varchar(5);'
  +#13#10'declare preco_venda numeric(15, 2);'
  +#13#10'declare comprador varchar(40);'
  +#13#10'declare raca char(3);'
  +#13#10'declare gsangue smallint;'
  +#13#10'declare retiro varchar(52);'
  +#13#10'declare lote varchar(52);'
  +#13#10'declare nucleo char(4);'
  +#13#10'declare rebanho varchar(5);'
  +#13#10'declare vaca varchar(8);'
  +#13#10'declare avo_paterno varchar(40);'
  +#13#10'declare reg_avo_paterno varchar(15);'
  +#13#10'declare avo_paterna varchar(40);'
  +#13#10'declare reg_avo_paterna varchar(15);'
  +#13#10'declare avo_materno varchar(40);'
  +#13#10'declare reg_avo_materno varchar(15);'
  +#13#10'declare avo_materna varchar(40);'
  +#13#10'declare reg_avo_materna varchar(15);'
  +#13#10'declare touro1 varchar(8);'
  +#13#10'declare touro2 varchar(8);'
  +#13#10'declare touro3 varchar(8);'
  +#13#10'declare touro4 varchar(8);'
  +#13#10'declare te char(2);'
  +#13#10'declare lote1 char(2);'
  +#13#10'declare data1 date;'
  +#13#10'declare lote2 char(2);'
  +#13#10'declare data2 date;'
  +#13#10'declare lote3 char(2);'
  +#13#10'declare data3 date;'
  +#13#10'declare lote4 char(2);'
  +#13#10'declare data4 date;'
  +#13#10'declare lote5 char(2);'
  +#13#10'declare data5 date;'
  +#13#10'declare lote6 char(2);'
  +#13#10'declare data6 date;'
  +#13#10'declare lote7 char(2);'
  +#13#10'declare data7 date;'
  +#13#10'declare lote8 char(2);'
  +#13#10'declare data8 date;'
  +#13#10'declare status varchar(3) not null;'
  +#13#10'declare criador varchar(40);'
  +#13#10'declare cidcria varchar(25);'
  +#13#10'declare codigo1 char(3);'
  +#13#10'declare codigo2 char(3);'
  +#13#10'declare codigo3 char(3);'
  +#13#10'declare persiste integer;'
  +#13#10'declare potencial integer;'
  +#13#10'declare INTENCAO_DESCARTE char(1);'
  +#13#10'declare SQL_WHERE varchar(100) = '''' ;'
  +#13#10'declare LF_ char;'
  +#13#10'begin'
  +#13#10''
  +#13#10'  LF_ = ASCII_CHAR(10) ;'
  +#13#10'  DELETE FROM IMP$CADASTRO ;'
  +#13#10''
  +#13#10'  if ( CODIGO_RETIRO > -1 ) THEN'
  +#13#10'     SQL_WHERE = SQL_WHERE || '' AND A.CDSETOR = '' || :CODIGO_RETIRO ;'
  +#13#10''
  +#13#10'  if ( ACCEPT_NULL_BIRTHDATE = ''F'' ) THEN'
  +#13#10'     SQL_WHERE = SQL_WHERE || '' AND A.DTNASCIMENTO IS NOT NULL'' ;'
  +#13#10''
  +#13#10'  FOR EXECUTE STATEMENT'
  +#13#10'    (       ''SELECT A.CDANIMAL, (trim(A.NUMERO) || ''''[*]'''' || coalesce('''' '''' || A.NOME, '''''''')), A.NOMECOMPLETO, A.REGASSOCRACA, A.DTNASCIMENTO, '''
  +#13#10'      ||LF_||''P.CDANIMAL,  P.nomecompleto, P.regassocraca, NULL, '''
  +#13#10'      ||LF_||''M.CDANIMAL,  M.nomecompleto, M.regassocraca, '''
  +#13#10'      ||LF_||''NULL, NULL, NULL, '''
  +#13#10'      ||LF_||''A.DTBAIXA, IIF(A.DTBAIXA IS NOT NULL, ''''DES'''', NULL), A.cdmotivobaixa, '''
  +#13#10'      ||LF_||''NULL, NULL, '''
  +#13#10'      ||LF_||''(SELECT FIRST 1'''
  +#13#10'      ||LF_||''  CASE'''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 175 ) THEN ''''PDS'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 290, 300, 340 ) THEN ''''GIR'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 310 ) THEN ''''GHL'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 365 ) THEN ''''HPB'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 385 ) THEN ''''JER'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 635 ) THEN ''''HPV'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 565 ) THEN ''''SIM'''' '''
  +#13#10'      ||LF_||''  ELSE'''
  +#13#10'      ||LF_||''    ''''XX'''' '''
  +#13#10'      ||LF_||''  END'''
  +#13#10'      ||LF_||''FROM ANIMALRACA AR'''
  +#13#10'      ||LF_||''WHERE AR.CDANIMALRACA = A.CDANIMAL'''
  +#13#10'      ||LF_||''ORDER BY AR.PERCENTUAL DESC'''
  +#13#10'      ||LF_||'') RACA, '''
  +#13#10'      ||LF_||''CASE '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (1, 2, 3, 4) THEN ''''8'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (5, 6, 7, 8) THEN ''''1'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (9, 10, 11, 12) THEN ''''2'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (13, 14, 15, 16) THEN ''''3'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (17, 18, 19, 20) THEN ''''4'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (21, 22, 23, 24) THEN ''''5'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento > 24 THEN ''''5'''' '''
  +#13#10'      ||LF_||''END, '''
  +#13#10'      ||LF_||''SETOR.NOME, LOTE.DESCRICAO,'''
  +#13#10'      ||LF_||''NULL, NULL, NULL,'''
  +#13#10'      ||LF_||''NULL, NULL, NULL, NULL,'''
  +#13#10'      ||LF_||''NULL, NULL, NULL, NULL,'''
  +#13#10'      ||LF_||''NULL, NULL, NULL, NULL,'''
  +#13#10'      ||LF_||''CASE (SELECT AP.TIPO FROM ANIMALPERIODO AP WHERE AP.CDANIMAL = A.CDANIMAL AND AP.TIPO IN (1, 2) AND AP.DATAFIM IS NULL ROWS 1)'''
  +#13#10'      ||LF_||''WHEN 1 THEN ''''TE'''''''
  +#13#10'      ||LF_||''WHEN 2 THEN ''''RE'''''''
  +#13#10'      ||LF_||''END TE,'''
  +#13#10'      ||LF_||''(SELECT ''''T'''' FROM ANIMALPERIODO AP WHERE AP.CDANIMAL = A.CDANIMAL AND AP.TIPO = 3 AND AP.DATAFIM IS NULL ROWS 1) INTENCAO_DESCARTE,'''
  +#13#10'      ||LF_||''NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,'''
  +#13#10'      ||LF_||''NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,'''
  +#13#10'      ||LF_||''CASE'''
  +#13#10'      ||LF_||''    WHEN A.cdcategoria = 1 THEN ''''BEZ'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdcategoria = 6 THEN ''''NOV'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdcategoria = 7 AND A.matrizseca = 0 THEN ''''VL'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdcategoria = 7 AND A.matrizseca = 1 THEN ''''VS'''' '''
  +#13#10'      ||LF_||''    ELSE IIF( A.DTBAIXA IS NULL,  ''''BEZ'''', ''''DES'''' )'''
  +#13#10'      ||LF_||''END,'''
  +#13#10'      ||LF_||''NULL, NULL,'''
  +#13#10'      ||LF_||''NULL, NULL, NULL,'''
  +#13#10'      ||LF_||''NULL, NULL'''
  +#13#10'      ||LF_||''FROM ANIMAL A'''
  +#13#10'      ||LF_||''LEFT JOIN ANIMAL P ON P.cdanimal = A.cdpai '''
  +#13#10'      ||LF_||''LEFT JOIN ANIMAL M ON M.cdanimal = A.cdmae '''
  +#13#10'      ||LF_||''LEFT JOIN SETOR  SETOR ON SETOR.CDSETOR = A.CDSETOR '''
  +#13#10'      ||LF_||''LEFT JOIN SP_GRUPOANIMALESPECIFICO( CURRENT_DATE, '' || COALESCE( :CODIGO_LOTE, -1 ) || '', A.CDANIMAL ) LOTE ON 1=1 '''
  +#13#10'      ||LF_||''WHERE A.SEXO = ''''F'''' AND A.ANIMALREBANHO = 1'' || SQL_WHERE'
  +#13#10'    )'
  +#13#10'  ON EXTERNAL DATA SOURCE :IDEAGRI'
  +#13#10'  WITH COMMON TRANSACTION'
  +#13#10'  INTO'
  +#13#10'     :BRINCO, :NOME_ESTAB, :NOME_COMPLETO, :REGISTRO, :DTNASC, :PAI, :NOME_PAI, :REGISTRO_PAI,'
  +#13#10'     :PD_PAI, :MAE, :NOME_MAE, :REGISTRO_MAE, :DTORIGEM, :LOCAL_ORIGEM, :PRECO_COMPRA, :DTDESC, :RAZAO,'
  +#13#10'     :MOTIVO, :PRECO_VENDA, :COMPRADOR, :RACA, :GSANGUE,'
  +#13#10'     :RETIRO, :LOTE,'
  +#13#10'     :NUCLEO, :REBANHO, :VACA,'
  +#13#10'     :AVO_PATERNO, :REG_AVO_PATERNO, :AVO_PATERNA, :REG_AVO_PATERNA,'
  +#13#10'     :AVO_MATERNO, :REG_AVO_MATERNO, :AVO_MATERNA, :REG_AVO_MATERNA,'
  +#13#10'     :TOURO1, :TOURO2, :TOURO3, :TOURO4,'
  +#13#10'     :TE,'
  +#13#10'     :INTENCAO_DESCARTE,'
  +#13#10'     :LOTE1, :DATA1, :LOTE2, :DATA2, :LOTE3, :DATA3, :LOTE4, :DATA4,'
  +#13#10'     :LOTE5, :DATA5, :LOTE6, :DATA6, :LOTE7, :DATA7, :LOTE8, :DATA8,'
  +#13#10'     :STATUS,'
  +#13#10'     :CRIADOR, :CIDCRIA,'
  +#13#10'     :CODIGO1, :CODIGO2, :CODIGO3, :PERSISTE, :POTENCIAL'
  +#13#10'  DO'
  +#13#10'  begin'
  +#13#10''
  +#13#10'  -- SELECT first 1 COMPOSICAO from doimp$ideagri_raca(:RACA) into :RACA;'
  +#13#10''
  +#13#10'   INSERT INTO IMP$CADASTRO'
  +#13#10'     ('
  +#13#10'       BRINCO, NOME_ESTAB, NOME_COMPLETO, REGISTRO, DTNASC, PAI, NOME_PAI, REGISTRO_PAI,'
  +#13#10'       PD_PAI, MAE, NOME_MAE, REGISTRO_MAE, DTORIGEM, LOCAL_ORIGEM, PRECO_COMPRA, DTDESC, RAZAO,'
  +#13#10'       MOTIVO, PRECO_VENDA, COMPRADOR, RACA, GSANGUE,'
  +#13#10'       RETIRO, LOTE,'
  +#13#10'       NUCLEO, REBANHO, VACA,'
  +#13#10'       AVO_PATERNO, REG_AVO_PATERNO, AVO_PATERNA, REG_AVO_PATERNA,'
  +#13#10'       AVO_MATERNO, REG_AVO_MATERNO, AVO_MATERNA, REG_AVO_MATERNA,'
  +#13#10'       TOURO1, TOURO2, TOURO3, TOURO4,'
  +#13#10'       TE,'
  +#13#10'       INTENCAO_DESCARTE,'
  +#13#10'       LOTE1, DATA1, LOTE2, DATA2, LOTE3, DATA3, LOTE4, DATA4,'
  +#13#10'       LOTE5, DATA5, LOTE6, DATA6, LOTE7, DATA7, LOTE8, DATA8,'
  +#13#10'       STATUS,'
  +#13#10'       CRIADOR, CIDCRIA,'
  +#13#10'       CODIGO1, CODIGO2, CODIGO3,'
  +#13#10'       PERSISTE, POTENCIAL'
  +#13#10'     )'
  +#13#10'   VALUES'
  +#13#10'     ('
  +#13#10'      :BRINCO, :NOME_ESTAB, :NOME_COMPLETO, :REGISTRO, :DTNASC, :PAI, :NOME_PAI, :REGISTRO_PAI,'
  +#13#10'      :PD_PAI, :MAE, :NOME_MAE, :REGISTRO_MAE, :DTORIGEM, :LOCAL_ORIGEM, :PRECO_COMPRA, :DTDESC, :RAZAO,'
  +#13#10'      :MOTIVO, :PRECO_VENDA, :COMPRADOR, :RACA, :GSANGUE,'
  +#13#10'      SUBSTRING ( :RETIRO FROM 1 FOR 32 ), SUBSTRING ( :LOTE FROM 1 FOR 32 ),'
  +#13#10'      :NUCLEO, :REBANHO, :VACA,'
  +#13#10'      :AVO_PATERNO, :REG_AVO_PATERNO, :AVO_PATERNA, :REG_AVO_PATERNA, :AVO_MATERNO, :REG_AVO_MATERNO,'
  +#13#10'      :AVO_MATERNA, :REG_AVO_MATERNA, :TOURO1, :TOURO2, :TOURO3, :TOURO4,'
  +#13#10'      :TE,'
  +#13#10'      :INTENCAO_DESCARTE,'
  +#13#10'      :LOTE1, :DATA1, :LOTE2, :DATA2, :LOTE3, :DATA3, :LOTE4, :DATA4,'
  +#13#10'      :LOTE5, :DATA5, :LOTE6, :DATA6, :LOTE7, :DATA7, :LOTE8, :DATA8,'
  +#13#10'      :STATUS,'
  +#13#10'      :CRIADOR, :CIDCRIA,'
  +#13#10'      :CODIGO1, :CODIGO2, :CODIGO3,'
  +#13#10'      :PERSISTE, :POTENCIAL'
  +#13#10'     ) ;'
  +#13#10'   end'
  +#13#10'end' ;

 _ALTER_TABLE_IMP_CADTOURO_MOTIVO   = 'ALTER TABLE IMP$CADTOURO ALTER MOTIVO TYPE VARCHAR( 5 )'  ;
 _ALTER_TABLE_IMP_CADTOURO_NOME_MAE = 'ALTER TABLE IMP$CADTOURO ALTER NOME_MAE TYPE VARCHAR( 60 )' ;
 _ALTER_TABLE_IMP_CADTOURO_NOME_PAI = 'ALTER TABLE IMP$CADTOURO ALTER NOME_PAI TYPE VARCHAR( 60 )'  ;


 _CREATE_PROCEDURE_DOIMP_IDEAGRI_CADTOURO =
         'CREATE OR ALTER PROCEDURE DOIMP$IDEAGRI_CADTOURO('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    IDEAGRI VARCHAR(1024) COLLATE ISO8859_1)'
  +#13#10'AS'
  +#13#10'declare codigo varchar(8) not null;'
  +#13#10'declare nome_estab varchar(60);'
  +#13#10'declare nome_completo varchar(60);'
  +#13#10'declare registro varchar(15);'
  +#13#10'declare dtnasc date;'
  +#13#10'declare pai varchar(8);'
  +#13#10'declare nome_pai varchar(60);'
  +#13#10'declare registro_pai varchar(15);'
  +#13#10'declare mae varchar(10);'
  +#13#10'declare nome_mae varchar(60);'
  +#13#10'declare registro_mae varchar(15);'
  +#13#10'declare leite integer;'
  +#13#10'declare tipo numeric(15,2);'
  +#13#10'declare ubere numeric(15,2);'
  +#13#10'declare pernape numeric(15,2);'
  +#13#10'declare parto integer;'
  +#13#10'declare qestoque integer;'
  +#13#10'declare qusada smallint;'
  +#13#10'declare concepcao integer;'
  +#13#10'declare valor numeric(15,2);'
  +#13#10'declare status char(1) not null;'
  +#13#10'declare gsangue smallint;'
  +#13#10'declare raca char(3);'
  +#13#10'declare retiro char(2);'
  +#13#10'declare lote char(2);'
  +#13#10'declare bojao smallint;'
  +#13#10'declare caneca smallint;'
  +#13#10'declare hack varchar(10);'
  +#13#10'declare dtdesc date;'
  +#13#10'declare razao char(3);'
  +#13#10'declare motivo varchar(5);'
  +#13#10'declare preco_venda numeric(15,2);'
  +#13#10'declare comprador varchar(40);'
  +#13#10'declare avo_paterno varchar(40);'
  +#13#10'declare reg_avo_paterno varchar(15);'
  +#13#10'declare avo_paterna varchar(40);'
  +#13#10'declare reg_avo_paterna varchar(15);'
  +#13#10'declare avo_materno varchar(40);'
  +#13#10'declare reg_avo_materno varchar(15);'
  +#13#10'declare avo_materna varchar(40);'
  +#13#10'declare reg_avo_materna varchar(15);'
  +#13#10'declare LF_ char;'
  +#13#10'begin'
  +#13#10''
  +#13#10' LF_ = ASCII_CHAR(10) ;'
  +#13#10' DELETE FROM IMP$CADTOURO ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   ('
  +#13#10'           ''SELECT A.CDANIMAL, (TRIM(A.NUMERO) || ''''[*]'''' || coalesce('''' '''' || A.NOME, '''''''')), A.NOMECOMPLETO, A.REGASSOCRACA, A.DTNASCIMENTO, '''
  +#13#10'   ||LF_||''P.CDANIMAL,  P.nomecompleto, P.regassocraca, '''
  +#13#10'   ||LF_||''M.CDANIMAL,  M.nomecompleto, M.regassocraca, '''
  +#13#10'   ||LF_||''NULL, NULL, NULL, NULL, NULL, 0, 0, NULL, NULL, '''
  +#13#10'   ||LF_||''CASE '''
  +#13#10'   ||LF_||''    WHEN A.sexo is null THEN ''''I'''' '''
  +#13#10'   ||LF_||''    WHEN A.cdcategoria = 1 THEN ''''B'''' '''
  +#13#10'   ||LF_||''    WHEN A.cdcategoria = 2 THEN ''''M'''' '''
  +#13#10'   ||LF_||''    WHEN A.cdcategoria = 3 THEN ''''M'''' '''
  +#13#10'   ||LF_||''    WHEN A.cdcategoria = 4 THEN ''''M'''' '''
  +#13#10'   ||LF_||''    ELSE ''''M'''''''
  +#13#10'   ||LF_||''END, '''
  +#13#10'   ||LF_||''CASE '''
  +#13#10'   ||LF_||''    WHEN A.cdgraucruzamento IN (1,2,3,4) THEN ''''8'''' '''
  +#13#10'   ||LF_||''    WHEN A.cdgraucruzamento IN (5,6,7,8) THEN ''''1'''' '''
  +#13#10'   ||LF_||''    WHEN A.cdgraucruzamento IN (9,10,11,12) THEN ''''2'''' '''
  +#13#10'   ||LF_||''    WHEN A.cdgraucruzamento IN (13,14,15,16) THEN ''''3'''' '''
  +#13#10'   ||LF_||''    WHEN A.cdgraucruzamento IN (17,18,19,20) THEN ''''4'''' '''
  +#13#10'   ||LF_||''    WHEN A.cdgraucruzamento IN (21,22,23,24) THEN ''''5'''' '''
  +#13#10'   ||LF_||''    WHEN A.cdgraucruzamento > 24 THEN ''''5'''' '''
  +#13#10'   ||LF_||''END, '''
  +#13#10'   ||LF_||''(SELECT FIRST 1'''
  +#13#10'   ||LF_||''  CASE'''
  +#13#10'   ||LF_||''    WHEN AR.CDRACA IN ( 175 ) THEN ''''PDS'''' '''
  +#13#10'   ||LF_||''    WHEN AR.CDRACA IN ( 290, 300, 340 ) THEN ''''GIR'''' '''
  +#13#10'   ||LF_||''    WHEN AR.CDRACA IN ( 310 ) THEN ''''GHL'''' '''
  +#13#10'   ||LF_||''    WHEN AR.CDRACA IN ( 365 ) THEN ''''HPB'''' '''
  +#13#10'   ||LF_||''    WHEN AR.CDRACA IN ( 385 ) THEN ''''JER'''' '''
  +#13#10'   ||LF_||''    WHEN AR.CDRACA IN ( 635 ) THEN ''''HPV'''' '''
  +#13#10'   ||LF_||''    WHEN AR.CDRACA IN ( 565 ) THEN ''''SIM'''' '''
  +#13#10'   ||LF_||''  ELSE'''
  +#13#10'   ||LF_||''    ''''XX'''' '''
  +#13#10'   ||LF_||''  END'''
  +#13#10'   ||LF_||''FROM ANIMALRACA AR'''
  +#13#10'   ||LF_||''WHERE AR.CDANIMALRACA = A.CDANIMAL'''
  +#13#10'   ||LF_||''ORDER BY AR.PERCENTUAL DESC'''
  +#13#10'   ||LF_||'') RACA, '''
  +#13#10'   ||LF_||''A.animalrebanho, NULL, NULL, NULL, NULL, '''
  +#13#10'   ||LF_||''A.DTBAIXA, IIF(A.DTBAIXA IS NOT NULL, ''''DES'''', NULL), A.cdmotivobaixa, '''
  +#13#10'   ||LF_||''NULL,NULL,NULL,NULL, NULL,NULL,NULL,NULL,NULL,NULL '''
  +#13#10'   ||LF_||''FROM ANIMAL A '''
  +#13#10'   ||LF_||''LEFT JOIN ANIMAL P ON P.cdanimal = A.cdpai '''
  +#13#10'   ||LF_||''LEFT JOIN ANIMAL M ON M.cdanimal = A.cdmae '''
  +#13#10'   ||LF_||''WHERE (A.SEXO = ''''M'''') or (A.TIPOANIMAL IS DISTINCT FROM ''''A'''')'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :IDEAGRI'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'    :CODIGO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,:MAE,:NOME_MAE,'
  +#13#10'    :REGISTRO_MAE,:LEITE,:TIPO,:UBERE,:PERNAPE,:PARTO,:QESTOQUE,:QUSADA,:CONCEPCAO,:VALOR,:STATUS,:GSANGUE,'
  +#13#10'    :RACA,:RETIRO,:LOTE,:BOJAO,:CANECA,:HACK,:DTDESC,:RAZAO,:MOTIVO,:PRECO_VENDA,:COMPRADOR,:AVO_PATERNO,'
  +#13#10'    :REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,:AVO_MATERNA,:REG_AVO_MATERNA'
  +#13#10'  DO'
  +#13#10'  begin'
  +#13#10''
  +#13#10'--     SELECT first 1 COMPOSICAO from doimp$ideagri_raca(:RACA) into :RACA;'
  +#13#10''
  +#13#10'    INSERT INTO IMP$CADTOURO'
  +#13#10'     ('
  +#13#10'       CODIGO,NOME_ESTAB,NOME_COMPLETO,REGISTRO,DTNASC,PAI,NOME_PAI,REGISTRO_PAI,MAE,NOME_MAE,'
  +#13#10'       REGISTRO_MAE,LEITE,TIPO,UBERE,PERNAPE,PARTO,QESTOQUE,QUSADA,CONCEPCAO,VALOR,STATUS,GSANGUE,'
  +#13#10'       RACA,RETIRO,LOTE,BOJAO,CANECA,HACK,DTDESC,RAZAO,MOTIVO,PRECO_VENDA,COMPRADOR,AVO_PATERNO,'
  +#13#10'       REG_AVO_PATERNO,AVO_PATERNA,REG_AVO_PATERNA,AVO_MATERNO,REG_AVO_MATERNO,AVO_MATERNA,REG_AVO_MATERNA'
  +#13#10'     )'
  +#13#10'    VALUES'
  +#13#10'    ('
  +#13#10'      :CODIGO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,:MAE,:NOME_MAE,'
  +#13#10'      :REGISTRO_MAE,:LEITE,:TIPO,:UBERE,:PERNAPE,:PARTO,:QESTOQUE,:QUSADA,:CONCEPCAO,:VALOR,:STATUS,:GSANGUE,'
  +#13#10'      :RACA,:RETIRO,:LOTE,:BOJAO,:CANECA,:HACK,:DTDESC,:RAZAO,:MOTIVO,:PRECO_VENDA,:COMPRADOR,:AVO_PATERNO,'
  +#13#10'      :REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,:AVO_MATERNA,:REG_AVO_MATERNA'
  +#13#10'    ) ;'
  +#13#10'  end'
  +#13#10'end' ;

begin
 TryExecuteDirect ( _ALTER_TABLE_IMP_CADASTRO_MOTIVO   ) ;
 TryExecuteDirect ( _ALTER_TABLE_IMP_CADASTRO_NOME_MAE ) ;
 TryExecuteDirect ( _ALTER_TABLE_IMP_CADASTRO_NOME_PAI ) ;

 TryExecuteDirect ( _ALTER_TABLE_IMP_CADTOURO_MOTIVO   ) ;
 TryExecuteDirect ( _ALTER_TABLE_IMP_CADTOURO_NOME_MAE ) ;
 TryExecuteDirect ( _ALTER_TABLE_IMP_CADTOURO_NOME_PAI ) ;

 ExecuteDirect    ( _CREATE_PROCEDURE_DOIMP_IDEAGRI_CADASTRO ) ;
 ExecuteDirect    ( _CREATE_PROCEDURE_DOIMP_IDEAGRI_CADTOURO ) ;
end;

procedure TDBZootecnicoUpdate._5_001_07 ;
const
  _CREATE_GLOBAL_TEMPORARY_TABLE_TMP_ENTIDADES =
         'CREATE GLOBAL TEMPORARY TABLE TMP$ENTIDADES ('
  +#13#10'    KCAD_ENTIDADE  SYS$PKGUID20 NOT NULL /* SYS$PKGUID20 = CHAR(20) NOT NULL */,'
  +#13#10'    CODIGO         SYS$CODE /* SYS$CODE = VARCHAR(32) */,'
  +#13#10'    APELIDO        SYS$DESCR_NN /* SYS$DESCR_NN = VARCHAR(128) NOT NULL */,'
  +#13#10'    NOME           SYS$DESCR_NN /* SYS$DESCR_NN = VARCHAR(128) NOT NULL */,'
  +#13#10'    SYS$UI         SYS$USERLOGIN /* SYS$USERLOGIN = VARCHAR(32) */,'
  +#13#10'    SYS$DI         SYS$DATE /* SYS$DATE = TIMESTAMP */,'
  +#13#10'    SYS$UU         SYS$USERLOGIN /* SYS$USERLOGIN = VARCHAR(32) */,'
  +#13#10'    SYS$DU         SYS$DATE /* SYS$DATE = TIMESTAMP */'
  +#13#10') ON COMMIT DELETE ROWS ;' ;

  _CREATE_PROCEDURE_SYS_INIT_ENTIDADES =
         'CREATE OR ALTER PROCEDURE SYS$INIT_ENTIDADES'
  +#13#10'AS'
  +#13#10'DECLARE SOURCE_KCAD_ENTIDADE  SYS$FKGUID20;'
  +#13#10'DECLARE SOURCE_CODIGO         SYS$CODE;'
  +#13#10'DECLARE SOURCE_NOME           SYS$DESCR;'
  +#13#10'DECLARE SOURCE_APELIDO        SYS$DESCR;'
  +#13#10'DECLARE SOURCE_SYS$UI         SYS$USERLOGIN;'
  +#13#10'DECLARE SOURCE_SYS$DI         SYS$DATE;'
  +#13#10'DECLARE SOURCE_SYS$UU         SYS$USERLOGIN;'
  +#13#10'DECLARE SOURCE_SYS$DU         SYS$DATE ;'
  +#13#10''
  +#13#10'DECLARE TARGET_KCAD_ENTIDADE  SYS$FKGUID20;'
  +#13#10'DECLARE TARGET_CODIGO         SYS$CODE;'
  +#13#10'DECLARE TARGET_NOME           SYS$DESCR;'
  +#13#10'DECLARE TARGET_APELIDO        SYS$DESCR;'
  +#13#10''
  +#13#10'DECLARE PATH VARCHAR( 256 );'
  +#13#10'DECLARE RLOG$OFF VARCHAR( 1 ) ;'
  +#13#10''
  +#13#10'DECLARE RC_SOURCE INTEGER ;'
  +#13#10'DECLARE RC_TARGET INTEGER ;'
  +#13#10''
  +#13#10'DECLARE SOURCE CURSOR'
  +#13#10'   FOR ( SELECT KCAD_ENTIDADE, CODIGO, NOME, APELIDO /*, SYS$UI, SYS$DI, SYS$UU, SYS$DU */'
  +#13#10'         FROM TMP$ENTIDADES'
  +#13#10'         ORDER BY KCAD_ENTIDADE );'
  +#13#10'DECLARE TARGET CURSOR'
  +#13#10'   FOR ( SELECT KCAD_ENTIDADE, CODIGO, NOME, APELIDO'
  +#13#10'         FROM CAD_ENTIDADES'
  +#13#10'         ORDER BY KCAD_ENTIDADE );'
  +#13#10'BEGIN'
  +#13#10''
  +#13#10'  PATH = SU$CHANGEFILEEXT ( RDB$GET_CONTEXT( ''SYSTEM'', ''DB_NAME'' ), ''.ENT'' ) ;'
  +#13#10''
  +#13#10'  if ( SU$FILEEXISTS( PATH ) IS DISTINCT FROM 1 ) then'
  +#13#10'    exit ;'
  +#13#10''
  +#13#10'  RLOG$OFF = RDB$GET_CONTEXT( ''USER_TRANSACTION'', ''RLOG$OFF'' ) ;'
  +#13#10'  RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''RLOG$OFF'', ''1''  ) ;'
  +#13#10''
  +#13#10'  FOR EXECUTE STATEMENT ('
  +#13#10'       ''SELECT'''
  +#13#10'    || '' KCAD_ENTIDADE, CODIGO, NOME, APELIDO, SYS$UI, SYS$DI, SYS$UU, SYS$DU'''
  +#13#10'    || '' FROM CAD_ENTIDADES'''
  +#13#10'    ) ON EXTERNAL DATA SOURCE PATH'
  +#13#10'    WITH COMMON TRANSACTION'
  +#13#10'    INTO SOURCE_KCAD_ENTIDADE, SOURCE_CODIGO, SOURCE_NOME, SOURCE_APELIDO, SOURCE_SYS$UI, SOURCE_SYS$DI, SOURCE_SYS$UU, SOURCE_SYS$DU'
  +#13#10'  DO'
  +#13#10'     INSERT INTO TMP$ENTIDADES ( KCAD_ENTIDADE, CODIGO, NOME, APELIDO, SYS$UI, SYS$DI, SYS$UU, SYS$DU)'
  +#13#10'     VALUES ( :SOURCE_KCAD_ENTIDADE, :SOURCE_CODIGO, :SOURCE_NOME, :SOURCE_APELIDO, :SOURCE_SYS$UI, :SOURCE_SYS$DI, :SOURCE_SYS$UU, :SOURCE_SYS$DU ) ;'
  +#13#10''
  +#13#10'  OPEN SOURCE ;'
  +#13#10'  FETCH SOURCE'
  +#13#10'  INTO SOURCE_KCAD_ENTIDADE, SOURCE_CODIGO, SOURCE_NOME, SOURCE_APELIDO /*, SOURCE_SYS$UI, SOURCE_SYS$DI, SOURCE_SYS$UU, SOURCE_SYS$DU*/ ;'
  +#13#10'  RC_SOURCE = ROW_COUNT ;'
  +#13#10''
  +#13#10'  OPEN TARGET ;'
  +#13#10'  FETCH TARGET'
  +#13#10'  INTO TARGET_KCAD_ENTIDADE, TARGET_CODIGO, TARGET_NOME, TARGET_APELIDO ;'
  +#13#10'  RC_TARGET = ROW_COUNT ;'
  +#13#10''
  +#13#10'  WHILE (( RC_SOURCE <> 0 ) AND ( RC_TARGET <> 0 )) DO'
  +#13#10'    BEGIN'
  +#13#10''
  +#13#10'      IF ( ( RC_SOURCE = 0 ) OR ( RC_TARGET = 0 )) THEN'
  +#13#10'        LEAVE ;'
  +#13#10''
  +#13#10'       IF ( SOURCE_KCAD_ENTIDADE = TARGET_KCAD_ENTIDADE ) THEN'
  +#13#10'        BEGIN'
  +#13#10''
  +#13#10'          --update target'
  +#13#10'          if ( ( TARGET_CODIGO    IS DISTINCT FROM SOURCE_CODIGO   )'
  +#13#10'            OR ( TARGET_NOME      IS DISTINCT FROM SOURCE_NOME     )'
  +#13#10'            OR ( TARGET_APELIDO  IS DISTINCT FROM SOURCE_APELIDO   )  ) then'
  +#13#10'              UPDATE CAD_ENTIDADES'
  +#13#10'                SET'
  +#13#10'                  CODIGO    = :SOURCE_CODIGO'
  +#13#10'                 , NOME      = :SOURCE_NOME'
  +#13#10'                 , APELIDO   = :SOURCE_APELIDO'
  +#13#10'              -- , SYS$UI    = :SOURCE_SYS$UI'
  +#13#10'              -- , SYS$DI    = :SOURCE_SYS$DI'
  +#13#10'              -- , SYS$UU    = :SOURCE_SYS$UU'
  +#13#10'              -- , SYS$DU    = :SOURCE_SYS$DU'
  +#13#10'              WHERE CURRENT OF TARGET ;'
  +#13#10'          -- next source'
  +#13#10'          FETCH SOURCE INTO SOURCE_KCAD_ENTIDADE, SOURCE_CODIGO, SOURCE_NOME, SOURCE_APELIDO /*, SOURCE_SYS$UI, SOURCE_SYS$DI, SOURCE_SYS$UU, SOURCE_SYS$DU */ ;'
  +#13#10'          RC_SOURCE = ROW_COUNT ;'
  +#13#10'          -- next target'
  +#13#10'          FETCH TARGET INTO TARGET_KCAD_ENTIDADE, TARGET_CODIGO, TARGET_NOME, TARGET_APELIDO ;'
  +#13#10'          RC_TARGET = ROW_COUNT ;'
  +#13#10'        END'
  +#13#10'       ELSE IF ( SOURCE_KCAD_ENTIDADE > TARGET_KCAD_ENTIDADE ) THEN'
  +#13#10'        BEGIN'
  +#13#10'          -- delete target'
  +#13#10'          DELETE FROM CAD_ENTIDADES WHERE CURRENT OF TARGET ;'
  +#13#10'          -- next target'
  +#13#10'          FETCH TARGET INTO TARGET_KCAD_ENTIDADE, TARGET_CODIGO, TARGET_NOME, TARGET_APELIDO ;'
  +#13#10'          RC_TARGET = ROW_COUNT ;'
  +#13#10'        END'
  +#13#10'       ELSE'
  +#13#10'          BEGIN'
  +#13#10'            -- insert into target'
  +#13#10'            INSERT INTO CAD_ENTIDADES'
  +#13#10'             ( KCAD_ENTIDADE, CODIGO, NOME, APELIDO /*, SYS$UI, SYS$DI, SYS$UU, SYS$DU */ )'
  +#13#10'            VALUES'
  +#13#10'            ( :SOURCE_KCAD_ENTIDADE, :SOURCE_CODIGO, :SOURCE_NOME, :SOURCE_APELIDO /*, :SOURCE_SYS$UI, :SOURCE_SYS$DI, :SOURCE_SYS$UU, :SOURCE_SYS$DU */ ) ;'
  +#13#10'            -- next source'
  +#13#10'            FETCH SOURCE INTO SOURCE_KCAD_ENTIDADE, SOURCE_CODIGO, SOURCE_NOME, SOURCE_APELIDO /* , SOURCE_SYS$UI, SOURCE_SYS$DI, SOURCE_SYS$UU, SOURCE_SYS$DU*/ ;'
  +#13#10'            RC_SOURCE = ROW_COUNT ;'
  +#13#10'          END'
  +#13#10'    END'
  +#13#10''
  +#13#10'  WHILE ( RC_SOURCE <> 0 ) DO'
  +#13#10'    BEGIN'
  +#13#10'      -- insert target'
  +#13#10'      INSERT INTO CAD_ENTIDADES'
  +#13#10'        ( KCAD_ENTIDADE, CODIGO, NOME, APELIDO /*, SYS$UI, SYS$DI, SYS$UU, SYS$DU */ )'
  +#13#10'      VALUES'
  +#13#10'        ( :SOURCE_KCAD_ENTIDADE, :SOURCE_CODIGO, :SOURCE_NOME, :SOURCE_APELIDO /*, :SOURCE_SYS$UI, :SOURCE_SYS$DI, :SOURCE_SYS$UU, :SOURCE_SYS$DU */ ) ;'
  +#13#10'      -- next source'
  +#13#10'      FETCH SOURCE INTO SOURCE_KCAD_ENTIDADE, SOURCE_CODIGO, SOURCE_NOME, SOURCE_APELIDO /*, SOURCE_SYS$UI, SOURCE_SYS$DI, SOURCE_SYS$UU, SOURCE_SYS$DU */ ;'
  +#13#10'      RC_SOURCE = ROW_COUNT ;'
  +#13#10'    END'
  +#13#10''
  +#13#10'  WHILE ( RC_TARGET <> 0 ) DO'
  +#13#10'    BEGIN'
  +#13#10'       -- delete target'
  +#13#10'       DELETE FROM CAD_ENTIDADES WHERE CURRENT OF TARGET ;'
  +#13#10'       -- next target'
  +#13#10'       FETCH TARGET INTO TARGET_KCAD_ENTIDADE, TARGET_CODIGO, TARGET_NOME, TARGET_APELIDO ;'
  +#13#10'       RC_TARGET = ROW_COUNT ;'
  +#13#10'    END'
  +#13#10''
  +#13#10'  RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''RLOG$OFF'', RLOG$OFF ) ;'
  +#13#10''
  +#13#10'END' ;

  _EXECUTE_PROCEDURE_SYS_INIT_ENTIDADES =
     'EXECUTE PROCEDURE SYS$INIT_ENTIDADES' ;

  _CREATE_PROCEDURE_SYS_INIT_CATEGORIAS =
         'CREATE OR ALTER PROCEDURE SYS$INIT_CATEGORIAS('
  +#13#10'    PKCAD_FAZENDA TYPE OF SYS$FKGUID20_NN)'
  +#13#10'AS'
  +#13#10'declare variable vkdef_cfgcategoria type of sys$fkGUID20_nn;'
  +#13#10'declare variable vdescricao type of sys$descr_nn;'
  +#13#10'declare variable vidade_inferior type of sys$int;'
  +#13#10'declare variable vidade_superior type of sys$int;'
  +#13#10'declare variable vstatus type of sys$int;'
  +#13#10'declare variable vdel_inferior type of sys$int;'
  +#13#10'declare variable vdel_superior type of sys$int;'
  +#13#10'declare variable vnl_inferior type of sys$int;'
  +#13#10'declare variable vnl_superior type of sys$int;'
  +#13#10'declare variable vativo type of sys$bool_t;'
  +#13#10'declare variable vinternal type of sys$bool_f;'
  +#13#10'declare variable vvalor type of sys$float;'
  +#13#10'declare SYS$DU type of SYS$DATE ;'
  +#13#10'declare PATH VARCHAR( 256 );'
  +#13#10'begin'
  +#13#10''
  +#13#10''
  +#13#10'  PATH = SU$EXTRACTFILEPATH ( RDB$GET_CONTEXT( ''SYSTEM'', ''DB_NAME'' ) ) ;'
  +#13#10'  PATH = SU$EXTRACTFILEPATH ( SUBSTRING ( PATH FROM 1 FOR char_length( PATH )- 1 ) ) ;'
  +#13#10'  PATH = SU$EXTRACTFILEPATH ( SUBSTRING ( PATH FROM 1 FOR char_length( PATH )- 1 ) ) ;'
  +#13#10''
  +#13#10'  if ( SU$FILEEXISTS( PATH || ''CLAG5.DB'' ) <> 1) then'
  +#13#10'    exit ;'
  +#13#10''
  +#13#10'  IF ( EXISTS( SELECT 1 FROM ZOO_CFGCATEGORIAS WHERE KCAD_FAZENDA = :pKCAD_FAZENDA ROWS 1 ) ) THEN'
  +#13#10'     EXIT ;'
  +#13#10''
  +#13#10'  FOR EXECUTE STATEMENT ('
  +#13#10'        ''SELECT '''
  +#13#10'      ||'' KDEF_CFGCATEGORIA, DESCRICAO, IDADE_INFERIOR, IDADE_SUPERIOR, STATUS, '''
  +#13#10'      ||'' DEL_INFERIOR, DEL_SUPERIOR, NL_INFERIOR, NL_SUPERIOR, VALOR,  ATIVO, INTERNAL, SYS$DU '''
  +#13#10'      ||''FROM DEF_CFGCATEGORIAS'''
  +#13#10'      ) ON EXTERNAL DATA SOURCE PATH || ''CLAG5.DB'''
  +#13#10'      WITH COMMON TRANSACTION'
  +#13#10'      INTO vKDEF_CFGCATEGORIA, vDESCRICAO, vIDADE_INFERIOR, vIDADE_SUPERIOR, vSTATUS, vDEL_INFERIOR, vDEL_SUPERIOR, vNL_INFERIOR, vNL_SUPERIOR, vVALOR, vATIVO, vINTERNAL, SYS$DU'
  +#13#10'  DO'
  +#13#10'     IF ( EXISTS (SELECT 1 FROM ZOO_CFGCATEGORIAS WHERE KCAD_FAZENDA = :pKCAD_FAZENDA AND KDEF_CFGCATEGORIA = :vKDEF_CFGCATEGORIA ) ) THEN'
  +#13#10'        UPDATE ZOO_CFGCATEGORIAS'
  +#13#10'        SET'
  +#13#10'           DESCRICAO = :vDESCRICAO,'
  +#13#10'           IDADE_INFERIOR = :vIDADE_INFERIOR,'
  +#13#10'           IDADE_SUPERIOR = :vIDADE_SUPERIOR,'
  +#13#10'           STATUS = :vSTATUS,'
  +#13#10'           DEL_INFERIOR = :vDEL_INFERIOR,'
  +#13#10'           DEL_SUPERIOR = :vDEL_SUPERIOR,'
  +#13#10'           NL_INFERIOR = :vNL_INFERIOR,'
  +#13#10'           NL_SUPERIOR = :vNL_SUPERIOR,'
  +#13#10'           VALOR = :vVALOR,'
  +#13#10'           ATIVO = :vATIVO,'
  +#13#10'           INTERNAL = :vINTERNAL,'
  +#13#10'           SYS$DU    = :SYS$DU'
  +#13#10'        WHERE ( KCAD_FAZENDA = :pKCAD_FAZENDA  AND KDEF_CFGCATEGORIA = :vKDEF_CFGCATEGORIA )'
  +#13#10'         AND ( (DESCRICAO      IS DISTINCT FROM :vDESCRICAO )'
  +#13#10'            OR (IDADE_INFERIOR IS DISTINCT FROM :vIDADE_INFERIOR )'
  +#13#10'            OR (IDADE_SUPERIOR IS DISTINCT FROM :vIDADE_SUPERIOR )'
  +#13#10'            OR (STATUS         IS DISTINCT FROM :vSTATUS )'
  +#13#10'            OR (DEL_INFERIOR   IS DISTINCT FROM :vDEL_INFERIOR )'
  +#13#10'            OR (DEL_SUPERIOR   IS DISTINCT FROM :vDEL_SUPERIOR )'
  +#13#10'            OR (NL_INFERIOR    IS DISTINCT FROM :vNL_INFERIOR )'
  +#13#10'            OR (NL_SUPERIOR    IS DISTINCT FROM :vNL_SUPERIOR )'
  +#13#10'            OR (VALOR          IS DISTINCT FROM :vVALOR )'
  +#13#10'            OR (ATIVO          IS DISTINCT FROM :vATIVO )'
  +#13#10'            OR (INTERNAL       IS DISTINCT FROM :vINTERNAL )'
  +#13#10'            OR (SYS$DU         IS DISTINCT FROM :SYS$DU )'
  +#13#10'           ) ;'
  +#13#10'     ELSE'
  +#13#10'       INSERT INTO ZOO_CFGCATEGORIAS ( KZOO_CFGCATEGORIA, KCAD_FAZENDA, DESCRICAO, IDADE_INFERIOR, IDADE_SUPERIOR, STATUS, DEL_INFERIOR, DEL_SUPERIOR, NL_INFERIOR, NL_SUPERIOR, VALOR, KDEF_CFGCATEGORIA, ATIVO, INTERNAL )'
  +#13#10'       VALUES ( GUID20(), :pKCAD_FAZENDA, :vDESCRICAO, :vIDADE_INFERIOR, :vIDADE_SUPERIOR, :vSTATUS, :vDEL_INFERIOR, :vDEL_SUPERIOR, :vNL_INFERIOR, :vNL_SUPERIOR, :vVALOR, :vKDEF_CFGCATEGORIA, :vATIVO, :vINTERNAL );'
  +#13#10''
  +#13#10'end' ;


begin
  TryExecuteDirect ( _CREATE_GLOBAL_TEMPORARY_TABLE_TMP_ENTIDADES ) ;
  ExecuteDirect    ( _CREATE_PROCEDURE_SYS_INIT_ENTIDADES ) ;
  ExecuteDirect    ( _EXECUTE_PROCEDURE_SYS_INIT_ENTIDADES  ) ;
  ExecuteDirect    ( _CREATE_PROCEDURE_SYS_INIT_CATEGORIAS  ) ;

end ;


procedure TDBZootecnicoUpdate._5_001_01;
const
  _CREATE_TRIGGER_ZOO_ANIMAL_SEMEN_COMPRA_AI0 =
         'CREATE OR ALTER TRIGGER ZOO_ANIMAL_SEMEN_COMPRA_AI0 FOR ZOO_ANIMAL_SEMEN_COMPRA'
  +#13#10'ACTIVE AFTER INSERT OR UPDATE OR DELETE POSITION 20001'
  +#13#10'AS'
  +#13#10'DECLARE VARIABLE QTDE_ESTOQUE INTEGER;'
  +#13#10'begin'
  +#13#10'   if (INSERTING) then'
  +#13#10'    begin'
  +#13#10'      EXECUTE PROCEDURE ZOO_GET_ESTOQUE_SEMEN NEW.KZOO_ANIMAL_MACHO returning_values QTDE_ESTOQUE;'
  +#13#10''
  +#13#10'      if ( NEW.VALORDOSE > 0 ) then'
  +#13#10'        UPDATE ZOO_ANIMAIS'
  +#13#10'           SET PRECO_COMPRA = IIF (PRECO_COMPRA >0, ((PRECO_COMPRA*:QTDE_ESTOQUE)+(NEW.VALORDOSE*NEW.DOSES))/(:QTDE_ESTOQUE+NEW.DOSES), NEW.VALORDOSE)'
  +#13#10'         WHERE KZOO_ANIMAL = NEW.KZOO_ANIMAL_MACHO;'
  +#13#10''
  +#13#10'      EXECUTE PROCEDURE ZOO_UPDATE_COMPRA_SEMEN ( NEW.KZOO_ANIMAL_MACHO, NEW.DOSES, 0 );'
  +#13#10'    end'
  +#13#10''
  +#13#10'   if (UPDATING) then'
  +#13#10'      EXECUTE PROCEDURE ZOO_UPDATE_COMPRA_SEMEN ( NEW.KZOO_ANIMAL_MACHO, NEW.DOSES, OLD.DOSES );'
  +#13#10''
  +#13#10'   if (DELETING) then'
  +#13#10'      EXECUTE PROCEDURE ZOO_UPDATE_COMPRA_SEMEN ( OLD.KZOO_ANIMAL_MACHO, 0, OLD.DOSES );'
  +#13#10'end' ;
begin
  ExecuteDirect ( _CREATE_TRIGGER_ZOO_ANIMAL_SEMEN_COMPRA_AI0 ) ;
end  ;

procedure TDBZootecnicoUpdate._5_001_00;
const
  _UPDATE_DESCARTES =
         'UPDATE'
  +#13#10' ZOO_ANIMAL_TAREFAS'
  +#13#10'SET'
  +#13#10' DATAPREVISTA = DATAPREVISTA + 1,'
  +#13#10' DATASTATUS   = DATASTATUS   + 1'
  +#13#10'WHERE'
  +#13#10' STATUS  = 5 OR STATUS = 6' ;


  _ALTER_TRIGGER_ZOO_ANIMAL_TAREFAS_AIUD =
         'CREATE OR ALTER TRIGGER ZOO_ANIMAL_TAREFAS_AIUD FOR ZOO_ANIMAL_TAREFAS'
  +#13#10'ACTIVE AFTER INSERT OR UPDATE OR DELETE POSITION 20000'
  +#13#10'AS'
  +#13#10'DECLARE DIA_DESCARTE_CARNE SYS$INT ;'
  +#13#10'DECLARE DIA_DESCARTE_LEITE SYS$INT ;'
  +#13#10'DECLARE DATAPREVISTA  SYS$DATE ;'
  +#13#10'DECLARE TIPO_DESCARTE_LEITE SYS$INT ;'
  +#13#10'DECLARE TIPO_DESCARTE_CARNE SYS$INT ;'
  +#13#10'DECLARE DDT type of column ZOO_ANIMAL_TAREFAS.DDT ;'
  +#13#10'DECLARE STATUS_PENDENTE SYS$INT ;'
  +#13#10'BEGIN'
  +#13#10''
  +#13#10'  IF ( RDB$GET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$LTD'' ) = ''1'' ) THEN'
  +#13#10'     EXIT ;'
  +#13#10''
  +#13#10'  RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$LTD'', ''1'' ) ;'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_TAREFA'', ''PENDENTE'' returning_values STATUS_PENDENTE ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_TAREFA'', ''DESCARTE_LEITE'' returning_values TIPO_DESCARTE_LEITE ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_TAREFA'', ''DESCARTE_CARNE'' returning_values TIPO_DESCARTE_CARNE ;'
  +#13#10''
  +#13#10'  IF (inserting) THEN'
  +#13#10'    BEGIN'
  +#13#10''
  +#13#10'      DATAPREVISTA  = COALESCE ( NEW.DATASTATUS, NEW.DATAPREVISTA ) ;'
  +#13#10''
  +#13#10'      -- leite'
  +#13#10'      IF ( NEW.DESCARTELEITE > 0 ) THEN'
  +#13#10'      BEGIN'
  +#13#10'        DIA_DESCARTE_LEITE = NEW.DESCARTELEITE ;'
  +#13#10'        WHILE ( DIA_DESCARTE_LEITE > 0 ) DO'
  +#13#10'          BEGIN'
  +#13#10'            INSERT INTO ZOO_ANIMAL_TAREFAS'
  +#13#10'              ( KZOO_ANIMAL_TAREFA,'
  +#13#10'                KZOO_ANIMAL,'
  +#13#10'                KZOO_ANIMAL_PROTOCOLO,'
  +#13#10'                CODIGO,'
  +#13#10'                NOME,'
  +#13#10'                DATAPREVISTA,'
  +#13#10'                STATUS,'
  +#13#10'                DATASTATUS,'
  +#13#10'                KCAD_FUNCIONARIO,'
  +#13#10'                NOMEFUNCIONARIO,'
  +#13#10'                KMZOO_ANIMAL_TAREFA,'
  +#13#10'                DDT )'
  +#13#10'            VALUES'
  +#13#10'              ( Guid20(),'
  +#13#10'                NEW.KZOO_ANIMAL,'
  +#13#10'                NEW.KZOO_ANIMAL_PROTOCOLO,'
  +#13#10'                ''DL'','
  +#13#10'                ''Descartar leite'','
  +#13#10'                :DATAPREVISTA + :DIA_DESCARTE_LEITE - 0,'
  +#13#10'                :TIPO_DESCARTE_LEITE,'
  +#13#10'                :DATAPREVISTA + :DIA_DESCARTE_LEITE - 0,'
  +#13#10'                NEW.KCAD_FUNCIONARIO,'
  +#13#10'                NEW.NOMEFUNCIONARIO,'
  +#13#10'                NEW.KZOO_ANIMAL_TAREFA,'
  +#13#10'                :DIA_DESCARTE_LEITE'
  +#13#10'              ) ;'
  +#13#10'              DIA_DESCARTE_LEITE = DIA_DESCARTE_LEITE - 1 ;'
  +#13#10'           END -- while leite'
  +#13#10'      END -- if leite'
  +#13#10''
  +#13#10'      -- carne'
  +#13#10'      IF ( NEW.DESCARTECARNE > 0 ) THEN'
  +#13#10'      BEGIN'
  +#13#10''
  +#13#10'        DIA_DESCARTE_CARNE = NEW.DESCARTECARNE ;'
  +#13#10''
  +#13#10'        WHILE ( DIA_DESCARTE_CARNE > 0 ) DO'
  +#13#10'          BEGIN'
  +#13#10'            INSERT INTO ZOO_ANIMAL_TAREFAS'
  +#13#10'              ( KZOO_ANIMAL_TAREFA,'
  +#13#10'                KZOO_ANIMAL,'
  +#13#10'                KZOO_ANIMAL_PROTOCOLO,'
  +#13#10'                CODIGO,'
  +#13#10'                NOME,'
  +#13#10'                DATAPREVISTA,'
  +#13#10'                STATUS,'
  +#13#10'                DATASTATUS,'
  +#13#10'                KCAD_FUNCIONARIO,'
  +#13#10'                NOMEFUNCIONARIO,'
  +#13#10'                KMZOO_ANIMAL_TAREFA,'
  +#13#10'                DDT'
  +#13#10'              )'
  +#13#10'            VALUES'
  +#13#10'              ( Guid20(),'
  +#13#10'                NEW.KZOO_ANIMAL,'
  +#13#10'                NEW.KZOO_ANIMAL_PROTOCOLO,'
  +#13#10'                ''NDC'','
  +#13#10'                ''Não descartar carne'','
  +#13#10'                :DATAPREVISTA + :DIA_DESCARTE_CARNE - 0,'
  +#13#10'                :TIPO_DESCARTE_CARNE,'
  +#13#10'                :DATAPREVISTA + :DIA_DESCARTE_CARNE - 0,'
  +#13#10'                NEW.KCAD_FUNCIONARIO,'
  +#13#10'                NEW.NOMEFUNCIONARIO,'
  +#13#10'                NEW.KZOO_ANIMAL_TAREFA,'
  +#13#10'                :DIA_DESCARTE_CARNE'
  +#13#10'              ) ;'
  +#13#10'              DIA_DESCARTE_CARNE = DIA_DESCARTE_CARNE - 1 ;'
  +#13#10'          END -- while carne'
  +#13#10'      END -- if carne'
  +#13#10''
  +#13#10'    END -- if inserting'
  +#13#10''
  +#13#10'  IF (updating) THEN'
  +#13#10'    BEGIN'
  +#13#10''
  +#13#10'      FOR SELECT'
  +#13#10'        DDT'
  +#13#10'      FROM ZOO_ANIMAL_TAREFAS'
  +#13#10'      WHERE KMZOO_ANIMAL_TAREFA = OLD.KZOO_ANIMAL_TAREFA'
  +#13#10'      ORDER BY DDT'
  +#13#10'      INTO  DDT'
  +#13#10'      AS CURSOR CURSOR_DESCARTES'
  +#13#10'      DO'
  +#13#10'        BEGIN'
  +#13#10'            UPDATE ZOO_ANIMAL_TAREFAS'
  +#13#10'              SET'
  +#13#10'                KZOO_ANIMAL            = NEW.KZOO_ANIMAL,'
  +#13#10'                KZOO_ANIMAL_PROTOCOLO  = NEW.KZOO_ANIMAL_PROTOCOLO,'
  +#13#10'                --KZOO_TAREFA            = NEW.KZOO_TAREFA,'
  +#13#10'                DATAPREVISTA           = COALESCE ( NEW.DATASTATUS, NEW.DATAPREVISTA ) + :DDT - 0,'
  +#13#10'                DATASTATUS             = COALESCE ( NEW.DATASTATUS, NEW.DATAPREVISTA ) + :DDT - 0,'
  +#13#10'                KCAD_FUNCIONARIO       = KCAD_FUNCIONARIO,'
  +#13#10'                NOMEFUNCIONARIO        = NOMEFUNCIONARIO,'
  +#13#10'                KMZOO_ANIMAL_TAREFA    = KMZOO_ANIMAL_TAREFA'
  +#13#10'             WHERE CURRENT OF CURSOR_DESCARTES ;'
  +#13#10'        END'
  +#13#10''
  +#13#10'    END'
  +#13#10''
  +#13#10'  IF (deleting) THEN'
  +#13#10'    BEGIN'
  +#13#10'      DELETE FROM ZOO_ANIMAL_TAREFAS WHERE KMZOO_ANIMAL_TAREFA = OLD.KZOO_ANIMAL_TAREFA ;'
  +#13#10'      if ( OLD.KZOO_ANIMAL_PROTOCOLO IS NOT NULL ) THEN'
  +#13#10'         EXECUTE PROCEDURE ZOO_ISFINISHED_PROTOCOLO( OLD.KZOO_ANIMAL_PROTOCOLO ) ;'
  +#13#10'    END'
  +#13#10''
  +#13#10'  RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$LTD'', NULL ) ;'
  +#13#10''
  +#13#10'END' ;

begin
  ExecuteDirect ( _UPDATE_DESCARTES ) ;
  ExecuteDirect ( _ALTER_TRIGGER_ZOO_ANIMAL_TAREFAS_AIUD ) ;
end ;


procedure TDBZootecnicoUpdate._5_000_95;
const
  _ALTER_TABLE_IMP_DIAGNOST =
         'ALTER TABLE IMP$DIAGNOST'
  +#13#10'ALTER CLASSE TYPE VARCHAR(50)' ;

  _CREATE_PROCEDURE_DOIMP_PRODAP_DIAGNOST =
        'CREATE OR ALTER PROCEDURE DOIMP$PRODAP_DIAGNOST ('
 +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
 +#13#10'    PRODAP VARCHAR(1024) COLLATE ISO8859_1)'
 +#13#10'AS'
 +#13#10'DECLARE CODIGO VARCHAR(3) ;'
 +#13#10'DECLARE CLASSE VARCHAR(40) ;'
 +#13#10'BEGIN'
 +#13#10''
 +#13#10' DELETE FROM IMP$DIAGNOST ;'
 +#13#10''
 +#13#10' FOR EXECUTE STATEMENT'
 +#13#10'   ('
 +#13#10'      ''SELECT CDDOENCA, NOMECOMUM FROM DOENCA'''
 +#13#10'   )'
 +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
 +#13#10' WITH COMMON TRANSACTION'
 +#13#10' INTO'
 +#13#10'    :CODIGO, :CLASSE'
 +#13#10' DO'
 +#13#10'    INSERT INTO IMP$DIAGNOST'
 +#13#10'     ('
 +#13#10'       CODIGO, CLASSE'
 +#13#10'     )'
 +#13#10'    VALUES'
 +#13#10'    ('
 +#13#10'      :CODIGO, :CLASSE'
 +#13#10'    ) ;'
 +#13#10''
 +#13#10' FOR EXECUTE STATEMENT'
 +#13#10'   ('
 +#13#10'      ''SELECT 500 + CDOCORRENCIA, NOME FROM OCORRENCIA'''
 +#13#10'   )'
 +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
 +#13#10' WITH COMMON TRANSACTION'
 +#13#10' INTO'
 +#13#10'    :CODIGO, :CLASSE'
 +#13#10' DO'
 +#13#10'    INSERT INTO IMP$DIAGNOST'
 +#13#10'     ('
 +#13#10'       CODIGO, CLASSE'
 +#13#10'     )'
 +#13#10'    VALUES'
 +#13#10'    ('
 +#13#10'      :CODIGO, :CLASSE'
 +#13#10'    ) ;'
 +#13#10''
 +#13#10'END' ;

  _CREATE_PROCEDURE_DOIMP_PRODAP_SANITARI =
         'CREATE OR ALTER PROCEDURE DOIMP$PRODAP_SANITARI ('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    PRODAP VARCHAR(1024) COLLATE ISO8859_1)'
  +#13#10'AS'
  +#13#10'DECLARE BRINCO VARCHAR(10) NOT NULL;'
  +#13#10'DECLARE DTDIAGNO DATE NOT NULL;'
  +#13#10'DECLARE DIAGNOSTICO CHAR(3) NOT NULL;'
  +#13#10'BEGIN'
  +#13#10''
  +#13#10' DELETE FROM IMP$SANITARI ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   (      ''SELECT CDANIMAL, DTPESALEITE, CDDOENCA FROM PESALEITE'''
  +#13#10'      || '' WHERE CDDOENCA IS NOT NULL'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'    :BRINCO, :DTDIAGNO, :DIAGNOSTICO'
  +#13#10' DO'
  +#13#10'    INSERT INTO IMP$SANITARI'
  +#13#10'     ('
  +#13#10'       BRINCO, DTDIAGNO, DIAGNOSTICO'
  +#13#10'     )'
  +#13#10'    VALUES'
  +#13#10'    ('
  +#13#10'      :BRINCO, :DTDIAGNO, :DIAGNOSTICO'
  +#13#10'    ) ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   (      ''SELECT CDANIMAL, DTPESALEITE, CDDOENCA FROM PESALEITE2'''
  +#13#10'      || '' WHERE CDDOENCA IS NOT NULL'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'    :BRINCO, :DTDIAGNO, :DIAGNOSTICO'
  +#13#10' DO'
  +#13#10'    INSERT INTO IMP$SANITARI'
  +#13#10'     ('
  +#13#10'       BRINCO, DTDIAGNO, DIAGNOSTICO'
  +#13#10'     )'
  +#13#10'    VALUES'
  +#13#10'    ('
  +#13#10'      :BRINCO, :DTDIAGNO, :DIAGNOSTICO'
  +#13#10'    ) ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   (      ''SELECT CDANIMAL, DTPESO, CDDOENCA FROM PESO'''
  +#13#10'      || '' WHERE CDDOENCA IS NOT NULL'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'    :BRINCO, :DTDIAGNO, :DIAGNOSTICO'
  +#13#10' DO'
  +#13#10'    INSERT INTO IMP$SANITARI'
  +#13#10'     ('
  +#13#10'       BRINCO, DTDIAGNO, DIAGNOSTICO'
  +#13#10'     )'
  +#13#10'    VALUES'
  +#13#10'    ('
  +#13#10'      :BRINCO, :DTDIAGNO, :DIAGNOSTICO'
  +#13#10'    ) ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   (      ''SELECT CDANIMAL, DTPESO, CDDOENCA FROM PESO2'''
  +#13#10'      || '' WHERE CDDOENCA IS NOT NULL'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'    :BRINCO, :DTDIAGNO, :DIAGNOSTICO'
  +#13#10' DO'
  +#13#10'    INSERT INTO IMP$SANITARI'
  +#13#10'     ('
  +#13#10'       BRINCO, DTDIAGNO, DIAGNOSTICO'
  +#13#10'     )'
  +#13#10'    VALUES'
  +#13#10'    ('
  +#13#10'      :BRINCO, :DTDIAGNO, :DIAGNOSTICO'
  +#13#10'    ) ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   (      ''SELECT CDANIMAL, DTREPRODUCAO, 500 + CDOCORRENCIA FROM REPRODUCAO'''
  +#13#10'      || '' WHERE CDOCORRENCIA IS NOT NULL'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'    :BRINCO, :DTDIAGNO, :DIAGNOSTICO'
  +#13#10' DO'
  +#13#10'    INSERT INTO IMP$SANITARI'
  +#13#10'     ('
  +#13#10'       BRINCO, DTDIAGNO, DIAGNOSTICO'
  +#13#10'     )'
  +#13#10'    VALUES'
  +#13#10'    ('
  +#13#10'      :BRINCO, :DTDIAGNO, :DIAGNOSTICO'
  +#13#10'    ) ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   (      ''SELECT CDANIMAL, DTREPRODUCAO, 500 + CDOCORRENCIA FROM REPRODUCAO2'''
  +#13#10'      || '' WHERE CDOCORRENCIA IS NOT NULL'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'    :BRINCO, :DTDIAGNO, :DIAGNOSTICO'
  +#13#10' DO'
  +#13#10'    INSERT INTO IMP$SANITARI'
  +#13#10'     ('
  +#13#10'       BRINCO, DTDIAGNO, DIAGNOSTICO'
  +#13#10'     )'
  +#13#10'    VALUES'
  +#13#10'    ('
  +#13#10'      :BRINCO, :DTDIAGNO, :DIAGNOSTICO'
  +#13#10'    ) ;'
  +#13#10''
  +#13#10'END' ;

  _CREATE_PROCEDURE_DOIMP_PRODAP =
         'CREATE OR ALTER PROCEDURE DOIMP$PRODAP('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    PRODAP VARCHAR(1024) COLLATE ISO8859_1)'
  +#13#10'AS'
  +#13#10'begin'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE DOIMP$LIMPARBASE( KCAD_FAZENDA );'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE DOIMP$DEFAULT_GSANGUE   ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_CADASTRO   ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_CADTOURO   ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_CIOSCOB    ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_DADOPROD   ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_PESAGENS   ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_PESOALTURA ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_DIAGNOST   ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_SANITARI   ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_MAMITE     ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  /*'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_BST      ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_CMT      ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_CONDCORP ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_FILHOS   ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_FUNCIONA ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_TRATASAN ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_TRATAMEN ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_PMACHO   ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_LINEARCA ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  */'
  +#13#10'end'  ;
begin
  ExecuteDirect ( _ALTER_TABLE_IMP_DIAGNOST ) ;
  ExecuteDirect ( _CREATE_PROCEDURE_DOIMP_PRODAP_DIAGNOST ) ;
  ExecuteDirect ( _CREATE_PROCEDURE_DOIMP_PRODAP_SANITARI ) ;
  ExecuteDirect ( _CREATE_PROCEDURE_DOIMP_PRODAP ) ;

end;

procedure TDBZootecnicoUpdate._5_000_94;
const
  _DROP_FK_TANQUEANALISE =
         'ALTER TABLE ZOO_TANQUE_ANALISES DROP CONSTRAINT FKZOO_TANQUE_ANALISES_01' ;
  _CREATE_FK_TANQUEANALISE =
         'ALTER TABLE ZOO_TANQUE_ANALISES'
  +#13#10' ADD CONSTRAINT FKZOO_TANQUE_ANALISES_01'
  +#13#10' FOREIGN KEY (KZOO_TANQUE) REFERENCES ZOO_TANQUES (KZOO_TANQUE)'
  +#13#10'  ON UPDATE CASCADE'
  +#13#10'  ON DELETE CASCADE' ;

  _ALTER_TABLE_ZOO_TANQUE_ANALISES =
         '  ALTER TABLE ZOO_TANQUE_ANALISES'
  +#13#10'DROP CBT,'
  +#13#10'ADD CBT INTEGER,'
  +#13#10'ALTER CBT POSITION 10' ;
begin
   TryExecuteDirect(_DROP_FK_TANQUEANALISE)   ;
   TryExecuteDirect(_CREATE_FK_TANQUEANALISE)   ;
   TryExecuteDirect(_ALTER_TABLE_ZOO_TANQUE_ANALISES ) ;
end;

procedure TDBZootecnicoUpdate._5_000_93 ;
const
  _CREATE_PROCEDURE_DOIMP_DOIMP_DEFAULT_GSANGUE =
         'CREATE OR ALTER PROCEDURE DOIMP$DEFAULT_GSANGUE('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    IDEAGRI VARCHAR(1024) COLLATE ISO8859_1)'
  +#13#10'AS'
  +#13#10'begin'
  +#13#10''
  +#13#10'    DELETE FROM IMP$GSANGUE ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES (1,''1/2'') ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES (2,''3/4'') ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES (3,''7/8'') ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES (4,''15/16'') ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES (5,''31/32'') ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES (8,''PO'') ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES ( 10, ''11/16'' ) ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES ( 11, ''13/16'' ) ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES ( 12, ''7/16'' ) ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES ( 13, ''5/8'' ) ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES ( 14, ''9/16'' ) ;'
  +#13#10''
  +#13#10'end' ;

  _CREATE_PROCEDURE_DOIMP_DOIMP_DEFAULT_IDGSANGUE =
         'CREATE OR ALTER PROCEDURE DOIMP$DEFAULT_IDGSANGUE('
  +#13#10'    GSANGUE VARCHAR(20) COLLATE ISO8859_1)'
  +#13#10'RETURNS ('
  +#13#10'    IDGSANGUE SMALLINT)'
  +#13#10'AS'
  +#13#10'begin'
  +#13#10''
  +#13#10'  GSANGUE = UPPER( TRIM( GSANGUE ) ) ;'
  +#13#10''
  +#13#10'  IF ( position(''/'' in GSANGUE) > 0 ) THEN'
  +#13#10'    GSANGUE = TRIM( SUBSTRING ( GSANGUE FROM 1 FOR position('' '' in GSANGUE) ) ) ;'
  +#13#10''
  +#13#10'  IF (  ( GSANGUE LIKE ''HOLAND_S P_B'' )'
  +#13#10'      OR( GSANGUE LIKE ''HOLAND_S VERMELHO'' )'
  +#13#10'      OR( GSANGUE LIKE ''PARDO SU__O%'' )'
  +#13#10'      OR( GSANGUE LIKE ''GIR LEITEIRO'' )'
  +#13#10'      OR( GSANGUE LIKE ''JERSEY''       ) ) then'
  +#13#10'     GSANGUE = ''PO'' ;'
  +#13#10''
  +#13#10'  idgsangue = case gsangue'
  +#13#10'    when ''PO'' then 8'
  +#13#10'    when ''1'' then 8'
  +#13#10'    when ''1/1'' then 8'
  +#13#10'    when ''PO'' then 8'
  +#13#10'    when ''1/2'' then 1'
  +#13#10'    when ''3/4'' then 2'
  +#13#10'    when ''7/8'' then 3'
  +#13#10'    when ''15/16'' then 4'
  +#13#10'    when ''31/32'' then 5'
  +#13#10'    when ''11/16'' then 10'
  +#13#10'    when ''13/16'' then 11'
  +#13#10'    when ''7/16'' then 12'
  +#13#10'    when ''5/8'' then 13'
  +#13#10'    when ''9/16'' then 14'
  +#13#10'    when ''63/64'' then 8'
  +#13#10'    when ''127/128'' then 8'
  +#13#10'    else NULL'
  +#13#10'  end;'
  +#13#10''
  +#13#10'  suspend;'
  +#13#10'end' ;

  _CREATE_PROCEDURE_DOIMP_PRODAP_RACA =
        'CREATE OR ALTER PROCEDURE DOIMP$PRODAP_RACA('
  +#13#10'    RACA VARCHAR(20) COLLATE ISO8859_1)'
  +#13#10'RETURNS ('
  +#13#10'    COMPOSICAO VARCHAR(20) COLLATE ISO8859_1)'
  +#13#10'AS'
  +#13#10'DECLARE COMPOSICAO1 VARCHAR(20) COLLATE ISO8859_1 ;'
  +#13#10'DECLARE COMPOSICAO2 VARCHAR(20) COLLATE ISO8859_1 = NULL ;'
  +#13#10'DECLARE COMPOSICAO3 VARCHAR(20) COLLATE ISO8859_1 = NULL ;'
  +#13#10'begin'
  +#13#10''
  +#13#10'  RACA = UPPER ( TRIM( RACA ) ) ;'
  +#13#10''
  +#13#10'  IF (SUBSTRING(RACA FROM 1 FOR 1) IN (''1'',''2'',''3'',''4'',''5'',''6'',''7'',''8'',''9'')) then'
  +#13#10'     RACA = SUBSTRING(RACA FROM POSITION('' '' IN RACA)+1 FOR 20);'
  +#13#10'  ELSE IF ( RACA LIKE ''HOLAND_S P_B'') then'
  +#13#10'     RACA    = ''HPB'' ;'
  +#13#10'  ELSE IF ( RACA LIKE ''HOLAND_S VERMELHO'' ) then'
  +#13#10'     RACA    = ''HVB'' ;'
  +#13#10'  ELSE IF ( RACA LIKE ''PARDO SU__O%'' ) then'
  +#13#10'     RACA    = ''PDS'' ;'
  +#13#10'  ELSE IF ( RACA LIKE ''GIR LEITEIRO'' ) then'
  +#13#10'     RACA    = ''GIR'' ;'
  +#13#10'  ELSE IF ( RACA LIKE ''JERSEY'' ) then'
  +#13#10'     RACA    = ''JER'' ;'
  +#13#10''
  +#13#10'  IF (POSITION('','' IN RACA) > 0) THEN'
  +#13#10'    BEGIN'
  +#13#10'      COMPOSICAO1 = TRIM( SUBSTRING(RACA FROM 1 FOR (POSITION('','' IN RACA)-1)) );'
  +#13#10'      COMPOSICAO2 = TRIM( SUBSTRING(RACA FROM (POSITION('','' IN RACA)+1) FOR 20 )) ;'
  +#13#10'    END'
  +#13#10'  ELSE'
  +#13#10'    COMPOSICAO1 = TRIM ( RACA ) ;'
  +#13#10''
  +#13#10'  IF (POSITION('','' IN COMPOSICAO2) > 0) THEN'
  +#13#10'    BEGIN'
  +#13#10'      COMPOSICAO3 = TRIM( SUBSTRING(COMPOSICAO2 FROM (POSITION('','' IN COMPOSICAO2)+1) FOR 20 )) ;'
  +#13#10'      COMPOSICAO2 = TRIM( SUBSTRING(COMPOSICAO2 FROM 1 FOR (POSITION('','' IN COMPOSICAO2)-1)) );'
  +#13#10'    END'
  +#13#10''
  +#13#10'  COMPOSICAO1 = case COMPOSICAO1'
  +#13#10'    when ''HPB'' then ''HPB'''
  +#13#10'    when ''HVB'' then ''HVB'''
  +#13#10'    when ''PDS'' then ''PDS'''
  +#13#10'    when ''JER'' then ''JER'''
  +#13#10'    when ''GIR'' then ''GIR'''
  +#13#10'    when ''WW''  then ''HVB'''
  +#13#10'    when ''GI''  then ''GIR'''
  +#13#10'    when ''GL''  then ''GIR'''
  +#13#10'    when ''HO''  then ''HPB'''
  +#13#10'    when ''GO''  then ''GHL'''
  +#13#10'    when ''JE''  then ''JER'''
  +#13#10'    when ''NE''  then ''XX'''
  +#13#10'    when ''SRD'' then ''XX'''
  +#13#10'    else ''XX'''
  +#13#10'  end;'
  +#13#10''
  +#13#10'  if (COMPOSICAO2 IS NOT NULL) then'
  +#13#10'  COMPOSICAO2 = case COMPOSICAO2'
  +#13#10'    when ''HPB'' then ''HPB'''
  +#13#10'    when ''HVB'' then ''HVB'''
  +#13#10'    when ''PDS'' then ''PDS'''
  +#13#10'    when ''JER'' then ''JER'''
  +#13#10'    when ''GIR'' then ''GIR'''
  +#13#10'    when ''WW''  then ''HVB'''
  +#13#10'    when ''GI''  then ''GIR'''
  +#13#10'    when ''GL''  then ''GIR'''
  +#13#10'    when ''HO''  then ''HPB'''
  +#13#10'    when ''GO''  then ''GHL'''
  +#13#10'    when ''JE''  then ''JER'''
  +#13#10'    when ''NE''  then ''XX'''
  +#13#10'    when ''SRD'' then ''XX'''
  +#13#10'    else ''XX'''
  +#13#10'  end;'
  +#13#10''
  +#13#10'  if (COMPOSICAO3 IS NOT NULL) then'
  +#13#10'  COMPOSICAO3 = case COMPOSICAO3'
  +#13#10'    when ''HPB'' then ''HPB'''
  +#13#10'    when ''HVB'' then ''HVB'''
  +#13#10'    when ''PDS'' then ''PDS'''
  +#13#10'    when ''JER'' then ''JER'''
  +#13#10'    when ''GIR'' then ''GIR'''
  +#13#10'    when ''WW''  then ''HVB'''
  +#13#10'    when ''GI''  then ''GIR'''
  +#13#10'    when ''GL''  then ''GIR'''
  +#13#10'    when ''HO''  then ''HPB'''
  +#13#10'    when ''GO''  then ''GHL'''
  +#13#10'    when ''JE''  then ''JER'''
  +#13#10'    when ''NE''  then ''XX'''
  +#13#10'    when ''SRD'' then ''XX'''
  +#13#10'    else ''XX'''
  +#13#10'  end;'
  +#13#10''
  +#13#10'  if (COMPOSICAO2 IS NULL) then'
  +#13#10'    COMPOSICAO = COMPOSICAO1 ;'
  +#13#10'  ELSE'
  +#13#10'    COMPOSICAO = COMPOSICAO1 ||'',''|| COMPOSICAO2 ;'
  +#13#10''
  +#13#10'  if (COMPOSICAO3 IS NOT NULL) then'
  +#13#10'    COMPOSICAO = COMPOSICAO ||'',''|| COMPOSICAO3 ;'
  +#13#10''
  +#13#10'  suspend;'
  +#13#10'end' ;

  _CREATE_PROCEDURE_DOIMP_PRODAP_CADTOURO =
         'CREATE OR ALTER PROCEDURE DOIMP$PRODAP_CADTOURO('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    PRODAP VARCHAR(1024) COLLATE ISO8859_1)'
  +#13#10'AS'
  +#13#10'declare variable codigo varchar(8) not null;'
  +#13#10'declare variable nome_estab varchar(60);'
  +#13#10'declare variable nome_completo varchar(60);'
  +#13#10'declare variable registro varchar(15);'
  +#13#10'declare variable dtnasc date;'
  +#13#10'declare variable pai varchar(8);'
  +#13#10'declare variable nome_pai varchar(40);'
  +#13#10'declare variable registro_pai varchar(15);'
  +#13#10'declare variable mae varchar(10);'
  +#13#10'declare variable nome_mae varchar(40);'
  +#13#10'declare variable registro_mae varchar(15);'
  +#13#10'declare variable leite integer;'
  +#13#10'declare variable tipo numeric(15,2);'
  +#13#10'declare variable ubere numeric(15,2);'
  +#13#10'declare variable pernape numeric(15,2);'
  +#13#10'declare variable parto integer;'
  +#13#10'declare variable qestoque integer;'
  +#13#10'declare variable qusada smallint;'
  +#13#10'declare variable concepcao integer;'
  +#13#10'declare variable valor numeric(15,2);'
  +#13#10'declare variable status char(1) not null;'
  +#13#10'declare variable raca varchar(20);'
  +#13#10'declare variable racaaux varchar(20);'
  +#13#10'declare variable gsangue smallint;'
  +#13#10'declare variable gsanguestr varchar(20);'
  +#13#10'declare variable retiro char(2);'
  +#13#10'declare variable lote char(2);'
  +#13#10'declare variable bojao smallint;'
  +#13#10'declare variable caneca smallint;'
  +#13#10'declare variable hack varchar(10);'
  +#13#10'declare variable dtdesc date;'
  +#13#10'declare variable razao char(3);'
  +#13#10'declare variable motivo char(3);'
  +#13#10'declare variable preco_venda numeric(15,2);'
  +#13#10'declare variable comprador varchar(40);'
  +#13#10'declare variable avo_paterno varchar(40);'
  +#13#10'declare variable reg_avo_paterno varchar(15);'
  +#13#10'declare variable avo_paterna varchar(40);'
  +#13#10'declare variable reg_avo_paterna varchar(15);'
  +#13#10'declare variable avo_materno varchar(40);'
  +#13#10'declare variable reg_avo_materno varchar(15);'
  +#13#10'declare variable avo_materna varchar(40);'
  +#13#10'declare variable reg_avo_materna varchar(15);'
  +#13#10'declare LF_ char;'
  +#13#10'BEGIN'
  +#13#10' LF_ = ASCII_CHAR(10);'
  +#13#10' DELETE FROM IMP$CADTOURO ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   ('
  +#13#10'      ''SELECT a.CDANIMAL, (TRIM(a.SIGLAANIMAL) || ''''[*]'''' || coalesce('''' '''' || a.NOME,'''''''')), '''
  +#13#10'   ||LF_|| ''a.NOMECOMPLETO, '''
  +#13#10'   ||LF_|| ''a.REGISTRO,a.DTNASC,p.CDANIMAL,p.NOMECOMPLETO,p.REGISTRO, '''
  +#13#10'   ||LF_|| ''m.CDANIMAL,m.NOMECOMPLETO,m.REGISTRO, '''
  +#13#10'   ||LF_|| ''NULL, NULL, NULL, NULL, NULL, 0, 0, NULL, NULL, '''
  +#13#10'   ||LF_|| ''CASE '''
  +#13#10'   ||LF_|| ''    WHEN (upper(a.CATEGANIMAL) = ''''S'''')  THEN ''''I'''' '''
  +#13#10'   ||LF_|| ''    ELSE ''''M'''' '''
  +#13#10'   ||LF_|| ''END, '''
  +#13#10'   ||LF_|| ''SUBSTRING ( a.grausangue FROM 1 FOR 20 ), ''' // RACA
  +#13#10'   ||LF_|| ''SUBSTRING ( a.grausangue FROM 1 FOR 20 ), ''' // GSANGUE
  +#13#10'   ||LF_|| ''IIF(r.NOME IS NULL, NULL, SUBSTRING(r.NOME FROM 1 FOR 2) ), '''
  +#13#10'   ||LF_|| ''NULL, NULL, NULL, NULL, '''
  +#13#10'   ||LF_|| ''COALESCE ( A.DTBAIXA, A.DTDESCARTE ), IIF( (A.DTBAIXA IS NOT NULL) AND (A.DTDESCARTE IS NOT NULL),''''DES'''', NULL), '''
  +#13#10'   ||LF_|| ''CASE '''
  +#13#10'   ||LF_|| ''    WHEN ( a.cddescarte is null ) and ( A.DTBAIXA is null ) THEN NULL '''
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''M'''' THEN ''''8'''' '' -- Mamite'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''AL'''' THEN ''''3'''' '' -- Aleijado (a)'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''CA'''' THEN ''''3'''' '' -- Cascos'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''DO'''' THEN ''''4'''' '' -- Doença'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''ID'''' THEN ''''8'''' '' -- Idade'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''MA'''' THEN ''''8'''' '' -- Mamite'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''NA'''' THEN ''''8'''' '' -- Náfego (a)'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''OR'''' THEN ''''6'''' '' -- Dificuldade de ordenha'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''OU'''' THEN ''''8'''' '' -- Outros'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''PO'''' THEN ''''8'''' '' -- Desenvolvimento ponderal inadequado'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''PR'''' THEN ''''6'''' '' -- Baixa produção / Habilidade materna'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''RE'''' THEN ''''7'''' '' -- Falha reprodutiva'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''TA'''' THEN ''''8'''' '' -- Teta anormal'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''TE'''' THEN ''''8'''' '' -- Temperamento'
  +#13#10'   ||LF_|| ''    else ''''8'''' '''
  +#13#10'   ||LF_|| ''END, '''
  +#13#10'   ||LF_|| ''NULL,NULL,NULL,NULL, NULL,NULL,NULL,NULL,NULL,NULL '''
  +#13#10'   ||LF_|| ''FROM ANIMAL a '''
  +#13#10'   ||LF_|| ''LEFT JOIN RETIRO r on r.cdretiro = a.cdretiro '''
  +#13#10'   ||LF_|| ''LEFT JOIN ANIMAL p on p.CDANIMAL = a.cdpai '''
  +#13#10'   ||LF_|| ''LEFT JOIN ANIMAL m on m.CDANIMAL = a.cdmae '''
  +#13#10'   ||LF_|| ''WHERE a.SEXO = ''''M'''' '''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'    :CODIGO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,:MAE,:NOME_MAE,'
  +#13#10'    :REGISTRO_MAE,:LEITE,:TIPO,:UBERE,:PERNAPE,:PARTO,:QESTOQUE,:QUSADA,:CONCEPCAO,:VALOR,:STATUS,:GSANGUESTR,'
  +#13#10'    :RACAAUX,:RETIRO,:LOTE,:BOJAO,:CANECA,:HACK,:DTDESC,:RAZAO,:MOTIVO,:PRECO_VENDA,:COMPRADOR,:AVO_PATERNO,'
  +#13#10'    :REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,:AVO_MATERNA,:REG_AVO_MATERNA'
  +#13#10'  DO'
  +#13#10'  begin'
  +#13#10''
  +#13#10'    SELECT first 1 COMPOSICAO from doimp$prodap_raca(:RACAAUX) into :RACA;'
  +#13#10'    SELECT first 1 IDGSANGUE from doimp$default_idgsangue(:GSANGUESTR) into :GSANGUE;'
  +#13#10''
  +#13#10'    INSERT INTO IMP$CADTOURO'
  +#13#10'     ('
  +#13#10'       CODIGO,NOME_ESTAB,NOME_COMPLETO,REGISTRO,DTNASC,PAI,NOME_PAI,REGISTRO_PAI,MAE,NOME_MAE,'
  +#13#10'       REGISTRO_MAE,LEITE,TIPO,UBERE,PERNAPE,PARTO,QESTOQUE,QUSADA,CONCEPCAO,VALOR,STATUS,GSANGUE,'
  +#13#10'       RACA,RETIRO,LOTE,BOJAO,CANECA,HACK,DTDESC,RAZAO,MOTIVO,PRECO_VENDA,COMPRADOR,AVO_PATERNO,'
  +#13#10'       REG_AVO_PATERNO,AVO_PATERNA,REG_AVO_PATERNA,AVO_MATERNO,REG_AVO_MATERNO,AVO_MATERNA,REG_AVO_MATERNA'
  +#13#10'     )'
  +#13#10'    VALUES'
  +#13#10'    ('
  +#13#10'      :CODIGO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,:MAE,:NOME_MAE,'
  +#13#10'      :REGISTRO_MAE,:LEITE,:TIPO,:UBERE,:PERNAPE,:PARTO,:QESTOQUE,:QUSADA,:CONCEPCAO,:VALOR,:STATUS,:GSANGUE,'
  +#13#10'      :RACA,:RETIRO,:LOTE,:BOJAO,:CANECA,:HACK,:DTDESC,:RAZAO,:MOTIVO,:PRECO_VENDA,:COMPRADOR,:AVO_PATERNO,'
  +#13#10'      :REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,:AVO_MATERNA,:REG_AVO_MATERNA'
  +#13#10'    ) ;'
  +#13#10''
  +#13#10'  end'
  +#13#10'end' ;

begin
  ExecuteDirect( _CREATE_PROCEDURE_DOIMP_DOIMP_DEFAULT_GSANGUE ) ;
  ExecuteDirect( _CREATE_PROCEDURE_DOIMP_DOIMP_DEFAULT_IDGSANGUE ) ;
  ExecuteDirect( _CREATE_PROCEDURE_DOIMP_PRODAP_RACA ) ;
  ExecuteDirect( _CREATE_PROCEDURE_DOIMP_PRODAP_CADTOURO ) ;
end;


procedure TDBZootecnicoUpdate._5_000_92 ;
const
   ALTER_TABLE_ZOO_TANQUE_ANALISES =
         'ALTER TABLE ZOO_TANQUE_ANALISES'
  +#13#10'ADD CBT SYS$FLOAT,'
  +#13#10'ALTER CBT POSITION 11'  ;
begin
   TryExecuteDirect(ALTER_TABLE_ZOO_TANQUE_ANALISES)   ;
end ;

procedure TDBZootecnicoUpdate._5_000_91 ;
const
  _ALTER_TABLE_ZOO_ANIMAL_FEMEA_BST_MOTIVO =
         'ALTER TABLE ZOO_ANIMAL_FEMEA_BST'
  +#13#10'ADD APLICADO SYS$BOOL_T,'
  +#13#10'ALTER APLICADO POSITION 8,'
  +#13#10'ADD MOTIVO_INTERRUPCAO SYS$INT,'
  +#13#10'ALTER MOTIVO_INTERRUPCAO POSITION 9' ;

  _ALTER_TABLE_ZOO_ANIMAL_FEMEA_BST_ADD_KZOO_LACTACAO =
         'ALTER TABLE ZOO_ANIMAL_FEMEA_BST'
  +#13#10'ADD KZOO_LACTACAO SYS$FKGUID20,'
  +#13#10'ALTER KZOO_LACTACAO  POSITION 3' ;


  _UPDATE_ZOO_ANIMAL_FEMEA_BST =
         'UPDATE ZOO_ANIMAL_FEMEA_BST  B'
  +#13#10'SET B.KZOO_LACTACAO ='
  +#13#10'  (SELECT L.KZOO_LACTACAO'
  +#13#10'   FROM ZOO_LACTACOES L'
  +#13#10'   WHERE  L.KZOO_ANIMAL_FEMEA = B.KZOO_ANIMAL_FEMEA'
  +#13#10'      AND L.DATALACTACAO <= B.DATA'
  +#13#10'      AND (    L.DATA_SECAGEM IS NULL'
  +#13#10'            OR L.DATA_SECAGEM >= B.DATA'
  +#13#10'          )'
  +#13#10'   ORDER BY L.DATALACTACAO DESC ROWS 1)'
  +#13#10'WHERE B.KZOO_LACTACAO IS NULL' ;

  _DELETE_BST_INVALIDO =
       'DELETE FROM ZOO_ANIMAL_FEMEA_BST B WHERE B.KZOO_LACTACAO IS NULL' ;

  _ALTER_TABLE_ZOO_ANIMAL_FEMEA_BST_FK =
         'ALTER TABLE ZOO_ANIMAL_FEMEA_BST'
  +#13#10'ALTER KZOO_LACTACAO TYPE SYS$FKGUID20_NN' ;

begin
  TryExecuteDirect( _ALTER_TABLE_ZOO_ANIMAL_FEMEA_BST_MOTIVO  ) ;
  TryExecuteDirect( _ALTER_TABLE_ZOO_ANIMAL_FEMEA_BST_ADD_KZOO_LACTACAO  ) ;
  TryExecuteDirect( _UPDATE_ZOO_ANIMAL_FEMEA_BST  ) ;
  TryExecuteDirect( _DELETE_BST_INVALIDO  ) ;
  TryExecuteDirect( _ALTER_TABLE_ZOO_ANIMAL_FEMEA_BST_FK  ) ;
end;

procedure TDBZootecnicoUpdate._5_000_90 ;
const

  _CREATE_PROCEDURE_DOIMP_DOIMP_DEFAULT_IDGSANGUE =
         'CREATE OR ALTER PROCEDURE DOIMP$DEFAULT_IDGSANGUE('
  +#13#10'    GSANGUE VARCHAR(20) COLLATE ISO8859_1)'
  +#13#10'RETURNS ('
  +#13#10'    IDGSANGUE SMALLINT)'
  +#13#10'AS'
  +#13#10'begin'
  +#13#10''
  +#13#10'  GSANGUE = UPPER( TRIM( GSANGUE ) ) ;'
  +#13#10''
  +#13#10'  IF ( position(''/'' in GSANGUE) > 0 ) THEN'
  +#13#10'    GSANGUE = TRIM( SUBSTRING ( GSANGUE FROM 1 FOR 5 ) ) ;'
  +#13#10''
  +#13#10'  IF (  ( GSANGUE LIKE ''HOLAND_S P_B'' )'
  +#13#10'      OR( GSANGUE LIKE ''HOLAND_S VERMELHO'' )'
  +#13#10'      OR( GSANGUE LIKE ''PARDO SU__O%'' )'
  +#13#10'      OR( GSANGUE LIKE ''GIR LEITEIRO'' )'
  +#13#10'      OR( GSANGUE LIKE ''JERSEY''       ) ) then'
  +#13#10'     GSANGUE = ''PO'' ;'
  +#13#10''
  +#13#10'  idgsangue = case gsangue'
  +#13#10'    when ''PO'' then 8'
  +#13#10'    when ''1'' then 8'
  +#13#10'    when ''1/1'' then 8'
  +#13#10'    when ''PO'' then 8'
  +#13#10'    when ''1/2'' then 1'
  +#13#10'    when ''3/4'' then 2'
  +#13#10'    when ''7/8'' then 3'
  +#13#10'    when ''15/16'' then 4'
  +#13#10'    when ''31/32'' then 5'
  +#13#10'    when ''11/16'' then 10'
  +#13#10'    when ''13/16'' then 11'
  +#13#10'    when ''7/16'' then 12'
  +#13#10'    when ''5/8'' then 13'
  +#13#10'    when ''9/16'' then 14'
  +#13#10'    else NULL'
  +#13#10'  end;'
  +#13#10''
  +#13#10'  suspend;'
  +#13#10'end' ;

   _CREATE_PROCEDURE_DOIMP_IDEAGRI_CADASTRO =
  'CREATE OR ALTER PROCEDURE DOIMP$IDEAGRI_CADASTRO('
  +#13#10'   KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'   IDEAGRI VARCHAR(1024) COLLATE ISO8859_1,'
  +#13#10'   ACCEPT_NULL_BIRTHDATE SYS$BOOL,'
  +#13#10'   CODIGO_RETIRO SYS$INT,'
  +#13#10'   CODIGO_LOTE SYS$INT)'
  +#13#10'AS'
  +#13#10'declare brinco varchar(10) not null;'
  +#13#10'declare nome_estab varchar(60);'
  +#13#10'declare nome_completo varchar(60);'
  +#13#10'declare registro varchar(15);'
  +#13#10'declare dtnasc date;'
  +#13#10'declare pai varchar(8);'
  +#13#10'declare nome_pai varchar(40);'
  +#13#10'declare registro_pai varchar(15);'
  +#13#10'declare pd_pai varchar(5);'
  +#13#10'declare mae varchar(10);'
  +#13#10'declare nome_mae varchar(40);'
  +#13#10'declare registro_mae varchar(15);'
  +#13#10'declare dtorigem date;'
  +#13#10'declare local_origem varchar(20);'
  +#13#10'declare preco_compra numeric(15, 2);'
  +#13#10'declare dtdesc date;'
  +#13#10'declare razao char(3);'
  +#13#10'declare motivo char(3);'
  +#13#10'declare preco_venda numeric(15, 2);'
  +#13#10'declare comprador varchar(40);'
  +#13#10'declare raca char(3);'
  +#13#10'declare gsangue smallint;'
  +#13#10'declare retiro varchar(52);'
  +#13#10'declare lote varchar(52);'
  +#13#10'declare nucleo char(4);'
  +#13#10'declare rebanho varchar(5);'
  +#13#10'declare vaca varchar(8);'
  +#13#10'declare avo_paterno varchar(40);'
  +#13#10'declare reg_avo_paterno varchar(15);'
  +#13#10'declare avo_paterna varchar(40);'
  +#13#10'declare reg_avo_paterna varchar(15);'
  +#13#10'declare avo_materno varchar(40);'
  +#13#10'declare reg_avo_materno varchar(15);'
  +#13#10'declare avo_materna varchar(40);'
  +#13#10'declare reg_avo_materna varchar(15);'
  +#13#10'declare touro1 varchar(8);'
  +#13#10'declare touro2 varchar(8);'
  +#13#10'declare touro3 varchar(8);'
  +#13#10'declare touro4 varchar(8);'
  +#13#10'declare te char(2);'
  +#13#10'declare lote1 char(2);'
  +#13#10'declare data1 date;'
  +#13#10'declare lote2 char(2);'
  +#13#10'declare data2 date;'
  +#13#10'declare lote3 char(2);'
  +#13#10'declare data3 date;'
  +#13#10'declare lote4 char(2);'
  +#13#10'declare data4 date;'
  +#13#10'declare lote5 char(2);'
  +#13#10'declare data5 date;'
  +#13#10'declare lote6 char(2);'
  +#13#10'declare data6 date;'
  +#13#10'declare lote7 char(2);'
  +#13#10'declare data7 date;'
  +#13#10'declare lote8 char(2);'
  +#13#10'declare data8 date;'
  +#13#10'declare status varchar(3) not null;'
  +#13#10'declare criador varchar(40);'
  +#13#10'declare cidcria varchar(25);'
  +#13#10'declare codigo1 char(3);'
  +#13#10'declare codigo2 char(3);'
  +#13#10'declare codigo3 char(3);'
  +#13#10'declare persiste integer;'
  +#13#10'declare potencial integer;'
  +#13#10'declare INTENCAO_DESCARTE char(1);'
  +#13#10'declare SQL_WHERE varchar(100) = '''' ;'
  +#13#10'declare LF_ char;'
  +#13#10'begin'
  +#13#10''
  +#13#10'  LF_ = ASCII_CHAR(10) ;'
  +#13#10'  DELETE FROM IMP$CADASTRO ;'
  +#13#10''
  +#13#10'  if ( CODIGO_RETIRO > -1 ) THEN'
  +#13#10'     SQL_WHERE = SQL_WHERE || '' AND A.CDSETOR = '' || :CODIGO_RETIRO ;'
  +#13#10''
  +#13#10'  if ( ACCEPT_NULL_BIRTHDATE = ''F'' ) THEN'
  +#13#10'     SQL_WHERE = SQL_WHERE || '' AND A.DTNASCIMENTO IS NOT NULL'' ;'
  +#13#10''
  +#13#10'  FOR EXECUTE STATEMENT'
  +#13#10'    (       ''SELECT A.CDANIMAL, (trim(A.NUMERO) || ''''[*]'''' || coalesce('''' '''' || A.NOME, '''''''')), A.NOMECOMPLETO, A.REGASSOCRACA, A.DTNASCIMENTO, '''
  +#13#10'      ||LF_||''P.CDANIMAL,  P.nomecompleto, P.regassocraca, NULL, '''
  +#13#10'      ||LF_||''M.CDANIMAL,  M.nomecompleto, M.regassocraca, '''
  +#13#10'      ||LF_||''NULL, NULL, NULL, '''
  +#13#10'      ||LF_||''A.DTBAIXA, IIF(A.DTBAIXA IS NOT NULL, ''''DES'''', NULL), A.cdmotivobaixa, '''
  +#13#10'      ||LF_||''NULL, NULL, '''
  +#13#10'      ||LF_||''(SELECT FIRST 1'''
  +#13#10'      ||LF_||''  CASE'''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 175 ) THEN ''''PDS'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 290, 300, 340 ) THEN ''''GIR'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 310 ) THEN ''''GHL'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 365 ) THEN ''''HPB'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 385 ) THEN ''''JER'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 635 ) THEN ''''HPV'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 565 ) THEN ''''SIM'''' '''
  +#13#10'      ||LF_||''  ELSE'''
  +#13#10'      ||LF_||''    ''''XX'''' '''
  +#13#10'      ||LF_||''  END'''
  +#13#10'      ||LF_||''FROM ANIMALRACA AR'''
  +#13#10'      ||LF_||''WHERE AR.CDANIMALRACA = A.CDANIMAL'''
  +#13#10'      ||LF_||''ORDER BY AR.PERCENTUAL DESC'''
  +#13#10'      ||LF_||'') RACA, '''
  +#13#10'      ||LF_||''CASE '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (1, 2, 3, 4) THEN ''''8'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (5, 6, 7, 8) THEN ''''1'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (9, 10, 11, 12) THEN ''''2'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (13, 14, 15, 16) THEN ''''3'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (17, 18, 19, 20) THEN ''''4'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (21, 22, 23, 24) THEN ''''5'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento > 24 THEN ''''5'''' '''
  +#13#10'      ||LF_||''END, '''
  +#13#10'      ||LF_||''SETOR.NOME, LOTE.DESCRICAO,'''
  +#13#10'      ||LF_||''NULL, NULL, NULL,'''
  +#13#10'      ||LF_||''NULL, NULL, NULL, NULL,'''
  +#13#10'      ||LF_||''NULL, NULL, NULL, NULL,'''
  +#13#10'      ||LF_||''NULL, NULL, NULL, NULL,'''
  +#13#10'      ||LF_||''CASE (SELECT AP.TIPO FROM ANIMALPERIODO AP WHERE AP.CDANIMAL = A.CDANIMAL AND AP.TIPO IN (1, 2) AND AP.DATAFIM IS NULL ROWS 1)'''
  +#13#10'      ||LF_||''WHEN 1 THEN ''''TE'''''''
  +#13#10'      ||LF_||''WHEN 2 THEN ''''RE'''''''
  +#13#10'      ||LF_||''END TE,'''
  +#13#10'      ||LF_||''(SELECT ''''T'''' FROM ANIMALPERIODO AP WHERE AP.CDANIMAL = A.CDANIMAL AND AP.TIPO = 3 AND AP.DATAFIM IS NULL ROWS 1) INTENCAO_DESCARTE,'''
  +#13#10'      ||LF_||''NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,'''
  +#13#10'      ||LF_||''NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,'''
  +#13#10'      ||LF_||''CASE'''
  +#13#10'      ||LF_||''    WHEN A.cdcategoria = 1 THEN ''''BEZ'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdcategoria = 6 THEN ''''NOV'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdcategoria = 7 AND A.matrizseca = 0 THEN ''''VL'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdcategoria = 7 AND A.matrizseca = 1 THEN ''''VS'''' '''
  +#13#10'      ||LF_||''    ELSE IIF( A.DTBAIXA IS NULL,  ''''BEZ'''', ''''DES'''' )'''
  +#13#10'      ||LF_||''END,'''
  +#13#10'      ||LF_||''NULL, NULL,'''
  +#13#10'      ||LF_||''NULL, NULL, NULL,'''
  +#13#10'      ||LF_||''NULL, NULL'''
  +#13#10'      ||LF_||''FROM ANIMAL A'''
  +#13#10'      ||LF_||''LEFT JOIN ANIMAL P ON P.cdanimal = A.cdpai '''
  +#13#10'      ||LF_||''LEFT JOIN ANIMAL M ON M.cdanimal = A.cdmae '''
  +#13#10'      ||LF_||''LEFT JOIN SETOR  SETOR ON SETOR.CDSETOR = A.CDSETOR '''
  +#13#10'      ||LF_||''LEFT JOIN SP_GRUPOANIMALESPECIFICO( CURRENT_DATE, '' || COALESCE( :CODIGO_LOTE, -1 ) || '', A.CDANIMAL ) LOTE ON 1=1 '''
  +#13#10'      ||LF_||''WHERE A.SEXO = ''''F'''' AND A.ANIMALREBANHO = 1'' || SQL_WHERE'
  +#13#10'    )'
  +#13#10'  ON EXTERNAL DATA SOURCE :IDEAGRI'
  +#13#10'  WITH COMMON TRANSACTION'
  +#13#10'  INTO'
  +#13#10'     :BRINCO, :NOME_ESTAB, :NOME_COMPLETO, :REGISTRO, :DTNASC, :PAI, :NOME_PAI, :REGISTRO_PAI,'
  +#13#10'     :PD_PAI, :MAE, :NOME_MAE, :REGISTRO_MAE, :DTORIGEM, :LOCAL_ORIGEM, :PRECO_COMPRA, :DTDESC, :RAZAO,'
  +#13#10'     :MOTIVO, :PRECO_VENDA, :COMPRADOR, :RACA, :GSANGUE,'
  +#13#10'     :RETIRO, :LOTE,'
  +#13#10'     :NUCLEO, :REBANHO, :VACA,'
  +#13#10'     :AVO_PATERNO, :REG_AVO_PATERNO, :AVO_PATERNA, :REG_AVO_PATERNA,'
  +#13#10'     :AVO_MATERNO, :REG_AVO_MATERNO, :AVO_MATERNA, :REG_AVO_MATERNA,'
  +#13#10'     :TOURO1, :TOURO2, :TOURO3, :TOURO4,'
  +#13#10'     :TE,'
  +#13#10'     :INTENCAO_DESCARTE,'
  +#13#10'     :LOTE1, :DATA1, :LOTE2, :DATA2, :LOTE3, :DATA3, :LOTE4, :DATA4,'
  +#13#10'     :LOTE5, :DATA5, :LOTE6, :DATA6, :LOTE7, :DATA7, :LOTE8, :DATA8,'
  +#13#10'     :STATUS,'
  +#13#10'     :CRIADOR, :CIDCRIA,'
  +#13#10'     :CODIGO1, :CODIGO2, :CODIGO3, :PERSISTE, :POTENCIAL'
  +#13#10'  DO'
  +#13#10'  begin'
  +#13#10''
  +#13#10'  -- SELECT first 1 COMPOSICAO from doimp$ideagri_raca(:RACA) into :RACA;'
  +#13#10''
  +#13#10'   INSERT INTO IMP$CADASTRO'
  +#13#10'     ('
  +#13#10'       BRINCO, NOME_ESTAB, NOME_COMPLETO, REGISTRO, DTNASC, PAI, NOME_PAI, REGISTRO_PAI,'
  +#13#10'       PD_PAI, MAE, NOME_MAE, REGISTRO_MAE, DTORIGEM, LOCAL_ORIGEM, PRECO_COMPRA, DTDESC, RAZAO,'
  +#13#10'       MOTIVO, PRECO_VENDA, COMPRADOR, RACA, GSANGUE,'
  +#13#10'       RETIRO, LOTE,'
  +#13#10'       NUCLEO, REBANHO, VACA,'
  +#13#10'       AVO_PATERNO, REG_AVO_PATERNO, AVO_PATERNA, REG_AVO_PATERNA,'
  +#13#10'       AVO_MATERNO, REG_AVO_MATERNO, AVO_MATERNA, REG_AVO_MATERNA,'
  +#13#10'       TOURO1, TOURO2, TOURO3, TOURO4,'
  +#13#10'       TE,'
  +#13#10'       INTENCAO_DESCARTE,'
  +#13#10'       LOTE1, DATA1, LOTE2, DATA2, LOTE3, DATA3, LOTE4, DATA4,'
  +#13#10'       LOTE5, DATA5, LOTE6, DATA6, LOTE7, DATA7, LOTE8, DATA8,'
  +#13#10'       STATUS,'
  +#13#10'       CRIADOR, CIDCRIA,'
  +#13#10'       CODIGO1, CODIGO2, CODIGO3,'
  +#13#10'       PERSISTE, POTENCIAL'
  +#13#10'     )'
  +#13#10'   VALUES'
  +#13#10'     ('
  +#13#10'      :BRINCO, :NOME_ESTAB, :NOME_COMPLETO, :REGISTRO, :DTNASC, :PAI, :NOME_PAI, :REGISTRO_PAI,'
  +#13#10'      :PD_PAI, :MAE, :NOME_MAE, :REGISTRO_MAE, :DTORIGEM, :LOCAL_ORIGEM, :PRECO_COMPRA, :DTDESC, :RAZAO,'
  +#13#10'      :MOTIVO, :PRECO_VENDA, :COMPRADOR, :RACA, :GSANGUE,'
  +#13#10'      SUBSTRING ( :RETIRO FROM 1 FOR 32 ), SUBSTRING ( :LOTE FROM 1 FOR 32 ),'
  +#13#10'      :NUCLEO, :REBANHO, :VACA,'
  +#13#10'      :AVO_PATERNO, :REG_AVO_PATERNO, :AVO_PATERNA, :REG_AVO_PATERNA, :AVO_MATERNO, :REG_AVO_MATERNO,'
  +#13#10'      :AVO_MATERNA, :REG_AVO_MATERNA, :TOURO1, :TOURO2, :TOURO3, :TOURO4,'
  +#13#10'      :TE,'
  +#13#10'      :INTENCAO_DESCARTE,'
  +#13#10'      :LOTE1, :DATA1, :LOTE2, :DATA2, :LOTE3, :DATA3, :LOTE4, :DATA4,'
  +#13#10'      :LOTE5, :DATA5, :LOTE6, :DATA6, :LOTE7, :DATA7, :LOTE8, :DATA8,'
  +#13#10'      :STATUS,'
  +#13#10'      :CRIADOR, :CIDCRIA,'
  +#13#10'      :CODIGO1, :CODIGO2, :CODIGO3,'
  +#13#10'      :PERSISTE, :POTENCIAL'
  +#13#10'     ) ;'
  +#13#10'   end'
  +#13#10'end' ;

  _CREATE_PROCEDURE_DOIMP_PRODAP_CADASTRO =
         'CREATE OR ALTER PROCEDURE DOIMP$PRODAP_CADASTRO('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    PRODAP VARCHAR(1024) COLLATE ISO8859_1)'
  +#13#10'AS'
  +#13#10'declare variable brinco varchar(10) not null;'
  +#13#10'declare variable nome_estab varchar(60);'
  +#13#10'declare variable nome_completo varchar(60);'
  +#13#10'declare variable registro varchar(15);'
  +#13#10'declare variable dtnasc date;'
  +#13#10'declare variable pai varchar(8);'
  +#13#10'declare variable nome_pai varchar(40);'
  +#13#10'declare variable registro_pai varchar(15);'
  +#13#10'declare variable pd_pai varchar(5);'
  +#13#10'declare variable mae varchar(10);'
  +#13#10'declare variable nome_mae varchar(40);'
  +#13#10'declare variable registro_mae varchar(15);'
  +#13#10'declare variable dtorigem date;'
  +#13#10'declare variable local_origem varchar(20);'
  +#13#10'declare variable preco_compra numeric(15,2);'
  +#13#10'declare variable dtdesc date;'
  +#13#10'declare variable razao char(3);'
  +#13#10'declare variable motivo varchar(300);'
  +#13#10'declare variable preco_venda numeric(15,2);'
  +#13#10'declare variable comprador varchar(40);'
  +#13#10'declare variable raca varchar(20);'
  +#13#10'declare variable racaaux varchar(20);'
  +#13#10'declare variable gsangue smallint;'
  +#13#10'declare variable gsanguestr varchar(20);'
  +#13#10'declare variable retiro char(2);'
  +#13#10'declare variable lote char(2);'
  +#13#10'declare variable nucleo char(4);'
  +#13#10'declare variable rebanho varchar(5);'
  +#13#10'declare variable vaca varchar(8);'
  +#13#10'declare variable avo_paterno varchar(40);'
  +#13#10'declare variable reg_avo_paterno varchar(15);'
  +#13#10'declare variable avo_paterna varchar(40);'
  +#13#10'declare variable reg_avo_paterna varchar(15);'
  +#13#10'declare variable avo_materno varchar(40);'
  +#13#10'declare variable reg_avo_materno varchar(15);'
  +#13#10'declare variable avo_materna varchar(40);'
  +#13#10'declare variable reg_avo_materna varchar(15);'
  +#13#10'declare variable touro1 varchar(8);'
  +#13#10'declare variable touro2 varchar(8);'
  +#13#10'declare variable touro3 varchar(8);'
  +#13#10'declare variable touro4 varchar(8);'
  +#13#10'declare variable te char(2);'
  +#13#10'declare variable lote1 char(2);'
  +#13#10'declare variable data1 date;'
  +#13#10'declare variable lote2 char(2);'
  +#13#10'declare variable data2 date;'
  +#13#10'declare variable lote3 char(2);'
  +#13#10'declare variable data3 date;'
  +#13#10'declare variable lote4 char(2);'
  +#13#10'declare variable data4 date;'
  +#13#10'declare variable lote5 char(2);'
  +#13#10'declare variable data5 date;'
  +#13#10'declare variable lote6 char(2);'
  +#13#10'declare variable data6 date;'
  +#13#10'declare variable lote7 char(2);'
  +#13#10'declare variable data7 date;'
  +#13#10'declare variable lote8 char(2);'
  +#13#10'declare variable data8 date;'
  +#13#10'declare variable status varchar(3) not null;'
  +#13#10'declare variable criador varchar(40);'
  +#13#10'declare variable cidcria varchar(25);'
  +#13#10'declare variable codigo1 char(3);'
  +#13#10'declare variable codigo2 char(3);'
  +#13#10'declare variable codigo3 char(3);'
  +#13#10'declare variable persiste integer;'
  +#13#10'declare variable potencial integer;'
  +#13#10'declare LF_ char;'
  +#13#10'BEGIN'
  +#13#10' LF_ = ASCII_CHAR(10);'
  +#13#10''
  +#13#10' DELETE FROM IMP$CADASTRO ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   (    ''SELECT a.CDANIMAL, (TRIM(a.SIGLAANIMAL) || ''''[*]'''' || coalesce('''' '''' || a.NOME, '''''''')), ''' // BRINCO,NOME_ESTAB
  +#13#10'     ||LF_|| ''a.NOMECOMPLETO, '''  //NOME_COMPLETO
  +#13#10'     ||LF_|| ''a.REGISTRO,a.DTNASC,p.CDANIMAL,p.NOMECOMPLETO,p.REGISTRO, ''' // REGISTRO,DTNASC,PAI,NOME_PAI,REGISTRO_PAI,'
  +#13#10'     ||LF_|| ''null,m.CDANIMAL,m.NOMECOMPLETO,m.REGISTRO, ''' // PD_PAI,MAE,NOME_MAE,REGISTRO_MAE,
  +#13#10'     ||LF_|| ''null,null,null, ''' //DTORIGEM,LOCAL_ORIGEM,PRECO_COMPRA
  +#13#10'     ||LF_|| ''COALESCE( A.DTBAIXA, A.DTDESCARTE ),IIF( (A.DTBAIXA IS NOT NULL) OR (A.DTDESCARTE IS NOT NULL), ''''DES'''', NULL), '''   // DTDESC,RAZAO,'
  +#13#10'     ||LF_|| ''CASE ''' //  MOTIVO
  +#13#10'     ||LF_|| ''    WHEN (A.DTBAIXA is null) AND (A.DTDESCARTE is null)    THEN NULL'''
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''M''''  THEN ''''8'''' '' -- Mamite'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''AL'''' THEN ''''3'''' '' -- Aleijado (a)'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''CA'''' THEN ''''3'''' '' -- Cascos'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''DO'''' THEN ''''4'''' '' -- Doença'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''ID'''' THEN ''''8'''' '' -- Idade'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''MA'''' THEN ''''8'''' '' -- Mamite'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''NA'''' THEN ''''8'''' '' -- Náfego (a)'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''OR'''' THEN ''''6'''' '' -- Dificuldade de ordenha'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''OU'''' THEN ''''8'''' '' -- Outros'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''PO'''' THEN ''''8'''' '' -- Desenvolvimento ponderal inadequado'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''PR'''' THEN ''''6'''' '' -- Baixa produção / Habilidade materna'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''RE'''' THEN ''''7'''' '' -- Falha reprodutiva'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''TA'''' THEN ''''8'''' '' -- Teta anormal'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''TE'''' THEN ''''8'''' '' -- Temperamento'
  +#13#10'     ||LF_|| ''    else ''''11'''' '''
  +#13#10'     ||LF_|| ''END, '''
  +#13#10'     ||LF_|| ''null,null, ''' // PRECO_VENDA,COMPRADOR,
  +#13#10'     ||LF_|| ''SUBSTRING ( a.grausangue FROM 1 FOR 20 ), ''' // RACA
  +#13#10'     ||LF_|| ''SUBSTRING ( a.grausangue FROM 1 FOR 20 ), ''' // GSANGUE
  +#13#10'     ||LF_|| ''IIF(r.NOME IS NULL, NULL, SUBSTRING(r.NOME FROM 1 FOR 2) ), ''' // RETIRO
  +#13#10'     ||LF_|| ''null,null,null, ''' // LOTE,NUCLEO,REBANHO
  +#13#10'     ||LF_|| ''null,null,null,null,null,null,null,null,null,null, ''' // VACA, AVO_PATERNO,REG_AVO_PATERNO,AVO_PATERNA,REG_AVO_PATERNA,AVO_MATERNO,REG_AVO_MATERNO,AVO_MATERNA,REG_AVO_MATERNA, TOURO1
  +#13#10'     ||LF_|| ''null,null,null,''' // TOURO2,TOURO3,TOURO4
  +#13#10'     ||LF_|| ''CASE'''
  +#13#10'     ||LF_|| ''  WHEN A.CDCATEGORIA IN ( ''''F21'''', ''''F22'''', ''''F23'''', ''''F24'''') THEN ''''TE'''' '''  // = Doadora
  +#13#10'     ||LF_|| ''  WHEN A.CDCATEGORIA IN ( ''''F30'''', ''''F31'''', ''''F32'''', ''''F33'''', ''''F34'''', ''''F35'''',''''F36'''',   ''''F37'''' ) THEN ''''RE'''' ''' // = Receptora
  +#13#10'     ||LF_|| ''  ELSE NULL'''
  +#13#10'     ||LF_|| ''END,''' // TE
  +#13#10'     ||LF_|| ''null,null,null,null,null,null,'''  // LOTE1,DATA1,LOTE2,DATA2,LOTE3,DATA3,
  +#13#10'     ||LF_|| ''null,null,null,null,null,null,'''  //LOTE4,DATA4,LOTE5,DATA5,LOTE6,DATA6,
  +#13#10'     ||LF_|| ''null,null,null,null, ''' //LOTE7,DATA7,LOTE8,DATA8'
  +#13#10'     ||LF_|| ''CASE '''
  +#13#10'     ||LF_|| ''    WHEN ( A.DTBAIXA IS NOT NULL ) OR ( A.DTDESCARTE IS NOT NULL ) THEN ''''DES'''' '''
  +#13#10'     ||LF_|| ''    WHEN (a.LACTENTE = ''''S'''')  THEN ''''BEZ'''' '''
  +#13#10'     ||LF_|| ''    WHEN (a.CATEGANIMAL is null) or (upper(a.CATEGANIMAL) = ''''N'''')  THEN ''''NOV'''' '''
  +#13#10'     ||LF_|| ''    WHEN a.LACTANTE = ''''S'''' THEN ''''VL'''' '''
  +#13#10'     ||LF_|| ''    ELSE ''''VS'''' '''
  +#13#10'     ||LF_|| ''END, ''' //,STATUS,
  +#13#10'     ||LF_|| ''null,null,null,null,null,null,null ''' //CRIADOR, CIDCRIA, CODIGO1, CODIGO2, CODIGO3, PERSISTE, POTENCIAL'
  +#13#10'     ||LF_|| ''FROM ANIMAL a '''
  +#13#10'     ||LF_|| ''LEFT JOIN RETIRO r on r.cdretiro = a.cdretiro '''
  +#13#10'     ||LF_|| ''LEFT JOIN ANIMAL p on p.CDANIMAL = a.cdpai '''
  +#13#10'     ||LF_|| ''LEFT JOIN ANIMAL m on m.CDANIMAL = a.cdmae '''
  +#13#10'     ||LF_|| ''WHERE a.SEXO = ''''F'''' AND A.SITUACAO IN ( ''''V'''',''''M'''' )'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'    :BRINCO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,'
  +#13#10'    :PD_PAI,:MAE,:NOME_MAE,:REGISTRO_MAE,:DTORIGEM,:LOCAL_ORIGEM,:PRECO_COMPRA,:DTDESC,:RAZAO,'
  +#13#10'    :MOTIVO,:PRECO_VENDA,:COMPRADOR,:RACAAUX,:GSANGUESTR,:RETIRO,:LOTE,:NUCLEO,:REBANHO,:VACA,'
  +#13#10'    :AVO_PATERNO,:REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,'
  +#13#10'    :AVO_MATERNA,:REG_AVO_MATERNA,:TOURO1,:TOURO2,:TOURO3,:TOURO4,:TE,:LOTE1,:DATA1,:LOTE2,:DATA2,'
  +#13#10'    :LOTE3,:DATA3,:LOTE4,:DATA4,:LOTE5,:DATA5,:LOTE6,:DATA6,:LOTE7,:DATA7,:LOTE8,:DATA8,:STATUS,:CRIADOR,'
  +#13#10'    :CIDCRIA,:CODIGO1,:CODIGO2,:CODIGO3,:PERSISTE,:POTENCIAL'
  +#13#10' DO'
  +#13#10' begin'
  +#13#10''
  +#13#10'    SELECT first 1 COMPOSICAO from doimp$prodap_raca(:RACAAUX) into :RACA;'
  +#13#10'    SELECT first 1 IDGSANGUE from doimp$default_idgsangue(:GSANGUESTR) into :GSANGUE;'
  +#13#10''
  +#13#10'  INSERT INTO IMP$CADASTRO'
  +#13#10'    ('
  +#13#10'      BRINCO,NOME_ESTAB,NOME_COMPLETO,REGISTRO,DTNASC,PAI,NOME_PAI,REGISTRO_PAI,'
  +#13#10'      PD_PAI,MAE,NOME_MAE,REGISTRO_MAE,DTORIGEM,LOCAL_ORIGEM,PRECO_COMPRA,DTDESC,RAZAO,'
  +#13#10'      MOTIVO,PRECO_VENDA,COMPRADOR,RACA,GSANGUE,RETIRO,LOTE,NUCLEO,REBANHO,VACA,'
  +#13#10'      AVO_PATERNO,REG_AVO_PATERNO,AVO_PATERNA,REG_AVO_PATERNA,AVO_MATERNO,REG_AVO_MATERNO,'
  +#13#10'      AVO_MATERNA,REG_AVO_MATERNA,TOURO1,TOURO2,TOURO3,TOURO4,TE,LOTE1,DATA1,LOTE2,DATA2,'
  +#13#10'      LOTE3,DATA3,LOTE4,DATA4,LOTE5,DATA5,LOTE6,DATA6,LOTE7,DATA7,LOTE8,DATA8,STATUS,CRIADOR,'
  +#13#10'      CIDCRIA,CODIGO1,CODIGO2,CODIGO3,PERSISTE,POTENCIAL'
  +#13#10'    )'
  +#13#10'  VALUES'
  +#13#10'    ('
  +#13#10'     :BRINCO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,'
  +#13#10'     :PD_PAI,:MAE,:NOME_MAE,:REGISTRO_MAE,:DTORIGEM,:LOCAL_ORIGEM,:PRECO_COMPRA,:DTDESC,:RAZAO,'
  +#13#10'     :MOTIVO,:PRECO_VENDA,:COMPRADOR,:RACA,:GSANGUE,:RETIRO,:LOTE,:NUCLEO,:REBANHO,:VACA,'
  +#13#10'     :AVO_PATERNO,:REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,'
  +#13#10'     :AVO_MATERNA,:REG_AVO_MATERNA,:TOURO1,:TOURO2,:TOURO3,:TOURO4,:TE,:LOTE1,:DATA1,:LOTE2,:DATA2,'
  +#13#10'     :LOTE3,:DATA3,:LOTE4,:DATA4,:LOTE5,:DATA5,:LOTE6,:DATA6,:LOTE7,:DATA7,:LOTE8,:DATA8,:STATUS,:CRIADOR,'
  +#13#10'     :CIDCRIA,:CODIGO1,:CODIGO2,:CODIGO3,:PERSISTE,:POTENCIAL'
  +#13#10'    ) ;'
  +#13#10''
  +#13#10' end'
  +#13#10''
  +#13#10''
  +#13#10'end' ;

  _CREATE_PROCEDURE_DOIMP_PRODAP_CADTOURO =
         'CREATE OR ALTER PROCEDURE DOIMP$PRODAP_CADTOURO('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    PRODAP VARCHAR(1024) COLLATE ISO8859_1)'
  +#13#10'AS'
  +#13#10'declare variable codigo varchar(8) not null;'
  +#13#10'declare variable nome_estab varchar(60);'
  +#13#10'declare variable nome_completo varchar(60);'
  +#13#10'declare variable registro varchar(15);'
  +#13#10'declare variable dtnasc date;'
  +#13#10'declare variable pai varchar(8);'
  +#13#10'declare variable nome_pai varchar(40);'
  +#13#10'declare variable registro_pai varchar(15);'
  +#13#10'declare variable mae varchar(10);'
  +#13#10'declare variable nome_mae varchar(40);'
  +#13#10'declare variable registro_mae varchar(15);'
  +#13#10'declare variable leite integer;'
  +#13#10'declare variable tipo numeric(15,2);'
  +#13#10'declare variable ubere numeric(15,2);'
  +#13#10'declare variable pernape numeric(15,2);'
  +#13#10'declare variable parto integer;'
  +#13#10'declare variable qestoque integer;'
  +#13#10'declare variable qusada smallint;'
  +#13#10'declare variable concepcao integer;'
  +#13#10'declare variable valor numeric(15,2);'
  +#13#10'declare variable status char(1) not null;'
  +#13#10'declare variable raca varchar(20);'
  +#13#10'declare variable racaaux varchar(20);'
  +#13#10'declare variable gsangue smallint;'
  +#13#10'declare variable gsanguestr varchar(5);'
  +#13#10'declare variable retiro char(2);'
  +#13#10'declare variable lote char(2);'
  +#13#10'declare variable bojao smallint;'
  +#13#10'declare variable caneca smallint;'
  +#13#10'declare variable hack varchar(10);'
  +#13#10'declare variable dtdesc date;'
  +#13#10'declare variable razao char(3);'
  +#13#10'declare variable motivo char(3);'
  +#13#10'declare variable preco_venda numeric(15,2);'
  +#13#10'declare variable comprador varchar(40);'
  +#13#10'declare variable avo_paterno varchar(40);'
  +#13#10'declare variable reg_avo_paterno varchar(15);'
  +#13#10'declare variable avo_paterna varchar(40);'
  +#13#10'declare variable reg_avo_paterna varchar(15);'
  +#13#10'declare variable avo_materno varchar(40);'
  +#13#10'declare variable reg_avo_materno varchar(15);'
  +#13#10'declare variable avo_materna varchar(40);'
  +#13#10'declare variable reg_avo_materna varchar(15);'
  +#13#10'declare LF_ char;'
  +#13#10'BEGIN'
  +#13#10' LF_ = ASCII_CHAR(10);'
  +#13#10' DELETE FROM IMP$CADTOURO ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   ('
  +#13#10'      ''SELECT a.CDANIMAL, (TRIM(a.SIGLAANIMAL) || ''''[*]'''' || coalesce('''' '''' || a.NOME,'''''''')), '''
  +#13#10'   ||LF_|| ''a.NOMECOMPLETO, '''
  +#13#10'   ||LF_|| ''a.REGISTRO,a.DTNASC,p.CDANIMAL,p.NOMECOMPLETO,p.REGISTRO, '''
  +#13#10'   ||LF_|| ''m.CDANIMAL,m.NOMECOMPLETO,m.REGISTRO, '''
  +#13#10'   ||LF_|| ''NULL, NULL, NULL, NULL, NULL, 0, 0, NULL, NULL, '''
  +#13#10'   ||LF_|| ''CASE '''
  +#13#10'   ||LF_|| ''    WHEN (upper(a.CATEGANIMAL) = ''''S'''')  THEN ''''I'''' '''
  +#13#10'   ||LF_|| ''    ELSE ''''M'''' '''
  +#13#10'   ||LF_|| ''END, '''
  +#13#10'   ||LF_|| ''SUBSTRING ( a.grausangue FROM 1 FOR 20 ), ''' // RACA
  +#13#10'   ||LF_|| ''SUBSTRING ( a.grausangue FROM 1 FOR 20 ), ''' // GSANGUE
  +#13#10'   ||LF_|| ''IIF(r.NOME IS NULL, NULL, SUBSTRING(r.NOME FROM 1 FOR 2) ), '''
  +#13#10'   ||LF_|| ''NULL, NULL, NULL, NULL, '''
  +#13#10'   ||LF_|| ''COALESCE ( A.DTBAIXA, A.DTDESCARTE ), IIF( (A.DTBAIXA IS NOT NULL) AND (A.DTDESCARTE IS NOT NULL),''''DES'''', NULL), '''
  +#13#10'   ||LF_|| ''CASE '''
  +#13#10'   ||LF_|| ''    WHEN ( a.cddescarte is null ) and ( A.DTBAIXA is null ) THEN NULL '''
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''M'''' THEN ''''8'''' '' -- Mamite'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''AL'''' THEN ''''3'''' '' -- Aleijado (a)'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''CA'''' THEN ''''3'''' '' -- Cascos'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''DO'''' THEN ''''4'''' '' -- Doença'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''ID'''' THEN ''''8'''' '' -- Idade'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''MA'''' THEN ''''8'''' '' -- Mamite'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''NA'''' THEN ''''8'''' '' -- Náfego (a)'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''OR'''' THEN ''''6'''' '' -- Dificuldade de ordenha'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''OU'''' THEN ''''8'''' '' -- Outros'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''PO'''' THEN ''''8'''' '' -- Desenvolvimento ponderal inadequado'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''PR'''' THEN ''''6'''' '' -- Baixa produção / Habilidade materna'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''RE'''' THEN ''''7'''' '' -- Falha reprodutiva'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''TA'''' THEN ''''8'''' '' -- Teta anormal'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''TE'''' THEN ''''8'''' '' -- Temperamento'
  +#13#10'   ||LF_|| ''    else ''''8'''' '''
  +#13#10'   ||LF_|| ''END, '''
  +#13#10'   ||LF_|| ''NULL,NULL,NULL,NULL, NULL,NULL,NULL,NULL,NULL,NULL '''
  +#13#10'   ||LF_|| ''FROM ANIMAL a '''
  +#13#10'   ||LF_|| ''LEFT JOIN RETIRO r on r.cdretiro = a.cdretiro '''
  +#13#10'   ||LF_|| ''LEFT JOIN ANIMAL p on p.CDANIMAL = a.cdpai '''
  +#13#10'   ||LF_|| ''LEFT JOIN ANIMAL m on m.CDANIMAL = a.cdmae '''
  +#13#10'   ||LF_|| ''WHERE a.SEXO = ''''M'''' '''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'    :CODIGO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,:MAE,:NOME_MAE,'
  +#13#10'    :REGISTRO_MAE,:LEITE,:TIPO,:UBERE,:PERNAPE,:PARTO,:QESTOQUE,:QUSADA,:CONCEPCAO,:VALOR,:STATUS,:GSANGUESTR,'
  +#13#10'    :RACAAUX,:RETIRO,:LOTE,:BOJAO,:CANECA,:HACK,:DTDESC,:RAZAO,:MOTIVO,:PRECO_VENDA,:COMPRADOR,:AVO_PATERNO,'
  +#13#10'    :REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,:AVO_MATERNA,:REG_AVO_MATERNA'
  +#13#10'  DO'
  +#13#10'  begin'
  +#13#10''
  +#13#10'    SELECT first 1 COMPOSICAO from doimp$prodap_raca(:RACAAUX) into :RACA;'
  +#13#10'    SELECT first 1 IDGSANGUE from doimp$default_idgsangue(:GSANGUESTR) into :GSANGUE;'
  +#13#10''
  +#13#10'    INSERT INTO IMP$CADTOURO'
  +#13#10'     ('
  +#13#10'       CODIGO,NOME_ESTAB,NOME_COMPLETO,REGISTRO,DTNASC,PAI,NOME_PAI,REGISTRO_PAI,MAE,NOME_MAE,'
  +#13#10'       REGISTRO_MAE,LEITE,TIPO,UBERE,PERNAPE,PARTO,QESTOQUE,QUSADA,CONCEPCAO,VALOR,STATUS,GSANGUE,'
  +#13#10'       RACA,RETIRO,LOTE,BOJAO,CANECA,HACK,DTDESC,RAZAO,MOTIVO,PRECO_VENDA,COMPRADOR,AVO_PATERNO,'
  +#13#10'       REG_AVO_PATERNO,AVO_PATERNA,REG_AVO_PATERNA,AVO_MATERNO,REG_AVO_MATERNO,AVO_MATERNA,REG_AVO_MATERNA'
  +#13#10'     )'
  +#13#10'    VALUES'
  +#13#10'    ('
  +#13#10'      :CODIGO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,:MAE,:NOME_MAE,'
  +#13#10'      :REGISTRO_MAE,:LEITE,:TIPO,:UBERE,:PERNAPE,:PARTO,:QESTOQUE,:QUSADA,:CONCEPCAO,:VALOR,:STATUS,:GSANGUE,'
  +#13#10'      :RACA,:RETIRO,:LOTE,:BOJAO,:CANECA,:HACK,:DTDESC,:RAZAO,:MOTIVO,:PRECO_VENDA,:COMPRADOR,:AVO_PATERNO,'
  +#13#10'      :REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,:AVO_MATERNA,:REG_AVO_MATERNA'
  +#13#10'    ) ;'
  +#13#10''
  +#13#10'  end'
  +#13#10'end' ;

  _CREATE_PROCEDURE_DOIMP_PRODAP_RACA =
        'CREATE OR ALTER PROCEDURE DOIMP$PRODAP_RACA('
  +#13#10'    RACA VARCHAR(20) COLLATE ISO8859_1)'
  +#13#10'RETURNS ('
  +#13#10'    COMPOSICAO VARCHAR(20) COLLATE ISO8859_1)'
  +#13#10'AS'
  +#13#10'DECLARE COMPOSICAO1 VARCHAR(20) COLLATE ISO8859_1 ;'
  +#13#10'DECLARE COMPOSICAO2 VARCHAR(20) COLLATE ISO8859_1 = NULL ;'
  +#13#10'begin'
  +#13#10''
  +#13#10'  RACA = UPPER ( TRIM( RACA ) ) ;'
  +#13#10''
  +#13#10'  IF (SUBSTRING(RACA FROM 1 FOR 1) IN (''1'',''2'',''3'',''4'',''5'',''6'',''7'',''8'',''9'')) then'
  +#13#10'     RACA = SUBSTRING(RACA FROM POSITION('' '' IN RACA)+1 FOR 20);'
  +#13#10'  ELSE IF ( RACA LIKE ''HOLAND_S P_B'') then'
  +#13#10'     RACA    = ''HPB'' ;'
  +#13#10'  ELSE IF ( RACA LIKE ''HOLAND_S VERMELHO'' ) then'
  +#13#10'     RACA    = ''HVB'' ;'
  +#13#10'  ELSE IF ( RACA LIKE ''PARDO SU__O%'' ) then'
  +#13#10'     RACA    = ''PDS'' ;'
  +#13#10'  ELSE IF ( RACA LIKE ''GIR LEITEIRO'' ) then'
  +#13#10'     RACA    = ''GIR'' ;'
  +#13#10'  ELSE IF ( RACA LIKE ''JERSEY'' ) then'
  +#13#10'     RACA    = ''JER'' ;'
  +#13#10''
  +#13#10'  IF (POSITION('','' IN RACA) > 0) THEN'
  +#13#10'    BEGIN'
  +#13#10'      COMPOSICAO1 = TRIM( SUBSTRING(RACA FROM 1 FOR (POSITION('','' IN RACA)-1)) );'
  +#13#10'      COMPOSICAO2 = TRIM( SUBSTRING(RACA FROM (POSITION('','' IN RACA)+1) FOR 20 )) ;'
  +#13#10'    END'
  +#13#10'  ELSE'
  +#13#10'    COMPOSICAO1 = TRIM ( RACA ) ;'
  +#13#10''
  +#13#10'  COMPOSICAO1 = case COMPOSICAO1'
  +#13#10'    when ''HPB'' then ''HPB'''
  +#13#10'    when ''HVB'' then ''HVB'''
  +#13#10'    when ''PDS'' then ''PDS'''
  +#13#10'    when ''JER'' then ''JER'''
  +#13#10'    when ''GIR'' then ''GIR'''
  +#13#10'    when ''WW''  then ''HVB'''
  +#13#10'    when ''GI''  then ''GIR'''
  +#13#10'    when ''GL''  then ''GIR'''
  +#13#10'    when ''HO''  then ''HPB'''
  +#13#10'    when ''GO''  then ''GHL'''
  +#13#10'    when ''JE''  then ''JER'''
  +#13#10'    when ''NE''  then ''XX'''
  +#13#10'    when ''SRD'' then ''XX'''
  +#13#10'    else ''XX'''
  +#13#10'  end;'
  +#13#10''
  +#13#10'  if (COMPOSICAO2 IS NOT NULL) then'
  +#13#10'  COMPOSICAO2 = case COMPOSICAO2'
  +#13#10'    when ''HPB'' then ''HPB'''
  +#13#10'    when ''HVB'' then ''HVB'''
  +#13#10'    when ''PDS'' then ''PDS'''
  +#13#10'    when ''JER'' then ''JER'''
  +#13#10'    when ''GIR'' then ''GIR'''
  +#13#10'    when ''WW''  then ''HVB'''
  +#13#10'    when ''GI''  then ''GIR'''
  +#13#10'    when ''GL''  then ''GIR'''
  +#13#10'    when ''HO''  then ''HPB'''
  +#13#10'    when ''GO''  then ''GHL'''
  +#13#10'    when ''JE''  then ''JER'''
  +#13#10'    when ''NE''  then ''XX'''
  +#13#10'    when ''SRD'' then ''XX'''
  +#13#10'    else ''XX'''
  +#13#10'  end;'
  +#13#10''
  +#13#10'  if (COMPOSICAO2 IS NULL) then'
  +#13#10'    COMPOSICAO = COMPOSICAO1 ;'
  +#13#10'  ELSE'
  +#13#10'    COMPOSICAO = COMPOSICAO1 ||'',''|| COMPOSICAO2 ;'
  +#13#10''
  +#13#10'  suspend;'
  +#13#10'end' ;


  _CREATE_PROCEDURE_DOIMP_DOIMP_DEFAULT_GSANGUE =
         'CREATE OR ALTER PROCEDURE DOIMP$DEFAULT_GSANGUE('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    IDEAGRI VARCHAR(1024) COLLATE ISO8859_1)'
  +#13#10'AS'
  +#13#10'begin'
  +#13#10''
  +#13#10'    DELETE FROM IMP$GSANGUE ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES (1,''1/2'') ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES (2,''3/4'') ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES (3,''7/8'') ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES (4,''15/16'') ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES (5,''31/32'') ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES (8,''PO'') ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES ( 10, ''11/16'' ) ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES ( 11, ''13/16'' ) ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES ( 12, ''7/16'' ) ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES ( 13, ''5/8'' ) ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES ( 14, ''9/16'' ) ;'
  +#13#10''
  +#13#10'end' ;

begin
 ExecuteDirect(  _CREATE_PROCEDURE_DOIMP_DOIMP_DEFAULT_IDGSANGUE ) ;
 ExecuteDirect(  _CREATE_PROCEDURE_DOIMP_IDEAGRI_CADASTRO ) ;
 ExecuteDirect(  _CREATE_PROCEDURE_DOIMP_PRODAP_CADASTRO ) ;
 ExecuteDirect(  _CREATE_PROCEDURE_DOIMP_PRODAP_CADTOURO ) ;
 ExecuteDirect(  _CREATE_PROCEDURE_DOIMP_PRODAP_RACA ) ;
 ExecuteDirect(  _CREATE_PROCEDURE_DOIMP_DOIMP_DEFAULT_GSANGUE ) ;


end;

procedure TDBZootecnicoUpdate._5_000_89 ;
const

   _ALTER_TABLE_IMPCADASTRO_RACA =
     'ALTER TABLE IMP$CADASTRO ALTER RACA TYPE VARCHAR (32)' ;

   _ALTER_TABLE_IMPCADTOURO_RACA =
     'ALTER TABLE IMP$CADTOURO ALTER RACA TYPE VARCHAR (32)' ;

   _ALTER_TABLE_IMPCADTOURO_LOTE =
     'ALTER TABLE IMP$CADTOURO ALTER LOTE TYPE VARCHAR (32)' ;

   _ALTER_TABLE_IMPCADTOURO_RETIRO =
     'ALTER TABLE IMP$CADTOURO ALTER RETIRO TYPE VARCHAR (32)' ;

  _CREATE_PROCEDURE_DOIMP_PRODAP_PESO =
         'CREATE OR ALTER PROCEDURE DOIMP$PRODAP_PESO('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    PRODAP VARCHAR(1024) COLLATE ISO8859_1)'
  +#13#10'AS'
  +#13#10'declare variable brinco varchar(10) not null;'
  +#13#10'declare variable data date not null;'
  +#13#10'declare variable peso smallint;'
  +#13#10'declare LF_ char;'
  +#13#10'BEGIN'
  +#13#10' LF_ = ASCII_CHAR(10);'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   ('
  +#13#10'           ''SELECT CDANIMAL,DTPESO,PESO'''
  +#13#10'   ||LF_|| ''FROM PESO'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'    :BRINCO,:DATA,:PESO'
  +#13#10' DO'
  +#13#10'    INSERT INTO IMP$PESO'
  +#13#10'     ('
  +#13#10'       BRINCO,DATA,PESO, GUID'
  +#13#10'     )'
  +#13#10'    VALUES'
  +#13#10'    ('
  +#13#10'      :BRINCO,:DATA,:PESO, Guid20()'
  +#13#10'    ) ;'
  +#13#10'end'  ;


  _CREATE_PROCEDURE_DOIMP_PRODAP_ALTURA =
          'CREATE OR ALTER PROCEDURE DOIMP$PRODAP_ALTURA('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    PRODAP VARCHAR(1024) COLLATE ISO8859_1)'
  +#13#10'AS'
  +#13#10'declare variable brinco varchar(10) not null;'
  +#13#10'declare variable data date not null;'
  +#13#10'declare variable ALTURA smallint;'
  +#13#10'declare LF_ char;'
  +#13#10'BEGIN'
  +#13#10' LF_ = ASCII_CHAR(10);'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   ('
  +#13#10'           ''SELECT CDANIMAL,DTALTURA,ALTURA'''
  +#13#10'   ||LF_|| ''FROM ALTURA'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'    :BRINCO,:DATA,:ALTURA'
  +#13#10' DO'
  +#13#10'    UPDATE OR INSERT INTO IMP$PESO'
  +#13#10'     ('
  +#13#10'       BRINCO,DATA,ALTURA, GUID'
  +#13#10'     )'
  +#13#10'    VALUES'
  +#13#10'    ('
  +#13#10'      :BRINCO,:DATA,:ALTURA, Guid20()'
  +#13#10'    )'
  +#13#10'    MATCHING'
  +#13#10'    ('
  +#13#10'      BRINCO,DATA'
  +#13#10'    );'
  +#13#10'end' ;

  _CREATE_PROCEDURE_DOIMP_PRODAP_PESOALTURA =
         'CREATE OR ALTER PROCEDURE DOIMP$PRODAP_PESOALTURA('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    PRODAP VARCHAR(1024) COLLATE ISO8859_1)'
  +#13#10'AS'
  +#13#10'BEGIN'
  +#13#10'  DELETE FROM IMP$PESO ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_PESO KCAD_FAZENDA, PRODAP ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_ALTURA KCAD_FAZENDA, PRODAP ;'
  +#13#10'END'  ;


  _CREATE_PROCEDURE_DOIMP_PRODAP_CIOSCOB =
         'CREATE OR ALTER PROCEDURE DOIMP$PRODAP_CIOSCOB('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    PRODAP VARCHAR(1024) COLLATE ISO8859_1)'
  +#13#10'AS'
  +#13#10'declare variable brinco varchar(10) not null;'
  +#13#10'declare variable dtucio date not null;'
  +#13#10'declare variable dtucob date;'
  +#13#10'declare variable touro varchar(8);'
  +#13#10'declare variable im char(1);'
  +#13#10'declare variable doses smallint;'
  +#13#10'declare variable cio char(1);'
  +#13#10'declare variable ab_sp char(1);'
  +#13#10'declare variable dataconf date;'
  +#13#10'declare variable data_ab date;'
  +#13#10'declare variable num_com varchar(6);'
  +#13#10'declare variable funcionar char(2);'
  +#13#10'declare variable observacao varchar(15);'
  +#13#10'declare variable reexaminar char(1);'
  +#13#10'declare variable conf char(1);'
  +#13#10'declare variable intervalo smallint;'
  +#13#10'declare variable dtparto date;'
  +#13#10'declare variable sexo1 char(1);'
  +#13#10'declare variable sexo2 char(1);'
  +#13#10'declare variable embrioes smallint;'
  +#13#10'declare LF_ char;'
  +#13#10'BEGIN'
  +#13#10' LF_ = ASCII_CHAR(10);'
  +#13#10' DELETE FROM IMP$CIOSCOB ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   ('
  +#13#10'      ''SELECT R.CDANIMAL,R.DTREPRODUCAO,NULL,AR.CDPAI, '''
  +#13#10'   ||LF_|| ''CASE '''
  +#13#10'   ||LF_|| ''  WHEN '''
  +#13#10'   ||LF_|| ''    (R.DTPARTOOCORRIDO is not null) and '''
  +#13#10'   ||LF_|| ''    (R.TIPOINSEMINACAO is null or trim(R.TIPOINSEMINACAO) = '''''''' ) THEN ''''I'''' '''
  +#13#10'   ||LF_|| ''  WHEN R.TIPOINSEMINACAO = ''''AN'''' OR R.TIPOINSEMINACAO = ''''AC'''' THEN ''''I'''' '''
  +#13#10'   ||LF_|| ''  WHEN R.TIPOINSEMINACAO is not null and TRIM(R.TIPOINSEMINACAO) != '''''''' THEN substring(R.TIPOINSEMINACAO from 1 for 1) '''
  +#13#10'   ||LF_|| ''  ELSE ''''I'''' '''
  +#13#10'   ||LF_|| ''END, '''
  +#13#10'   ||LF_|| ''IIF(TRIM(R.TIPOINSEMINACAO) != '''''''' and substring(R.TIPOINSEMINACAO from 1 for 1) <> ''''M'''', 1, null), '''
  +#13#10'   ||LF_|| ''NULL,NULL,R.DTTOQUE,NULL,NULL,NULL,NULL,NULL, '''
  +#13#10'   ||LF_|| ''CASE '''
  +#13#10'   ||LF_|| ''    WHEN R.DTPARTOPROVAVEL is not null THEN ''''S'''' '''
  +#13#10'   ||LF_|| ''    WHEN R.DTTOQUE is not null THEN ''''N'''' '''
  +#13#10'   ||LF_|| ''    ELSE NULL '''
  +#13#10'   ||LF_|| ''END, '''
  +#13#10'   ||LF_|| ''NULL,R.DTPARTOOCORRIDO,A1.sexo, A2.sexo, null '''
  +#13#10'   ||LF_|| ''FROM REPRODUCAO R '''
  +#13#10'   ||LF_|| ''LEFT JOIN ANIMAL A1 on A1.cdanimal = R.cdcria1 '''
  +#13#10'   ||LF_|| ''LEFT JOIN ANIMAL A2 on A2.cdanimal = R.cdcria2 '''
  +#13#10'   ||LF_|| ''LEFT JOIN ANIREPRODUCAO AR on AR.cdreproducao = R.cdreproducao'''
  +#13#10'   ||LF_|| ''WHERE R.TIPOINSEMINACAO IS NOT NULL'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'   :BRINCO,:DTUCIO,:DTUCOB,:TOURO,:IM,:DOSES,:CIO,:AB_SP,:DATACONF,:DATA_AB,:NUM_COM,:FUNCIONAR,'
  +#13#10'   :OBSERVACAO,:REEXAMINAR,:CONF,:INTERVALO,:DTPARTO,:SEXO1,:SEXO2,:EMBRIOES'
  +#13#10' DO'
  +#13#10'    INSERT INTO IMP$CIOSCOB'
  +#13#10'     ('
  +#13#10'      BRINCO,DTUCIO,DTUCOB,TOURO,IM,DOSES,CIO,AB_SP,DATACONF,DATA_AB,NUM_COM,FUNCIONAR,'
  +#13#10'      OBSERVACAO,REEXAMINAR,CONF,INTERVALO,DTPARTO,SEXO1,SEXO2,EMBRIOES'
  +#13#10'     )'
  +#13#10'    VALUES'
  +#13#10'    ('
  +#13#10'       :BRINCO,:DTUCIO,:DTUCOB,:TOURO,:IM,:DOSES,:CIO,:AB_SP,:DATACONF,:DATA_AB,:NUM_COM,:FUNCIONAR,'
  +#13#10'       :OBSERVACAO,:REEXAMINAR,:CONF,:INTERVALO,:DTPARTO,:SEXO1,:SEXO2,:EMBRIOES'
  +#13#10'    ) ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   ('
  +#13#10'      ''SELECT R.CDANIMAL,R.DTREPRODUCAO,NULL,AR.CDPAI, '''
  +#13#10'   ||LF_|| ''CASE '''
  +#13#10'   ||LF_|| ''  WHEN '''
  +#13#10'   ||LF_|| ''    (R.DTPARTOOCORRIDO is not null) and '''
  +#13#10'   ||LF_|| ''    (R.TIPOINSEMINACAO is null or trim(R.TIPOINSEMINACAO) = '''''''' ) THEN ''''I'''' '''
  +#13#10'   ||LF_|| ''  WHEN R.TIPOINSEMINACAO = ''''AN'''' OR R.TIPOINSEMINACAO = ''''AC'''' THEN ''''I'''' '''
  +#13#10'   ||LF_|| ''  WHEN R.TIPOINSEMINACAO is not null and TRIM(R.TIPOINSEMINACAO) != '''''''' THEN substring(R.TIPOINSEMINACAO from 1 for 1) '''
  +#13#10'   ||LF_|| ''  ELSE ''''I'''' '''
  +#13#10'   ||LF_|| ''END, '''
  +#13#10'   ||LF_|| ''IIF(TRIM(R.TIPOINSEMINACAO) != '''''''' and substring(R.TIPOINSEMINACAO from 1 for 1) <> ''''M'''', 1, null), '''
  +#13#10'   ||LF_|| ''NULL,NULL,R.DTTOQUE,NULL,NULL,NULL,NULL,NULL, '''
  +#13#10'   ||LF_|| ''CASE '''
  +#13#10'   ||LF_|| ''    WHEN R.DTPARTOPROVAVEL is not null THEN ''''S'''' '''
  +#13#10'   ||LF_|| ''    WHEN R.DTTOQUE is not null THEN ''''N'''' '''
  +#13#10'   ||LF_|| ''    ELSE NULL '''
  +#13#10'   ||LF_|| ''END, '''
  +#13#10'   ||LF_|| ''NULL,R.DTPARTOOCORRIDO,A1.sexo, A2.sexo, null '''
  +#13#10'   ||LF_|| ''FROM REPRODUCAO2 R '''
  +#13#10'   ||LF_|| ''LEFT JOIN ANIMAL A1 on A1.cdanimal = R.cdcria1 '''
  +#13#10'   ||LF_|| ''LEFT JOIN ANIMAL A2 on A2.cdanimal = R.cdcria2 '''
  +#13#10'   ||LF_|| ''LEFT JOIN ANIREPRODUCAO2 AR on AR.cdreproducao = R.cdreproducao'''
  +#13#10'   ||LF_|| ''WHERE R.TIPOINSEMINACAO IS NOT NULL'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'   :BRINCO,:DTUCIO,:DTUCOB,:TOURO,:IM,:DOSES,:CIO,:AB_SP,:DATACONF,:DATA_AB,:NUM_COM,:FUNCIONAR,'
  +#13#10'   :OBSERVACAO,:REEXAMINAR,:CONF,:INTERVALO,:DTPARTO,:SEXO1,:SEXO2,:EMBRIOES'
  +#13#10' DO'
  +#13#10'    INSERT INTO IMP$CIOSCOB'
  +#13#10'     ('
  +#13#10'      BRINCO,DTUCIO,DTUCOB,TOURO,IM,DOSES,CIO,AB_SP,DATACONF,DATA_AB,NUM_COM,FUNCIONAR,'
  +#13#10'      OBSERVACAO,REEXAMINAR,CONF,INTERVALO,DTPARTO,SEXO1,SEXO2,EMBRIOES'
  +#13#10'     )'
  +#13#10'    VALUES'
  +#13#10'    ('
  +#13#10'       :BRINCO,:DTUCIO,:DTUCOB,:TOURO,:IM,:DOSES,:CIO,:AB_SP,:DATACONF,:DATA_AB,:NUM_COM,:FUNCIONAR,'
  +#13#10'       :OBSERVACAO,:REEXAMINAR,:CONF,:INTERVALO,:DTPARTO,:SEXO1,:SEXO2,:EMBRIOES'
  +#13#10'    ) ;'
  +#13#10''
  +#13#10'end' ;


  _CREATE_PROCEDURE_DOIMP_PRODAP_RACA =
         'CREATE OR ALTER PROCEDURE DOIMP$PRODAP_RACA('
  +#13#10'    RACA VARCHAR(20) COLLATE ISO8859_1)'
  +#13#10'RETURNS ('
  +#13#10'    COMPOSICAO VARCHAR(20) COLLATE ISO8859_1)'
  +#13#10'AS'
  +#13#10'DECLARE COMPOSICAO1 VARCHAR(10) COLLATE ISO8859_1 ;'
  +#13#10'DECLARE COMPOSICAO2 VARCHAR(10) COLLATE ISO8859_1 ;'
  +#13#10'begin'
  +#13#10''
  +#13#10'  COMPOSICAO2 = NULL ;'
  +#13#10''
  +#13#10'  if (SUBSTRING(RACA FROM 1 FOR 1) IN (''1'',''2'',''3'',''4'',''5'',''6'',''7'',''8'',''9'')) then'
  +#13#10'     RACA = SUBSTRING(RACA FROM POSITION('' '' IN RACA)+1 FOR 20);'
  +#13#10''
  +#13#10'  IF (POSITION('','' IN RACA) > 0) THEN'
  +#13#10'    BEGIN'
  +#13#10'      COMPOSICAO1 = TRIM( SUBSTRING(RACA FROM 1 FOR (POSITION('','' IN RACA)-1)) );'
  +#13#10'      COMPOSICAO2 = TRIM( SUBSTRING(RACA FROM (POSITION('','' IN RACA)+1) FOR 20 )) ;'
  +#13#10'    END'
  +#13#10'  ELSE'
  +#13#10'    COMPOSICAO1 = TRIM ( RACA ) ;'
  +#13#10''
  +#13#10'  COMPOSICAO1 = case COMPOSICAO1'
  +#13#10'    when ''HPB'' then ''HPB'''
  +#13#10'    when ''HVB'' then ''HVB'''
  +#13#10'    when ''WW''  then ''HVB'''
  +#13#10'    when ''GIR'' then ''GIR'''
  +#13#10'    when ''GI''  then ''GIR'''
  +#13#10'    when ''GL''  then ''GIR'''
  +#13#10'    when ''HO''  then ''HPB'''
  +#13#10'    when ''GO''  then ''XX'''
  +#13#10'    when ''JE''  then ''JER'''
  +#13#10'    when ''NE''  then ''XX'''
  +#13#10'    when ''SRD'' then ''XX'''
  +#13#10'    else ''XX'''
  +#13#10'  end;'
  +#13#10''
  +#13#10'  if (COMPOSICAO2 IS NOT NULL) then'
  +#13#10'  COMPOSICAO2 = case COMPOSICAO2'
  +#13#10'    when ''HPB'' then ''HPB'''
  +#13#10'    when ''HVB'' then ''HVB'''
  +#13#10'    when ''WW''  then ''HVB'''
  +#13#10'    when ''GIR'' then ''GIR'''
  +#13#10'    when ''GI''  then ''GIR'''
  +#13#10'    when ''GL''  then ''GIR'''
  +#13#10'    when ''HO''  then ''HPB'''
  +#13#10'    when ''GO''  then ''XX'''
  +#13#10'    when ''JE''  then ''JER'''
  +#13#10'    when ''NE''  then ''XX'''
  +#13#10'    when ''SRD'' then ''XX'''
  +#13#10'    else ''XX'''
  +#13#10'  end;'
  +#13#10''
  +#13#10'  if (COMPOSICAO2 IS NULL) then'
  +#13#10'    COMPOSICAO = COMPOSICAO1 ;'
  +#13#10'  ELSE'
  +#13#10'    COMPOSICAO = COMPOSICAO1 ||'',''|| COMPOSICAO2 ;'
  +#13#10''
  +#13#10'  suspend;'
  +#13#10'end' ;


  _CREATE_PROCEDURE_DOIMP_DOIMP_DEFAULT_IDGSANGUE =
         'CREATE OR ALTER PROCEDURE DOIMP$DEFAULT_IDGSANGUE('
  +#13#10'    GSANGUE VARCHAR(5) COLLATE ISO8859_1)'
  +#13#10'RETURNS ('
  +#13#10'    IDGSANGUE SMALLINT)'
  +#13#10'AS'
  +#13#10'begin'
  +#13#10''
  +#13#10'  idgsangue = case trim(gsangue)'
  +#13#10'    when ''PO'' then 8'
  +#13#10'    when ''1/2'' then 1'
  +#13#10'    when ''3/4'' then 2'
  +#13#10'    when ''7/8'' then 3'
  +#13#10'    when ''15/16'' then 4'
  +#13#10'    when ''31/32'' then 5'
  +#13#10'    when ''11/16'' then 10'
  +#13#10'    when ''13/16'' then 11'
  +#13#10'    when ''7/16'' then 12'
  +#13#10'    else NULL'
  +#13#10'  end;'
  +#13#10''
  +#13#10'  suspend;'
  +#13#10'end' ;


  _CREATE_PROCEDURE_DOIMP_DOIMP_DEFAULT_GSANGUE =
         'CREATE OR ALTER PROCEDURE DOIMP$DEFAULT_GSANGUE('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    IDEAGRI VARCHAR(1024) COLLATE ISO8859_1)'
  +#13#10'AS'
  +#13#10'begin'
  +#13#10''
  +#13#10'    DELETE FROM IMP$GSANGUE ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES (1,''1/2'') ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES (2,''3/4'') ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES (3,''7/8'') ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES (4,''15/16'') ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES (5,''31/32'') ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES (8,''PO'') ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES ( 10, ''11/16'' ) ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES ( 11, ''13/16'' ) ;'
  +#13#10'    INSERT INTO IMP$GSANGUE (GRAUSANGUE, DESCRICAO) VALUES ( 12, ''7/16'' ) ;'
  +#13#10''
  +#13#10'end' ;

  _CREATE_PROCEDURE_DOIMP_PRODAP_CADASTRO =
         'CREATE OR ALTER PROCEDURE DOIMP$PRODAP_CADASTRO('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    PRODAP VARCHAR(1024) COLLATE ISO8859_1)'
  +#13#10'AS'
  +#13#10'declare variable brinco varchar(10) not null;'
  +#13#10'declare variable nome_estab varchar(60);'
  +#13#10'declare variable nome_completo varchar(60);'
  +#13#10'declare variable registro varchar(15);'
  +#13#10'declare variable dtnasc date;'
  +#13#10'declare variable pai varchar(8);'
  +#13#10'declare variable nome_pai varchar(40);'
  +#13#10'declare variable registro_pai varchar(15);'
  +#13#10'declare variable pd_pai varchar(5);'
  +#13#10'declare variable mae varchar(10);'
  +#13#10'declare variable nome_mae varchar(40);'
  +#13#10'declare variable registro_mae varchar(15);'
  +#13#10'declare variable dtorigem date;'
  +#13#10'declare variable local_origem varchar(20);'
  +#13#10'declare variable preco_compra numeric(15,2);'
  +#13#10'declare variable dtdesc date;'
  +#13#10'declare variable razao char(3);'
  +#13#10'declare variable motivo varchar(300);'
  +#13#10'declare variable preco_venda numeric(15,2);'
  +#13#10'declare variable comprador varchar(40);'
  +#13#10'declare variable raca varchar(20);'
  +#13#10'declare variable racaaux varchar(20);'
  +#13#10'declare variable gsangue smallint;'
  +#13#10'declare variable gsanguestr varchar(5);'
  +#13#10'declare variable retiro char(2);'
  +#13#10'declare variable lote char(2);'
  +#13#10'declare variable nucleo char(4);'
  +#13#10'declare variable rebanho varchar(5);'
  +#13#10'declare variable vaca varchar(8);'
  +#13#10'declare variable avo_paterno varchar(40);'
  +#13#10'declare variable reg_avo_paterno varchar(15);'
  +#13#10'declare variable avo_paterna varchar(40);'
  +#13#10'declare variable reg_avo_paterna varchar(15);'
  +#13#10'declare variable avo_materno varchar(40);'
  +#13#10'declare variable reg_avo_materno varchar(15);'
  +#13#10'declare variable avo_materna varchar(40);'
  +#13#10'declare variable reg_avo_materna varchar(15);'
  +#13#10'declare variable touro1 varchar(8);'
  +#13#10'declare variable touro2 varchar(8);'
  +#13#10'declare variable touro3 varchar(8);'
  +#13#10'declare variable touro4 varchar(8);'
  +#13#10'declare variable te char(2);'
  +#13#10'declare variable lote1 char(2);'
  +#13#10'declare variable data1 date;'
  +#13#10'declare variable lote2 char(2);'
  +#13#10'declare variable data2 date;'
  +#13#10'declare variable lote3 char(2);'
  +#13#10'declare variable data3 date;'
  +#13#10'declare variable lote4 char(2);'
  +#13#10'declare variable data4 date;'
  +#13#10'declare variable lote5 char(2);'
  +#13#10'declare variable data5 date;'
  +#13#10'declare variable lote6 char(2);'
  +#13#10'declare variable data6 date;'
  +#13#10'declare variable lote7 char(2);'
  +#13#10'declare variable data7 date;'
  +#13#10'declare variable lote8 char(2);'
  +#13#10'declare variable data8 date;'
  +#13#10'declare variable status varchar(3) not null;'
  +#13#10'declare variable criador varchar(40);'
  +#13#10'declare variable cidcria varchar(25);'
  +#13#10'declare variable codigo1 char(3);'
  +#13#10'declare variable codigo2 char(3);'
  +#13#10'declare variable codigo3 char(3);'
  +#13#10'declare variable persiste integer;'
  +#13#10'declare variable potencial integer;'
  +#13#10'declare LF_ char;'
  +#13#10'BEGIN'
  +#13#10' LF_ = ASCII_CHAR(10);'
  +#13#10''
  +#13#10' DELETE FROM IMP$CADASTRO ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   (    ''SELECT a.CDANIMAL, (TRIM(a.SIGLAANIMAL) || ''''[*]'''' || coalesce('''' '''' || a.NOME, '''''''')), ''' // BRINCO,NOME_ESTAB
  +#13#10'     ||LF_|| ''a.NOMECOMPLETO, '''  //NOME_COMPLETO
  +#13#10'     ||LF_|| ''a.REGISTRO,a.DTNASC,p.CDANIMAL,p.NOMECOMPLETO,p.REGISTRO, ''' // REGISTRO,DTNASC,PAI,NOME_PAI,REGISTRO_PAI,'
  +#13#10'     ||LF_|| ''null,m.CDANIMAL,m.NOMECOMPLETO,m.REGISTRO, ''' // PD_PAI,MAE,NOME_MAE,REGISTRO_MAE,
  +#13#10'     ||LF_|| ''null,null,null, ''' //DTORIGEM,LOCAL_ORIGEM,PRECO_COMPRA
  +#13#10'     ||LF_|| ''COALESCE( A.DTBAIXA, A.DTDESCARTE ),IIF( (A.DTBAIXA IS NOT NULL) OR (A.DTDESCARTE IS NOT NULL), ''''DES'''', NULL), '''   // DTDESC,RAZAO,'
  +#13#10'     ||LF_|| ''CASE ''' //  MOTIVO
  +#13#10'     ||LF_|| ''    WHEN (A.DTBAIXA is null) AND (A.DTDESCARTE is null)    THEN NULL'''
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''M''''  THEN ''''8'''' '' -- Mamite'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''AL'''' THEN ''''3'''' '' -- Aleijado (a)'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''CA'''' THEN ''''3'''' '' -- Cascos'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''DO'''' THEN ''''4'''' '' -- Doença'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''ID'''' THEN ''''8'''' '' -- Idade'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''MA'''' THEN ''''8'''' '' -- Mamite'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''NA'''' THEN ''''8'''' '' -- Náfego (a)'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''OR'''' THEN ''''6'''' '' -- Dificuldade de ordenha'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''OU'''' THEN ''''8'''' '' -- Outros'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''PO'''' THEN ''''8'''' '' -- Desenvolvimento ponderal inadequado'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''PR'''' THEN ''''6'''' '' -- Baixa produção / Habilidade materna'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''RE'''' THEN ''''7'''' '' -- Falha reprodutiva'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''TA'''' THEN ''''8'''' '' -- Teta anormal'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''TE'''' THEN ''''8'''' '' -- Temperamento'
  +#13#10'     ||LF_|| ''    else ''''11'''' '''
  +#13#10'     ||LF_|| ''END, '''
  +#13#10'     ||LF_|| ''null,null, ''' // PRECO_VENDA,COMPRADOR,
  +#13#10'     ||LF_|| ''SUBSTRING ( iif(position(''''/'''' in a.grausangue) > 0, trim(substring(a.grausangue from position('''' '''' in a.grausangue) )), null) FROM 1 FOR 5 ), '''  //RACA
  +#13#10'     ||LF_|| ''SUBSTRING ( iif(position(''''/'''' in a.grausangue) > 0, trim(substring(a.grausangue from 1 for position('''' '''' in a.grausangue) )), null) FROM 1 FOR 5 ), ''' // GSANGUE
  +#13#10'     ||LF_|| ''IIF(r.NOME IS NULL, NULL, SUBSTRING(r.NOME FROM 1 FOR 2) ), ''' // RETIRO
  +#13#10'     ||LF_|| ''null,null,null, ''' // LOTE,NUCLEO,REBANHO
  +#13#10'     ||LF_|| ''null,null,null,null,null,null,null,null,null,null, ''' // VACA, AVO_PATERNO,REG_AVO_PATERNO,AVO_PATERNA,REG_AVO_PATERNA,AVO_MATERNO,REG_AVO_MATERNO,AVO_MATERNA,REG_AVO_MATERNA, TOURO1
  +#13#10'     ||LF_|| ''null,null,null,''' // TOURO2,TOURO3,TOURO4
  +#13#10'     ||LF_|| ''CASE'''
  +#13#10'     ||LF_|| ''  WHEN A.CDCATEGORIA IN ( ''''F21'''', ''''F22'''', ''''F23'''', ''''F24'''') THEN ''''TE'''' '''  // = Doadora
  +#13#10'     ||LF_|| ''  WHEN A.CDCATEGORIA IN ( ''''F30'''', ''''F31'''', ''''F32'''', ''''F33'''', ''''F34'''', ''''F35'''',''''F36'''',   ''''F37'''' ) THEN ''''RE'''' ''' // = Receptora
  +#13#10'     ||LF_|| ''  ELSE NULL'''
  +#13#10'     ||LF_|| ''END,''' // TE
  +#13#10'     ||LF_|| ''null,null,null,null,null,null,'''  // LOTE1,DATA1,LOTE2,DATA2,LOTE3,DATA3,
  +#13#10'     ||LF_|| ''null,null,null,null,null,null,'''  //LOTE4,DATA4,LOTE5,DATA5,LOTE6,DATA6,
  +#13#10'     ||LF_|| ''null,null,null,null, ''' //LOTE7,DATA7,LOTE8,DATA8'
  +#13#10'     ||LF_|| ''CASE '''
  +#13#10'     ||LF_|| ''    WHEN ( A.DTBAIXA IS NOT NULL ) OR ( A.DTDESCARTE IS NOT NULL ) THEN ''''DES'''' '''
  +#13#10'     ||LF_|| ''    WHEN (a.LACTENTE = ''''S'''')  THEN ''''BEZ'''' '''
  +#13#10'     ||LF_|| ''    WHEN (a.CATEGANIMAL is null) or (upper(a.CATEGANIMAL) = ''''N'''')  THEN ''''NOV'''' '''
  +#13#10'     ||LF_|| ''    WHEN a.LACTANTE = ''''S'''' THEN ''''VL'''' '''
  +#13#10'     ||LF_|| ''    ELSE ''''VS'''' '''
  +#13#10'     ||LF_|| ''END, ''' //,STATUS,
  +#13#10'     ||LF_|| ''null,null,null,null,null,null,null ''' //CRIADOR, CIDCRIA, CODIGO1, CODIGO2, CODIGO3, PERSISTE, POTENCIAL'
  +#13#10'     ||LF_|| ''FROM ANIMAL a '''
  +#13#10'     ||LF_|| ''LEFT JOIN RETIRO r on r.cdretiro = a.cdretiro '''
  +#13#10'     ||LF_|| ''LEFT JOIN ANIMAL p on p.CDANIMAL = a.cdpai '''
  +#13#10'     ||LF_|| ''LEFT JOIN ANIMAL m on m.CDANIMAL = a.cdmae '''
  +#13#10'     ||LF_|| ''WHERE a.SEXO = ''''F'''' AND A.SITUACAO IN ( ''''V'''',''''M'''' )'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'    :BRINCO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,'
  +#13#10'    :PD_PAI,:MAE,:NOME_MAE,:REGISTRO_MAE,:DTORIGEM,:LOCAL_ORIGEM,:PRECO_COMPRA,:DTDESC,:RAZAO,'
  +#13#10'    :MOTIVO,:PRECO_VENDA,:COMPRADOR,:RACAAUX,:GSANGUESTR,:RETIRO,:LOTE,:NUCLEO,:REBANHO,:VACA,'
  +#13#10'    :AVO_PATERNO,:REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,'
  +#13#10'    :AVO_MATERNA,:REG_AVO_MATERNA,:TOURO1,:TOURO2,:TOURO3,:TOURO4,:TE,:LOTE1,:DATA1,:LOTE2,:DATA2,'
  +#13#10'    :LOTE3,:DATA3,:LOTE4,:DATA4,:LOTE5,:DATA5,:LOTE6,:DATA6,:LOTE7,:DATA7,:LOTE8,:DATA8,:STATUS,:CRIADOR,'
  +#13#10'    :CIDCRIA,:CODIGO1,:CODIGO2,:CODIGO3,:PERSISTE,:POTENCIAL'
  +#13#10' DO'
  +#13#10' begin'
  +#13#10''
  +#13#10'    IF ( (RACAAUX = ''Holandês P&B'') OR (RACAAUX = ''Holandês P&b'') OR (RACAAUX = ''holandês p&b'') ) then'
  +#13#10'     BEGIN'
  +#13#10'       RACAAUX    = ''HPB'' ;'
  +#13#10'       GSANGUESTR = ''PO'' ;'
  +#13#10'     END'
  +#13#10''
  +#13#10'   IF ( (RACAAUX = ''Gir Leiteiro'') OR (RACAAUX = ''Gir leiteiro'') OR (RACAAUX = ''gir leiteiro'') ) then'
  +#13#10'     BEGIN'
  +#13#10'       RACAAUX    = ''GIR'' ;'
  +#13#10'       GSANGUESTR = ''PO'' ;'
  +#13#10'     END'
  +#13#10''
  +#13#10'    SELECT first 1 COMPOSICAO from doimp$prodap_raca(:RACAAUX) into :RACA;'
  +#13#10'    SELECT first 1 IDGSANGUE from doimp$default_idgsangue(:GSANGUESTR) into :GSANGUE;'
  +#13#10''
  +#13#10'  INSERT INTO IMP$CADASTRO'
  +#13#10'    ('
  +#13#10'      BRINCO,NOME_ESTAB,NOME_COMPLETO,REGISTRO,DTNASC,PAI,NOME_PAI,REGISTRO_PAI,'
  +#13#10'      PD_PAI,MAE,NOME_MAE,REGISTRO_MAE,DTORIGEM,LOCAL_ORIGEM,PRECO_COMPRA,DTDESC,RAZAO,'
  +#13#10'      MOTIVO,PRECO_VENDA,COMPRADOR,RACA,GSANGUE,RETIRO,LOTE,NUCLEO,REBANHO,VACA,'
  +#13#10'      AVO_PATERNO,REG_AVO_PATERNO,AVO_PATERNA,REG_AVO_PATERNA,AVO_MATERNO,REG_AVO_MATERNO,'
  +#13#10'      AVO_MATERNA,REG_AVO_MATERNA,TOURO1,TOURO2,TOURO3,TOURO4,TE,LOTE1,DATA1,LOTE2,DATA2,'
  +#13#10'      LOTE3,DATA3,LOTE4,DATA4,LOTE5,DATA5,LOTE6,DATA6,LOTE7,DATA7,LOTE8,DATA8,STATUS,CRIADOR,'
  +#13#10'      CIDCRIA,CODIGO1,CODIGO2,CODIGO3,PERSISTE,POTENCIAL'
  +#13#10'    )'
  +#13#10'  VALUES'
  +#13#10'    ('
  +#13#10'     :BRINCO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,'
  +#13#10'     :PD_PAI,:MAE,:NOME_MAE,:REGISTRO_MAE,:DTORIGEM,:LOCAL_ORIGEM,:PRECO_COMPRA,:DTDESC,:RAZAO,'
  +#13#10'     :MOTIVO,:PRECO_VENDA,:COMPRADOR,:RACA,:GSANGUE,:RETIRO,:LOTE,:NUCLEO,:REBANHO,:VACA,'
  +#13#10'     :AVO_PATERNO,:REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,'
  +#13#10'     :AVO_MATERNA,:REG_AVO_MATERNA,:TOURO1,:TOURO2,:TOURO3,:TOURO4,:TE,:LOTE1,:DATA1,:LOTE2,:DATA2,'
  +#13#10'     :LOTE3,:DATA3,:LOTE4,:DATA4,:LOTE5,:DATA5,:LOTE6,:DATA6,:LOTE7,:DATA7,:LOTE8,:DATA8,:STATUS,:CRIADOR,'
  +#13#10'     :CIDCRIA,:CODIGO1,:CODIGO2,:CODIGO3,:PERSISTE,:POTENCIAL'
  +#13#10'    ) ;'
  +#13#10''
  +#13#10' end'
  +#13#10''
  +#13#10''
  +#13#10'end' ;

  _CREATE_PROCEDURE_DOIMP_PRODAP_CADTOURO =
         'CREATE OR ALTER PROCEDURE DOIMP$PRODAP_CADTOURO('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    PRODAP VARCHAR(1024) COLLATE ISO8859_1)'
  +#13#10'AS'
  +#13#10'declare variable codigo varchar(8) not null;'
  +#13#10'declare variable nome_estab varchar(60);'
  +#13#10'declare variable nome_completo varchar(60);'
  +#13#10'declare variable registro varchar(15);'
  +#13#10'declare variable dtnasc date;'
  +#13#10'declare variable pai varchar(8);'
  +#13#10'declare variable nome_pai varchar(40);'
  +#13#10'declare variable registro_pai varchar(15);'
  +#13#10'declare variable mae varchar(10);'
  +#13#10'declare variable nome_mae varchar(40);'
  +#13#10'declare variable registro_mae varchar(15);'
  +#13#10'declare variable leite integer;'
  +#13#10'declare variable tipo numeric(15,2);'
  +#13#10'declare variable ubere numeric(15,2);'
  +#13#10'declare variable pernape numeric(15,2);'
  +#13#10'declare variable parto integer;'
  +#13#10'declare variable qestoque integer;'
  +#13#10'declare variable qusada smallint;'
  +#13#10'declare variable concepcao integer;'
  +#13#10'declare variable valor numeric(15,2);'
  +#13#10'declare variable status char(1) not null;'
  +#13#10'declare variable raca varchar(20);'
  +#13#10'declare variable racaaux varchar(20);'
  +#13#10'declare variable gsangue smallint;'
  +#13#10'declare variable gsanguestr varchar(5);'
  +#13#10'declare variable retiro char(2);'
  +#13#10'declare variable lote char(2);'
  +#13#10'declare variable bojao smallint;'
  +#13#10'declare variable caneca smallint;'
  +#13#10'declare variable hack varchar(10);'
  +#13#10'declare variable dtdesc date;'
  +#13#10'declare variable razao char(3);'
  +#13#10'declare variable motivo char(3);'
  +#13#10'declare variable preco_venda numeric(15,2);'
  +#13#10'declare variable comprador varchar(40);'
  +#13#10'declare variable avo_paterno varchar(40);'
  +#13#10'declare variable reg_avo_paterno varchar(15);'
  +#13#10'declare variable avo_paterna varchar(40);'
  +#13#10'declare variable reg_avo_paterna varchar(15);'
  +#13#10'declare variable avo_materno varchar(40);'
  +#13#10'declare variable reg_avo_materno varchar(15);'
  +#13#10'declare variable avo_materna varchar(40);'
  +#13#10'declare variable reg_avo_materna varchar(15);'
  +#13#10'declare LF_ char;'
  +#13#10'BEGIN'
  +#13#10' LF_ = ASCII_CHAR(10);'
  +#13#10' DELETE FROM IMP$CADTOURO ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   ('
  +#13#10'      ''SELECT a.CDANIMAL, (TRIM(a.SIGLAANIMAL) || ''''[*]'''' || coalesce('''' '''' || a.NOME,'''''''')), '''
  +#13#10'   ||LF_|| ''a.NOMECOMPLETO, '''
  +#13#10'   ||LF_|| ''a.REGISTRO,a.DTNASC,p.CDANIMAL,p.NOMECOMPLETO,p.REGISTRO, '''
  +#13#10'   ||LF_|| ''m.CDANIMAL,m.NOMECOMPLETO,m.REGISTRO, '''
  +#13#10'   ||LF_|| ''NULL, NULL, NULL, NULL, NULL, 0, 0, NULL, NULL, '''
  +#13#10'   ||LF_|| ''CASE '''
  +#13#10'   ||LF_|| ''    WHEN (upper(a.CATEGANIMAL) = ''''S'''')  THEN ''''I'''' '''
  +#13#10'   ||LF_|| ''    ELSE ''''M'''' '''
  +#13#10'   ||LF_|| ''END, '''
  +#13#10'   ||LF_|| ''iif(position(''''/'''' in a.grausangue) > 0, trim(substring(a.grausangue from 1 for position('''' '''' in a.grausangue) )), null), '''
  +#13#10'   ||LF_|| ''iif(position(''''/'''' in a.grausangue) > 0, trim(substring(a.grausangue from position('''' '''' in a.grausangue) )), null), '''
  +#13#10'   ||LF_|| ''IIF(r.NOME IS NULL, NULL, SUBSTRING(r.NOME FROM 1 FOR 2) ), '''
  +#13#10'   ||LF_|| ''NULL, NULL, NULL, NULL, '''
  +#13#10'   ||LF_|| ''COALESCE ( A.DTBAIXA, A.DTDESCARTE ), IIF( (A.DTBAIXA IS NOT NULL) AND (A.DTDESCARTE IS NOT NULL),''''DES'''', NULL), '''
  +#13#10'   ||LF_|| ''CASE '''
  +#13#10'   ||LF_|| ''    WHEN ( a.cddescarte is null ) and ( A.DTBAIXA is null ) THEN NULL '''
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''M'''' THEN ''''8'''' '' -- Mamite'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''AL'''' THEN ''''3'''' '' -- Aleijado (a)'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''CA'''' THEN ''''3'''' '' -- Cascos'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''DO'''' THEN ''''4'''' '' -- Doença'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''ID'''' THEN ''''8'''' '' -- Idade'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''MA'''' THEN ''''8'''' '' -- Mamite'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''NA'''' THEN ''''8'''' '' -- Náfego (a)'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''OR'''' THEN ''''6'''' '' -- Dificuldade de ordenha'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''OU'''' THEN ''''8'''' '' -- Outros'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''PO'''' THEN ''''8'''' '' -- Desenvolvimento ponderal inadequado'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''PR'''' THEN ''''6'''' '' -- Baixa produção / Habilidade materna'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''RE'''' THEN ''''7'''' '' -- Falha reprodutiva'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''TA'''' THEN ''''8'''' '' -- Teta anormal'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''TE'''' THEN ''''8'''' '' -- Temperamento'
  +#13#10'   ||LF_|| ''    else ''''8'''' '''
  +#13#10'   ||LF_|| ''END, '''
  +#13#10'   ||LF_|| ''NULL,NULL,NULL,NULL, NULL,NULL,NULL,NULL,NULL,NULL '''
  +#13#10'   ||LF_|| ''FROM ANIMAL a '''
  +#13#10'   ||LF_|| ''LEFT JOIN RETIRO r on r.cdretiro = a.cdretiro '''
  +#13#10'   ||LF_|| ''LEFT JOIN ANIMAL p on p.CDANIMAL = a.cdpai '''
  +#13#10'   ||LF_|| ''LEFT JOIN ANIMAL m on m.CDANIMAL = a.cdmae '''
  +#13#10'   ||LF_|| ''WHERE a.SEXO = ''''M'''' '''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'    :CODIGO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,:MAE,:NOME_MAE,'
  +#13#10'    :REGISTRO_MAE,:LEITE,:TIPO,:UBERE,:PERNAPE,:PARTO,:QESTOQUE,:QUSADA,:CONCEPCAO,:VALOR,:STATUS,:GSANGUESTR,'
  +#13#10'    :RACAAUX,:RETIRO,:LOTE,:BOJAO,:CANECA,:HACK,:DTDESC,:RAZAO,:MOTIVO,:PRECO_VENDA,:COMPRADOR,:AVO_PATERNO,'
  +#13#10'    :REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,:AVO_MATERNA,:REG_AVO_MATERNA'
  +#13#10'  DO'
  +#13#10'  begin'
  +#13#10''
  +#13#10'    IF ( (RACAAUX = ''Holandês P&B'') OR (RACAAUX = ''Holandês P&b'') OR (RACAAUX = ''holandês p&b'') ) then'
  +#13#10'     BEGIN'
  +#13#10'       RACAAUX    = ''HPB'' ;'
  +#13#10'       GSANGUESTR = ''PO'' ;'
  +#13#10'     END'
  +#13#10''
  +#13#10'    IF ( (RACAAUX = ''Gir Leiteiro'') OR (RACAAUX = ''Gir leiteiro'') OR (RACAAUX = ''gir leiteiro'') ) then'
  +#13#10'     BEGIN'
  +#13#10'       RACAAUX    = ''GIR'' ;'
  +#13#10'       GSANGUESTR = ''PO'' ;'
  +#13#10'     END'
  +#13#10''
  +#13#10'    SELECT first 1 COMPOSICAO from doimp$prodap_raca(:RACAAUX) into :RACA;'
  +#13#10'    SELECT first 1 IDGSANGUE from doimp$default_idgsangue(:GSANGUESTR) into :GSANGUE;'
  +#13#10''
  +#13#10'    INSERT INTO IMP$CADTOURO'
  +#13#10'     ('
  +#13#10'       CODIGO,NOME_ESTAB,NOME_COMPLETO,REGISTRO,DTNASC,PAI,NOME_PAI,REGISTRO_PAI,MAE,NOME_MAE,'
  +#13#10'       REGISTRO_MAE,LEITE,TIPO,UBERE,PERNAPE,PARTO,QESTOQUE,QUSADA,CONCEPCAO,VALOR,STATUS,GSANGUE,'
  +#13#10'       RACA,RETIRO,LOTE,BOJAO,CANECA,HACK,DTDESC,RAZAO,MOTIVO,PRECO_VENDA,COMPRADOR,AVO_PATERNO,'
  +#13#10'       REG_AVO_PATERNO,AVO_PATERNA,REG_AVO_PATERNA,AVO_MATERNO,REG_AVO_MATERNO,AVO_MATERNA,REG_AVO_MATERNA'
  +#13#10'     )'
  +#13#10'    VALUES'
  +#13#10'    ('
  +#13#10'      :CODIGO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,:MAE,:NOME_MAE,'
  +#13#10'      :REGISTRO_MAE,:LEITE,:TIPO,:UBERE,:PERNAPE,:PARTO,:QESTOQUE,:QUSADA,:CONCEPCAO,:VALOR,:STATUS,:GSANGUE,'
  +#13#10'      :RACA,:RETIRO,:LOTE,:BOJAO,:CANECA,:HACK,:DTDESC,:RAZAO,:MOTIVO,:PRECO_VENDA,:COMPRADOR,:AVO_PATERNO,'
  +#13#10'      :REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,:AVO_MATERNA,:REG_AVO_MATERNA'
  +#13#10'    ) ;'
  +#13#10''
  +#13#10'  end'
  +#13#10'end' ;

  _CREATE_PROCEDURE_DOIMP_PRODAP =
         'CREATE OR ALTER PROCEDURE DOIMP$PRODAP('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    PRODAP VARCHAR(1024) COLLATE ISO8859_1)'
  +#13#10'AS'
  +#13#10'begin'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE DOIMP$LIMPARBASE( KCAD_FAZENDA );'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE DOIMP$DEFAULT_GSANGUE   ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_CADASTRO   ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_CADTOURO   ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_CIOSCOB    ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_DADOPROD   ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_PESAGENS   ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_PESOALTURA ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10''
  +#13#10'  /*'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_BST      ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_CMT      ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_CONDCORP ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_FILHOS   ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_FUNCIONA ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_DIAGNOST ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_SANITARI ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_TRATASAN ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_TRATAMEN ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_PMACHO   ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$PRODAP_LINEARCA ( KCAD_FAZENDA, PRODAP ) ;'
  +#13#10'  */'
  +#13#10'end'  ;

begin

  TryExecuteDirect ( _ALTER_TABLE_IMPCADASTRO_RACA ) ;
  TryExecuteDirect ( _ALTER_TABLE_IMPCADTOURO_RACA ) ;
  TryExecuteDirect ( _ALTER_TABLE_IMPCADTOURO_LOTE ) ;
  TryExecuteDirect ( _ALTER_TABLE_IMPCADTOURO_RETIRO ) ;
  ExecuteDirect ( _CREATE_PROCEDURE_DOIMP_PRODAP_PESO ) ;
  ExecuteDirect ( _CREATE_PROCEDURE_DOIMP_PRODAP_ALTURA ) ;
  ExecuteDirect ( _CREATE_PROCEDURE_DOIMP_PRODAP_PESOALTURA ) ;
  ExecuteDirect ( _CREATE_PROCEDURE_DOIMP_PRODAP_CIOSCOB ) ;
  ExecuteDirect ( _CREATE_PROCEDURE_DOIMP_PRODAP_RACA ) ;
  ExecuteDirect ( _CREATE_PROCEDURE_DOIMP_DOIMP_DEFAULT_IDGSANGUE ) ;
  ExecuteDirect ( _CREATE_PROCEDURE_DOIMP_DOIMP_DEFAULT_GSANGUE ) ;
  ExecuteDirect ( _CREATE_PROCEDURE_DOIMP_PRODAP_CADASTRO ) ;
  ExecuteDirect ( _CREATE_PROCEDURE_DOIMP_PRODAP_CADTOURO ) ;
  ExecuteDirect ( _CREATE_PROCEDURE_DOIMP_PRODAP    ) ;

end ;



procedure TDBZootecnicoUpdate._5_000_86 ;
const
   _ALTER_TABLE_IMPCADASTRO_LOTE =
     'ALTER TABLE IMP$CADASTRO ALTER LOTE TYPE VARCHAR (32)' ;

   _ALTER_TABLE_IMPCADASTRO_RETIRO =
     'ALTER TABLE IMP$CADASTRO ALTER RETIRO TYPE VARCHAR (32)' ;

   _ALTER_TABLE_IMPCADASTRO_ADD_INTENCAO_DESCARTE =
     'ALTER TABLE IMP$CADASTRO ADD INTENCAO_DESCARTE CHAR (1)' ;

   _ALTER_PROCEDURE_DOIMPIDEAGRI_CADASTRO =
  'CREATE OR ALTER PROCEDURE DOIMP$IDEAGRI_CADASTRO('
  +#13#10'   KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'   IDEAGRI VARCHAR(1024) COLLATE ISO8859_1,'
  +#13#10'   ACCEPT_NULL_BIRTHDATE SYS$BOOL,'
  +#13#10'   CODIGO_RETIRO SYS$INT,'
  +#13#10'   CODIGO_LOTE SYS$INT)'
  +#13#10'AS'
  +#13#10'declare brinco varchar(10) not null;'
  +#13#10'declare nome_estab varchar(60);'
  +#13#10'declare nome_completo varchar(60);'
  +#13#10'declare registro varchar(15);'
  +#13#10'declare dtnasc date;'
  +#13#10'declare pai varchar(8);'
  +#13#10'declare nome_pai varchar(40);'
  +#13#10'declare registro_pai varchar(15);'
  +#13#10'declare pd_pai varchar(5);'
  +#13#10'declare mae varchar(10);'
  +#13#10'declare nome_mae varchar(40);'
  +#13#10'declare registro_mae varchar(15);'
  +#13#10'declare dtorigem date;'
  +#13#10'declare local_origem varchar(20);'
  +#13#10'declare preco_compra numeric(15, 2);'
  +#13#10'declare dtdesc date;'
  +#13#10'declare razao char(3);'
  +#13#10'declare motivo char(3);'
  +#13#10'declare preco_venda numeric(15, 2);'
  +#13#10'declare comprador varchar(40);'
  +#13#10'declare raca char(3);'
  +#13#10'declare gsangue smallint;'
  +#13#10'declare retiro varchar(52);'
  +#13#10'declare lote varchar(52);'
  +#13#10'declare nucleo char(4);'
  +#13#10'declare rebanho varchar(5);'
  +#13#10'declare vaca varchar(8);'
  +#13#10'declare avo_paterno varchar(40);'
  +#13#10'declare reg_avo_paterno varchar(15);'
  +#13#10'declare avo_paterna varchar(40);'
  +#13#10'declare reg_avo_paterna varchar(15);'
  +#13#10'declare avo_materno varchar(40);'
  +#13#10'declare reg_avo_materno varchar(15);'
  +#13#10'declare avo_materna varchar(40);'
  +#13#10'declare reg_avo_materna varchar(15);'
  +#13#10'declare touro1 varchar(8);'
  +#13#10'declare touro2 varchar(8);'
  +#13#10'declare touro3 varchar(8);'
  +#13#10'declare touro4 varchar(8);'
  +#13#10'declare te char(2);'
  +#13#10'declare lote1 char(2);'
  +#13#10'declare data1 date;'
  +#13#10'declare lote2 char(2);'
  +#13#10'declare data2 date;'
  +#13#10'declare lote3 char(2);'
  +#13#10'declare data3 date;'
  +#13#10'declare lote4 char(2);'
  +#13#10'declare data4 date;'
  +#13#10'declare lote5 char(2);'
  +#13#10'declare data5 date;'
  +#13#10'declare lote6 char(2);'
  +#13#10'declare data6 date;'
  +#13#10'declare lote7 char(2);'
  +#13#10'declare data7 date;'
  +#13#10'declare lote8 char(2);'
  +#13#10'declare data8 date;'
  +#13#10'declare status varchar(3) not null;'
  +#13#10'declare criador varchar(40);'
  +#13#10'declare cidcria varchar(25);'
  +#13#10'declare codigo1 char(3);'
  +#13#10'declare codigo2 char(3);'
  +#13#10'declare codigo3 char(3);'
  +#13#10'declare persiste integer;'
  +#13#10'declare potencial integer;'
  +#13#10'declare INTENCAO_DESCARTE char(1);'
  +#13#10'declare SQL_WHERE varchar(100) = '''' ;'
  +#13#10'declare LF_ char;'
  +#13#10'begin'
  +#13#10''
  +#13#10'  LF_ = ASCII_CHAR(10) ;'
  +#13#10'  DELETE FROM IMP$CADASTRO ;'
  +#13#10''
  +#13#10'  if ( CODIGO_RETIRO > -1 ) THEN'
  +#13#10'     SQL_WHERE = '' AND A.CDSETOR = '' || :CODIGO_RETIRO ;'
  +#13#10''
  +#13#10'  if ( ACCEPT_NULL_BIRTHDATE = ''F'' ) THEN'
  +#13#10'     SQL_WHERE = '' AND A.DTNASCIMENTO IS NOT NULL'' ;'
  +#13#10''
  +#13#10'  FOR EXECUTE STATEMENT'
  +#13#10'    (       ''SELECT A.CDANIMAL, (trim(A.NUMERO) || ''''[*]'''' || coalesce('''' '''' || A.NOME, '''''''')), A.NOMECOMPLETO, A.REGASSOCRACA, A.DTNASCIMENTO, '''
  +#13#10'      ||LF_||''P.CDANIMAL,  P.nomecompleto, P.regassocraca, NULL, '''
  +#13#10'      ||LF_||''M.CDANIMAL,  M.nomecompleto, M.regassocraca, '''
  +#13#10'      ||LF_||''NULL, NULL, NULL, '''
  +#13#10'      ||LF_||''A.DTBAIXA, IIF(A.DTBAIXA IS NOT NULL, ''''DES'''', NULL), A.cdmotivobaixa, '''
  +#13#10'      ||LF_||''NULL, NULL, '''
  +#13#10'      ||LF_||''(SELECT FIRST 1'''
  +#13#10'      ||LF_||''  CASE'''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 175 ) THEN ''''PDS'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 290, 300, 340 ) THEN ''''GIR'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 310 ) THEN ''''GHL'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 365 ) THEN ''''HPB'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 385 ) THEN ''''JER'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 635 ) THEN ''''HPV'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 565 ) THEN ''''SIM'''' '''
  +#13#10'      ||LF_||''  ELSE'''
  +#13#10'      ||LF_||''    ''''XX'''' '''
  +#13#10'      ||LF_||''  END'''
  +#13#10'      ||LF_||''FROM ANIMALRACA AR'''
  +#13#10'      ||LF_||''WHERE AR.CDANIMALRACA = A.CDANIMAL'''
  +#13#10'      ||LF_||''ORDER BY AR.PERCENTUAL DESC'''
  +#13#10'      ||LF_||'') RACA, '''
  +#13#10'      ||LF_||''CASE '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (1, 2, 3, 4) THEN ''''8'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (5, 6, 7, 8) THEN ''''1'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (9, 10, 11, 12) THEN ''''2'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (13, 14, 15, 16) THEN ''''3'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (17, 18, 19, 20) THEN ''''4'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (21, 22, 23, 24) THEN ''''5'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento > 24 THEN ''''5'''' '''
  +#13#10'      ||LF_||''END, '''
  +#13#10'      ||LF_||''SETOR.NOME, LOTE.DESCRICAO,'''
  +#13#10'      ||LF_||''NULL, NULL, NULL,'''
  +#13#10'      ||LF_||''NULL, NULL, NULL, NULL,'''
  +#13#10'      ||LF_||''NULL, NULL, NULL, NULL,'''
  +#13#10'      ||LF_||''NULL, NULL, NULL, NULL,'''
  +#13#10'      ||LF_||''CASE (SELECT AP.TIPO FROM ANIMALPERIODO AP WHERE AP.CDANIMAL = A.CDANIMAL AND AP.TIPO IN (1, 2) AND AP.DATAFIM IS NULL ROWS 1)'''
  +#13#10'      ||LF_||''WHEN 1 THEN ''''TE'''''''
  +#13#10'      ||LF_||''WHEN 2 THEN ''''RE'''''''
  +#13#10'      ||LF_||''END TE,'''
  +#13#10'      ||LF_||''(SELECT ''''T'''' FROM ANIMALPERIODO AP WHERE AP.CDANIMAL = A.CDANIMAL AND AP.TIPO = 3 AND AP.DATAFIM IS NULL ROWS 1) INTENCAO_DESCARTE,'''
  +#13#10'      ||LF_||''NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,'''
  +#13#10'      ||LF_||''NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,'''
  +#13#10'      ||LF_||''CASE'''
  +#13#10'      ||LF_||''    WHEN A.cdcategoria = 1 THEN ''''BEZ'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdcategoria = 6 THEN ''''NOV'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdcategoria = 7 AND A.matrizseca = 0 THEN ''''VL'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdcategoria = 7 AND A.matrizseca = 1 THEN ''''VS'''' '''
  +#13#10'      ||LF_||''    ELSE IIF( A.DTBAIXA IS NULL,  ''''BEZ'''', ''''DES'''' )'''
  +#13#10'      ||LF_||''END,'''
  +#13#10'      ||LF_||''NULL, NULL,'''
  +#13#10'      ||LF_||''NULL, NULL, NULL,'''
  +#13#10'      ||LF_||''NULL, NULL'''
  +#13#10'      ||LF_||''FROM ANIMAL A'''
  +#13#10'      ||LF_||''LEFT JOIN ANIMAL P ON P.cdanimal = A.cdpai '''
  +#13#10'      ||LF_||''LEFT JOIN ANIMAL M ON M.cdanimal = A.cdmae '''
  +#13#10'      ||LF_||''LEFT JOIN SETOR  SETOR ON SETOR.CDSETOR = A.CDSETOR '''
  +#13#10'      ||LF_||''LEFT JOIN SP_GRUPOANIMALESPECIFICO( CURRENT_DATE, '' || COALESCE( :CODIGO_LOTE, -1 ) || '', A.CDANIMAL ) LOTE ON 1=1 '''
  +#13#10'      ||LF_||''WHERE A.SEXO = ''''F'''' AND A.ANIMALREBANHO = 1'' || SQL_WHERE'
  +#13#10'    )'
  +#13#10'  ON EXTERNAL DATA SOURCE :IDEAGRI'
  +#13#10'  WITH COMMON TRANSACTION'
  +#13#10'  INTO'
  +#13#10'     :BRINCO, :NOME_ESTAB, :NOME_COMPLETO, :REGISTRO, :DTNASC, :PAI, :NOME_PAI, :REGISTRO_PAI,'
  +#13#10'     :PD_PAI, :MAE, :NOME_MAE, :REGISTRO_MAE, :DTORIGEM, :LOCAL_ORIGEM, :PRECO_COMPRA, :DTDESC, :RAZAO,'
  +#13#10'     :MOTIVO, :PRECO_VENDA, :COMPRADOR, :RACA, :GSANGUE,'
  +#13#10'     :RETIRO, :LOTE,'
  +#13#10'     :NUCLEO, :REBANHO, :VACA,'
  +#13#10'     :AVO_PATERNO, :REG_AVO_PATERNO, :AVO_PATERNA, :REG_AVO_PATERNA,'
  +#13#10'     :AVO_MATERNO, :REG_AVO_MATERNO, :AVO_MATERNA, :REG_AVO_MATERNA,'
  +#13#10'     :TOURO1, :TOURO2, :TOURO3, :TOURO4,'
  +#13#10'     :TE,'
  +#13#10'     :INTENCAO_DESCARTE,'
  +#13#10'     :LOTE1, :DATA1, :LOTE2, :DATA2, :LOTE3, :DATA3, :LOTE4, :DATA4,'
  +#13#10'     :LOTE5, :DATA5, :LOTE6, :DATA6, :LOTE7, :DATA7, :LOTE8, :DATA8,'
  +#13#10'     :STATUS,'
  +#13#10'     :CRIADOR, :CIDCRIA,'
  +#13#10'     :CODIGO1, :CODIGO2, :CODIGO3, :PERSISTE, :POTENCIAL'
  +#13#10'  DO'
  +#13#10'  begin'
  +#13#10''
  +#13#10'  -- SELECT first 1 COMPOSICAO from doimp$ideagri_raca(:RACA) into :RACA;'
  +#13#10''
  +#13#10'   INSERT INTO IMP$CADASTRO'
  +#13#10'     ('
  +#13#10'       BRINCO, NOME_ESTAB, NOME_COMPLETO, REGISTRO, DTNASC, PAI, NOME_PAI, REGISTRO_PAI,'
  +#13#10'       PD_PAI, MAE, NOME_MAE, REGISTRO_MAE, DTORIGEM, LOCAL_ORIGEM, PRECO_COMPRA, DTDESC, RAZAO,'
  +#13#10'       MOTIVO, PRECO_VENDA, COMPRADOR, RACA, GSANGUE,'
  +#13#10'       RETIRO, LOTE,'
  +#13#10'       NUCLEO, REBANHO, VACA,'
  +#13#10'       AVO_PATERNO, REG_AVO_PATERNO, AVO_PATERNA, REG_AVO_PATERNA,'
  +#13#10'       AVO_MATERNO, REG_AVO_MATERNO, AVO_MATERNA, REG_AVO_MATERNA,'
  +#13#10'       TOURO1, TOURO2, TOURO3, TOURO4,'
  +#13#10'       TE,'
  +#13#10'       INTENCAO_DESCARTE,'
  +#13#10'       LOTE1, DATA1, LOTE2, DATA2, LOTE3, DATA3, LOTE4, DATA4,'
  +#13#10'       LOTE5, DATA5, LOTE6, DATA6, LOTE7, DATA7, LOTE8, DATA8,'
  +#13#10'       STATUS,'
  +#13#10'       CRIADOR, CIDCRIA,'
  +#13#10'       CODIGO1, CODIGO2, CODIGO3,'
  +#13#10'       PERSISTE, POTENCIAL'
  +#13#10'     )'
  +#13#10'   VALUES'
  +#13#10'     ('
  +#13#10'      :BRINCO, :NOME_ESTAB, :NOME_COMPLETO, :REGISTRO, :DTNASC, :PAI, :NOME_PAI, :REGISTRO_PAI,'
  +#13#10'      :PD_PAI, :MAE, :NOME_MAE, :REGISTRO_MAE, :DTORIGEM, :LOCAL_ORIGEM, :PRECO_COMPRA, :DTDESC, :RAZAO,'
  +#13#10'      :MOTIVO, :PRECO_VENDA, :COMPRADOR, :RACA, :GSANGUE,'
  +#13#10'      SUBSTRING ( :RETIRO FROM 1 FOR 32 ), SUBSTRING ( :LOTE FROM 1 FOR 32 ),'
  +#13#10'      :NUCLEO, :REBANHO, :VACA,'
  +#13#10'      :AVO_PATERNO, :REG_AVO_PATERNO, :AVO_PATERNA, :REG_AVO_PATERNA, :AVO_MATERNO, :REG_AVO_MATERNO,'
  +#13#10'      :AVO_MATERNA, :REG_AVO_MATERNA, :TOURO1, :TOURO2, :TOURO3, :TOURO4,'
  +#13#10'      :TE,'
  +#13#10'      :INTENCAO_DESCARTE,'
  +#13#10'      :LOTE1, :DATA1, :LOTE2, :DATA2, :LOTE3, :DATA3, :LOTE4, :DATA4,'
  +#13#10'      :LOTE5, :DATA5, :LOTE6, :DATA6, :LOTE7, :DATA7, :LOTE8, :DATA8,'
  +#13#10'      :STATUS,'
  +#13#10'      :CRIADOR, :CIDCRIA,'
  +#13#10'      :CODIGO1, :CODIGO2, :CODIGO3,'
  +#13#10'      :PERSISTE, :POTENCIAL'
  +#13#10'     ) ;'
  +#13#10'   end'
  +#13#10'end' ;

   _ALTER_PROCEDURE_DOIMPIDEAGRI =
         'CREATE OR ALTER PROCEDURE DOIMP$IDEAGRI('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    IDEAGRI VARCHAR(1024) COLLATE ISO8859_1,'
  +#13#10'    ACCEPT_NULL_BIRTHDATE SYS$BOOL,'
  +#13#10'    CODIGO_RETIRO SYS$INT,'
  +#13#10'    CODIGO_LOTE SYS$INT)'
  +#13#10'AS'
  +#13#10'begin'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE DOIMP$LIMPARBASE( KCAD_FAZENDA );'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE DOIMP$DEFAULT_GSANGUE  ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_CADASTRO ( KCAD_FAZENDA, IDEAGRI, ACCEPT_NULL_BIRTHDATE, CODIGO_RETIRO, CODIGO_LOTE ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_CADTOURO ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_CIOSCOB  ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_DADOPROD ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_PESAGENS ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_MAMITE   ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  /*'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_BST      ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_CMT      ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_CONDCORP ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_FILHOS   ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_FUNCIONA ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_DIAGNOST ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_SANITARI ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_TRATASAN ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_TRATAMEN ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_PESO     ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_PMACHO   ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_LINEARCA ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  */'
  +#13#10'end'  ;

begin

  TryExecuteDirect ( _ALTER_TABLE_IMPCADASTRO_LOTE ) ;
  TryExecuteDirect ( _ALTER_TABLE_IMPCADASTRO_RETIRO ) ;
  TryExecuteDirect ( _ALTER_TABLE_IMPCADASTRO_ADD_INTENCAO_DESCARTE ) ;
  ExecuteDirect ( _ALTER_PROCEDURE_DOIMPIDEAGRI_CADASTRO  ) ;
  ExecuteDirect ( _ALTER_PROCEDURE_DOIMPIDEAGRI ) ;


end;

procedure TDBZootecnicoUpdate._5_000_81 ;
const
  _CREATE_DOMAIN_TANQUE =
         'CREATE DOMAIN ZOO$CODIGOTANQUE AS'
  +#13#10'VARCHAR(15) CHARACTER SET ISO8859_1'
  +#13#10'COLLATE ISO8859_1' ;

  _CREATE_TABLE_TANQUE =
         'CREATE TABLE ZOO_TANQUES ('
  +#13#10'    KZOO_TANQUE             SYS$PKGUID20 NOT NULL /* SYS$PKGUID20 = CHAR(20) NOT NULL */,'
  +#13#10'    KCAD_FAZENDA            SYS$FKGUID20_NN /* SYS$FKGUID20_NN = CHAR(20) NOT NULL */,'
  +#13#10'    CODIGOTANQUE            ZOO$CODIGOTANQUE /* ZOO$BRINCO_ = VARCHAR(16) */,'
  +#13#10'    SYS$UI                  SYS$USERLOGIN /* SYS$USERLOGIN = VARCHAR(32) */,'
  +#13#10'    SYS$DI                  SYS$DATE /* SYS$DATE = TIMESTAMP */,'
  +#13#10'    SYS$UU                  SYS$USERLOGIN /* SYS$USERLOGIN = VARCHAR(32) */,'
  +#13#10'    SYS$DU                  SYS$DATE /* SYS$DATE = TIMESTAMP */'
  +#13#10')' ;

  _CREATE_PK_TANQUE =
         'ALTER TABLE ZOO_TANQUES ADD CONSTRAINT PKZOO_TANQUES PRIMARY KEY (KZOO_TANQUE)' ;

  _CREATE_FK_TANQUE =
         'ALTER TABLE ZOO_TANQUES ADD CONSTRAINT FKZOO_TANQUES_01 FOREIGN KEY (KCAD_FAZENDA)'
  +#13#10'REFERENCES CAD_FAZENDAS (KCAD_FAZENDA) ON UPDATE CASCADE' ;

  _CREATE_IX_TANQUE =
         'CREATE INDEX IXZOO_TANQUES_01 ON ZOO_TANQUES (KCAD_FAZENDA, CODIGOTANQUE)' ;

  _CREATE_RLOG_TANQUE =
         'CREATE OR ALTER TRIGGER RLOG$ZOO_TANQUES FOR ZOO_TANQUES'
  +#13#10'ACTIVE BEFORE INSERT OR UPDATE POSITION 15000'
  +#13#10'AS'
  +#13#10'BEGIN'
  +#13#10''
  +#13#10'  if ( (RDB$GET_CONTEXT( ''USER_SESSION'',     ''RLOG$OFF'' ) = ''1'')'
  +#13#10'    OR (RDB$GET_CONTEXT( ''USER_TRANSACTION'', ''RLOG$OFF'' ) = ''1'') ) THEN'
  +#13#10'     EXIT ;'
  +#13#10''
  +#13#10'  if ( inserting ) then'
  +#13#10'  begin'
  +#13#10'    if ( NEW.SYS$UI is NULL ) then'
  +#13#10'      NEW.SYS$UI = RDB$GET_CONTEXT ( ''USER_SESSION'', ''USERNAME'' ) ;'
  +#13#10'    if ( NEW.SYS$DI is NULL ) then'
  +#13#10'      NEW.SYS$DI = CURRENT_TIMESTAMP ;'
  +#13#10'  end'
  +#13#10''
  +#13#10'  if ( updating ) then'
  +#13#10'  begin'
  +#13#10'     NEW.SYS$UU = RDB$GET_CONTEXT ( ''USER_SESSION'', ''USERNAME'' ) ;'
  +#13#10'     NEW.SYS$DU = CURRENT_TIMESTAMP ;'
  +#13#10'  end'
  +#13#10''
  +#13#10'END';

  _CREATE_CMT1_TANQUE =
          'COMMENT ON TABLE ZOO_TANQUES IS'
  +#13#10'''Cadastro de TANQUES por Fazenda''' ;

  _CREATE_CMT2_TANQUE =
         'COMMENT ON COLUMN ZOO_TANQUES.SYS$UI IS'
  +#13#10'''Usuário responsável pela inclusão'''  ;

  _CREATE_CMT3_TANQUE =
         'COMMENT ON COLUMN ZOO_TANQUES.SYS$DI IS'
  +#13#10'''Data da Inclusão''' ;

  _CREATE_CMT4_TANQUE =
         'COMMENT ON COLUMN ZOO_TANQUES.SYS$UU IS'
  +#13#10'''Usuário responsável pela última alteração''' ;

  _CREATE_CMT5_TANQUE =
         'COMMENT ON COLUMN ZOO_TANQUES.SYS$DU IS'
  +#13#10'''Data da última alteração''' ;

  _CREATE_TABLE_TANQUEANALISE =
         'CREATE TABLE ZOO_TANQUE_ANALISES ('
  +#13#10'    KZOO_TANQUE_ANALISE SYS$PKGUID20 /* SYS$PKGUID20 = CHAR(20) NOT NULL */,'
  +#13#10'    KZOO_TANQUE         SYS$FKGUID20_NN /* SYS$FKGUID20_NN = CHAR(20) NOT NULL */,'
  +#13#10'    DATA                SYS$DATE_NN /* SYS$DATE_NN = TIMESTAMP NOT NULL */,'
  +#13#10'    GORDURA             SYS$FLOAT /* SYS$FLOAT = DOUBLE PRECISION */,'
  +#13#10'    PROTEINA            SYS$FLOAT /* SYS$FLOAT = DOUBLE PRECISION */,'
  +#13#10'    LACTOSE             SYS$FLOAT /* SYS$FLOAT = DOUBLE PRECISION */,'
  +#13#10'    SOLIDOS_TOTAIS      SYS$FLOAT /* SYS$FLOAT = DOUBLE PRECISION */,'
  +#13#10'    ESD                 SYS$FLOAT /* SYS$FLOAT = DOUBLE PRECISION */,'
  +#13#10'    CCS                 SYS$INT /* SYS$INT = INTEGER */,'
  +#13#10'    UREIA               SYS$FLOAT /* SYS$FLOAT = DOUBLE PRECISION */,'
  +#13#10'    SYS$UI              SYS$USERLOGIN /* SYS$USERLOGIN = VARCHAR(32) */,'
  +#13#10'    SYS$DI              SYS$DATE /* SYS$DATE = TIMESTAMP */,'
  +#13#10'    SYS$UU              SYS$USERLOGIN /* SYS$USERLOGIN = VARCHAR(32) */,'
  +#13#10'    SYS$DU              SYS$DATE /* SYS$DATE = TIMESTAMP */'
  +#13#10')' ;

  _CREATE_PK_TANQUEANALISE =
         'ALTER TABLE ZOO_TANQUE_ANALISES ADD CONSTRAINT PKZOO_TANQUE_ANALISES PRIMARY KEY (KZOO_TANQUE_ANALISE)' ;

  _CREATE_FK_TANQUEANALISE =
         'ALTER TABLE ZOO_TANQUE_ANALISES ADD CONSTRAINT FKZOO_TANQUE_ANALISES_01 FOREIGN KEY (KZOO_TANQUE) REFERENCES ZOO_TANQUES (KZOO_TANQUE)' ;

  _CREATE_RLOG_TANQUEANALISE =
         'CREATE OR ALTER TRIGGER RLOG$ZOO_TANQUE_ANALISES FOR ZOO_TANQUE_ANALISES'
  +#13#10'ACTIVE BEFORE INSERT OR UPDATE POSITION 15000'
  +#13#10'AS'
  +#13#10'BEGIN'
  +#13#10''
  +#13#10'  if ( (RDB$GET_CONTEXT( ''USER_SESSION'',     ''RLOG$OFF'' ) = ''1'')'
  +#13#10'    OR (RDB$GET_CONTEXT( ''USER_TRANSACTION'', ''RLOG$OFF'' ) = ''1'') ) THEN'
  +#13#10'     EXIT ;'
  +#13#10''
  +#13#10'  if ( inserting ) then'
  +#13#10'  begin'
  +#13#10'    if ( NEW.SYS$UI is NULL ) then'
  +#13#10'      NEW.SYS$UI = RDB$GET_CONTEXT ( ''USER_SESSION'', ''USERNAME'' ) ;'
  +#13#10'    if ( NEW.SYS$DI is NULL ) then'
  +#13#10'      NEW.SYS$DI = CURRENT_TIMESTAMP ;'
  +#13#10'  end'
  +#13#10''
  +#13#10'  if ( updating ) then'
  +#13#10'  begin'
  +#13#10'     NEW.SYS$UU = RDB$GET_CONTEXT ( ''USER_SESSION'', ''USERNAME'' ) ;'
  +#13#10'     NEW.SYS$DU = CURRENT_TIMESTAMP ;'
  +#13#10'  end'
  +#13#10''
  +#13#10'END' ;

  _CREATE_CMT1_TANQUEANALISE =
         'COMMENT ON TABLE ZOO_TANQUES IS'
  +#13#10'''Cadastro de Análises do TANQUE''' ;

  _CREATE_CMT2_TANQUEANALISE =
         'COMMENT ON COLUMN ZOO_TANQUE_ANALISES.SYS$UI IS'
  +#13#10'''Usuário responsável pela inclusão''' ;

  _CREATE_CMT3_TANQUEANALISE =
         'COMMENT ON COLUMN ZOO_TANQUE_ANALISES.SYS$DI IS'
  +#13#10'''Data da Inclusão'''  ;

  _CREATE_CMT4_TANQUEANALISE =
         'COMMENT ON COLUMN ZOO_TANQUE_ANALISES.SYS$UU IS'
  +#13#10'''Usuário responsável pela última alteração''' ;

  _CREATE_CMT5_TANQUEANALISE =
         'COMMENT ON COLUMN ZOO_TANQUE_ANALISES.SYS$DU IS'
  +#13#10'''Data da última alteração''' ;


  _DROP_VRPT_FEMEAS =
         'DROP VIEW VRPT_FEMEAS' ;

  _DROP_DOMAIN_RETIRO =
         'DROP DOMAIN ZOO$RETIRO' ;

  _CREATE_DOMAIN_RETIRO =
         'CREATE DOMAIN ZOO$RETIRO AS'
  +#13#10'VARCHAR(32) CHARACTER SET ISO8859_1'
  +#13#10'COLLATE ISO8859_1' ;

  _ALTER_TABLE_RETIROS =
         'ALTER TABLE ZOO_ANIMAL_RETIROS'
  +#13#10'  ALTER ANTERIOR TYPE ZOO$RETIRO,'
  +#13#10'  ALTER RETIRO TYPE ZOO$RETIRO' ;


  _ALTER_TABLE_ANIMAIS_FEMEA =
         'ALTER TABLE ZOO_ANIMAIS_FEMEA ALTER RETIRO TYPE ZOO$RETIRO' ;


  _CREATE_VRPT_FEMEAS =
         'CREATE VIEW VRPT_FEMEAS('
  +#13#10'    KZOO_ANIMAL_FEMEA,'
  +#13#10'    KCAD_FAZENDA,'
  +#13#10'    BRINCO,'
  +#13#10'    BRINCO_,'
  +#13#10'    NOMEESTABULO,'
  +#13#10'    NOMECOMPLETO,'
  +#13#10'    REGISTRO,'
  +#13#10'    DTORIGEM,'
  +#13#10'    LOCAL_ORIGEM,'
  +#13#10'    PRECO_COMPRA,'
  +#13#10'    VACA,'
  +#13#10'    STATUS,'
  +#13#10'    DATASTATUS,'
  +#13#10'    INTENCAO_DESCARTE,'
  +#13#10'    CRIADOR,'
  +#13#10'    CIDCRIA,'
  +#13#10'    PERSISTE,'
  +#13#10'    POTENCIAL,'
  +#13#10'    DATABRINCO,'
  +#13#10'    RACA,'
  +#13#10'    SISBOV,'
  +#13#10'    GRAUSANGUE,'
  +#13#10'    COMPOSICAORACA,'
  +#13#10'    KULTIMO_EVENTO_ZOOTECNICO,'
  +#13#10'    ULTIMO_EVENTO_ZOOTECNICO,'
  +#13#10'    KULTIMO_CIO,'
  +#13#10'    ULTIMO_CIO,'
  +#13#10'    NUMERO_CIO,'
  +#13#10'    KULTIMA_MONTA,'
  +#13#10'    ULTIMA_MONTA,'
  +#13#10'    NUMERO_MONTA,'
  +#13#10'    KULTIMO_PARTO,'
  +#13#10'    ULTIMO_PARTO,'
  +#13#10'    KPRIMEIRA_LACTACAO,'
  +#13#10'    PRIMEIRA_LACTACAO,'
  +#13#10'    NUMERO_PRIMEIRALACTACAO,'
  +#13#10'    KULTIMA_LACTACAO,'
  +#13#10'    ULTIMA_LACTACAO,'
  +#13#10'    NUMERO_LACTACAO,'
  +#13#10'    NUMERO_ABORTO,'
  +#13#10'    NUMERO_COLETA,'
  +#13#10'    DOADOR_RECEPTOR,'
  +#13#10'    KMAIOR_PESO,'
  +#13#10'    MAIOR_PESO,'
  +#13#10'    NASCIMENTO,'
  +#13#10'    RETIRO,'
  +#13#10'    LOTE,'
  +#13#10'    VLOTE1,'
  +#13#10'    VLOTE2,'
  +#13#10'    VLOTE3,'
  +#13#10'    NUCLEO,'
  +#13#10'    REBANHO,'
  +#13#10'    DATALOTE,'
  +#13#10'    DATARETIRO,'
  +#13#10'    DPPC,'
  +#13#10'    DPP,'
  +#13#10'    DUC,'
  +#13#10'    KPAI,'
  +#13#10'    NOMEPAI,'
  +#13#10'    KMAE,'
  +#13#10'    NOMEMAE,'
  +#13#10'    MAEPAI,'
  +#13#10'    MAEMAE,'
  +#13#10'    PAIPAI,'
  +#13#10'    PAIMAE,'
  +#13#10'    BISF_MAEPAI,'
  +#13#10'    BISF_MAEMAE,'
  +#13#10'    BISF_PAIPAI,'
  +#13#10'    BISF_PAIMAE,'
  +#13#10'    BISM_MAEPAI,'
  +#13#10'    BISM_MAEMAE,'
  +#13#10'    BISM_PAIPAI,'
  +#13#10'    BISM_PAIMAE,'
  +#13#10'    IDADE,'
  +#13#10'    IAP,'
  +#13#10'    KULTIMO_DIAGNOSTICO,'
  +#13#10'    KPENULTIMO_DIAGNOSTICO,'
  +#13#10'    KULTIMO_PROTOCOLO,'
  +#13#10'    KPENULTIMO_PROTOCOLO,'
  +#13#10'    KULTIMA_TAREFA,'
  +#13#10'    KPENULTIMA_TAREFA)'
  +#13#10'AS'
  +#13#10'SELECT'
  +#13#10'    F.KZOO_ANIMAL_FEMEA,'
  +#13#10'    A.KCAD_FAZENDA,'
  +#13#10'    A.BRINCO,'
  +#13#10'    A.BRINCO_,'
  +#13#10'    A.NOMEESTABULO,'
  +#13#10'    A.NOMECOMPLETO,'
  +#13#10'    A.REGISTRO,'
  +#13#10'    A.DTORIGEM,'
  +#13#10'    A.LOCAL_ORIGEM,'
  +#13#10'    A.PRECO_COMPRA,'
  +#13#10'    A.VACA,'
  +#13#10'    (SELECT SYS$DESCRIPTION FROM SYS$TYPES_GETDESCRIPTION ( ''SIGLA_STATUS_FEMEA'', A.STATUS )) STATUS,'
  +#13#10'    A.DATASTATUS,'
  +#13#10'    F.INTENCAO_DESCARTE,'
  +#13#10'    A.CRIADOR,'
  +#13#10'    A.CIDCRIA,'
  +#13#10'    A.PERSISTE,'
  +#13#10'    A.POTENCIAL,'
  +#13#10'    A.DATABRINCO,'
  +#13#10'    A.RACA,'
  +#13#10'    A.SISBOV,'
  +#13#10'    A.GRAUSANGUE,'
  +#13#10'    A.COMPOSICAORACA,'
  +#13#10'    F.KULTIMO_EVENTO_ZOOTECNICO,'
  +#13#10'    F.ULTIMO_EVENTO_ZOOTECNICO,'
  +#13#10'    F.KULTIMO_CIO,'
  +#13#10'    F.ULTIMO_CIO,'
  +#13#10'    F.NUMERO_CIO,'
  +#13#10'    F.KULTIMA_MONTA,'
  +#13#10'    F.ULTIMA_MONTA,'
  +#13#10'    F.NUMERO_MONTA,'
  +#13#10'    F.KULTIMO_PARTO,'
  +#13#10'    F.ULTIMO_PARTO,'
  +#13#10'    F.KPRIMEIRA_LACTACAO,'
  +#13#10'    F.PRIMEIRA_LACTACAO,'
  +#13#10'    F.NUMERO_PRIMEIRALACTACAO,'
  +#13#10'    F.KULTIMA_LACTACAO,'
  +#13#10'    F.ULTIMA_LACTACAO,'
  +#13#10'    F.NUMERO_LACTACAO,'
  +#13#10'    F.NUMERO_ABORTO,'
  +#13#10'    F.NUMERO_COLETA,'
  +#13#10'    (SELECT SYS$DESCRIPTION FROM SYS$TYPES_GETDESCRIPTION ( ''TIPO_DOADOR_RECEPTOR'', F.DOADOR_RECEPTOR )) DOADOR_RECEPTOR,'
  +#13#10'    F.KMAIOR_PESO,'
  +#13#10'    F.MAIOR_PESO,'
  +#13#10'    F.NASCIMENTO,'
  +#13#10'    F.RETIRO,'
  +#13#10'    F.LOTE,'
  +#13#10'    F.VLOTE1,'
  +#13#10'    F.VLOTE2,'
  +#13#10'    F.VLOTE3,'
  +#13#10'    F.NUCLEO,'
  +#13#10'    F.REBANHO,'
  +#13#10'    F.DATALOTE,'
  +#13#10'    F.DATARETIRO,'
  +#13#10'   (SELECT CAST ( CAST ( E.DATAEVENTO AS DATE ) - CAST ( F.ULTIMA_LACTACAO AS DATE ) AS INTEGER) FROM ZOO_EVENTOS_ZOOTECNICOS E WHERE E.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND E.DATAEVENTO > F.ULTIMA_LACTACAO ORDER BY E.DATAEVENTO ROWS 1) DPPC,'
  +#13#10'  --  0 DPPC,'
  +#13#10'    TRUNC ( CURRENT_TIMESTAMP - F.ULTIMA_LACTACAO ) DPP,'
  +#13#10'    TRUNC ( CURRENT_TIMESTAMP - F.ULTIMO_CIO ) DUC,'
  +#13#10'    DPAI1.KZOO_ANIMAL_PARENT  KPAI,'
  +#13#10'    DPAI1.NOMEANIMAL_PARENTE  NOMEPAI,'
  +#13#10'    DMAE1.KZOO_ANIMAL_PARENT  KMAE,'
  +#13#10'    DMAE1.NOMEANIMAL_PARENTE  NOMEMAE,'
  +#13#10'    DMAEPAI.NOMEANIMAL_PARENTE  MAEPAI,'
  +#13#10'    DMAEMAE.NOMEANIMAL_PARENTE  MAEMAE,'
  +#13#10'    DPAIPAI.NOMEANIMAL_PARENTE  PAIPAI,'
  +#13#10'    DPAIMAE.NOMEANIMAL_PARENTE  PAIMAE,'
  +#13#10''
  +#13#10'    BISF_MAEPAI.NOMEANIMAL_PARENTE BISF_MAEPAI,'
  +#13#10'    BISF_MAEMAE.NOMEANIMAL_PARENTE BISF_MAEMAE,'
  +#13#10'    BISF_PAIPAI.NOMEANIMAL_PARENTE BISF_PAIPAI,'
  +#13#10'    BISF_PAIMAE.NOMEANIMAL_PARENTE BISF_PAIMAE,'
  +#13#10''
  +#13#10'    BISM_MAEPAI.NOMEANIMAL_PARENTE BISM_MAEPAI,'
  +#13#10'    BISM_MAEMAE.NOMEANIMAL_PARENTE BISM_MAEMAE,'
  +#13#10'    BISM_PAIPAI.NOMEANIMAL_PARENTE BISM_PAIPAI,'
  +#13#10'    BISM_PAIMAE.NOMEANIMAL_PARENTE BISM_PAIMAE,'
  +#13#10''
  +#13#10'    CAST ( CAST ( (CURRENT_TIMESTAMP - F.NASCIMENTO) / 30.4 AS NUMERIC ( 5, 1 ) ) AS SYS$FLOAT )IDADE,'
  +#13#10'    CAST ( CAST ( (F.ULTIMO_PARTO - F.NASCIMENTO) / 30.4  AS NUMERIC ( 5, 1 ) ) AS SYS$FLOAT ) IAP,'
  +#13#10'    (select ud.KZOO_ANIMAL_DIAGNOSTICO from ZOO_ANIMAL_DIAGNOSTICOS ud where ud.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA order by ud.data desc  rows 1 to 1 ) KULTIMO_DIAGNOSTICO,'
  +#13#10'    (select ud.KZOO_ANIMAL_DIAGNOSTICO from ZOO_ANIMAL_DIAGNOSTICOS ud where ud.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA order by ud.data desc  rows 2 to 2 ) KPENULTIMO_DIAGNOSTICO,'
  +#13#10'    (select up.KZOO_ANIMAL_PROTOCOLO from ZOO_ANIMAL_PROTOCOLOS up where up.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA order by up.data desc  rows 1 to 1 ) KULTIMO_PROTOCOLO,'
  +#13#10'    (select up.KZOO_ANIMAL_PROTOCOLO from ZOO_ANIMAL_PROTOCOLOS up where up.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA order by up.data desc  rows 2 to 2 ) KPENULTIMO_PROTOCOLO,'
  +#13#10'    (select ut.KZOO_ANIMAL_tarefa from ZOO_ANIMAL_TAREFAS ut'
  +#13#10'     where ut.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA and ut.status = (SELECT SYS$VALUE FROM SYS$TYPES_GETVALUE ( ''STATUS_TAREFA'', ''EXECUTADA'' ))'
  +#13#10'     order by ut.datastatus desc  rows 1 to 1 ) KULTIMA_TAREFA,'
  +#13#10'    (select ut.KZOO_ANIMAL_tarefa from ZOO_ANIMAL_TAREFAS ut'
  +#13#10'     where ut.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA and ut.status = (SELECT SYS$VALUE FROM SYS$TYPES_GETVALUE ( ''STATUS_TAREFA'', ''EXECUTADA'' ))'
  +#13#10'     order by ut.datastatus desc  rows 2 to 2 ) KPENULTIMA_TAREFA'
  +#13#10'FROM ZOO_ANIMAIS_FEMEA F'
  +#13#10'INNER JOIN ZOO_ANIMAIS A ON A.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(F.KZOO_ANIMAL_FEMEA, 1, 0) DPAI1 ON DPAI1.TIPOPARENTESCO = 1 AND DPAI1.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(F.KZOO_ANIMAL_FEMEA, 1, 0) DMAE1 ON DMAE1.TIPOPARENTESCO = 2 AND DMAE1.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAI1.KZOO_ANIMAL_PARENT, 1, 0) DMAEPAI ON DMAEPAI.TIPOPARENTESCO = 2 AND DMAEPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAE1.KZOO_ANIMAL_PARENT, 1, 0) DMAEMAE ON DMAEMAE.TIPOPARENTESCO = 2 AND DMAEMAE.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAI1.KZOO_ANIMAL_PARENT, 1, 0) DPAIPAI ON DPAIPAI.TIPOPARENTESCO = 1 AND DPAIPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAE1.KZOO_ANIMAL_PARENT, 1, 0) DPAIMAE ON DPAIMAE.TIPOPARENTESCO = 1 AND DPAIMAE.PARENTLEVEL = 1'
  +#13#10''
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEPAI.KZOO_ANIMAL_PARENT, 1, 0) BISF_MAEPAI ON BISF_MAEPAI.TIPOPARENTESCO = 2 AND BISF_MAEPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEMAE.KZOO_ANIMAL_PARENT, 1, 0) BISF_MAEMAE ON BISF_MAEMAE.TIPOPARENTESCO = 2 AND BISF_MAEMAE.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIPAI.KZOO_ANIMAL_PARENT, 1, 0) BISF_PAIPAI ON BISF_PAIPAI.TIPOPARENTESCO = 2 AND BISF_PAIPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIMAE.KZOO_ANIMAL_PARENT, 1, 0) BISF_PAIMAE ON BISF_PAIMAE.TIPOPARENTESCO = 2 AND BISF_PAIMAE.PARENTLEVEL = 1'
  +#13#10''
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEPAI.KZOO_ANIMAL_PARENT, 1, 0) BISM_MAEPAI ON BISM_MAEPAI.TIPOPARENTESCO = 1 AND BISM_MAEPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEMAE.KZOO_ANIMAL_PARENT, 1, 0) BISM_MAEMAE ON BISM_MAEMAE.TIPOPARENTESCO = 1 AND BISM_MAEMAE.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIPAI.KZOO_ANIMAL_PARENT, 1, 0) BISM_PAIPAI ON BISM_PAIPAI.TIPOPARENTESCO = 1 AND BISM_PAIPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIMAE.KZOO_ANIMAL_PARENT, 1, 0) BISM_PAIMAE ON BISM_PAIMAE.TIPOPARENTESCO = 1 AND BISM_PAIMAE.PARENTLEVEL = 1' ;

  _ALTER_PROC_ZOO_INIT_LOTEPESAGEM =
         'CREATE OR ALTER PROCEDURE ZOO_INIT_LOTEPESAGEM('
  +#13#10'    KZOO_LOTEPESAGEM_LEITE SYS$FKGUID20, RETIRO ZOO$RETIRO )'
  +#13#10'AS'
  +#13#10'declare variable kcad_fazenda sys$fkguid20;'
  +#13#10'declare variable data sys$date;'
  +#13#10'declare variable status_descarte type of sys$int;'
  +#13#10'BEGIN'
  +#13#10'  RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLOFF'', ''1'' ) ;'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_ANIMAL'', ''DESCARTADO'' returning_values STATUS_DESCARTE ;'
  +#13#10''
  +#13#10'  SELECT KCAD_FAZENDA, DATA FROM ZOO_LOTEPESAGEM_LEITE'
  +#13#10'  WHERE KZOO_LOTEPESAGEM_LEITE = :KZOO_LOTEPESAGEM_LEITE'
  +#13#10'  INTO :KCAD_FAZENDA, :DATA ;'
  +#13#10''
  +#13#10'  INSERT INTO ZOO_PESAGEM_LEITE'
  +#13#10'             ( KZOO_PESAGEM_LEITE, KCAD_FAZENDA,  KZOO_LACTACAO,    KZOO_ANIMAL_FEMEA,   DATALACTACAO,  KZOO_LOTEPESAGEM_LEITE,  DATA,     LOTE )'
  +#13#10'  SELECT       Guid20(),          :KCAD_FAZENDA, L.KZOO_LACTACAO, L.KZOO_ANIMAL_FEMEA, L.DATALACTACAO, :KZOO_LOTEPESAGEM_LEITE, :DATA, DAF.LOTE'
  +#13#10'     FROM ZOO_LACTACOES L'
  +#13#10'     LEFT JOIN ZOO_ANIMAIS A ON A.KZOO_ANIMAL =  L.KZOO_ANIMAL_FEMEA'
  +#13#10'     LEFT JOIN ZOO_ANIMAL_DESCARTES D ON D.KZOO_ANIMAL =  L.KZOO_ANIMAL_FEMEA'
  +#13#10'     LEFT JOIN ZOO_ANIMAIS_FEMEA DAF ON DAF.KZOO_ANIMAL_FEMEA =  A.KZOO_ANIMAL'
  +#13#10'     LEFT JOIN ZOO_PESAGEM_LEITE PL ON PL.KZOO_LACTACAO = L.KZOO_LACTACAO AND PL.DATA = :DATA'
  +#13#10'     WHERE L.KCAD_FAZENDA = :KCAD_FAZENDA'
  +#13#10'      AND L.DATALACTACAO <= :DATA'
  +#13#10'      AND PL.KZOO_PESAGEM_LEITE IS NULL'
  +#13#10'      AND (L.DATA_SECAGEM IS NULL OR L.DATA_SECAGEM >= :DATA)'
  +#13#10'      AND ( D.KZOO_ANIMAL IS NULL OR D.DATA > :DATA )'
  +#13#10'      AND (   (:RETIRO IS NULL)'
  +#13#10'           OR (:RETIRO = '''' AND (( DAF.RETIRO IS NULL ) OR (TRIM(DAF.RETIRO) = '''')))'
  +#13#10'           OR (TRIM(DAF.RETIRO) = :RETIRO) );'
  +#13#10''
  +#13#10'  RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLOFF'', NULL ) ;'
  +#13#10'END' ;


  _ALTER_TRIGGER_ZOO_LOTEPESAGEM_LEITE_AU =
         'CREATE OR ALTER TRIGGER ZOO_LOTEPESAGEM_LEITE_AU FOR ZOO_LOTEPESAGEM_LEITE'
  +#13#10'ACTIVE AFTER UPDATE POSITION 20001'
  +#13#10'AS'
  +#13#10'DECLARE KZOO_LACTACAO SYS$FKGUID20 ;'
  +#13#10'BEGIN'
  +#13#10' IF ( NEW.DATA IS DISTINCT FROM OLD.DATA ) THEN'
  +#13#10'   UPDATE ZOO_PESAGEM_LEITE'
  +#13#10'     SET DATA = NEW.DATA'
  +#13#10'   WHERE KZOO_LOTEPESAGEM_LEITE = NEW.KZOO_LOTEPESAGEM_LEITE'
  +#13#10'     AND DATA <> NEW.DATA;'
  +#13#10''
  +#13#10' IF ((NEW.PROCESSADO IS DISTINCT FROM OLD.PROCESSADO) AND (NEW.PROCESSADO=''T'')) then'
  +#13#10'    FOR SELECT KZOO_LACTACAO'
  +#13#10'    FROM ZOO_PESAGEM_LEITE'
  +#13#10'    WHERE KZOO_LOTEPESAGEM_LEITE = NEW.KZOO_LOTEPESAGEM_LEITE'
  +#13#10'    INTO KZOO_LACTACAO DO'
  +#13#10'       EXECUTE PROCEDURE ZOO_UPDATE_CALCULO_PESAGEM KZOO_LACTACAO ;'
  +#13#10'END' ;

begin
  TryExecuteDirect ( _CREATE_DOMAIN_TANQUE ) ;
  TryExecuteDirect ( _CREATE_TABLE_TANQUE ) ;
  TryExecuteDirect ( _CREATE_PK_TANQUE ) ;
  TryExecuteDirect ( _CREATE_FK_TANQUE ) ;
  TryExecuteDirect ( _CREATE_IX_TANQUE ) ;
  TryExecuteDirect ( _CREATE_RLOG_TANQUE ) ;
  TryExecuteDirect ( _CREATE_CMT1_TANQUE ) ;
  TryExecuteDirect ( _CREATE_CMT2_TANQUE ) ;
  TryExecuteDirect ( _CREATE_CMT3_TANQUE ) ;
  TryExecuteDirect ( _CREATE_CMT4_TANQUE ) ;
  TryExecuteDirect ( _CREATE_CMT5_TANQUE ) ;

  TryExecuteDirect ( _CREATE_TABLE_TANQUEANALISE ) ;
  TryExecuteDirect ( _CREATE_PK_TANQUEANALISE ) ;
  TryExecuteDirect ( _CREATE_FK_TANQUEANALISE ) ;
  TryExecuteDirect ( _CREATE_RLOG_TANQUEANALISE ) ;
  TryExecuteDirect ( _CREATE_CMT1_TANQUEANALISE ) ;
  TryExecuteDirect ( _CREATE_CMT2_TANQUEANALISE ) ;
  TryExecuteDirect ( _CREATE_CMT3_TANQUEANALISE ) ;
  TryExecuteDirect ( _CREATE_CMT4_TANQUEANALISE ) ;
  TryExecuteDirect ( _CREATE_CMT5_TANQUEANALISE ) ;

  TryExecuteDirect ( _DROP_VRPT_FEMEAS  ) ;
  TryExecuteDirect ( _DROP_DOMAIN_RETIRO  ) ;
  TryExecuteDirect ( _CREATE_DOMAIN_RETIRO  ) ;
  TryExecuteDirect ( _ALTER_TABLE_RETIROS  ) ;
  TryExecuteDirect ( _ALTER_TABLE_ANIMAIS_FEMEA  ) ;
  TryExecuteDirect ( _CREATE_VRPT_FEMEAS  ) ;
  TryExecuteDirect ( _ALTER_PROC_ZOO_INIT_LOTEPESAGEM ) ;
  TryExecuteDirect ( _ALTER_TRIGGER_ZOO_LOTEPESAGEM_LEITE_AU ) ;

end ;

procedure TDBZootecnicoUpdate._5_000_80 ;
const
  _UPDATE_CAUSA_SECAGEM =
    'UPDATE ZOO_LACTACOES SET CAUSA_SECAGEM = 50 WHERE CAUSA_SECAGEM IS NOT NULL AND CAUSA_SECAGEM NOT IN ( 1,2,4,10,43,50 )'  ;
begin
  ExecuteDirect ( _UPDATE_CAUSA_SECAGEM ) ;
  ExecuteDirect ( 'DELETE FROM SYS$TYPES WHERE SYS$TYPE = ''STATUS_PRODUCAO'' AND SYS$VALUE >= 1 AND SYS$VALUE NOT IN ( 1,2,4,10,43,50 )' ) ;
end ;

procedure TDBZootecnicoUpdate._5_000_74 ;
const
  _CREATE_ZOO_ANIMAL_TAREFAS_AIUD =
         'CREATE OR ALTER TRIGGER ZOO_ANIMAL_TAREFAS_AIUD FOR ZOO_ANIMAL_TAREFAS'
  +#13#10'ACTIVE AFTER INSERT OR UPDATE OR DELETE POSITION 20000'
  +#13#10'AS'
  +#13#10'DECLARE DIA_DESCARTE_CARNE SYS$INT ;'
  +#13#10'DECLARE DIA_DESCARTE_LEITE SYS$INT ;'
  +#13#10'DECLARE DATAPREVISTA  SYS$DATE ;'
  +#13#10'DECLARE TIPO_DESCARTE_LEITE SYS$INT ;'
  +#13#10'DECLARE TIPO_DESCARTE_CARNE SYS$INT ;'
  +#13#10'DECLARE DDT type of column ZOO_ANIMAL_TAREFAS.DDT ;'
  +#13#10'DECLARE STATUS_PENDENTE SYS$INT ;'
  +#13#10'BEGIN'
  +#13#10''
  +#13#10'  IF ( RDB$GET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$LTD'' ) = ''1'' ) THEN'
  +#13#10'     EXIT ;'
  +#13#10''
  +#13#10'  RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$LTD'', ''1'' ) ;'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_TAREFA'', ''PENDENTE'' returning_values STATUS_PENDENTE ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_TAREFA'', ''DESCARTE_LEITE'' returning_values TIPO_DESCARTE_LEITE ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_TAREFA'', ''DESCARTE_CARNE'' returning_values TIPO_DESCARTE_CARNE ;'
  +#13#10''
  +#13#10'  IF (inserting) THEN'
  +#13#10'    BEGIN'
  +#13#10''
  +#13#10'      DATAPREVISTA  = COALESCE ( NEW.DATASTATUS, NEW.DATAPREVISTA ) ;'
  +#13#10''
  +#13#10'      -- leite'
  +#13#10'      IF ( NEW.DESCARTELEITE > 0 ) THEN'
  +#13#10'      BEGIN'
  +#13#10'        DIA_DESCARTE_LEITE = NEW.DESCARTELEITE ;'
  +#13#10'        WHILE ( DIA_DESCARTE_LEITE > 0 ) DO'
  +#13#10'          BEGIN'
  +#13#10'            INSERT INTO ZOO_ANIMAL_TAREFAS'
  +#13#10'              ( KZOO_ANIMAL_TAREFA,'
  +#13#10'                KZOO_ANIMAL,'
  +#13#10'                KZOO_ANIMAL_PROTOCOLO,'
  +#13#10'                CODIGO,'
  +#13#10'                NOME,'
  +#13#10'                DATAPREVISTA,'
  +#13#10'                STATUS,'
  +#13#10'                DATASTATUS,'
  +#13#10'                KCAD_FUNCIONARIO,'
  +#13#10'                NOMEFUNCIONARIO,'
  +#13#10'                KMZOO_ANIMAL_TAREFA,'
  +#13#10'                DDT )'
  +#13#10'            VALUES'
  +#13#10'              ( Guid20(),'
  +#13#10'                NEW.KZOO_ANIMAL,'
  +#13#10'                NEW.KZOO_ANIMAL_PROTOCOLO,'
  +#13#10'                ''DL'','
  +#13#10'                ''Descartar leite'','
  +#13#10'                :DATAPREVISTA + :DIA_DESCARTE_LEITE - 1,'
  +#13#10'                :TIPO_DESCARTE_LEITE,'
  +#13#10'                :DATAPREVISTA + :DIA_DESCARTE_LEITE - 1,'
  +#13#10'                NEW.KCAD_FUNCIONARIO,'
  +#13#10'                NEW.NOMEFUNCIONARIO,'
  +#13#10'                NEW.KZOO_ANIMAL_TAREFA,'
  +#13#10'                :DIA_DESCARTE_LEITE'
  +#13#10'              ) ;'
  +#13#10'              DIA_DESCARTE_LEITE = DIA_DESCARTE_LEITE -  1 ;'
  +#13#10'           END -- while leite'
  +#13#10'      END -- if leite'
  +#13#10''
  +#13#10'      -- carne'
  +#13#10'      IF ( NEW.DESCARTECARNE > 0 ) THEN'
  +#13#10'      BEGIN'
  +#13#10''
  +#13#10'        DIA_DESCARTE_CARNE = NEW.DESCARTECARNE ;'
  +#13#10''
  +#13#10'        WHILE ( DIA_DESCARTE_CARNE > 0 ) DO'
  +#13#10'          BEGIN'
  +#13#10'            INSERT INTO ZOO_ANIMAL_TAREFAS'
  +#13#10'              ( KZOO_ANIMAL_TAREFA,'
  +#13#10'                KZOO_ANIMAL,'
  +#13#10'                KZOO_ANIMAL_PROTOCOLO,'
  +#13#10'                CODIGO,'
  +#13#10'                NOME,'
  +#13#10'                DATAPREVISTA,'
  +#13#10'                STATUS,'
  +#13#10'                DATASTATUS,'
  +#13#10'                KCAD_FUNCIONARIO,'
  +#13#10'                NOMEFUNCIONARIO,'
  +#13#10'                KMZOO_ANIMAL_TAREFA,'
  +#13#10'                DDT'
  +#13#10'              )'
  +#13#10'            VALUES'
  +#13#10'              ( Guid20(),'
  +#13#10'                NEW.KZOO_ANIMAL,'
  +#13#10'                NEW.KZOO_ANIMAL_PROTOCOLO,'
  +#13#10'                ''NDC'','
  +#13#10'                ''Não descartar carne'','
  +#13#10'                :DATAPREVISTA + :DIA_DESCARTE_CARNE - 1,'
  +#13#10'                :TIPO_DESCARTE_CARNE,'
  +#13#10'                :DATAPREVISTA + :DIA_DESCARTE_CARNE - 1,'
  +#13#10'                NEW.KCAD_FUNCIONARIO,'
  +#13#10'                NEW.NOMEFUNCIONARIO,'
  +#13#10'                NEW.KZOO_ANIMAL_TAREFA,'
  +#13#10'                :DIA_DESCARTE_CARNE'
  +#13#10'              ) ;'
  +#13#10'              DIA_DESCARTE_CARNE = DIA_DESCARTE_CARNE -  1 ;'
  +#13#10'          END -- while carne'
  +#13#10'      END -- if carne'
// não pode atualizar os protocolos antes durante a de incluir todas as tarefas...
//  +#13#10''
//  +#13#10'      if ( ( NEW.KZOO_ANIMAL_PROTOCOLO IS NOT NULL ) AND ( NEW.STATUS > STATUS_PENDENTE ) ) THEN'
//  +#13#10'         EXECUTE PROCEDURE ZOO_ISFINISHED_PROTOCOLO( NEW.KZOO_ANIMAL_PROTOCOLO ) ;'
  +#13#10''
  +#13#10'    END -- if inserting'
  +#13#10''
  +#13#10'  IF (updating) THEN'
  +#13#10'    BEGIN'
  +#13#10''
  +#13#10'      FOR SELECT'
  +#13#10'        DDT'
  +#13#10'      FROM ZOO_ANIMAL_TAREFAS'
  +#13#10'      WHERE KMZOO_ANIMAL_TAREFA = OLD.KZOO_ANIMAL_TAREFA'
  +#13#10'      ORDER BY DDT'
  +#13#10'      INTO  DDT'
  +#13#10'      AS CURSOR CURSOR_DESCARTES'
  +#13#10'      DO'
  +#13#10'        BEGIN'
  +#13#10'            UPDATE ZOO_ANIMAL_TAREFAS'
  +#13#10'              SET'
  +#13#10'                KZOO_ANIMAL            = NEW.KZOO_ANIMAL,'
  +#13#10'                KZOO_ANIMAL_PROTOCOLO  = NEW.KZOO_ANIMAL_PROTOCOLO,'
  +#13#10'                --KZOO_TAREFA            = NEW.KZOO_TAREFA,'
  +#13#10'                DATAPREVISTA           = COALESCE ( NEW.DATASTATUS, NEW.DATAPREVISTA ) + :DDT - 1,'
  +#13#10'                DATASTATUS             = COALESCE ( NEW.DATASTATUS, NEW.DATAPREVISTA ) + :DDT - 1,'
  +#13#10'                KCAD_FUNCIONARIO       = KCAD_FUNCIONARIO,'
  +#13#10'                NOMEFUNCIONARIO        = NOMEFUNCIONARIO,'
  +#13#10'                KMZOO_ANIMAL_TAREFA    = KMZOO_ANIMAL_TAREFA'
  +#13#10'             WHERE CURRENT OF CURSOR_DESCARTES ;'
  +#13#10'        END'
  +#13#10''
  +#13#10'    END'
  +#13#10''
  +#13#10'  IF (deleting) THEN'
  +#13#10'    BEGIN'
  +#13#10'      DELETE FROM ZOO_ANIMAL_TAREFAS WHERE KMZOO_ANIMAL_TAREFA = OLD.KZOO_ANIMAL_TAREFA ;'
  +#13#10'      if ( OLD.KZOO_ANIMAL_PROTOCOLO IS NOT NULL ) THEN'
  +#13#10'         EXECUTE PROCEDURE ZOO_ISFINISHED_PROTOCOLO( OLD.KZOO_ANIMAL_PROTOCOLO ) ;'
  +#13#10'    END'
  +#13#10''
  +#13#10'  RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$LTD'', NULL ) ;'
  +#13#10''
  +#13#10'END' ;
begin
  ExecuteDirect ( _CREATE_ZOO_ANIMAL_TAREFAS_AIUD ) ;
end ;

(*
procedure TDBZootecnicoUpdate._5_000_74 ;
var
  FS : TFormatSettings ;

  function GetBrinco( AString: string ) : string ;
    const
      _SQL = 'select f.kzoo_animal_femea from zoo_animais a join zoo_animais_femea f on f.kzoo_animal_femea = a.kzoo_animal where a.brinco like %s and a.status <> 9' ;
    var
      CDS : TClientDataSet ;
    begin
      cds :=  nil ;
      populateClientDataSet ( cds, Format( _SQL, [ AString ] ) ) ;
      Result := cds.Fields[0].asString ;
      cds.free ;
    end ;

begin
 FS.DateSeparator := '/' ;
 FS.ShortDateFormat := 'dd/mm/yyyy' ;

 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '1116'  ), '4BMtx|u;\eRvwn2n2OW2', 1, StrToDate( '16/01/2015', FS ),'',False) ; // 'Negativo
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '9076'  ), '4BMtx|u;\eRvwn2n2OW2', 1, StrToDate( '28/01/2015', FS ),'',False) ; //  'Streptococcus uberis
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '8025'  ), '4BMtx|u;\eRvwn2n2OW2', 1, StrToDate( '13/01/2015', FS ),'',False) ; //  'Negativo
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '1041'  ), '4BMtx|u;\eRvwn2n2OW2', 1, StrToDate( '15/01/2015', FS ),'',False) ; //  'Streptococcus agalactiae
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '80512' ), '4BMtx|u;\eRvwn2n2OW2', 1, StrToDate( '30/01/2015', FS ),'',False) ; //  'Contaminada
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '9043'  ), '4BMtx|u;\eRvwn2n2OW2', 1, StrToDate( '27/01/2015', FS ),'',False) ; //  'Negativo
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '20210' ), '4BMtx|u;\eRvwn2n2OW2', 1, StrToDate( '28/01/2015', FS ),'',False) ; //  'Negativo
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '20611' ), '4BMtx|u;\eRvwn2n2OW2', 1, StrToDate( '19/01/2015', FS ),'',False) ; //  'Negativo
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '8056'  ), '4BMtx|u;\eRvwn2n2OW2', 1, StrToDate( '23/01/2015', FS ),'',False) ; //  'Streptococcus agalactiae
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '1022'  ), '4BMtx|u;\eRvwn2n2OW2', 1, StrToDate( '16/01/2015', FS ),'',False) ; //  'Streptococcus agalactiae
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '2122'  ), '4BMtx|u;\eRvwn2n2OW2', 1, StrToDate( '09/01/2015', FS ),'',False) ; //  'Streptococcus dysgalactiae
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '6111'  ), '4BMtx|u;\eRvwn2n2OW2', 1, StrToDate( '13/01/2015', FS ),'',False) ; //  'Streptococcus uberis
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '1069'  ), '4BMtx|u;\eRvwn2n2OW2', 1, StrToDate( '12/01/2015', FS ),'',False) ; //  'Streptococcus uberis
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '9109'  ), '4BMtx|u;\eRvwn2n2OW2', 1, StrToDate( '19/01/2015', FS ),'',False) ; //  'Streptococcus agalactiae
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '9075'  ), '4BMtx|u;\eRvwn2n2OW2', 1, StrToDate( '11/01/2015', FS ),'',False) ; //  'Streptococcus agalactiae
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '2051'  ), '4BMtx|u;\eRvwn2n2OW2', 1, StrToDate( '16/01/2015', FS ),'',False) ; //  'Negativo
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '70614' ), '4BMtx|u;\eRvwn2n2OW2', 1, StrToDate( '25/01/2015', FS ),'',False) ; //  'Strepcoccus agalactiae
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '1097'  ), '4BMtx|u;\eRvwn2n2OW2', 1, StrToDate( '15/01/2015', FS ),'',False) ; //  'Negativo
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '7092'  ), '4BMtx|u;\eRvwn2n2OW2', 1, StrToDate( '25/01/2015', FS ),'',False) ; //  'Staphylococcus coagulase negativa
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '2085'  ), '4BMtx|u;\eRvwn2n2OW2', 1, StrToDate( '21/01/2015', FS ),'',False) ; //  'Negativo
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '10512' ), '4BMtx|u;\eRvwn2n2OW2', 1, StrToDate( '28/01/2015', FS ),'',False) ; //  'Enterobacter spp.
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '10310' ), '4BMtx|u;\eRvwn2n2OW2', 1, StrToDate( '27/01/2015', FS ),'',False) ; //  'Streptococcus agalactiae
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '1052'  ), '4BMtx|u;\eRvwn2n2OW2', 2, StrToDate( '28/01/2015', FS ),'',False) ; //  'Negativo
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '9076'  ), '4BMtx|u;\eRvwn2n2OW2', 2, StrToDate( '28/01/2015', FS ),'',False) ; //  'Streptococcus uberis
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '80425' ), '4BMtx|u;\eRvwn2n2OW2', 2, StrToDate( '16/01/2015', FS ),'',False) ; //  'Staphylococcus coagulase negativa
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '1311'  ), '4BMtx|u;\eRvwn2n2OW2', 2, StrToDate( '24/01/2015', FS ),'',False) ; //  'Negativo
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '9125'  ), '4BMtx|u;\eRvwn2n2OW2', 2, StrToDate( '28/01/2015', FS ),'',False) ; //  'Streptococcus uberis
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '8056'  ), '4BMtx|u;\eRvwn2n2OW2', 2, StrToDate( '23/01/2015', FS ),'',False) ; //  'Streptococcus agalactiae
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '6111'  ), '4BMtx|u;\eRvwn2n2OW2', 2, StrToDate( '13/01/2015', FS ),'',False) ; //  'Streptococcus uberis
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '2054'  ), '4BMtx|u;\eRvwn2n2OW2', 2, StrToDate( '21/01/2015', FS ),'',False) ; //  'Negativo
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '50'    ), '4BMtx|u;\eRvwn2n2OW2', 2, StrToDate( '21/01/2015', FS ),'',False) ; //  'Negativo
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '1125'  ), '4BMtx|u;\eRvwn2n2OW2', 2, StrToDate( '22/01/2015', FS ),'',False) ; //  'Streptococcus coagulase negativa
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '7068'  ), '4BMtx|u;\eRvwn2n2OW2', 2, StrToDate( '23/01/2015', FS ),'',False) ; //  'Staphylococcus coagulase negativa
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '70711' ), '4BMtx|u;\eRvwn2n2OW2', 2, StrToDate( '19/01/2015', FS ),'',False) ; //  'Streptococcus agalactiae
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '11119' ), '4BMtx|u;\eRvwn2n2OW2', 2, StrToDate( '25/01/2015', FS ),'',False) ; //  'Streptococcus agalactiae
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '1038'  ), '4BMtx|u;\eRvwn2n2OW2', 3, StrToDate( '28/01/2015', FS ),'',False) ; //  'Staphylococcus coagulase negativa
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '9011'  ), '4BMtx|u;\eRvwn2n2OW2', 3, StrToDate( '15/01/2015', FS ),'',False) ; //  'Enterobacter spp.
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '1045'  ), '4BMtx|u;\eRvwn2n2OW2', 3, StrToDate( '04/02/2015', FS ),'',False) ; //  'Streptococcus agalactiae
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '9061'  ), '4BMtx|u;\eRvwn2n2OW2', 3, StrToDate( '11/01/2015', FS ),'',False) ; //  'Streptococcus agalactiae
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '20610' ), '4BMtx|u;\eRvwn2n2OW2', 3, StrToDate( '12/01/2015', FS ),'',False) ; //  'Negativo
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '6111'  ), '4BMtx|u;\eRvwn2n2OW2', 3, StrToDate( '13/01/2015', FS ),'',False) ; //  'Streptococcus uberis
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '20432' ), '4BMtx|u;\eRvwn2n2OW2', 3, StrToDate( '10/01/2015', FS ),'',False) ; //  'Streptococcus uberis
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '7068'  ), '4BMtx|u;\eRvwn2n2OW2', 3, StrToDate( '10/01/2015', FS ),'',False) ; //  'Streptococcus uberis
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '1093'  ), '4BMtx|u;\eRvwn2n2OW2', 3, StrToDate( '21/01/2015', FS ),'',False) ; //  'Negativo
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '20611' ), '4BMtx|u;\eRvwn2n2OW2', 3, StrToDate( '22/01/2015', FS ),'',False) ; //  'Negativo
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '1304'  ), '4BMtx|u;\eRvwn2n2OW2', 3, StrToDate( '21/01/2015', FS ),'',False) ; //  'Negativo
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '2051'  ), '4BMtx|u;\eRvwn2n2OW2', 3, StrToDate( '16/01/2015', FS ),'',False) ; //  'Negativo
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '90520' ), '4BMtx|u;\eRvwn2n2OW2', 3, StrToDate( '30/01/2015', FS ),'',False) ; //  'Negativo
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '2078'  ), '4BMtx|u;\eRvwn2n2OW2', 4, StrToDate( '12/01/2015', FS ),'',False) ; //  'Negativo
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '70510' ), '4BMtx|u;\eRvwn2n2OW2', 4, StrToDate( '21/01/2015', FS ),'',False) ; //  'Streptococcus uberis
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '6111'  ), '4BMtx|u;\eRvwn2n2OW2', 4, StrToDate( '13/01/2015', FS ),'',False) ; //  'Streptococcus uberis
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '6041'  ), '4BMtx|u;\eRvwn2n2OW2', 4, StrToDate( '12/01/2015', FS ),'',False) ; //  'Streptococcus agalactiae
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '2082'  ), '4BMtx|u;\eRvwn2n2OW2', 4, StrToDate( '09/01/2015', FS ),'',False) ; //  'Streptococcus agalactiae
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '20314' ), '4BMtx|u;\eRvwn2n2OW2', 4, StrToDate( '21/01/2015', FS ),'',False) ; //  'Negativo
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '1122'  ), '4BMtx|u;\eRvwn2n2OW2', 4, StrToDate( '27/01/2015', FS ),'',False) ; //  'Negativo
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '8119'  ), '4BMtx|u;\eRvwn2n2OW2', 4, StrToDate( '20/01/2015', FS ),'',False) ; //  'Negativo
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '2074'  ), '4BMtx|u;\eRvwn2n2OW2', 4, StrToDate( '11/01/2015', FS ),'',False) ; //  'Streptococcus agalactiae
 TDiagnosticosAnimal.AddDiagnostico (GetBrinco( '5548'  ), '4BMtx|u;\eRvwn2n2OW2', 4, StrToDate( '13/01/2015', FS ),'',False) ; //  'Streptococcus agalactiae
end ;
*)

procedure TDBZootecnicoUpdate._5_000_73 ;
const
  _CREATE_INDX_TMP_EVT = 'CREATE INDEX IXIMP$CIOSCOB_01 ON IMP$CIOSCOB (BRINCO)' ;

  _CREATE_PROC_IMP_CAD_PRODAP =
         'CREATE OR ALTER PROCEDURE DOIMP$PRODAP_CADASTRO('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    PRODAP VARCHAR(1024) COLLATE ISO8859_1)'
  +#13#10'AS'
  +#13#10'declare variable brinco varchar(10) not null;'
  +#13#10'declare variable nome_estab varchar(60);'
  +#13#10'declare variable nome_completo varchar(60);'
  +#13#10'declare variable registro varchar(15);'
  +#13#10'declare variable dtnasc date;'
  +#13#10'declare variable pai varchar(8);'
  +#13#10'declare variable nome_pai varchar(40);'
  +#13#10'declare variable registro_pai varchar(15);'
  +#13#10'declare variable pd_pai varchar(5);'
  +#13#10'declare variable mae varchar(10);'
  +#13#10'declare variable nome_mae varchar(40);'
  +#13#10'declare variable registro_mae varchar(15);'
  +#13#10'declare variable dtorigem date;'
  +#13#10'declare variable local_origem varchar(20);'
  +#13#10'declare variable preco_compra numeric(15,2);'
  +#13#10'declare variable dtdesc date;'
  +#13#10'declare variable razao char(3);'
  +#13#10'declare variable motivo varchar(300);'
  +#13#10'declare variable preco_venda numeric(15,2);'
  +#13#10'declare variable comprador varchar(40);'
  +#13#10'declare variable raca char(3);'
  +#13#10'declare variable racaaux char(20);'
  +#13#10'declare variable gsangue smallint;'
  +#13#10'declare variable gsanguestr varchar(5);'
  +#13#10'declare variable retiro char(2);'
  +#13#10'declare variable lote char(2);'
  +#13#10'declare variable nucleo char(4);'
  +#13#10'declare variable rebanho varchar(5);'
  +#13#10'declare variable vaca varchar(8);'
  +#13#10'declare variable avo_paterno varchar(40);'
  +#13#10'declare variable reg_avo_paterno varchar(15);'
  +#13#10'declare variable avo_paterna varchar(40);'
  +#13#10'declare variable reg_avo_paterna varchar(15);'
  +#13#10'declare variable avo_materno varchar(40);'
  +#13#10'declare variable reg_avo_materno varchar(15);'
  +#13#10'declare variable avo_materna varchar(40);'
  +#13#10'declare variable reg_avo_materna varchar(15);'
  +#13#10'declare variable touro1 varchar(8);'
  +#13#10'declare variable touro2 varchar(8);'
  +#13#10'declare variable touro3 varchar(8);'
  +#13#10'declare variable touro4 varchar(8);'
  +#13#10'declare variable te char(2);'
  +#13#10'declare variable lote1 char(2);'
  +#13#10'declare variable data1 date;'
  +#13#10'declare variable lote2 char(2);'
  +#13#10'declare variable data2 date;'
  +#13#10'declare variable lote3 char(2);'
  +#13#10'declare variable data3 date;'
  +#13#10'declare variable lote4 char(2);'
  +#13#10'declare variable data4 date;'
  +#13#10'declare variable lote5 char(2);'
  +#13#10'declare variable data5 date;'
  +#13#10'declare variable lote6 char(2);'
  +#13#10'declare variable data6 date;'
  +#13#10'declare variable lote7 char(2);'
  +#13#10'declare variable data7 date;'
  +#13#10'declare variable lote8 char(2);'
  +#13#10'declare variable data8 date;'
  +#13#10'declare variable status varchar(3) not null;'
  +#13#10'declare variable criador varchar(40);'
  +#13#10'declare variable cidcria varchar(25);'
  +#13#10'declare variable codigo1 char(3);'
  +#13#10'declare variable codigo2 char(3);'
  +#13#10'declare variable codigo3 char(3);'
  +#13#10'declare variable persiste integer;'
  +#13#10'declare variable potencial integer;'
  +#13#10'declare LF_ char;'
  +#13#10'BEGIN'
  +#13#10' LF_ = ASCII_CHAR(10);'
  +#13#10''
  +#13#10' DELETE FROM IMP$CADASTRO ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   (    ''SELECT a.CDANIMAL, (TRIM(a.SIGLAANIMAL) || ''''[*]'''' || coalesce('''' '''' || a.NOME, '''''''')), ''' // BRINCO,NOME_ESTAB
  +#13#10'     ||LF_|| ''a.NOMECOMPLETO, '''  //NOME_COMPLETO
  +#13#10'     ||LF_|| ''a.REGISTRO,a.DTNASC,p.CDANIMAL,p.NOMECOMPLETO,p.REGISTRO, ''' // REGISTRO,DTNASC,PAI,NOME_PAI,REGISTRO_PAI,'
  +#13#10'     ||LF_|| ''null,m.CDANIMAL,m.NOMECOMPLETO,m.REGISTRO, ''' // PD_PAI,MAE,NOME_MAE,REGISTRO_MAE,
  +#13#10'     ||LF_|| ''null,null,null, ''' //DTORIGEM,LOCAL_ORIGEM,PRECO_COMPRA
  +#13#10'     ||LF_|| ''COALESCE( A.DTBAIXA, A.DTDESCARTE ),IIF( (A.DTBAIXA IS NOT NULL) OR (A.DTDESCARTE IS NOT NULL), ''''DES'''', NULL), '''   // DTDESC,RAZAO,'
  +#13#10'     ||LF_|| ''CASE ''' //  MOTIVO
  +#13#10'     ||LF_|| ''    WHEN (A.DTBAIXA is null) AND (A.DTDESCARTE is null)    THEN NULL'''
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''M''''  THEN ''''8'''' '' -- Mamite'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''AL'''' THEN ''''3'''' '' -- Aleijado (a)'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''CA'''' THEN ''''3'''' '' -- Cascos'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''DO'''' THEN ''''4'''' '' -- Doença'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''ID'''' THEN ''''8'''' '' -- Idade'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''MA'''' THEN ''''8'''' '' -- Mamite'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''NA'''' THEN ''''8'''' '' -- Náfego (a)'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''OR'''' THEN ''''6'''' '' -- Dificuldade de ordenha'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''OU'''' THEN ''''8'''' '' -- Outros'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''PO'''' THEN ''''8'''' '' -- Desenvolvimento ponderal inadequado'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''PR'''' THEN ''''6'''' '' -- Baixa produção / Habilidade materna'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''RE'''' THEN ''''7'''' '' -- Falha reprodutiva'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''TA'''' THEN ''''8'''' '' -- Teta anormal'
  +#13#10'     ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''TE'''' THEN ''''8'''' '' -- Temperamento'
  +#13#10'     ||LF_|| ''    else ''''11'''' '''
  +#13#10'     ||LF_|| ''END, '''
  +#13#10'     ||LF_|| ''null,null, ''' // PRECO_VENDA,COMPRADOR,
  +#13#10'     ||LF_|| ''SUBSTRING ( iif(position(''''/'''' in a.grausangue) > 0, trim(substring(a.grausangue from position('''' '''' in a.grausangue) )), null) FROM 1 FOR 5 ), '''  //RACA
  +#13#10'     ||LF_|| ''SUBSTRING ( iif(position(''''/'''' in a.grausangue) > 0, trim(substring(a.grausangue from 1 for position('''' '''' in a.grausangue) )), null) FROM 1 FOR 5 ), ''' // GSANGUE
  +#13#10'     ||LF_|| ''IIF(r.NOME IS NULL, NULL, SUBSTRING(r.NOME FROM 1 FOR 2) ), ''' // RETIRO
  +#13#10'     ||LF_|| ''null,null,null, ''' // LOTE,NUCLEO,REBANHO
  +#13#10'     ||LF_|| ''null,null,null,null,null,null,null,null,null,null, ''' // VACA, AVO_PATERNO,REG_AVO_PATERNO,AVO_PATERNA,REG_AVO_PATERNA,AVO_MATERNO,REG_AVO_MATERNO,AVO_MATERNA,REG_AVO_MATERNA, TOURO1
  +#13#10'     ||LF_|| ''null,null,null,''' // TOURO2,TOURO3,TOURO4
  +#13#10'     ||LF_|| ''CASE'''
  +#13#10'     ||LF_|| ''  WHEN A.CDCATEGORIA IN ( ''''F21'''', ''''F22'''', ''''F23'''', ''''F24'''') THEN ''''TE'''' '''  // = Doadora
  +#13#10'     ||LF_|| ''  WHEN A.CDCATEGORIA IN ( ''''F30'''', ''''F31'''', ''''F32'''', ''''F33'''', ''''F34'''', ''''F35'''',''''F36'''',   ''''F37'''' ) THEN ''''RE'''' ''' // = Receptora
  +#13#10'     ||LF_|| ''  ELSE NULL'''
  +#13#10'     ||LF_|| ''END,''' // TE
  +#13#10'     ||LF_|| ''null,null,null,null,null,null,'''  // LOTE1,DATA1,LOTE2,DATA2,LOTE3,DATA3,
  +#13#10'     ||LF_|| ''null,null,null,null,null,null,'''  //LOTE4,DATA4,LOTE5,DATA5,LOTE6,DATA6,
  +#13#10'     ||LF_|| ''null,null,null,null, ''' //LOTE7,DATA7,LOTE8,DATA8'
  +#13#10'     ||LF_|| ''CASE '''
  +#13#10'     ||LF_|| ''    WHEN ( A.DTBAIXA IS NOT NULL ) OR ( A.DTDESCARTE IS NOT NULL ) THEN ''''DES'''' '''
  +#13#10'     ||LF_|| ''    WHEN (a.LACTENTE = ''''S'''')  THEN ''''BEZ'''' '''
  +#13#10'     ||LF_|| ''    WHEN (a.CATEGANIMAL is null) or (upper(a.CATEGANIMAL) = ''''N'''')  THEN ''''NOV'''' '''
  +#13#10'     ||LF_|| ''    WHEN a.LACTANTE = ''''S'''' THEN ''''VL'''' '''
  +#13#10'     ||LF_|| ''    ELSE ''''VS'''' '''
  +#13#10'     ||LF_|| ''END, ''' //,STATUS,
  +#13#10'     ||LF_|| ''null,null,null,null,null,null,null ''' //CRIADOR, CIDCRIA, CODIGO1, CODIGO2, CODIGO3, PERSISTE, POTENCIAL'
  +#13#10'     ||LF_|| ''FROM ANIMAL a '''
  +#13#10'     ||LF_|| ''LEFT JOIN RETIRO r on r.cdretiro = a.cdretiro '''
  +#13#10'     ||LF_|| ''LEFT JOIN ANIMAL p on p.CDANIMAL = a.cdpai '''
  +#13#10'     ||LF_|| ''LEFT JOIN ANIMAL m on m.CDANIMAL = a.cdmae '''
  +#13#10'     ||LF_|| ''WHERE a.SEXO = ''''F'''' AND A.SITUACAO IN ( ''''V'''',''''M'''' )'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'    :BRINCO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,'
  +#13#10'    :PD_PAI,:MAE,:NOME_MAE,:REGISTRO_MAE,:DTORIGEM,:LOCAL_ORIGEM,:PRECO_COMPRA,:DTDESC,:RAZAO,'
  +#13#10'    :MOTIVO,:PRECO_VENDA,:COMPRADOR,:RACAAUX,:GSANGUESTR,:RETIRO,:LOTE,:NUCLEO,:REBANHO,:VACA,'
  +#13#10'    :AVO_PATERNO,:REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,'
  +#13#10'    :AVO_MATERNA,:REG_AVO_MATERNA,:TOURO1,:TOURO2,:TOURO3,:TOURO4,:TE,:LOTE1,:DATA1,:LOTE2,:DATA2,'
  +#13#10'    :LOTE3,:DATA3,:LOTE4,:DATA4,:LOTE5,:DATA5,:LOTE6,:DATA6,:LOTE7,:DATA7,:LOTE8,:DATA8,:STATUS,:CRIADOR,'
  +#13#10'    :CIDCRIA,:CODIGO1,:CODIGO2,:CODIGO3,:PERSISTE,:POTENCIAL'
  +#13#10' DO'
  +#13#10' begin'
  +#13#10''
  +#13#10'    SELECT first 1 COMPOSICAO from doimp$prodap_raca(:RACAAUX) into :RACA;'
  +#13#10'    SELECT first 1 IDGSANGUE from doimp$default_idgsangue(:GSANGUESTR) into :GSANGUE;'
  +#13#10''
  +#13#10'  INSERT INTO IMP$CADASTRO'
  +#13#10'    ('
  +#13#10'      BRINCO,NOME_ESTAB,NOME_COMPLETO,REGISTRO,DTNASC,PAI,NOME_PAI,REGISTRO_PAI,'
  +#13#10'      PD_PAI,MAE,NOME_MAE,REGISTRO_MAE,DTORIGEM,LOCAL_ORIGEM,PRECO_COMPRA,DTDESC,RAZAO,'
  +#13#10'      MOTIVO,PRECO_VENDA,COMPRADOR,RACA,GSANGUE,RETIRO,LOTE,NUCLEO,REBANHO,VACA,'
  +#13#10'      AVO_PATERNO,REG_AVO_PATERNO,AVO_PATERNA,REG_AVO_PATERNA,AVO_MATERNO,REG_AVO_MATERNO,'
  +#13#10'      AVO_MATERNA,REG_AVO_MATERNA,TOURO1,TOURO2,TOURO3,TOURO4,TE,LOTE1,DATA1,LOTE2,DATA2,'
  +#13#10'      LOTE3,DATA3,LOTE4,DATA4,LOTE5,DATA5,LOTE6,DATA6,LOTE7,DATA7,LOTE8,DATA8,STATUS,CRIADOR,'
  +#13#10'      CIDCRIA,CODIGO1,CODIGO2,CODIGO3,PERSISTE,POTENCIAL'
  +#13#10'    )'
  +#13#10'  VALUES'
  +#13#10'    ('
  +#13#10'     :BRINCO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,'
  +#13#10'     :PD_PAI,:MAE,:NOME_MAE,:REGISTRO_MAE,:DTORIGEM,:LOCAL_ORIGEM,:PRECO_COMPRA,:DTDESC,:RAZAO,'
  +#13#10'     :MOTIVO,:PRECO_VENDA,:COMPRADOR,:RACA,:GSANGUE,:RETIRO,:LOTE,:NUCLEO,:REBANHO,:VACA,'
  +#13#10'     :AVO_PATERNO,:REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,'
  +#13#10'     :AVO_MATERNA,:REG_AVO_MATERNA,:TOURO1,:TOURO2,:TOURO3,:TOURO4,:TE,:LOTE1,:DATA1,:LOTE2,:DATA2,'
  +#13#10'     :LOTE3,:DATA3,:LOTE4,:DATA4,:LOTE5,:DATA5,:LOTE6,:DATA6,:LOTE7,:DATA7,:LOTE8,:DATA8,:STATUS,:CRIADOR,'
  +#13#10'     :CIDCRIA,:CODIGO1,:CODIGO2,:CODIGO3,:PERSISTE,:POTENCIAL'
  +#13#10'    ) ;'
  +#13#10''
  +#13#10' end'
  +#13#10''
  +#13#10''
  +#13#10'end' ;

  _CREATE_PROC_IMP_CAD_TOURO_PRODAP =
         'CREATE OR ALTER PROCEDURE DOIMP$PRODAP_CADTOURO('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    PRODAP VARCHAR(1024) COLLATE ISO8859_1)'
  +#13#10'AS'
  +#13#10'declare variable codigo varchar(8) not null;'
  +#13#10'declare variable nome_estab varchar(60);'
  +#13#10'declare variable nome_completo varchar(60);'
  +#13#10'declare variable registro varchar(15);'
  +#13#10'declare variable dtnasc date;'
  +#13#10'declare variable pai varchar(8);'
  +#13#10'declare variable nome_pai varchar(40);'
  +#13#10'declare variable registro_pai varchar(15);'
  +#13#10'declare variable mae varchar(10);'
  +#13#10'declare variable nome_mae varchar(40);'
  +#13#10'declare variable registro_mae varchar(15);'
  +#13#10'declare variable leite integer;'
  +#13#10'declare variable tipo numeric(15,2);'
  +#13#10'declare variable ubere numeric(15,2);'
  +#13#10'declare variable pernape numeric(15,2);'
  +#13#10'declare variable parto integer;'
  +#13#10'declare variable qestoque integer;'
  +#13#10'declare variable qusada smallint;'
  +#13#10'declare variable concepcao integer;'
  +#13#10'declare variable valor numeric(15,2);'
  +#13#10'declare variable status char(1) not null;'
  +#13#10'declare variable racaaux char(20);'
  +#13#10'declare variable gsangue smallint;'
  +#13#10'declare variable gsanguestr varchar(5);'
  +#13#10'declare variable raca char(3);'
  +#13#10'declare variable retiro char(2);'
  +#13#10'declare variable lote char(2);'
  +#13#10'declare variable bojao smallint;'
  +#13#10'declare variable caneca smallint;'
  +#13#10'declare variable hack varchar(10);'
  +#13#10'declare variable dtdesc date;'
  +#13#10'declare variable razao char(3);'
  +#13#10'declare variable motivo char(3);'
  +#13#10'declare variable preco_venda numeric(15,2);'
  +#13#10'declare variable comprador varchar(40);'
  +#13#10'declare variable avo_paterno varchar(40);'
  +#13#10'declare variable reg_avo_paterno varchar(15);'
  +#13#10'declare variable avo_paterna varchar(40);'
  +#13#10'declare variable reg_avo_paterna varchar(15);'
  +#13#10'declare variable avo_materno varchar(40);'
  +#13#10'declare variable reg_avo_materno varchar(15);'
  +#13#10'declare variable avo_materna varchar(40);'
  +#13#10'declare variable reg_avo_materna varchar(15);'
  +#13#10'declare LF_ char;'
  +#13#10'BEGIN'
  +#13#10' LF_ = ASCII_CHAR(10);'
  +#13#10' DELETE FROM IMP$CADTOURO ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   ('
  +#13#10'      ''SELECT a.CDANIMAL, (TRIM(a.SIGLAANIMAL) || ''''[*]'''' || coalesce('''' '''' || a.NOME,'''''''')), '''
  +#13#10'   ||LF_|| ''a.NOMECOMPLETO, '''
  +#13#10'   ||LF_|| ''a.REGISTRO,a.DTNASC,p.CDANIMAL,p.NOMECOMPLETO,p.REGISTRO, '''
  +#13#10'   ||LF_|| ''m.CDANIMAL,m.NOMECOMPLETO,m.REGISTRO, '''
  +#13#10'   ||LF_|| ''NULL, NULL, NULL, NULL, NULL, 0, 0, NULL, NULL, '''
  +#13#10'   ||LF_|| ''CASE '''
  +#13#10'   ||LF_|| ''    WHEN (upper(a.CATEGANIMAL) = ''''S'''')  THEN ''''I'''' '''
  +#13#10'   ||LF_|| ''    ELSE ''''M'''' '''
  +#13#10'   ||LF_|| ''END, '''
  +#13#10'   ||LF_|| ''iif(position(''''/'''' in a.grausangue) > 0, trim(substring(a.grausangue from 1 for position('''' '''' in a.grausangue) )), null), '''
  +#13#10'   ||LF_|| ''iif(position(''''/'''' in a.grausangue) > 0, trim(substring(a.grausangue from position('''' '''' in a.grausangue) )), null), '''
  +#13#10'   ||LF_|| ''IIF(r.NOME IS NULL, NULL, SUBSTRING(r.NOME FROM 1 FOR 2) ), '''
  +#13#10'   ||LF_|| ''NULL, NULL, NULL, NULL, '''
  +#13#10'   ||LF_|| ''COALESCE ( A.DTBAIXA, A.DTDESCARTE ), IIF( (A.DTBAIXA IS NOT NULL) AND (A.DTDESCARTE IS NOT NULL),''''DES'''', NULL), '''
  +#13#10'   ||LF_|| ''CASE '''
  +#13#10'   ||LF_|| ''    WHEN ( a.cddescarte is null ) and ( A.DTBAIXA is null ) THEN NULL '''
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''M'''' THEN ''''8'''' '' -- Mamite'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''AL'''' THEN ''''3'''' '' -- Aleijado (a)'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''CA'''' THEN ''''3'''' '' -- Cascos'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''DO'''' THEN ''''4'''' '' -- Doença'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''ID'''' THEN ''''8'''' '' -- Idade'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''MA'''' THEN ''''8'''' '' -- Mamite'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''NA'''' THEN ''''8'''' '' -- Náfego (a)'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''OR'''' THEN ''''6'''' '' -- Dificuldade de ordenha'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''OU'''' THEN ''''8'''' '' -- Outros'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''PO'''' THEN ''''8'''' '' -- Desenvolvimento ponderal inadequado'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''PR'''' THEN ''''6'''' '' -- Baixa produção / Habilidade materna'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''RE'''' THEN ''''7'''' '' -- Falha reprodutiva'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''TA'''' THEN ''''8'''' '' -- Teta anormal'
  +#13#10'   ||LF_|| ''    WHEN SUBSTRING(a.cddescarte FROM 2 FOR 3) = ''''TE'''' THEN ''''8'''' '' -- Temperamento'
  +#13#10'   ||LF_|| ''    else ''''8'''' '''
  +#13#10'   ||LF_|| ''END, '''
  +#13#10'   ||LF_|| ''NULL,NULL,NULL,NULL, NULL,NULL,NULL,NULL,NULL,NULL '''
  +#13#10'   ||LF_|| ''FROM ANIMAL a '''
  +#13#10'   ||LF_|| ''LEFT JOIN RETIRO r on r.cdretiro = a.cdretiro '''
  +#13#10'   ||LF_|| ''LEFT JOIN ANIMAL p on p.CDANIMAL = a.cdpai '''
  +#13#10'   ||LF_|| ''LEFT JOIN ANIMAL m on m.CDANIMAL = a.cdmae '''
  +#13#10'   ||LF_|| ''WHERE a.SEXO = ''''M'''' '''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'    :CODIGO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,:MAE,:NOME_MAE,'
  +#13#10'    :REGISTRO_MAE,:LEITE,:TIPO,:UBERE,:PERNAPE,:PARTO,:QESTOQUE,:QUSADA,:CONCEPCAO,:VALOR,:STATUS,:GSANGUESTR,'
  +#13#10'    :RACAAUX,:RETIRO,:LOTE,:BOJAO,:CANECA,:HACK,:DTDESC,:RAZAO,:MOTIVO,:PRECO_VENDA,:COMPRADOR,:AVO_PATERNO,'
  +#13#10'    :REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,:AVO_MATERNA,:REG_AVO_MATERNA'
  +#13#10'  DO'
  +#13#10'  begin'
  +#13#10''
  +#13#10'    SELECT first 1 COMPOSICAO from doimp$prodap_raca(:RACAAUX) into :RACA;'
  +#13#10'    SELECT first 1 IDGSANGUE from doimp$default_idgsangue(:GSANGUESTR) into :GSANGUE;'
  +#13#10''
  +#13#10'    INSERT INTO IMP$CADTOURO'
  +#13#10'     ('
  +#13#10'       CODIGO,NOME_ESTAB,NOME_COMPLETO,REGISTRO,DTNASC,PAI,NOME_PAI,REGISTRO_PAI,MAE,NOME_MAE,'
  +#13#10'       REGISTRO_MAE,LEITE,TIPO,UBERE,PERNAPE,PARTO,QESTOQUE,QUSADA,CONCEPCAO,VALOR,STATUS,GSANGUE,'
  +#13#10'       RACA,RETIRO,LOTE,BOJAO,CANECA,HACK,DTDESC,RAZAO,MOTIVO,PRECO_VENDA,COMPRADOR,AVO_PATERNO,'
  +#13#10'       REG_AVO_PATERNO,AVO_PATERNA,REG_AVO_PATERNA,AVO_MATERNO,REG_AVO_MATERNO,AVO_MATERNA,REG_AVO_MATERNA'
  +#13#10'     )'
  +#13#10'    VALUES'
  +#13#10'    ('
  +#13#10'      :CODIGO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,:MAE,:NOME_MAE,'
  +#13#10'      :REGISTRO_MAE,:LEITE,:TIPO,:UBERE,:PERNAPE,:PARTO,:QESTOQUE,:QUSADA,:CONCEPCAO,:VALOR,:STATUS,:GSANGUE,'
  +#13#10'      :RACA,:RETIRO,:LOTE,:BOJAO,:CANECA,:HACK,:DTDESC,:RAZAO,:MOTIVO,:PRECO_VENDA,:COMPRADOR,:AVO_PATERNO,'
  +#13#10'      :REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,:AVO_MATERNA,:REG_AVO_MATERNA'
  +#13#10'    ) ;'
  +#13#10''
  +#13#10'  end'
  +#13#10'end' ;

  _CREATE_PROC_CIOSCOB_PRODAP =
         'CREATE OR ALTER PROCEDURE DOIMP$PRODAP_CIOSCOB('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    PRODAP VARCHAR(1024) COLLATE ISO8859_1)'
  +#13#10'AS'
  +#13#10'declare variable brinco varchar(10) not null;'
  +#13#10'declare variable dtucio date not null;'
  +#13#10'declare variable dtucob date;'
  +#13#10'declare variable touro varchar(8);'
  +#13#10'declare variable im char(1);'
  +#13#10'declare variable doses smallint;'
  +#13#10'declare variable cio char(1);'
  +#13#10'declare variable ab_sp char(1);'
  +#13#10'declare variable dataconf date;'
  +#13#10'declare variable data_ab date;'
  +#13#10'declare variable num_com varchar(6);'
  +#13#10'declare variable funcionar char(2);'
  +#13#10'declare variable observacao varchar(15);'
  +#13#10'declare variable reexaminar char(1);'
  +#13#10'declare variable conf char(1);'
  +#13#10'declare variable intervalo smallint;'
  +#13#10'declare variable dtparto date;'
  +#13#10'declare variable sexo1 char(1);'
  +#13#10'declare variable sexo2 char(1);'
  +#13#10'declare variable embrioes smallint;'
  +#13#10'declare LF_ char;'
  +#13#10'BEGIN'
  +#13#10' LF_ = ASCII_CHAR(10);'
  +#13#10' DELETE FROM IMP$CIOSCOB ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   ('
  +#13#10'      ''SELECT R.CDANIMAL,R.DTREPRODUCAO,NULL,AR.CDPAI, '''
  +#13#10'   ||LF_|| ''CASE '''
  +#13#10'   ||LF_|| ''  WHEN '''
  +#13#10'   ||LF_|| ''    (R.DTPARTOOCORRIDO is not null) and '''
  +#13#10'   ||LF_|| ''    (R.TIPOINSEMINACAO is null or trim(R.TIPOINSEMINACAO) = '''''''' ) THEN ''''I'''' '''
  +#13#10'   ||LF_|| ''  WHEN R.TIPOINSEMINACAO = ''''AN'''' OR R.TIPOINSEMINACAO = ''''AC'''' THEN ''''I'''' '''
  +#13#10'   ||LF_|| ''  WHEN R.TIPOINSEMINACAO is not null and TRIM(R.TIPOINSEMINACAO) != '''''''' THEN substring(R.TIPOINSEMINACAO from 1 for 1) '''
  +#13#10'   ||LF_|| ''  ELSE ''''I'''' '''
  +#13#10'   ||LF_|| ''END, '''
  +#13#10'   ||LF_|| ''IIF(TRIM(R.TIPOINSEMINACAO) != '''''''' and substring(R.TIPOINSEMINACAO from 1 for 1) <> ''''M'''', 1, null), '''
  +#13#10'   ||LF_|| ''NULL,NULL,R.DTTOQUE,NULL,NULL,NULL,NULL,NULL, '''
  +#13#10'   ||LF_|| ''CASE '''
  +#13#10'   ||LF_|| ''    WHEN R.DTPARTOPROVAVEL is not null THEN ''''S'''' '''
  +#13#10'   ||LF_|| ''    WHEN R.DTTOQUE is not null THEN ''''N'''' '''
  +#13#10'   ||LF_|| ''    ELSE NULL '''
  +#13#10'   ||LF_|| ''END, '''
  +#13#10'   ||LF_|| ''NULL,R.DTPARTOOCORRIDO,A1.sexo, A2.sexo, null '''
  +#13#10'   ||LF_|| ''FROM REPRODUCAO R '''
  +#13#10'   ||LF_|| ''LEFT JOIN ANIMAL A1 on A1.cdanimal = R.cdcria1 '''
  +#13#10'   ||LF_|| ''LEFT JOIN ANIMAL A2 on A2.cdanimal = R.cdcria2 '''
  +#13#10'   ||LF_|| ''LEFT JOIN ANIREPRODUCAO AR on R.cdreproducao = AR.cdreproducao'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'   :BRINCO,:DTUCIO,:DTUCOB,:TOURO,:IM,:DOSES,:CIO,:AB_SP,:DATACONF,:DATA_AB,:NUM_COM,:FUNCIONAR,'
  +#13#10'   :OBSERVACAO,:REEXAMINAR,:CONF,:INTERVALO,:DTPARTO,:SEXO1,:SEXO2,:EMBRIOES'
  +#13#10' DO'
  +#13#10'    INSERT INTO IMP$CIOSCOB'
  +#13#10'     ('
  +#13#10'      BRINCO,DTUCIO,DTUCOB,TOURO,IM,DOSES,CIO,AB_SP,DATACONF,DATA_AB,NUM_COM,FUNCIONAR,'
  +#13#10'      OBSERVACAO,REEXAMINAR,CONF,INTERVALO,DTPARTO,SEXO1,SEXO2,EMBRIOES'
  +#13#10'     )'
  +#13#10'    VALUES'
  +#13#10'    ('
  +#13#10'       :BRINCO,:DTUCIO,:DTUCOB,:TOURO,:IM,:DOSES,:CIO,:AB_SP,:DATACONF,:DATA_AB,:NUM_COM,:FUNCIONAR,'
  +#13#10'       :OBSERVACAO,:REEXAMINAR,:CONF,:INTERVALO,:DTPARTO,:SEXO1,:SEXO2,:EMBRIOES'
  +#13#10'    ) ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   ('
  +#13#10'      ''SELECT R.CDANIMAL,R.DTREPRODUCAO,NULL,AR.CDPAI, '''
  +#13#10'   ||LF_|| ''CASE '''
  +#13#10'   ||LF_|| ''  WHEN '''
  +#13#10'   ||LF_|| ''    (R.DTPARTOOCORRIDO is not null) and '''
  +#13#10'   ||LF_|| ''    (R.TIPOINSEMINACAO is null or trim(R.TIPOINSEMINACAO) = '''''''' ) THEN ''''I'''' '''
  +#13#10'   ||LF_|| ''  WHEN R.TIPOINSEMINACAO = ''''AN'''' OR R.TIPOINSEMINACAO = ''''AC'''' THEN ''''I'''' '''
  +#13#10'   ||LF_|| ''  WHEN R.TIPOINSEMINACAO is not null and TRIM(R.TIPOINSEMINACAO) != '''''''' THEN substring(R.TIPOINSEMINACAO from 1 for 1) '''
  +#13#10'   ||LF_|| ''  ELSE ''''I'''' '''
  +#13#10'   ||LF_|| ''END, '''
  +#13#10'   ||LF_|| ''IIF(TRIM(R.TIPOINSEMINACAO) != '''''''' and substring(R.TIPOINSEMINACAO from 1 for 1) <> ''''M'''', 1, null), '''
  +#13#10'   ||LF_|| ''NULL,NULL,R.DTTOQUE,NULL,NULL,NULL,NULL,NULL, '''
  +#13#10'   ||LF_|| ''CASE '''
  +#13#10'   ||LF_|| ''    WHEN R.DTPARTOPROVAVEL is not null THEN ''''S'''' '''
  +#13#10'   ||LF_|| ''    WHEN R.DTTOQUE is not null THEN ''''N'''' '''
  +#13#10'   ||LF_|| ''    ELSE NULL '''
  +#13#10'   ||LF_|| ''END, '''
  +#13#10'   ||LF_|| ''NULL,R.DTPARTOOCORRIDO,A1.sexo, A2.sexo, null '''
  +#13#10'   ||LF_|| ''FROM REPRODUCAO2 R '''
  +#13#10'   ||LF_|| ''LEFT JOIN ANIMAL A1 on A1.cdanimal = R.cdcria1 '''
  +#13#10'   ||LF_|| ''LEFT JOIN ANIMAL A2 on A2.cdanimal = R.cdcria2 '''
  +#13#10'   ||LF_|| ''LEFT JOIN ANIREPRODUCAO2 AR on R.cdreproducao = AR.cdreproducao'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'   :BRINCO,:DTUCIO,:DTUCOB,:TOURO,:IM,:DOSES,:CIO,:AB_SP,:DATACONF,:DATA_AB,:NUM_COM,:FUNCIONAR,'
  +#13#10'   :OBSERVACAO,:REEXAMINAR,:CONF,:INTERVALO,:DTPARTO,:SEXO1,:SEXO2,:EMBRIOES'
  +#13#10' DO'
  +#13#10'    INSERT INTO IMP$CIOSCOB'
  +#13#10'     ('
  +#13#10'      BRINCO,DTUCIO,DTUCOB,TOURO,IM,DOSES,CIO,AB_SP,DATACONF,DATA_AB,NUM_COM,FUNCIONAR,'
  +#13#10'      OBSERVACAO,REEXAMINAR,CONF,INTERVALO,DTPARTO,SEXO1,SEXO2,EMBRIOES'
  +#13#10'     )'
  +#13#10'    VALUES'
  +#13#10'    ('
  +#13#10'       :BRINCO,:DTUCIO,:DTUCOB,:TOURO,:IM,:DOSES,:CIO,:AB_SP,:DATACONF,:DATA_AB,:NUM_COM,:FUNCIONAR,'
  +#13#10'       :OBSERVACAO,:REEXAMINAR,:CONF,:INTERVALO,:DTPARTO,:SEXO1,:SEXO2,:EMBRIOES'
  +#13#10'    ) ;'
  +#13#10''
  +#13#10'end' ;

  _CREATE_PROC_DADOPROD_PRODAP =
         'CREATE OR ALTER PROCEDURE DOIMP$PRODAP_DADOPROD('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    PRODAP VARCHAR(1024) COLLATE ISO8859_1)'
  +#13#10'AS'
  +#13#10'declare variable countnl smallint;'
  +#13#10'declare variable lastbrinco varchar(10);'
  +#13#10'declare variable brinco varchar(10) not null;'
  +#13#10'declare variable dtparto date not null;'
  +#13#10'declare variable nc smallint;'
  +#13#10'declare variable aborto char(1);'
  +#13#10'declare variable nl smallint;'
  +#13#10'declare variable del smallint;'
  +#13#10'declare variable placum integer;'
  +#13#10'declare variable eqa integer;'
  +#13#10'declare variable desvio smallint;'
  +#13#10'declare variable pl305 integer;'
  +#13#10'declare variable pl365 integer;'
  +#13#10'declare variable gordura numeric(15,2);'
  +#13#10'declare variable gord305 smallint;'
  +#13#10'declare variable gord365 smallint;'
  +#13#10'declare variable eqag smallint;'
  +#13#10'declare variable totalgord smallint;'
  +#13#10'declare variable pico numeric(15,2);'
  +#13#10'declare variable picodel smallint;'
  +#13#10'declare variable totalprot smallint;'
  +#13#10'declare variable prot305 smallint;'
  +#13#10'declare variable prot365 smallint;'
  +#13#10'declare variable eqaprot smallint;'
  +#13#10'declare variable totalscl integer;'
  +#13#10'declare variable p305scl integer;'
  +#13#10'declare variable p365scl integer;'
  +#13#10'declare variable desvioscl smallint;'
  +#13#10'declare variable g305scl smallint;'
  +#13#10'declare variable g365scl smallint;'
  +#13#10'declare variable totalgscl smallint;'
  +#13#10'declare variable delscl smallint;'
  +#13#10'declare variable proteina numeric(15,2);'
  +#13#10'declare variable lactose numeric(15,2);'
  +#13#10'declare variable sol_totais numeric(15,2);'
  +#13#10'declare variable condutividade smallint;'
  +#13#10'declare variable cel_somaticas integer;'
  +#13#10'declare variable np smallint;'
  +#13#10'declare variable nord smallint;'
  +#13#10'declare variable dataproc date;'
  +#13#10'declare variable datascl date;'
  +#13#10'declare variable dtsec date;'
  +#13#10'declare variable intparto numeric(15,2);'
  +#13#10'declare variable causa char(2);'
  +#13#10'declare variable dim3x smallint;'
  +#13#10'declare variable del_bst smallint;'
  +#13#10'declare variable pl305_bst integer;'
  +#13#10'declare variable idade smallint;'
  +#13#10'declare variable lm char(2);'
  +#13#10'declare variable le char(2);'
  +#13#10'declare variable re char(2);'
  +#13#10'declare variable rn char(2);'
  +#13#10'declare variable pv char(2);'
  +#13#10'declare LF_ char;'
  +#13#10'BEGIN'
  +#13#10' LF_ = ASCII_CHAR(10);'
  +#13#10' DELETE FROM IMP$DADOPROD ;'
  +#13#10''
  +#13#10' LASTBRINCO = '''';'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   (   ''SELECT '''
  +#13#10'    ||LF_|| ''L.CDANIMAL,L.DTINILACTACAO,NULL,NULL,A.NUMLACTTOTAL, '''
  +#13#10'    ||LF_|| ''NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL, '''
  +#13#10'    ||LF_|| ''NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL, '''
  +#13#10'    ||LF_|| ''NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL, '''
  +#13#10'    ||LF_|| ''NULL,NULL,NULL,NULL,L.DTFINLACTACAO,NULL, '''
  +#13#10'    ||LF_|| ''IIF(L.DTFINLACTACAO is not null, ''''1'''', null), '''
  +#13#10'    ||LF_|| ''NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL '''
  +#13#10'    ||LF_|| ''FROM LACTACAO L '''
  +#13#10'    ||LF_|| ''LEFT JOIN ANIMAL A on A.CDANIMAL = L.CDANIMAL '''
  +#13#10'    ||LF_|| ''ORDER BY L.CDANIMAL, L.DTINILACTACAO DESC'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'  :BRINCO, :DTPARTO, :NC, :ABORTO, :NL, :DEL, :PLACUM, :EQA, :DESVIO, :PL305, :PL365,'
  +#13#10'  :GORDURA, :GORD305, :GORD365, :EQAG, :TOTALGORD, :PICO, :PICODEL, :TOTALPROT, :PROT305,'
  +#13#10'  :PROT365, :EQAPROT, :TOTALSCL, :P305SCL, :P365SCL, :DESVIOSCL, :G305SCL, :G365SCL, :TOTALGSCL,'
  +#13#10'  :DELSCL, :PROTEINA, :LACTOSE, :SOL_TOTAIS, :CONDUTIVIDADE, :CEL_SOMATICAS, :NP, :NORD,'
  +#13#10'  :DATAPROC, :DATASCL, :DTSEC, :INTPARTO, :CAUSA, :DIM3X, :DEL_BST, :PL305_BST, :IDADE, :LM,'
  +#13#10'  :LE, :RE, :RN, :PV'
  +#13#10' DO'
  +#13#10' BEGIN'
  +#13#10''
  +#13#10'    if (LASTBRINCO <> BRINCO) then'
  +#13#10'    BEGIN'
  +#13#10'        COUNTNL = 0;'
  +#13#10'        LASTBRINCO = BRINCO;'
  +#13#10'    END'
  +#13#10''
  +#13#10'    INSERT INTO IMP$DADOPROD'
  +#13#10'    ( BRINCO,DTPARTO,NC,ABORTO,NL,DEL,PLACUM,EQA,DESVIO,PL305,PL365,GORDURA,GORD305,GORD365,'
  +#13#10'      EQAG,TOTALGORD,PICO,PICODEL,TOTALPROT,PROT305,PROT365,EQAPROT,TOTALSCL,P305SCL,P365SCL,'
  +#13#10'      DESVIOSCL,G305SCL,G365SCL,TOTALGSCL,DELSCL,PROTEINA,LACTOSE,SOL_TOTAIS,CONDUTIVIDADE,CEL_SOMATICAS,'
  +#13#10'      NP,NORD,DATAPROC,DATASCL,DTSEC,INTPARTO,CAUSA,DIM3X,DEL_BST,PL305_BST,IDADE,LM,'
  +#13#10'      LE,RE,RN,PV'
  +#13#10'    )'
  +#13#10'    values'
  +#13#10'      ( :BRINCO, :DTPARTO, :NC, :ABORTO, (:NL - :COUNTNL), :DEL, :PLACUM, :EQA, :DESVIO, :PL305, :PL365,'
  +#13#10'        :GORDURA, :GORD305, :GORD365, :EQAG, :TOTALGORD, :PICO, :PICODEL, :TOTALPROT, :PROT305,'
  +#13#10'        :PROT365, :EQAPROT, :TOTALSCL, :P305SCL, :P365SCL, :DESVIOSCL, :G305SCL, :G365SCL, :TOTALGSCL,'
  +#13#10'        :DELSCL, :PROTEINA, :LACTOSE, :SOL_TOTAIS, :CONDUTIVIDADE, :CEL_SOMATICAS, :NP, :NORD,'
  +#13#10'        :DATAPROC, :DATASCL, :DTSEC, :INTPARTO, :CAUSA, :DIM3X, :DEL_BST, :PL305_BST, :IDADE, :LM,'
  +#13#10'        :LE, :RE, :RN, :PV'
  +#13#10'      ) ;'
  +#13#10''
  +#13#10'    COUNTNL = COUNTNL + 1;'
  +#13#10' END'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   (   ''SELECT '''
  +#13#10'    ||LF_|| ''L.CDANIMAL,L.DTINILACTACAO,NULL,NULL,A.NUMLACTTOTAL, '''
  +#13#10'    ||LF_|| ''NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL, '''
  +#13#10'    ||LF_|| ''NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL, '''
  +#13#10'    ||LF_|| ''NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL, '''
  +#13#10'    ||LF_|| ''NULL,NULL,NULL,NULL,L.DTFINLACTACAO,NULL, '''
  +#13#10'    ||LF_|| ''IIF(L.DTFINLACTACAO is not null, ''''1'''', null), '''
  +#13#10'    ||LF_|| ''NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL '''
  +#13#10'    ||LF_|| ''FROM LACTACAO2 L '''
  +#13#10'    ||LF_|| ''LEFT JOIN ANIMAL A on A.CDANIMAL = L.CDANIMAL '''
  +#13#10'    ||LF_|| ''ORDER BY L.CDANIMAL, L.DTINILACTACAO DESC'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'  :BRINCO, :DTPARTO, :NC, :ABORTO, :NL, :DEL, :PLACUM, :EQA, :DESVIO, :PL305, :PL365,'
  +#13#10'  :GORDURA, :GORD305, :GORD365, :EQAG, :TOTALGORD, :PICO, :PICODEL, :TOTALPROT, :PROT305,'
  +#13#10'  :PROT365, :EQAPROT, :TOTALSCL, :P305SCL, :P365SCL, :DESVIOSCL, :G305SCL, :G365SCL, :TOTALGSCL,'
  +#13#10'  :DELSCL, :PROTEINA, :LACTOSE, :SOL_TOTAIS, :CONDUTIVIDADE, :CEL_SOMATICAS, :NP, :NORD,'
  +#13#10'  :DATAPROC, :DATASCL, :DTSEC, :INTPARTO, :CAUSA, :DIM3X, :DEL_BST, :PL305_BST, :IDADE, :LM,'
  +#13#10'  :LE, :RE, :RN, :PV'
  +#13#10' DO'
  +#13#10' BEGIN'
  +#13#10''
  +#13#10'    if (LASTBRINCO <> BRINCO) then'
  +#13#10'    BEGIN'
  +#13#10'        COUNTNL = 0;'
  +#13#10'        LASTBRINCO = BRINCO;'
  +#13#10'    END'
  +#13#10''
  +#13#10'    INSERT INTO IMP$DADOPROD'
  +#13#10'    ( BRINCO,DTPARTO,NC,ABORTO,NL,DEL,PLACUM,EQA,DESVIO,PL305,PL365,GORDURA,GORD305,GORD365,'
  +#13#10'      EQAG,TOTALGORD,PICO,PICODEL,TOTALPROT,PROT305,PROT365,EQAPROT,TOTALSCL,P305SCL,P365SCL,'
  +#13#10'      DESVIOSCL,G305SCL,G365SCL,TOTALGSCL,DELSCL,PROTEINA,LACTOSE,SOL_TOTAIS,CONDUTIVIDADE,CEL_SOMATICAS,'
  +#13#10'      NP,NORD,DATAPROC,DATASCL,DTSEC,INTPARTO,CAUSA,DIM3X,DEL_BST,PL305_BST,IDADE,LM,'
  +#13#10'      LE,RE,RN,PV'
  +#13#10'    )'
  +#13#10'    values'
  +#13#10'      ( :BRINCO, :DTPARTO, :NC, :ABORTO, (:NL - :COUNTNL), :DEL, :PLACUM, :EQA, :DESVIO, :PL305, :PL365,'
  +#13#10'        :GORDURA, :GORD305, :GORD365, :EQAG, :TOTALGORD, :PICO, :PICODEL, :TOTALPROT, :PROT305,'
  +#13#10'        :PROT365, :EQAPROT, :TOTALSCL, :P305SCL, :P365SCL, :DESVIOSCL, :G305SCL, :G365SCL, :TOTALGSCL,'
  +#13#10'        :DELSCL, :PROTEINA, :LACTOSE, :SOL_TOTAIS, :CONDUTIVIDADE, :CEL_SOMATICAS, :NP, :NORD,'
  +#13#10'        :DATAPROC, :DATASCL, :DTSEC, :INTPARTO, :CAUSA, :DIM3X, :DEL_BST, :PL305_BST, :IDADE, :LM,'
  +#13#10'        :LE, :RE, :RN, :PV'
  +#13#10'      ) ;'
  +#13#10''
  +#13#10'    COUNTNL = COUNTNL + 1;'
  +#13#10' END'
  +#13#10'END' ;

  _CREATE_PROC_PESAGENS_PRODAP =
         'CREATE OR ALTER PROCEDURE DOIMP$PRODAP_PESAGENS('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    PRODAP VARCHAR(1024) COLLATE ISO8859_1)'
  +#13#10'AS'
  +#13#10'declare variable brinco varchar(10) not null;'
  +#13#10'declare variable data date not null;'
  +#13#10'declare variable ord1 numeric(15,2);'
  +#13#10'declare variable ord2 numeric(15,2);'
  +#13#10'declare variable ord3 numeric(15,2);'
  +#13#10'declare variable total numeric(15,2);'
  +#13#10'declare variable variacao numeric(15,2);'
  +#13#10'declare variable del smallint;'
  +#13#10'declare variable pgordura numeric(15,2);'
  +#13#10'declare variable proteina numeric(15,2);'
  +#13#10'declare variable lactose numeric(15,2);'
  +#13#10'declare variable condutividade smallint;'
  +#13#10'declare variable sol_totais numeric(15,2);'
  +#13#10'declare variable cel_somaticas integer;'
  +#13#10'declare variable ureia numeric(15,2);'
  +#13#10'declare variable observacao varchar(15);'
  +#13#10'declare variable nord smallint;'
  +#13#10'declare LF_ char;'
  +#13#10'BEGIN'
  +#13#10' LF_ = ASCII_CHAR(10);'
  +#13#10' DELETE FROM IMP$PESAGENS ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   (    ''SELECT L.CDANIMAL,L.DTPESALEITE, L.PESOLEITE1, L.PESOLEITE2, L.PESOLEITE3, '''
  +#13#10'     ||LF_|| ''L.PESOLEITE,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,L.NUMPESO '''
  +#13#10'     ||LF_|| ''FROM PESALEITE L'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO :BRINCO, :DATA, :ORD1, :ORD2, :ORD3, :TOTAL, :VARIACAO, :DEL, :PGORDURA, :PROTEINA, :LACTOSE,'
  +#13#10'      :CONDUTIVIDADE, :SOL_TOTAIS, :CEL_SOMATICAS, :UREIA, :OBSERVACAO, :NORD'
  +#13#10' DO'
  +#13#10'  INSERT INTO IMP$PESAGENS'
  +#13#10'    ( BRINCO, DATA, ORD1, ORD2, ORD3, TOTAL, VARIACAO, DEL, PGORDURA, PROTEINA, LACTOSE,'
  +#13#10'     CONDUTIVIDADE, SOL_TOTAIS, CEL_SOMATICAS, UREIA, OBSERVACAO, NORD'
  +#13#10'    )'
  +#13#10'  VALUES'
  +#13#10'   ('
  +#13#10'      :BRINCO, :DATA, :ORD1, :ORD2, :ORD3, :TOTAL, :VARIACAO, :DEL, :PGORDURA, :PROTEINA, :LACTOSE,'
  +#13#10'      :CONDUTIVIDADE, :SOL_TOTAIS, :CEL_SOMATICAS, :UREIA, :OBSERVACAO, :NORD'
  +#13#10'   );'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   (    ''SELECT L.CDANIMAL,L.DTPESALEITE, L.PESOLEITE1, L.PESOLEITE2, L.PESOLEITE3, '''
  +#13#10'     ||LF_|| ''L.PESOLEITE,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,L.NUMPESO '''
  +#13#10'     ||LF_|| ''FROM PESALEITE2 L'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO :BRINCO, :DATA, :ORD1, :ORD2, :ORD3, :TOTAL, :VARIACAO, :DEL, :PGORDURA, :PROTEINA, :LACTOSE,'
  +#13#10'      :CONDUTIVIDADE, :SOL_TOTAIS, :CEL_SOMATICAS, :UREIA, :OBSERVACAO, :NORD'
  +#13#10' DO'
  +#13#10'  INSERT INTO IMP$PESAGENS'
  +#13#10'    ( BRINCO, DATA, ORD1, ORD2, ORD3, TOTAL, VARIACAO, DEL, PGORDURA, PROTEINA, LACTOSE,'
  +#13#10'     CONDUTIVIDADE, SOL_TOTAIS, CEL_SOMATICAS, UREIA, OBSERVACAO, NORD'
  +#13#10'    )'
  +#13#10'  VALUES'
  +#13#10'   ('
  +#13#10'      :BRINCO, :DATA, :ORD1, :ORD2, :ORD3, :TOTAL, :VARIACAO, :DEL, :PGORDURA, :PROTEINA, :LACTOSE,'
  +#13#10'      :CONDUTIVIDADE, :SOL_TOTAIS, :CEL_SOMATICAS, :UREIA, :OBSERVACAO, :NORD'
  +#13#10'   );'
  +#13#10''
  +#13#10'end' ;

  _CREATE_PROC_MAMITE_PRODAP =
         'CREATE OR ALTER PROCEDURE DOIMP$PRODAP_MAMITE('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    PRODAP VARCHAR(1024) COLLATE ISO8859_1)'
  +#13#10'AS'
  +#13#10'declare CDMAMITE INTEGER ;'
  +#13#10'declare CDANIMAL INTEGER ;'
  +#13#10'declare DATA TIMESTAMP ;'
  +#13#10'declare QUARTO CHAR(2) ;'
  +#13#10'declare SEVERIDADE INTEGER ;'
  +#13#10'declare LF_ char;'
  +#13#10'BEGIN'
  +#13#10'  LF_ = ASCII_CHAR(10);'
  +#13#10'  DELETE FROM IMP$MAMITE ;'
  +#13#10''
  +#13#10'  FOR EXECUTE STATEMENT'
  +#13#10'    (    ''SELECT'''
  +#13#10'  ||LF_||''  -1 CDMAMITE,'''
  +#13#10'  ||LF_||''  U.CDANIMAL,'''
  +#13#10'  ||LF_||''  U.DTUBERE,'''
  +#13#10'  ||LF_||''  ''''AD'''' QUARTO,'''
  +#13#10'  ||LF_||''  1 SEVERIDADE'''
  +#13#10'  ||LF_||''from UBERE U'''
  +#13#10'  ||LF_||''where U.TETAANTDIREITA > 0 OR U.POOLTETAS > 1'''
  +#13#10'  ||LF_||''union all'''
  +#13#10'  ||LF_||''SELECT'''
  +#13#10'  ||LF_||''  -1 CDMAMITE,'''
  +#13#10'  ||LF_||''  U.CDANIMAL,'''
  +#13#10'  ||LF_||''  U.DTUBERE,'''
  +#13#10'  ||LF_||''  ''''AE'''' QUARTO,'''
  +#13#10'  ||LF_||''  1 SEVERIDADE'''
  +#13#10'  ||LF_||''from UBERE U'''
  +#13#10'  ||LF_||''where U.TETAANTESQUERDA > 0 OR U.POOLTETAS > 1'''
  +#13#10'  ||LF_||''union all'''
  +#13#10'  ||LF_||''SELECT'''
  +#13#10'  ||LF_||''  -1 CDMAMITE,'''
  +#13#10'  ||LF_||''  U.CDANIMAL,'''
  +#13#10'  ||LF_||''  U.DTUBERE,'''
  +#13#10'  ||LF_||''  ''''PD'''' QUARTO,'''
  +#13#10'  ||LF_||''  1 SEVERIDADE'''
  +#13#10'  ||LF_||''from UBERE U'''
  +#13#10'  ||LF_||''where U.TETAPOSDIREITA > 0 OR U.POOLTETAS > 1'''
  +#13#10'  ||LF_||''union all'''
  +#13#10'  ||LF_||''SELECT'''
  +#13#10'  ||LF_||''  -1 CDMAMITE,'''
  +#13#10'  ||LF_||''  U.CDANIMAL,'''
  +#13#10'  ||LF_||''  U.DTUBERE,'''
  +#13#10'  ||LF_||''  ''''PE'''' QUARTO,'''
  +#13#10'  ||LF_||''  1 SEVERIDADE'''
  +#13#10'  ||LF_||''from UBERE U'''
  +#13#10'  ||LF_||''where U.TETAPOSESQUERDA > 0 OR U.POOLTETAS > 1'''
  +#13#10' )'
  +#13#10'  ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10'  WITH COMMON TRANSACTION'
  +#13#10'  INTO'
  +#13#10'    :CDMAMITE, :CDANIMAL,:DATA,:QUARTO,:SEVERIDADE'
  +#13#10'  DO'
  +#13#10'  begin'
  +#13#10'    INSERT INTO IMP$MAMITE'
  +#13#10'    ('
  +#13#10'    CDMAMITE, CDANIMAL,DATA,QUARTO,SEVERIDADE'
  +#13#10'    ) VALUES'
  +#13#10'    ('
  +#13#10'    :CDMAMITE, :CDANIMAL,:DATA,:QUARTO,:SEVERIDADE'
  +#13#10'    ) ;'
  +#13#10'  end'
  +#13#10'  FOR EXECUTE STATEMENT'
  +#13#10'    (    ''SELECT'''
  +#13#10'  ||LF_||''  -1 CDMAMITE,'''
  +#13#10'  ||LF_||''  U.CDANIMAL,'''
  +#13#10'  ||LF_||''  U.DTUBERE,'''
  +#13#10'  ||LF_||''  ''''AD'''' QUARTO,'''
  +#13#10'  ||LF_||''  1 SEVERIDADE'''
  +#13#10'  ||LF_||''from UBERE2 U'''
  +#13#10'  ||LF_||''where U.TETAANTDIREITA > 0 OR U.POOLTETAS > 1'''
  +#13#10'  ||LF_||''union all'''
  +#13#10'  ||LF_||''SELECT'''
  +#13#10'  ||LF_||''  -1 CDMAMITE,'''
  +#13#10'  ||LF_||''  U.CDANIMAL,'''
  +#13#10'  ||LF_||''  U.DTUBERE,'''
  +#13#10'  ||LF_||''  ''''AE'''' QUARTO,'''
  +#13#10'  ||LF_||''  1 SEVERIDADE'''
  +#13#10'  ||LF_||''from UBERE2 U'''
  +#13#10'  ||LF_||''where U.TETAANTESQUERDA > 0 OR U.POOLTETAS > 1'''
  +#13#10'  ||LF_||''union all'''
  +#13#10'  ||LF_||''SELECT'''
  +#13#10'  ||LF_||''  -1 CDMAMITE,'''
  +#13#10'  ||LF_||''  U.CDANIMAL,'''
  +#13#10'  ||LF_||''  U.DTUBERE,'''
  +#13#10'  ||LF_||''  ''''PD'''' QUARTO,'''
  +#13#10'  ||LF_||''  1 SEVERIDADE'''
  +#13#10'  ||LF_||''from UBERE2 U'''
  +#13#10'  ||LF_||''where U.TETAPOSDIREITA > 0 OR U.POOLTETAS > 1'''
  +#13#10'  ||LF_||''union all'''
  +#13#10'  ||LF_||''SELECT'''
  +#13#10'  ||LF_||''  -1 CDMAMITE,'''
  +#13#10'  ||LF_||''  U.CDANIMAL,'''
  +#13#10'  ||LF_||''  U.DTUBERE,'''
  +#13#10'  ||LF_||''  ''''PE'''' QUARTO,'''
  +#13#10'  ||LF_||''  1 SEVERIDADE'''
  +#13#10'  ||LF_||''from UBERE2 U'''
  +#13#10'  ||LF_||''where U.TETAPOSESQUERDA > 0 OR U.POOLTETAS > 1'''
  +#13#10' )'
  +#13#10'  ON EXTERNAL DATA SOURCE :PRODAP'
  +#13#10'  WITH COMMON TRANSACTION'
  +#13#10'  INTO'
  +#13#10'    :CDMAMITE, :CDANIMAL,:DATA,:QUARTO,:SEVERIDADE'
  +#13#10'  DO'
  +#13#10'  begin'
  +#13#10'    INSERT INTO IMP$MAMITE'
  +#13#10'    ('
  +#13#10'    CDMAMITE, CDANIMAL,DATA,QUARTO,SEVERIDADE'
  +#13#10'    ) VALUES'
  +#13#10'    ('
  +#13#10'    :CDMAMITE, :CDANIMAL,:DATA,:QUARTO,:SEVERIDADE'
  +#13#10'    ) ;'
  +#13#10'  end'
  +#13#10'end' ;



begin
  TryExecuteDirect( _CREATE_INDX_TMP_EVT            ) ;
  ExecuteDirect( _CREATE_PROC_IMP_CAD_PRODAP        ) ;
  ExecuteDirect( _CREATE_PROC_IMP_CAD_TOURO_PRODAP  ) ;
  ExecuteDirect( _CREATE_PROC_CIOSCOB_PRODAP       ) ;
  ExecuteDirect( _CREATE_PROC_DADOPROD_PRODAP       ) ;
  ExecuteDirect( _CREATE_PROC_PESAGENS_PRODAP       ) ;
  ExecuteDirect( _CREATE_PROC_MAMITE_PRODAP         ) ;
end ;

procedure TDBZootecnicoUpdate._5_000_69 ;
const
  _CREATE_TABLE_MAMITE =
         'CREATE GLOBAL TEMPORARY TABLE IMP$MAMITE ('
  +#13#10' CDMAMITE INTEGER,'
  +#13#10' CDANIMAL INTEGER,'
  +#13#10' DATA TIMESTAMP,'
  +#13#10' QUARTO CHAR(2),'
  +#13#10' SEVERIDADE INTEGER,'
  +#13#10' CDMICROORGANISMO1 INTEGER,'
  +#13#10' SIGLA_MICROORGANISMO1 VARCHAR(6),'
  +#13#10' NOME_MICROORGANISMO1 VARCHAR(40),'
  +#13#10' CDMICROORGANISMO2 INTEGER,'
  +#13#10' SIGLA_MICROORGANISMO2 VARCHAR(6),'
  +#13#10' NOME_MICROORGANISMO2 VARCHAR(40),'
  +#13#10' CDTRATAMENTO INTEGER,'
  +#13#10' NOME_TRATAMENTOBASE VARCHAR(20),'
  +#13#10' CDPRODUTO1  INTEGER,'
  +#13#10' NUM_PRODUTO1 VARCHAR(10),'
  +#13#10' PRODUTO1 VARCHAR(100),'
  +#13#10' CDPRINCIPIOATIVO1 INTEGER,'
  +#13#10' PRINCIPIOATIVO1 VARCHAR(100),'
  +#13#10' CDPRODUTO2  INTEGER,'
  +#13#10' NUM_PRODUTO2 VARCHAR(10),'
  +#13#10' PRODUTO2 VARCHAR(100),'
  +#13#10' CDPRINCIPIOATIVO2 INTEGER,'
  +#13#10' PRINCIPIOATIVO2 VARCHAR(100),'
  +#13#10' CDPRODUTO3 INTEGER,'
  +#13#10' NUM_PRODUTO3 VARCHAR(10),'
  +#13#10' PRODUTO3 VARCHAR(100),'
  +#13#10' CDPRINCIPIOATIVO3 INTEGER,'
  +#13#10' PRINCIPIOATIVO3 VARCHAR(100),'
  +#13#10' TIPO CHAR(1),'
  +#13#10' OBSERVACAO VARCHAR(200)'
  +#13#10') ON COMMIT PRESERVE ROWS' ;

  _CREATE_PROC_CADASTRO =
         'CREATE OR ALTER PROCEDURE DOIMP$IDEAGRI_CADASTRO('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    IDEAGRI VARCHAR(1024) COLLATE ISO8859_1,'
  +#13#10'    ACCEPT_NULL_BIRTHDATE SYS$BOOL,'
  +#13#10'    CODIGO_LOTE SYS$INT)'
  +#13#10'AS'
  +#13#10'declare brinco varchar(10) not null;'
  +#13#10'declare nome_estab varchar(60);'
  +#13#10'declare nome_completo varchar(60);'
  +#13#10'declare registro varchar(15);'
  +#13#10'declare dtnasc date;'
  +#13#10'declare pai varchar(8);'
  +#13#10'declare nome_pai varchar(40);'
  +#13#10'declare registro_pai varchar(15);'
  +#13#10'declare pd_pai varchar(5);'
  +#13#10'declare mae varchar(10);'
  +#13#10'declare nome_mae varchar(40);'
  +#13#10'declare registro_mae varchar(15);'
  +#13#10'declare dtorigem date;'
  +#13#10'declare local_origem varchar(20);'
  +#13#10'declare preco_compra numeric(15,2);'
  +#13#10'declare dtdesc date;'
  +#13#10'declare razao char(3);'
  +#13#10'declare motivo char(3);'
  +#13#10'declare preco_venda numeric(15,2);'
  +#13#10'declare comprador varchar(40);'
  +#13#10'declare raca char(3);'
  +#13#10'declare gsangue smallint;'
  +#13#10'declare retiro char(2);'
  +#13#10'declare lote char(2);'
  +#13#10'declare nucleo char(4);'
  +#13#10'declare rebanho varchar(5);'
  +#13#10'declare vaca varchar(8);'
  +#13#10'declare avo_paterno varchar(40);'
  +#13#10'declare reg_avo_paterno varchar(15);'
  +#13#10'declare avo_paterna varchar(40);'
  +#13#10'declare reg_avo_paterna varchar(15);'
  +#13#10'declare avo_materno varchar(40);'
  +#13#10'declare reg_avo_materno varchar(15);'
  +#13#10'declare avo_materna varchar(40);'
  +#13#10'declare reg_avo_materna varchar(15);'
  +#13#10'declare touro1 varchar(8);'
  +#13#10'declare touro2 varchar(8);'
  +#13#10'declare touro3 varchar(8);'
  +#13#10'declare touro4 varchar(8);'
  +#13#10'declare te char(2);'
  +#13#10'declare lote1 char(2);'
  +#13#10'declare data1 date;'
  +#13#10'declare lote2 char(2);'
  +#13#10'declare data2 date;'
  +#13#10'declare lote3 char(2);'
  +#13#10'declare data3 date;'
  +#13#10'declare lote4 char(2);'
  +#13#10'declare data4 date;'
  +#13#10'declare lote5 char(2);'
  +#13#10'declare data5 date;'
  +#13#10'declare lote6 char(2);'
  +#13#10'declare data6 date;'
  +#13#10'declare lote7 char(2);'
  +#13#10'declare data7 date;'
  +#13#10'declare lote8 char(2);'
  +#13#10'declare data8 date;'
  +#13#10'declare status varchar(3) not null;'
  +#13#10'declare criador varchar(40);'
  +#13#10'declare cidcria varchar(25);'
  +#13#10'declare codigo1 char(3);'
  +#13#10'declare codigo2 char(3);'
  +#13#10'declare codigo3 char(3);'
  +#13#10'declare persiste integer;'
  +#13#10'declare potencial integer;'
  +#13#10'declare SQL_WHERE varchar(100) = '''' ;'
  +#13#10'declare LF_ char;'
  +#13#10'begin'
  +#13#10''
  +#13#10'  LF_ = ASCII_CHAR(10) ;'
  +#13#10'  DELETE FROM IMP$CADASTRO ;'
  +#13#10''
  +#13#10'  if ( ACCEPT_NULL_BIRTHDATE = ''F'' ) THEN'
  +#13#10'     SQL_WHERE = '' AND A.DTNASCIMENTO IS NOT NULL'' ;'
  +#13#10''
  +#13#10'  FOR EXECUTE STATEMENT'
  +#13#10'    (       ''SELECT A.CDANIMAL, (trim(A.NUMERO) || ''''[*]'''' || coalesce('''' '''' || A.NOME, '''''''')), A.NOMECOMPLETO, A.REGASSOCRACA, A.DTNASCIMENTO, '''
  +#13#10'      ||LF_||''P.CDANIMAL,  P.nomecompleto, P.regassocraca, NULL, '''
  +#13#10'      ||LF_||''M.CDANIMAL,  M.nomecompleto, M.regassocraca, '''
  +#13#10'      ||LF_||''NULL,NULL,NULL, '''
  +#13#10'      ||LF_||''A.DTBAIXA, IIF(A.DTBAIXA IS NOT NULL, ''''DES'''', NULL), A.cdmotivobaixa, '''
  +#13#10'      ||LF_||''NULL,NULL, '''
  +#13#10'      ||LF_||''(SELECT FIRST 1'''
  +#13#10'      ||LF_||''  CASE'''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 175 ) THEN ''''PDS'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 290, 300, 340 ) THEN ''''GIR'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 310 ) THEN ''''GHL'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 365 ) THEN ''''HPB'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 385 ) THEN ''''JER'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 635 ) THEN ''''HPV'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 565 ) THEN ''''SIM'''' '''
  +#13#10'      ||LF_||''  ELSE'''
  +#13#10'      ||LF_||''    ''''XX'''' '''
  +#13#10'      ||LF_||''  END'''
  +#13#10'      ||LF_||''FROM ANIMALRACA AR'''
  +#13#10'      ||LF_||''WHERE AR.CDANIMALRACA = A.CDANIMAL'''
  +#13#10'      ||LF_||''ORDER BY AR.PERCENTUAL DESC'''
  +#13#10'      ||LF_||'') RACA, '''
  +#13#10'      ||LF_||''CASE '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (1,2,3,4) THEN ''''8'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (5,6,7,8) THEN ''''1'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (9,10,11,12) THEN ''''2'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (13,14,15,16) THEN ''''3'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (17,18,19,20) THEN ''''4'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (21,22,23,24) THEN ''''5'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento > 24 THEN ''''5'''' '''
  +#13#10'      ||LF_||''END, '''
  +#13#10'      ||LF_||''A.CDSETOR, LOTE.DESCRICAO, NULL, NULL, NULL, '''
  +#13#10'      ||LF_||''NULL, NULL,NULL,NULL, '''
  +#13#10'      ||LF_||''NULL, NULL,NULL,NULL, '''
  +#13#10'      ||LF_||''NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL, '''
  +#13#10'      ||LF_||''NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL, '''
  +#13#10'      ||LF_||''CASE '''
  +#13#10'      ||LF_||''    WHEN A.cdcategoria = 1 THEN ''''BEZ'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdcategoria = 6 THEN ''''NOV'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdcategoria = 7 AND A.matrizseca = 0 THEN ''''VL'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdcategoria = 7 AND A.matrizseca = 1 THEN ''''VS'''' '''
  +#13#10'      ||LF_||''    ELSE IIF( A.DTBAIXA IS NULL,  ''''BEZ'''', ''''DES'''' )'''
  +#13#10'      ||LF_||''END, '''
  +#13#10'      ||LF_||''NULL, '''
  +#13#10'      ||LF_||''NULL,NULL,NULL,NULL,NULL,NULL '''
  +#13#10'      ||LF_||''FROM ANIMAL A '''
  +#13#10'      ||LF_||''LEFT JOIN ANIMAL P ON P.cdanimal = A.cdpai '''
  +#13#10'      ||LF_||''LEFT JOIN ANIMAL M ON M.cdanimal = A.cdmae '''
  +#13#10'      ||LF_||''LEFT JOIN SP_GRUPOANIMALESPECIFICO( CURRENT_DATE, '' || COALESCE( :CODIGO_LOTE, -1 ) || '', A.CDANIMAL ) LOTE ON 1=1 '''
  +#13#10'      ||LF_||''WHERE A.SEXO = ''''F'''' AND A.ANIMALREBANHO = 1'' || SQL_WHERE'
  +#13#10'    )'
  +#13#10'  ON EXTERNAL DATA SOURCE :IDEAGRI'
  +#13#10'  WITH COMMON TRANSACTION'
  +#13#10'  INTO'
  +#13#10'     :BRINCO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,'
  +#13#10'     :PD_PAI,:MAE,:NOME_MAE,:REGISTRO_MAE,:DTORIGEM,:LOCAL_ORIGEM,:PRECO_COMPRA,:DTDESC,:RAZAO,'
  +#13#10'     :MOTIVO,:PRECO_VENDA,:COMPRADOR,:RACA,:GSANGUE,:RETIRO,:LOTE,:NUCLEO,:REBANHO,:VACA,'
  +#13#10'     :AVO_PATERNO,:REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,'
  +#13#10'     :AVO_MATERNA,:REG_AVO_MATERNA,:TOURO1,:TOURO2,:TOURO3,:TOURO4,:TE,:LOTE1,:DATA1,:LOTE2,:DATA2,'
  +#13#10'     :LOTE3,:DATA3,:LOTE4,:DATA4,:LOTE5,:DATA5,:LOTE6,:DATA6,:LOTE7,:DATA7,:LOTE8,:DATA8,:STATUS,:CRIADOR,'
  +#13#10'     :CIDCRIA,:CODIGO1,:CODIGO2,:CODIGO3,:PERSISTE,:POTENCIAL'
  +#13#10'  DO'
  +#13#10'  begin'
  +#13#10''
  +#13#10'  -- SELECT first 1 COMPOSICAO from doimp$ideagri_raca(:RACA) into :RACA;'
  +#13#10''
  +#13#10'   INSERT INTO IMP$CADASTRO'
  +#13#10'     ('
  +#13#10'       BRINCO,NOME_ESTAB,NOME_COMPLETO,REGISTRO,DTNASC,PAI,NOME_PAI,REGISTRO_PAI,'
  +#13#10'       PD_PAI,MAE,NOME_MAE,REGISTRO_MAE,DTORIGEM,LOCAL_ORIGEM,PRECO_COMPRA,DTDESC,RAZAO,'
  +#13#10'       MOTIVO,PRECO_VENDA,COMPRADOR,RACA,GSANGUE,RETIRO,LOTE,NUCLEO,REBANHO,VACA,'
  +#13#10'       AVO_PATERNO,REG_AVO_PATERNO,AVO_PATERNA,REG_AVO_PATERNA,AVO_MATERNO,REG_AVO_MATERNO,'
  +#13#10'       AVO_MATERNA,REG_AVO_MATERNA,TOURO1,TOURO2,TOURO3,TOURO4,TE,LOTE1,DATA1,LOTE2,DATA2,'
  +#13#10'       LOTE3,DATA3,LOTE4,DATA4,LOTE5,DATA5,LOTE6,DATA6,LOTE7,DATA7,LOTE8,DATA8,STATUS,CRIADOR,'
  +#13#10'       CIDCRIA,CODIGO1,CODIGO2,CODIGO3,PERSISTE,POTENCIAL'
  +#13#10'     )'
  +#13#10'   VALUES'
  +#13#10'     ('
  +#13#10'      :BRINCO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,'
  +#13#10'      :PD_PAI,:MAE,:NOME_MAE,:REGISTRO_MAE,:DTORIGEM,:LOCAL_ORIGEM,:PRECO_COMPRA,:DTDESC,:RAZAO,'
  +#13#10'      :MOTIVO,:PRECO_VENDA,:COMPRADOR,:RACA,:GSANGUE,:RETIRO,:LOTE,:NUCLEO,:REBANHO,:VACA,'
  +#13#10'      :AVO_PATERNO,:REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,'
  +#13#10'      :AVO_MATERNA,:REG_AVO_MATERNA,:TOURO1,:TOURO2,:TOURO3,:TOURO4,:TE,:LOTE1,:DATA1,:LOTE2,:DATA2,'
  +#13#10'      :LOTE3,:DATA3,:LOTE4,:DATA4,:LOTE5,:DATA5,:LOTE6,:DATA6,:LOTE7,:DATA7,:LOTE8,:DATA8,:STATUS,:CRIADOR,'
  +#13#10'      :CIDCRIA,:CODIGO1,:CODIGO2,:CODIGO3,:PERSISTE,:POTENCIAL'
  +#13#10'     ) ;'
  +#13#10'   end'
  +#13#10'end' ;

  _CREATE_PROC_MAMITE =
         'CREATE OR ALTER PROCEDURE DOIMP$IDEAGRI_MAMITE('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    IDEAGRI VARCHAR(1024) COLLATE ISO8859_1 )'
  +#13#10'AS'
  +#13#10'declare CDMAMITE INTEGER ;'
  +#13#10'declare CDANIMAL INTEGER ;'
  +#13#10'declare DATA TIMESTAMP ;'
  +#13#10'declare QUARTO CHAR(2) ;'
  +#13#10'declare SEVERIDADE INTEGER ;'
  +#13#10'declare CDMICROORGANISMO1 INTEGER ;'
  +#13#10'declare SIGLA_MICROORGANISMO1 VARCHAR(6) ;'
  +#13#10'declare NOME_MICROORGANISMO1 VARCHAR(40) ;'
  +#13#10'declare CDMICROORGANISMO2 INTEGER ;'
  +#13#10'declare SIGLA_MICROORGANISMO2 VARCHAR(6) ;'
  +#13#10'declare NOME_MICROORGANISMO2 VARCHAR(40) ;'
  +#13#10'declare CDTRATAMENTO INTEGER ;'
  +#13#10'declare NOME_TRATAMENTOBASE VARCHAR(20) ;'
  +#13#10'declare CDPRODUTO1  INTEGER ;'
  +#13#10'declare NUM_PRODUTO1 VARCHAR(10) ;'
  +#13#10'declare PRODUTO1 VARCHAR(100) ;'
  +#13#10'declare CDPRINCIPIOATIVO1 INTEGER ;'
  +#13#10'declare PRINCIPIOATIVO1 VARCHAR(100) ;'
  +#13#10'declare CDPRODUTO2  INTEGER ;'
  +#13#10'declare NUM_PRODUTO2 VARCHAR(10) ;'
  +#13#10'declare PRODUTO2 VARCHAR(100) ;'
  +#13#10'declare CDPRINCIPIOATIVO2 INTEGER ;'
  +#13#10'declare PRINCIPIOATIVO2 VARCHAR(100) ;'
  +#13#10'declare CDPRODUTO3 INTEGER ;'
  +#13#10'declare NUM_PRODUTO3 VARCHAR(10) ;'
  +#13#10'declare PRODUTO3 VARCHAR(100) ;'
  +#13#10'declare CDPRINCIPIOATIVO3 INTEGER ;'
  +#13#10'declare PRINCIPIOATIVO3 VARCHAR(100) ;'
  +#13#10'declare TIPO CHAR(1) ;'
  +#13#10'declare OBSERVACAO VARCHAR(200) ;'
  +#13#10'declare LF_ char;'
  +#13#10'BEGIN'
  +#13#10'  LF_ = ASCII_CHAR(10);'
  +#13#10'  DELETE FROM IMP$MAMITE ;'
  +#13#10''
  +#13#10'  FOR EXECUTE STATEMENT'
  +#13#10'    (    ''SELECT'''
  +#13#10'  ||LF_||''  M.CDMAMITE,'''
  +#13#10'  ||LF_||''  M.CDANIMAL,'''
  +#13#10'  ||LF_||''  M.DATA,'''
  +#13#10'  ||LF_||''  ''''AD'''' QUARTO,'''
  +#13#10'  ||LF_||''  M.AD SEVERIDADE,'''
  +#13#10'  ||LF_||''  M.CDMICROORGANISMO1,'''
  +#13#10'  ||LF_||''  MO1.SIGLA SIGLA_MICROORGANISMO1,'''
  +#13#10'  ||LF_||''  MO1.NOME NOME_MICROORGANISMO1,'''
  +#13#10'  ||LF_||''  M.CDMICROORGANISMO2,'''
  +#13#10'  ||LF_||''  MO2.SIGLA SIGLA_MICROORGANISMO2,'''
  +#13#10'  ||LF_||''  MO2.NOME NOME_MICROORGANISMO2,'''
  +#13#10'  ||LF_||''  TB.CDTRATAMENTO,'''
  +#13#10'  ||LF_||''  TB.NOME NOME_TRATAMENTOBASE,'''
  +#13#10'  ||LF_||''  P1.CDPRODUTO CDPRODUTO1,'''
  +#13#10'  ||LF_||''  P1.NUMERO NUM_PRODUTO1,'''
  +#13#10'  ||LF_||''  P1.NOME PRODUTO1,'''
  +#13#10'  ||LF_||''  PA1.CDPRINCIPIOATIVO CDPRINCIPIOATIVO1,'''
  +#13#10'  ||LF_||''  PA1.NOME PRINCIPIOATIVO1,'''
  +#13#10'  ||LF_||''  P2.CDPRODUTO CDPRODUTO2,'''
  +#13#10'  ||LF_||''  P2.NUMERO NUM_PRODUTO2,'''
  +#13#10'  ||LF_||''  P2.NOME PRODUTO2,'''
  +#13#10'  ||LF_||''  PA2.CDPRINCIPIOATIVO CDPRINCIPIOATIVO2,'''
  +#13#10'  ||LF_||''  PA2.NOME PRINCIPIOATIVO2,'''
  +#13#10'  ||LF_||''  P3.CDPRODUTO CDPRODUTO3,'''
  +#13#10'  ||LF_||''  P3.NUMERO NUM_PRODUTO3,'''
  +#13#10'  ||LF_||''  P3.NOME PRODUTO3,'''
  +#13#10'  ||LF_||''  PA3.CDPRINCIPIOATIVO CDPRINCIPIOATIVO3,'''
  +#13#10'  ||LF_||''  PA3.NOME PRINCIPIOATIVO3,'''
  +#13#10'  ||LF_||''  T.TIPO, M.OBSERVACAO'''
  +#13#10'  ||LF_||''from MAMITE M'''
  +#13#10'  ||LF_||''left join MICROORGANISMO MO1 ON MO1.CDMICROORGANISMO = M.CDMICROORGANISMO1'''
  +#13#10'  ||LF_||''left join MICROORGANISMO MO2 ON MO2.CDMICROORGANISMO = M.CDMICROORGANISMO2'''
  +#13#10'  ||LF_||''left join TRATAMENTOBASE TB  ON TB.CDTRATAMENTOBASE  = M.CDTRATAMENTOBASE'''
  +#13#10'  ||LF_||''left join TRATAMENTO     T   ON T.CDTRATAMENTO       = TB.CDTRATAMENTO'''
  +#13#10'  ||LF_||''left join PRODUTO        P1  ON P1.CDPRODUTO         = TB.CDPRODUTO1'''
  +#13#10'  ||LF_||''left join PRODUTO        P2  ON P2.CDPRODUTO         = TB.CDPRODUTO2'''
  +#13#10'  ||LF_||''left join PRODUTO        P3  ON P3.CDPRODUTO         = TB.CDPRODUTO3'''
  +#13#10'  ||LF_||''left join PRINCIPIOATIVO PA1 ON PA1.CDPRINCIPIOATIVO = TB.CDPRINCIPIOATIVO1'''
  +#13#10'  ||LF_||''left join PRINCIPIOATIVO PA2 ON PA2.CDPRINCIPIOATIVO = TB.CDPRINCIPIOATIVO2'''
  +#13#10'  ||LF_||''left join PRINCIPIOATIVO PA3 ON PA3.CDPRINCIPIOATIVO = TB.CDPRINCIPIOATIVO3'''
  +#13#10'  ||LF_||''where AD > 0'''
  +#13#10'  ||LF_||''union all'''
  +#13#10'  ||LF_||''select'''
  +#13#10'  ||LF_||''  M.CDMAMITE,'''
  +#13#10'  ||LF_||''  M.CDANIMAL,'''
  +#13#10'  ||LF_||''  M.DATA,'''
  +#13#10'  ||LF_||''  ''''AE'''' QUARTO,'''
  +#13#10'  ||LF_||''  M.AE SEVERIDADE,'''
  +#13#10'  ||LF_||''  M.CDMICROORGANISMO1,'''
  +#13#10'  ||LF_||''  MO1.SIGLA SIGLA_MICROORGANISMO1,'''
  +#13#10'  ||LF_||''  MO1.NOME NOME_MICROORGANISMO1,'''
  +#13#10'  ||LF_||''  M.CDMICROORGANISMO2,'''
  +#13#10'  ||LF_||''  MO2.SIGLA SIGLA_MICROORGANISMO2,'''
  +#13#10'  ||LF_||''  MO2.NOME NOME_MICROORGANISMO2,'''
  +#13#10'  ||LF_||''  TB.CDTRATAMENTO,'''
  +#13#10'  ||LF_||''  TB.NOME NOME_TRATAMENTOBASE,'''
  +#13#10'  ||LF_||''  P1.CDPRODUTO CDPRODUTO1,'''
  +#13#10'  ||LF_||''  P1.NUMERO NUM_PRODUTO1,'''
  +#13#10'  ||LF_||''  P1.NOME PRODUTO1,'''
  +#13#10'  ||LF_||''  PA1.CDPRINCIPIOATIVO CDPRINCIPIOATIVO1,'''
  +#13#10'  ||LF_||''  PA1.NOME PRINCIPIOATIVO1,'''
  +#13#10'  ||LF_||''  P2.CDPRODUTO CDPRODUTO2,'''
  +#13#10'  ||LF_||''  P2.NUMERO NUM_PRODUTO2,'''
  +#13#10'  ||LF_||''  P2.NOME PRODUTO2,'''
  +#13#10'  ||LF_||''  PA2.CDPRINCIPIOATIVO CDPRINCIPIOATIVO2,'''
  +#13#10'  ||LF_||''  PA2.NOME PRINCIPIOATIVO2,'''
  +#13#10'  ||LF_||''  P3.CDPRODUTO CDPRODUTO3,'''
  +#13#10'  ||LF_||''  P3.NUMERO NUM_PRODUTO3,'''
  +#13#10'  ||LF_||''  P3.NOME PRODUTO3,'''
  +#13#10'  ||LF_||''  PA3.CDPRINCIPIOATIVO CDPRINCIPIOATIVO3,'''
  +#13#10'  ||LF_||''  PA3.NOME PRINCIPIOATIVO3,'''
  +#13#10'  ||LF_||''  T.TIPO, M.OBSERVACAO'''
  +#13#10'  ||LF_||''from MAMITE M'''
  +#13#10'  ||LF_||''left join MICROORGANISMO MO1 ON MO1.CDMICROORGANISMO = M.CDMICROORGANISMO1'''
  +#13#10'  ||LF_||''left join MICROORGANISMO MO2 ON MO2.CDMICROORGANISMO = M.CDMICROORGANISMO2'''
  +#13#10'  ||LF_||''left join TRATAMENTOBASE TB  ON TB.CDTRATAMENTOBASE  = M.CDTRATAMENTOBASE'''
  +#13#10'  ||LF_||''left join TRATAMENTO     T   ON T.CDTRATAMENTO       = TB.CDTRATAMENTO'''
  +#13#10'  ||LF_||''left join PRODUTO        P1  ON P1.CDPRODUTO         = TB.CDPRODUTO1'''
  +#13#10'  ||LF_||''left join PRODUTO        P2  ON P2.CDPRODUTO         = TB.CDPRODUTO2'''
  +#13#10'  ||LF_||''left join PRODUTO        P3  ON P3.CDPRODUTO         = TB.CDPRODUTO3'''
  +#13#10'  ||LF_||''left join PRINCIPIOATIVO PA1 ON PA1.CDPRINCIPIOATIVO = TB.CDPRINCIPIOATIVO1'''
  +#13#10'  ||LF_||''left join PRINCIPIOATIVO PA2 ON PA2.CDPRINCIPIOATIVO = TB.CDPRINCIPIOATIVO2'''
  +#13#10'  ||LF_||''left join PRINCIPIOATIVO PA3 ON PA3.CDPRINCIPIOATIVO = TB.CDPRINCIPIOATIVO3'''
  +#13#10'  ||LF_||''where AE > 0'''
  +#13#10'  ||LF_||''union all'''
  +#13#10'  ||LF_||''select'''
  +#13#10'  ||LF_||''  M.CDMAMITE,'''
  +#13#10'  ||LF_||''  M.CDANIMAL,'''
  +#13#10'  ||LF_||''  M.DATA,'''
  +#13#10'  ||LF_||''  ''''PD'''' QUARTO,'''
  +#13#10'  ||LF_||''  M.PD SEVERIDADE,'''
  +#13#10'  ||LF_||''  M.CDMICROORGANISMO1,'''
  +#13#10'  ||LF_||''  MO1.SIGLA SIGLA_MICROORGANISMO1,'''
  +#13#10'  ||LF_||''  MO1.NOME NOME_MICROORGANISMO1,'''
  +#13#10'  ||LF_||''  M.CDMICROORGANISMO2,'''
  +#13#10'  ||LF_||''  MO2.SIGLA SIGLA_MICROORGANISMO2,'''
  +#13#10'  ||LF_||''  MO2.NOME NOME_MICROORGANISMO2,'''
  +#13#10'  ||LF_||''  TB.CDTRATAMENTO,'''
  +#13#10'  ||LF_||''  TB.NOME NOME_TRATAMENTOBASE,'''
  +#13#10'  ||LF_||''  P1.CDPRODUTO CDPRODUTO1,'''
  +#13#10'  ||LF_||''  P1.NUMERO NUM_PRODUTO1,'''
  +#13#10'  ||LF_||''  P1.NOME PRODUTO1,'''
  +#13#10'  ||LF_||''  PA1.CDPRINCIPIOATIVO CDPRINCIPIOATIVO1,'''
  +#13#10'  ||LF_||''  PA1.NOME PRINCIPIOATIVO1,'''
  +#13#10'  ||LF_||''  P2.CDPRODUTO CDPRODUTO2,'''
  +#13#10'  ||LF_||''  P2.NUMERO NUM_PRODUTO2,'''
  +#13#10'  ||LF_||''  P2.NOME PRODUTO2,'''
  +#13#10'  ||LF_||''  PA2.CDPRINCIPIOATIVO CDPRINCIPIOATIVO2,'''
  +#13#10'  ||LF_||''  PA2.NOME PRINCIPIOATIVO2,'''
  +#13#10'  ||LF_||''  P3.CDPRODUTO CDPRODUTO3,'''
  +#13#10'  ||LF_||''  P3.NUMERO NUM_PRODUTO3,'''
  +#13#10'  ||LF_||''  P3.NOME PRODUTO3,'''
  +#13#10'  ||LF_||''  PA3.CDPRINCIPIOATIVO CDPRINCIPIOATIVO3,'''
  +#13#10'  ||LF_||''  PA3.NOME PRINCIPIOATIVO3,'''
  +#13#10'  ||LF_||''  T.TIPO, M.OBSERVACAO'''
  +#13#10'  ||LF_||''from MAMITE M'''
  +#13#10'  ||LF_||''left join MICROORGANISMO MO1 ON MO1.CDMICROORGANISMO = M.CDMICROORGANISMO1'''
  +#13#10'  ||LF_||''left join MICROORGANISMO MO2 ON MO2.CDMICROORGANISMO = M.CDMICROORGANISMO2'''
  +#13#10'  ||LF_||''left join TRATAMENTOBASE TB  ON TB.CDTRATAMENTOBASE  = M.CDTRATAMENTOBASE'''
  +#13#10'  ||LF_||''left join TRATAMENTO     T   ON T.CDTRATAMENTO       = TB.CDTRATAMENTO'''
  +#13#10'  ||LF_||''left join PRODUTO        P1  ON P1.CDPRODUTO         = TB.CDPRODUTO1'''
  +#13#10'  ||LF_||''left join PRODUTO        P2  ON P2.CDPRODUTO         = TB.CDPRODUTO2'''
  +#13#10'  ||LF_||''left join PRODUTO        P3  ON P3.CDPRODUTO         = TB.CDPRODUTO3'''
  +#13#10'  ||LF_||''left join PRINCIPIOATIVO PA1 ON PA1.CDPRINCIPIOATIVO = TB.CDPRINCIPIOATIVO1'''
  +#13#10'  ||LF_||''left join PRINCIPIOATIVO PA2 ON PA2.CDPRINCIPIOATIVO = TB.CDPRINCIPIOATIVO2'''
  +#13#10'  ||LF_||''left join PRINCIPIOATIVO PA3 ON PA3.CDPRINCIPIOATIVO = TB.CDPRINCIPIOATIVO3'''
  +#13#10'  ||LF_||''where PD > 0'''
  +#13#10'  ||LF_||''union all'''
  +#13#10'  ||LF_||''select'''
  +#13#10'  ||LF_||''  M.CDMAMITE,'''
  +#13#10'  ||LF_||''  M.CDANIMAL,'''
  +#13#10'  ||LF_||''  M.DATA,'''
  +#13#10'  ||LF_||''  ''''PE'''' QUARTO,'''
  +#13#10'  ||LF_||''  M.PE SEVERIDADE,'''
  +#13#10'  ||LF_||''  M.CDMICROORGANISMO1,'''
  +#13#10'  ||LF_||''  MO1.SIGLA SIGLA_MICROORGANISMO1,'''
  +#13#10'  ||LF_||''  MO1.NOME NOME_MICROORGANISMO1,'''
  +#13#10'  ||LF_||''  M.CDMICROORGANISMO2,'''
  +#13#10'  ||LF_||''  MO2.SIGLA SIGLA_MICROORGANISMO2,'''
  +#13#10'  ||LF_||''  MO2.NOME NOME_MICROORGANISMO2,'''
  +#13#10'  ||LF_||''  TB.CDTRATAMENTO,'''
  +#13#10'  ||LF_||''  TB.NOME NOME_TRATAMENTOBASE,'''
  +#13#10'  ||LF_||''  P1.CDPRODUTO CDPRODUTO1,'''
  +#13#10'  ||LF_||''  P1.NUMERO NUM_PRODUTO1,'''
  +#13#10'  ||LF_||''  P1.NOME PRODUTO1,'''
  +#13#10'  ||LF_||''  PA1.CDPRINCIPIOATIVO CDPRINCIPIOATIVO1,'''
  +#13#10'  ||LF_||''  PA1.NOME PRINCIPIOATIVO1,'''
  +#13#10'  ||LF_||''  P2.CDPRODUTO CDPRODUTO2,'''
  +#13#10'  ||LF_||''  P2.NUMERO NUM_PRODUTO2,'''
  +#13#10'  ||LF_||''  P2.NOME PRODUTO2,'''
  +#13#10'  ||LF_||''  PA2.CDPRINCIPIOATIVO CDPRINCIPIOATIVO2,'''
  +#13#10'  ||LF_||''  PA2.NOME PRINCIPIOATIVO2,'''
  +#13#10'  ||LF_||''  P3.CDPRODUTO CDPRODUTO3,'''
  +#13#10'  ||LF_||''  P3.NUMERO NUM_PRODUTO3,'''
  +#13#10'  ||LF_||''  P3.NOME PRODUTO3,'''
  +#13#10'  ||LF_||''  PA3.CDPRINCIPIOATIVO CDPRINCIPIOATIVO3,'''
  +#13#10'  ||LF_||''  PA3.NOME PRINCIPIOATIVO3,'''
  +#13#10'  ||LF_||''  T.TIPO, M.OBSERVACAO'''
  +#13#10'  ||LF_||''from MAMITE M'''
  +#13#10'  ||LF_||''left join MICROORGANISMO MO1 ON MO1.CDMICROORGANISMO = M.CDMICROORGANISMO1'''
  +#13#10'  ||LF_||''left join MICROORGANISMO MO2 ON MO2.CDMICROORGANISMO = M.CDMICROORGANISMO2'''
  +#13#10'  ||LF_||''left join TRATAMENTOBASE TB  ON TB.CDTRATAMENTOBASE  = M.CDTRATAMENTOBASE'''
  +#13#10'  ||LF_||''left join TRATAMENTO     T   ON T.CDTRATAMENTO       = TB.CDTRATAMENTO'''
  +#13#10'  ||LF_||''left join PRODUTO        P1  ON P1.CDPRODUTO         = TB.CDPRODUTO1'''
  +#13#10'  ||LF_||''left join PRODUTO        P2  ON P2.CDPRODUTO         = TB.CDPRODUTO2'''
  +#13#10'  ||LF_||''left join PRODUTO        P3  ON P3.CDPRODUTO         = TB.CDPRODUTO3'''
  +#13#10'  ||LF_||''left join PRINCIPIOATIVO PA1 ON PA1.CDPRINCIPIOATIVO = TB.CDPRINCIPIOATIVO1'''
  +#13#10'  ||LF_||''left join PRINCIPIOATIVO PA2 ON PA2.CDPRINCIPIOATIVO = TB.CDPRINCIPIOATIVO2'''
  +#13#10'  ||LF_||''left join PRINCIPIOATIVO PA3 ON PA3.CDPRINCIPIOATIVO = TB.CDPRINCIPIOATIVO3'''
  +#13#10'  ||LF_||''where PE > 0'' )'
  +#13#10'  ON EXTERNAL DATA SOURCE :IDEAGRI'
  +#13#10'  WITH COMMON TRANSACTION'
  +#13#10'  INTO'
  +#13#10'    :CDMAMITE, :CDANIMAL,:DATA,:QUARTO,:SEVERIDADE,'
  +#13#10'    :CDMICROORGANISMO1,:SIGLA_MICROORGANISMO1,:NOME_MICROORGANISMO1,'
  +#13#10'    :CDMICROORGANISMO2,:SIGLA_MICROORGANISMO2,:NOME_MICROORGANISMO2,'
  +#13#10'    :CDTRATAMENTO,:NOME_TRATAMENTOBASE,'
  +#13#10'    :CDPRODUTO1,:NUM_PRODUTO1,:PRODUTO1,:CDPRINCIPIOATIVO1,:PRINCIPIOATIVO1,'
  +#13#10'    :CDPRODUTO2,:NUM_PRODUTO2,:PRODUTO2,:CDPRINCIPIOATIVO2,:PRINCIPIOATIVO2,'
  +#13#10'    :CDPRODUTO3,:NUM_PRODUTO3,:PRODUTO3,:CDPRINCIPIOATIVO3,:PRINCIPIOATIVO3,'
  +#13#10'    :TIPO,:OBSERVACAO'
  +#13#10'  DO'
  +#13#10'  begin'
  +#13#10'    INSERT INTO IMP$MAMITE'
  +#13#10'    ('
  +#13#10'    CDMAMITE, CDANIMAL,DATA,QUARTO,SEVERIDADE,'
  +#13#10'    CDMICROORGANISMO1,SIGLA_MICROORGANISMO1,NOME_MICROORGANISMO1,'
  +#13#10'    CDMICROORGANISMO2,SIGLA_MICROORGANISMO2,NOME_MICROORGANISMO2,'
  +#13#10'    CDTRATAMENTO,NOME_TRATAMENTOBASE,'
  +#13#10'    CDPRODUTO1,NUM_PRODUTO1,PRODUTO1,CDPRINCIPIOATIVO1,PRINCIPIOATIVO1,'
  +#13#10'    CDPRODUTO2,NUM_PRODUTO2,PRODUTO2,CDPRINCIPIOATIVO2,PRINCIPIOATIVO2,'
  +#13#10'    CDPRODUTO3,NUM_PRODUTO3,PRODUTO3,CDPRINCIPIOATIVO3,PRINCIPIOATIVO3,'
  +#13#10'    TIPO,OBSERVACAO'
  +#13#10'    ) VALUES'
  +#13#10'    ('
  +#13#10'    :CDMAMITE, :CDANIMAL,:DATA,:QUARTO,:SEVERIDADE,'
  +#13#10'    :CDMICROORGANISMO1,:SIGLA_MICROORGANISMO1,:NOME_MICROORGANISMO1,'
  +#13#10'    :CDMICROORGANISMO2,:SIGLA_MICROORGANISMO2,:NOME_MICROORGANISMO2,'
  +#13#10'    :CDTRATAMENTO,:NOME_TRATAMENTOBASE,'
  +#13#10'    :CDPRODUTO1,:NUM_PRODUTO1,:PRODUTO1,:CDPRINCIPIOATIVO1,:PRINCIPIOATIVO1,'
  +#13#10'    :CDPRODUTO2,:NUM_PRODUTO2,:PRODUTO2,:CDPRINCIPIOATIVO2,:PRINCIPIOATIVO2,'
  +#13#10'    :CDPRODUTO3,:NUM_PRODUTO3,:PRODUTO3,:CDPRINCIPIOATIVO3,:PRINCIPIOATIVO3,'
  +#13#10'    :TIPO,:OBSERVACAO'
  +#13#10'    ) ;'
  +#13#10'  end'
  +#13#10'end' ;

  _CREATE_PROC_IMPIDEAGRI =
         'CREATE OR ALTER PROCEDURE DOIMP$IDEAGRI('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    IDEAGRI VARCHAR(1024) COLLATE ISO8859_1,'
  +#13#10'    ACCEPT_NULL_BIRTHDATE SYS$BOOL,'
  +#13#10'    CODIGO_LOTE SYS$INT)'
  +#13#10'AS'
  +#13#10'begin'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE DOIMP$LIMPARBASE( KCAD_FAZENDA );'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE DOIMP$DEFAULT_GSANGUE  ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_CADASTRO ( KCAD_FAZENDA, IDEAGRI, ACCEPT_NULL_BIRTHDATE, CODIGO_LOTE ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_CADTOURO ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_CIOSCOB  ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_DADOPROD ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_PESAGENS ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_MAMITE   ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  /*'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_BST      ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_CMT      ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_CONDCORP ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_FILHOS   ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_FUNCIONA ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_DIAGNOST ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_SANITARI ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_TRATASAN ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_TRATAMEN ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_PESO     ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_PMACHO   ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_LINEARCA ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  */'
  +#13#10'end' ;


begin
  TryExecuteDirect ( _CREATE_TABLE_MAMITE  ) ;
  ExecuteDirect ( _CREATE_PROC_CADASTRO ) ;
  ExecuteDirect ( _CREATE_PROC_MAMITE  ) ;
  ExecuteDirect ( _CREATE_PROC_IMPIDEAGRI ) ;
end ;

procedure TDBZootecnicoUpdate._5_000_68 ;
const
  _CREATE_VRPT_CRESCIMENTO =
        'CREATE OR ALTER VIEW VRPT_CRESCIMENTO('
 +#13#10'    KZOO_ANIMAL_FEMEA,'
 +#13#10'    DATAPESO,'
 +#13#10'    PESO,'
 +#13#10'    GANHOPESO,'
 +#13#10'    PESO0,'
 +#13#10'    PESO6,'
 +#13#10'    PESO12,'
 +#13#10'    PESO18,'
 +#13#10'    PESO24,'
 +#13#10'    DATAALTURA,'
 +#13#10'    ALTURA,'
 +#13#10'    ALTURA0,'
 +#13#10'    ALTURA6,'
 +#13#10'    ALTURA12,'
 +#13#10'    ALTURA18,'
 +#13#10'    ALTURA24,'
 +#13#10'    DATACC,'
 +#13#10'    CC,'
 +#13#10'    CC0,'
 +#13#10'    CC6,'
 +#13#10'    CC12,'
 +#13#10'    CC18,'
 +#13#10'    CC24)'
 +#13#10'AS'
 +#13#10'  SELECT'
 +#13#10'   KZOO_ANIMAL_FEMEA,'
 +#13#10'   (SELECT C.DATA   FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA) AND ( C.PESO   IS NOT NULL ) ORDER BY C.DATA DESC ROWS 1) DATAPESO,'
 +#13#10'   (SELECT C.PESO   FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA) AND ( C.PESO   IS NOT NULL ) ORDER BY C.DATA DESC ROWS 1) PESO,'
 +#13#10'   (SELECT C.GANHOPESO FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL    = F.KZOO_ANIMAL_FEMEA) AND ( C.PESO   IS NOT NULL )                                                                 ORDER BY C.DATA DESC ROWS 1) GANHOPESO,'
 +#13#10'   (SELECT C.PESO   FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA) AND ( C.PESO   IS NOT NULL ) AND (C.DATA <= F.NASCIMENTO +20)                                ORDER BY C.DATA DESC ROWS 1) PESO0,'
 +#13#10'   (SELECT C.PESO   FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA) AND ( C.PESO   IS NOT NULL ) AND (C.DATA BETWEEN F.NASCIMENTO + 160 AND F.NASCIMENTO + 200 ) ORDER BY C.DATA DESC ROWS 1) PESO6,'
 +#13#10'   (SELECT C.PESO   FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA) AND ( C.PESO   IS NOT NULL ) AND (C.DATA BETWEEN F.NASCIMENTO + 340 AND F.NASCIMENTO + 380 ) ORDER BY C.DATA DESC ROWS 1) PESO12,'
 +#13#10'   (SELECT C.PESO   FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA) AND ( C.PESO   IS NOT NULL ) AND (C.DATA BETWEEN F.NASCIMENTO + 520 AND F.NASCIMENTO + 560 ) ORDER BY C.DATA DESC ROWS 1) PESO18,'
 +#13#10'   (SELECT C.PESO   FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA) AND ( C.PESO   IS NOT NULL ) AND (C.DATA BETWEEN F.NASCIMENTO + 700 AND F.NASCIMENTO + 740 ) ORDER BY C.DATA DESC ROWS 1) PESO24,'
 +#13#10'   (SELECT C.DATA   FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA) AND ( C.ALTURA IS NOT NULL ) ORDER BY C.DATA DESC ROWS 1) DATAALTURA,'
 +#13#10'   (SELECT C.ALTURA FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA) AND ( C.ALTURA IS NOT NULL )                                                                 ORDER BY C.DATA DESC ROWS 1) ALTURA,'
 +#13#10'   (SELECT C.ALTURA FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA) AND ( C.ALTURA IS NOT NULL ) AND (C.DATA <= F.NASCIMENTO +20)                                ORDER BY C.DATA DESC ROWS 1) ALTURA0,'
 +#13#10'   (SELECT C.ALTURA FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA) AND ( C.ALTURA IS NOT NULL ) AND (C.DATA BETWEEN F.NASCIMENTO + 160 AND F.NASCIMENTO + 200 ) ORDER BY C.DATA DESC ROWS 1) ALTURA6,'
 +#13#10'   (SELECT C.ALTURA FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA) AND ( C.ALTURA IS NOT NULL ) AND (C.DATA BETWEEN F.NASCIMENTO + 340 AND F.NASCIMENTO + 380 ) ORDER BY C.DATA DESC ROWS 1) ALTURA12,'
 +#13#10'   (SELECT C.ALTURA FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA) AND ( C.ALTURA IS NOT NULL ) AND (C.DATA BETWEEN F.NASCIMENTO + 520 AND F.NASCIMENTO + 560 ) ORDER BY C.DATA DESC ROWS 1) ALTURA18,'
 +#13#10'   (SELECT C.ALTURA FROM ZOO_ANIMAL_CRESCIMENTO C WHERE (C.KZOO_ANIMAL       = F.KZOO_ANIMAL_FEMEA) AND ( C.ALTURA IS NOT NULL ) AND (C.DATA BETWEEN F.NASCIMENTO + 700 AND F.NASCIMENTO + 740 ) ORDER BY C.DATA DESC ROWS 1) ALTURA24,'
 +#13#10'   (SELECT C.DATA   FROM ZOO_ANIMAL_FEMEA_CC    C WHERE (C.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA) AND ( C.CC     IS NOT NULL )                                                                 ORDER BY C.DATA DESC ROWS 1) DATACC,'
 +#13#10'   (SELECT C.CC     FROM ZOO_ANIMAL_FEMEA_CC    C WHERE (C.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA) AND ( C.CC     IS NOT NULL )                                                                 ORDER BY C.DATA DESC ROWS 1) CC,'
 +#13#10'   (SELECT C.CC     FROM ZOO_ANIMAL_FEMEA_CC    C WHERE (C.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA) AND ( C.CC     IS NOT NULL ) AND (C.DATA <= F.NASCIMENTO +20)                                ORDER BY C.DATA DESC ROWS 1) CC0,'
 +#13#10'   (SELECT C.CC     FROM ZOO_ANIMAL_FEMEA_CC    C WHERE (C.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA) AND ( C.CC     IS NOT NULL ) AND (C.DATA BETWEEN F.NASCIMENTO + 160 AND F.NASCIMENTO + 200 ) ORDER BY C.DATA DESC ROWS 1) CC6,'
 +#13#10'   (SELECT C.CC     FROM ZOO_ANIMAL_FEMEA_CC    C WHERE (C.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA) AND ( C.CC     IS NOT NULL ) AND (C.DATA BETWEEN F.NASCIMENTO + 340 AND F.NASCIMENTO + 380 ) ORDER BY C.DATA DESC ROWS 1) CC12,'
 +#13#10'   (SELECT C.CC     FROM ZOO_ANIMAL_FEMEA_CC    C WHERE (C.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA) AND ( C.CC     IS NOT NULL ) AND (C.DATA BETWEEN F.NASCIMENTO + 520 AND F.NASCIMENTO + 560 ) ORDER BY C.DATA DESC ROWS 1) CC18,'
 +#13#10'   (SELECT C.CC     FROM ZOO_ANIMAL_FEMEA_CC    C WHERE (C.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA) AND ( C.CC     IS NOT NULL ) AND (C.DATA BETWEEN F.NASCIMENTO + 700 AND F.NASCIMENTO + 740 ) ORDER BY C.DATA DESC ROWS 1) CC24'
 +#13#10'  FROM ZOO_ANIMAIS_FEMEA F' ;

begin
  ExecuteDirect ( _CREATE_VRPT_CRESCIMENTO ) ;
end ;

procedure TDBZootecnicoUpdate._5_000_67 ;
const
  _UPDATE_PROTOCOLOS =
        'UPDATE ZOO_ANIMAL_PROTOCOLOS UP'
 +#13#10'  SET UP.STATUS = (SELECT SYS$VALUE FROM SYS$TYPES_GETVALUE( ''STATUS_PROTOCOLO'', ''ENCERRADO'' )),'
 +#13#10'      UP.DATASTATUS = COALESCE( (SELECT MAX(T.DATASTATUS) FROM ZOO_ANIMAL_TAREFAS T'
 +#13#10'     LEFT JOIN SYS$TYPES_GETVALUE( ''STATUS_TAREFA'', ''INTERROMPIDA'' ) ST ON 1=1'
 +#13#10'     WHERE T.KZOO_ANIMAL_PROTOCOLO = UP.KZOO_ANIMAL_PROTOCOLO'
 +#13#10'       AND T.STATUS <= ST.SYS$VALUE AND T.EXCLUIDO = ''F'' ), UP.DATA)'
 +#13#10'WHERE UP.KZOO_ANIMAL_PROTOCOLO IN'
 +#13#10' (SELECT P.KZOO_ANIMAL_PROTOCOLO FROM ZOO_ANIMAL_PROTOCOLOS P'
 +#13#10'  LEFT JOIN SYS$TYPES_GETVALUE( ''STATUS_PROTOCOLO'', ''ABERTO'' ) ST ON 1=1'
 +#13#10'  WHERE P.STATUS = ST.SYS$VALUE'
 +#13#10'  AND (SELECT COUNT(*) FROM ZOO_ANIMAL_TAREFAS T'
 +#13#10'     LEFT JOIN SYS$TYPES_GETVALUE( ''STATUS_TAREFA'', ''PENDENTE'' ) ST ON 1=1'
 +#13#10'     WHERE T.KZOO_ANIMAL_PROTOCOLO = P.KZOO_ANIMAL_PROTOCOLO'
 +#13#10'       AND T.STATUS = ST.SYS$VALUE AND T.EXCLUIDO = ''F'''
 +#13#10'     ) = 0'
 +#13#10' )' ;

  _CREATE_ZOO_ISFINISHED_PROTOCOLO =
         'CREATE OR ALTER PROCEDURE ZOO_ISFINISHED_PROTOCOLO( KZOO_ANIMAL_PROTOCOLO SYS$FKGUID20 )'
  +#13#10'AS'
  +#13#10'DECLARE STATUS_ABERTO SYS$INT ;'
  +#13#10'DECLARE STATUS_PROTOCOLO SYS$INT ;'
  +#13#10'DECLARE STATUS_ENCERRADO SYS$INT ;'
  +#13#10'DECLARE TAREFA_INTERROMPIDA SYS$INT ;'
  +#13#10'DECLARE DATA_ENCERRAMENTO SYS$DATE ;'
  +#13#10'BEGIN'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_PROTOCOLO'', ''ABERTO''       returning_values STATUS_ABERTO ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_PROTOCOLO'', ''ENCERRADO''    returning_values STATUS_ENCERRADO ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_TAREFA'',    ''INTERROMPIDA'' returning_values TAREFA_INTERROMPIDA ;'
  +#13#10''
  +#13#10'  DATA_ENCERRAMENTO = NULL ;'
  +#13#10'  STATUS_PROTOCOLO  = NULL ;'
  +#13#10''
  +#13#10'  SELECT STATUS'
  +#13#10'    FROM ZOO_ANIMAL_PROTOCOLOS'
  +#13#10'   WHERE KZOO_ANIMAL_PROTOCOLO = :KZOO_ANIMAL_PROTOCOLO'
  +#13#10'  INTO :STATUS_PROTOCOLO ;'
  +#13#10''
  +#13#10'  IF ( STATUS_PROTOCOLO = STATUS_ABERTO ) THEN'
  +#13#10'    BEGIN'
  +#13#10'      SELECT MAX(T.DATASTATUS)'
  +#13#10'        FROM ZOO_ANIMAL_TAREFAS T'
  +#13#10'       WHERE T.KZOO_ANIMAL_PROTOCOLO = :KZOO_ANIMAL_PROTOCOLO'
  +#13#10'         AND T.STATUS <= :TAREFA_INTERROMPIDA'
  +#13#10'         AND T.EXCLUIDO = ''F'''
  +#13#10'      INTO DATA_ENCERRAMENTO ;'
  +#13#10''
  +#13#10'      UPDATE ZOO_ANIMAL_PROTOCOLOS UP'
  +#13#10'         SET UP.STATUS = :STATUS_ENCERRADO,'
  +#13#10'             UP.DATASTATUS = COALESCE( :DATA_ENCERRAMENTO, UP.DATA)'
  +#13#10'      WHERE KZOO_ANIMAL_PROTOCOLO = :KZOO_ANIMAL_PROTOCOLO ;'
  +#13#10'    END'
  +#13#10'END' ;

  _CREATE_ZOO_ANIMAL_TAREFAS_AU =
         'CREATE OR ALTER TRIGGER ZOO_ANIMAL_TAREFAS_AU FOR ZOO_ANIMAL_TAREFAS'
  +#13#10'ACTIVE AFTER UPDATE POSITION 20001'
  +#13#10'AS'
  +#13#10'DECLARE TAREFA_PENDENTE SYS$INT ;'
  +#13#10'BEGIN'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_TAREFA'', ''PENDENTE'' returning_values TAREFA_PENDENTE ;'
  +#13#10''
  +#13#10'  IF (   ( OLD.KZOO_ANIMAL_PROTOCOLO IS DISTINCT FROM NEW.KZOO_ANIMAL_PROTOCOLO )'
  +#13#10'     AND ( OLD.KZOO_ANIMAL_PROTOCOLO IS NOT NULL ) ) THEN'
  +#13#10'     EXECUTE PROCEDURE ZOO_ISFINISHED_PROTOCOLO( OLD.KZOO_ANIMAL_PROTOCOLO ) ;'
  +#13#10''
  +#13#10'  IF ( ( NEW.EXCLUIDO IS DISTINCT FROM OLD.EXCLUIDO ) AND (NEW.EXCLUIDO = ''T'') ) then'
  +#13#10'    BEGIN'
  +#13#10'      UPDATE ZOO_ANIMAL_PROTOCOLOS'
  +#13#10'        SET EXCLUIDO = ''T'''
  +#13#10'      WHERE ( KZOO_ANIMAL_TAREFA = NEW.KZOO_ANIMAL_TAREFA )'
  +#13#10'        AND ( EXCLUIDO IS DISTINCT FROM ''T'' ) ;'
  +#13#10''
  +#13#10'      UPDATE ZOO_ANIMAL_TAREFAS'
  +#13#10'        SET EXCLUIDO = ''T'''
  +#13#10'      WHERE ( KMZOO_ANIMAL_TAREFA = NEW.KZOO_ANIMAL_TAREFA )'
  +#13#10'        AND ( EXCLUIDO IS DISTINCT FROM ''T'' ) ;'
  +#13#10''
  +#13#10'      IF ( NEW.KZOO_ANIMAL_PROTOCOLO IS NOT NULL ) THEN'
  +#13#10'        EXECUTE PROCEDURE ZOO_ISFINISHED_PROTOCOLO NEW.KZOO_ANIMAL_PROTOCOLO ;'
  +#13#10''
  +#13#10'      EXIT ;'
  +#13#10'    END'
  +#13#10''
  +#13#10'  IF ( ( NEW.KZOO_ANIMAL_PROTOCOLO IS NOT NULL ) AND ( NEW.STATUS IS DISTINCT FROM OLD.STATUS ) AND ( NEW.STATUS > TAREFA_PENDENTE ) ) THEN'
  +#13#10'        EXECUTE PROCEDURE ZOO_ISFINISHED_PROTOCOLO NEW.KZOO_ANIMAL_PROTOCOLO ;'
  +#13#10''
  +#13#10'  IF (        (OLD.KZOO_TAREFA_RESULTADO1 IS NOT NULL)'
  +#13#10'       AND (   ( NEW.KZOO_TAREFA_RESULTADO1 IS DISTINCT FROM OLD.KZOO_TAREFA_RESULTADO1 )'
  +#13#10'            OR (     ( NEW.PROTOCOLO_RESULTADO1 IS DISTINCT FROM OLD.PROTOCOLO_RESULTADO1 )'
  +#13#10'                 AND (NEW.PROTOCOLO_RESULTADO1 = ''F'')'
  +#13#10'               )'
  +#13#10'           ) ) THEN'
  +#13#10'      UPDATE ZOO_ANIMAL_PROTOCOLOS'
  +#13#10'        SET EXCLUIDO = ''T'''
  +#13#10'      WHERE ( KZOO_ANIMAL_TAREFA = NEW.KZOO_ANIMAL_TAREFA )'
  +#13#10'        AND ( KZOO_TAREFA_RESULTADO = OLD.KZOO_TAREFA_RESULTADO1 )'
  +#13#10'        AND ( RESULTADO = 1 )'
  +#13#10'        AND ( EXCLUIDO IS DISTINCT FROM ''T'' ) ;'
  +#13#10''
  +#13#10'  IF (        (OLD.KZOO_TAREFA_RESULTADO2 IS NOT NULL)'
  +#13#10'       AND (   ( NEW.KZOO_TAREFA_RESULTADO2 IS DISTINCT FROM OLD.KZOO_TAREFA_RESULTADO2 )'
  +#13#10'            OR (     ( NEW.PROTOCOLO_RESULTADO2 IS DISTINCT FROM OLD.PROTOCOLO_RESULTADO2 )'
  +#13#10'                 AND (NEW.PROTOCOLO_RESULTADO2 = ''F'')'
  +#13#10'               )'
  +#13#10'           ) ) THEN'
  +#13#10'      UPDATE ZOO_ANIMAL_PROTOCOLOS'
  +#13#10'        SET EXCLUIDO = ''T'''
  +#13#10'      WHERE ( KZOO_ANIMAL_TAREFA = NEW.KZOO_ANIMAL_TAREFA )'
  +#13#10'        AND ( KZOO_TAREFA_RESULTADO = OLD.KZOO_TAREFA_RESULTADO2 )'
  +#13#10'        AND ( RESULTADO = 2 )'
  +#13#10'        AND ( EXCLUIDO IS DISTINCT FROM ''T'' ) ;'
  +#13#10''
  +#13#10'  IF (        (OLD.KZOO_TAREFA_RESULTADO3 IS NOT NULL)'
  +#13#10'       AND (   ( NEW.KZOO_TAREFA_RESULTADO3 IS DISTINCT FROM OLD.KZOO_TAREFA_RESULTADO3 )'
  +#13#10'            OR (     ( NEW.PROTOCOLO_RESULTADO3 IS DISTINCT FROM OLD.PROTOCOLO_RESULTADO3 )'
  +#13#10'                 AND (NEW.PROTOCOLO_RESULTADO3 = ''F'')'
  +#13#10'               )'
  +#13#10'           ) ) THEN'
  +#13#10'      UPDATE ZOO_ANIMAL_PROTOCOLOS'
  +#13#10'        SET EXCLUIDO = ''T'''
  +#13#10'      WHERE ( KZOO_ANIMAL_TAREFA = NEW.KZOO_ANIMAL_TAREFA )'
  +#13#10'        AND ( KZOO_TAREFA_RESULTADO = OLD.KZOO_TAREFA_RESULTADO3 )'
  +#13#10'        AND ( RESULTADO = 3 )'
  +#13#10'        AND ( EXCLUIDO IS DISTINCT FROM ''T'' ) ;'
  +#13#10'END' ;

  _CREATE_ZOO_ANIMAL_TAREFAS_AIUD =
         'CREATE OR ALTER TRIGGER ZOO_ANIMAL_TAREFAS_AIUD FOR ZOO_ANIMAL_TAREFAS'
  +#13#10'ACTIVE AFTER INSERT OR UPDATE OR DELETE POSITION 20000'
  +#13#10'AS'
  +#13#10'DECLARE DIA_DESCARTE_CARNE SYS$INT ;'
  +#13#10'DECLARE DIA_DESCARTE_LEITE SYS$INT ;'
  +#13#10'DECLARE DATAPREVISTA  SYS$DATE ;'
  +#13#10'DECLARE TIPO_DESCARTE_LEITE SYS$INT ;'
  +#13#10'DECLARE TIPO_DESCARTE_CARNE SYS$INT ;'
  +#13#10'DECLARE DDT type of column ZOO_ANIMAL_TAREFAS.DDT ;'
  +#13#10'DECLARE STATUS_PENDENTE SYS$INT ;'
  +#13#10'BEGIN'
  +#13#10''
  +#13#10'  IF ( RDB$GET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$LTD'' ) = ''1'' ) THEN'
  +#13#10'     EXIT ;'
  +#13#10''
  +#13#10'  RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$LTD'', ''1'' ) ;'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_TAREFA'', ''PENDENTE'' returning_values STATUS_PENDENTE ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_TAREFA'', ''DESCARTE_LEITE'' returning_values TIPO_DESCARTE_LEITE ;'
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_TAREFA'', ''DESCARTE_CARNE'' returning_values TIPO_DESCARTE_CARNE ;'
  +#13#10''
  +#13#10'  IF (inserting) THEN'
  +#13#10'    BEGIN'
  +#13#10''
  +#13#10'      DATAPREVISTA  = COALESCE ( NEW.DATASTATUS, NEW.DATAPREVISTA ) ;'
  +#13#10''
  +#13#10'      -- leite'
  +#13#10'      IF ( NEW.DESCARTELEITE > 0 ) THEN'
  +#13#10'      BEGIN'
  +#13#10'        DIA_DESCARTE_LEITE = NEW.DESCARTELEITE ;'
  +#13#10'        WHILE ( DIA_DESCARTE_LEITE > 0 ) DO'
  +#13#10'          BEGIN'
  +#13#10'            INSERT INTO ZOO_ANIMAL_TAREFAS'
  +#13#10'              ( KZOO_ANIMAL_TAREFA,'
  +#13#10'                KZOO_ANIMAL,'
  +#13#10'                KZOO_ANIMAL_PROTOCOLO,'
  +#13#10'                CODIGO,'
  +#13#10'                NOME,'
  +#13#10'                DATAPREVISTA,'
  +#13#10'                STATUS,'
  +#13#10'                DATASTATUS,'
  +#13#10'                KCAD_FUNCIONARIO,'
  +#13#10'                NOMEFUNCIONARIO,'
  +#13#10'                KMZOO_ANIMAL_TAREFA,'
  +#13#10'                DDT )'
  +#13#10'            VALUES'
  +#13#10'              ( Guid20(),'
  +#13#10'                NEW.KZOO_ANIMAL,'
  +#13#10'                NEW.KZOO_ANIMAL_PROTOCOLO,'
  +#13#10'                ''DL'','
  +#13#10'                ''Descartar leite'','
  +#13#10'                :DATAPREVISTA + :DIA_DESCARTE_LEITE - 1,'
  +#13#10'                :TIPO_DESCARTE_LEITE,'
  +#13#10'                :DATAPREVISTA + :DIA_DESCARTE_LEITE - 1,'
  +#13#10'                NEW.KCAD_FUNCIONARIO,'
  +#13#10'                NEW.NOMEFUNCIONARIO,'
  +#13#10'                NEW.KZOO_ANIMAL_TAREFA,'
  +#13#10'                :DIA_DESCARTE_LEITE'
  +#13#10'              ) ;'
  +#13#10'              DIA_DESCARTE_LEITE = DIA_DESCARTE_LEITE -  1 ;'
  +#13#10'           END -- while leite'
  +#13#10'      END -- if leite'
  +#13#10''
  +#13#10'      -- carne'
  +#13#10'      IF ( NEW.DESCARTECARNE > 0 ) THEN'
  +#13#10'      BEGIN'
  +#13#10''
  +#13#10'        DIA_DESCARTE_CARNE = NEW.DESCARTECARNE ;'
  +#13#10''
  +#13#10'        WHILE ( DIA_DESCARTE_CARNE > 0 ) DO'
  +#13#10'          BEGIN'
  +#13#10'            INSERT INTO ZOO_ANIMAL_TAREFAS'
  +#13#10'              ( KZOO_ANIMAL_TAREFA,'
  +#13#10'                KZOO_ANIMAL,'
  +#13#10'                KZOO_ANIMAL_PROTOCOLO,'
  +#13#10'                CODIGO,'
  +#13#10'                NOME,'
  +#13#10'                DATAPREVISTA,'
  +#13#10'                STATUS,'
  +#13#10'                DATASTATUS,'
  +#13#10'                KCAD_FUNCIONARIO,'
  +#13#10'                NOMEFUNCIONARIO,'
  +#13#10'                KMZOO_ANIMAL_TAREFA,'
  +#13#10'                DDT'
  +#13#10'              )'
  +#13#10'            VALUES'
  +#13#10'              ( Guid20(),'
  +#13#10'                NEW.KZOO_ANIMAL,'
  +#13#10'                NEW.KZOO_ANIMAL_PROTOCOLO,'
  +#13#10'                ''NDC'','
  +#13#10'                ''Não descartar carne'','
  +#13#10'                :DATAPREVISTA + :DIA_DESCARTE_CARNE - 1,'
  +#13#10'                :TIPO_DESCARTE_CARNE,'
  +#13#10'                :DATAPREVISTA + :DIA_DESCARTE_CARNE - 1,'
  +#13#10'                NEW.KCAD_FUNCIONARIO,'
  +#13#10'                NEW.NOMEFUNCIONARIO,'
  +#13#10'                NEW.KZOO_ANIMAL_TAREFA,'
  +#13#10'                :DIA_DESCARTE_CARNE'
  +#13#10'              ) ;'
  +#13#10'              DIA_DESCARTE_CARNE = DIA_DESCARTE_CARNE -  1 ;'
  +#13#10'          END -- while carne'
  +#13#10'      END -- if carne'
  +#13#10''
  +#13#10'      if ( ( NEW.KZOO_ANIMAL_PROTOCOLO IS NOT NULL ) AND ( NEW.STATUS > STATUS_PENDENTE ) ) THEN'
  +#13#10'         EXECUTE PROCEDURE ZOO_ISFINISHED_PROTOCOLO( NEW.KZOO_ANIMAL_PROTOCOLO ) ;'
  +#13#10''
  +#13#10'    END -- if inserting'
  +#13#10''
  +#13#10'  IF (updating) THEN'
  +#13#10'    BEGIN'
  +#13#10''
  +#13#10'      FOR SELECT'
  +#13#10'        DDT'
  +#13#10'      FROM ZOO_ANIMAL_TAREFAS'
  +#13#10'      WHERE KMZOO_ANIMAL_TAREFA = OLD.KZOO_ANIMAL_TAREFA'
  +#13#10'      ORDER BY DDT'
  +#13#10'      INTO  DDT'
  +#13#10'      AS CURSOR CURSOR_DESCARTES'
  +#13#10'      DO'
  +#13#10'        BEGIN'
  +#13#10'            UPDATE ZOO_ANIMAL_TAREFAS'
  +#13#10'              SET'
  +#13#10'                KZOO_ANIMAL            = NEW.KZOO_ANIMAL,'
  +#13#10'                KZOO_ANIMAL_PROTOCOLO  = NEW.KZOO_ANIMAL_PROTOCOLO,'
  +#13#10'                --KZOO_TAREFA            = NEW.KZOO_TAREFA,'
  +#13#10'                DATAPREVISTA           = COALESCE ( NEW.DATASTATUS, NEW.DATAPREVISTA ) + :DDT - 1,'
  +#13#10'                DATASTATUS             = COALESCE ( NEW.DATASTATUS, NEW.DATAPREVISTA ) + :DDT - 1,'
  +#13#10'                KCAD_FUNCIONARIO       = KCAD_FUNCIONARIO,'
  +#13#10'                NOMEFUNCIONARIO        = NOMEFUNCIONARIO,'
  +#13#10'                KMZOO_ANIMAL_TAREFA    = KMZOO_ANIMAL_TAREFA'
  +#13#10'             WHERE CURRENT OF CURSOR_DESCARTES ;'
  +#13#10'        END'
  +#13#10''
  +#13#10'    END'
  +#13#10''
  +#13#10'  IF (deleting) THEN'
  +#13#10'    BEGIN'
  +#13#10'      DELETE FROM ZOO_ANIMAL_TAREFAS WHERE KMZOO_ANIMAL_TAREFA = OLD.KZOO_ANIMAL_TAREFA ;'
  +#13#10'      if ( OLD.KZOO_ANIMAL_PROTOCOLO IS NOT NULL ) THEN'
  +#13#10'         EXECUTE PROCEDURE ZOO_ISFINISHED_PROTOCOLO( OLD.KZOO_ANIMAL_PROTOCOLO ) ;'
  +#13#10'    END'
  +#13#10''
  +#13#10'  RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$LTD'', NULL ) ;'
  +#13#10''
  +#13#10'END' ;

begin
 ExecuteDirect( _UPDATE_PROTOCOLOS ) ;
 ExecuteDirect( _CREATE_ZOO_ISFINISHED_PROTOCOLO ) ;
 ExecuteDirect( _CREATE_ZOO_ANIMAL_TAREFAS_AU ) ;
 ExecuteDirect( _CREATE_ZOO_ANIMAL_TAREFAS_AIUD ) ;
end;

procedure TDBZootecnicoUpdate._5_000_64  ;
begin
  ExecuteDirect(
         'CREATE OR ALTER VIEW VRPT_ANALISE_LEITE2 ('
  +#13#10'    KZOO_PESAGEM_LEITE,'
  +#13#10'    KCAD_FAZENDA,'
  +#13#10'    KZOO_LACTACAO,'
  +#13#10'    KZOO_ANIMAL_FEMEA,'
  +#13#10'    DATALACTACAO,'
  +#13#10'    DATA,'
  +#13#10'    GORDURA,'
  +#13#10'    PROTEINA,'
  +#13#10'    LACTOSE,'
  +#13#10'    SOLIDOS_TOTAIS,'
  +#13#10'    ESD,'
  +#13#10'    CCS,'
  +#13#10'    UREIA,'
  +#13#10'    SYS$UI,'
  +#13#10'    SYS$DI,'
  +#13#10'    SYS$UU,'
  +#13#10'    SYS$DU)'
  +#13#10'AS'
  +#13#10'SELECT A.* FROM ZOO_PESAGEM_LEITE_ANALISE A'
  +#13#10'WHERE A.KZOO_PESAGEM_LEITE = (SELECT MA.KZOO_PESAGEM_LEITE'
  +#13#10'                              FROM ZOO_PESAGEM_LEITE_ANALISE MA'
  +#13#10'                              WHERE MA.KZOO_LACTACAO = A.KZOO_LACTACAO'
  +#13#10'                              ORDER BY MA.DATA DESC'
  +#13#10'                              ROWS 2 TO 2 )'
  +#13#10';'  ) ;

end;

procedure TDBZootecnicoUpdate._5_000_63  ;
begin
  TryExecuteDirect (
         'UPDATE IMP$PESAGENS'
  +#13#10'   SET LOTE = TRIM( LOTE ) WHERE LOTE <> TRIM( LOTE )'  ) ;

  TryExecuteDirect (
         'UPDATE ZOO_ANIMAIS_FEMEA'
  +#13#10'   SET LOTE = TRIM( LOTE ) WHERE LOTE <> TRIM( LOTE )'  ) ;

  TryExecuteDirect (
         'UPDATE ZOO_ANIMAIS_FEMEA'
  +#13#10'   SET VLOTE1 = TRIM( VLOTE1 ) WHERE VLOTE1 <> TRIM( VLOTE1 )'  ) ;

  TryExecuteDirect (
         'UPDATE ZOO_ANIMAIS_FEMEA'
  +#13#10'   SET VLOTE2 = TRIM( VLOTE2 ) WHERE VLOTE2 <> TRIM( VLOTE2 )'  ) ;

  TryExecuteDirect (
         'UPDATE ZOO_ANIMAIS_FEMEA'
  +#13#10'   SET VLOTE3 = TRIM( VLOTE3 ) WHERE VLOTE3 <> TRIM( VLOTE3 )'  ) ;

  TryExecuteDirect (
         'UPDATE ZOO_ANIMAL_LOTES'
  +#13#10'   SET ANTERIOR = TRIM( ANTERIOR  ) WHERE ANTERIOR  <> TRIM( ANTERIOR  )' ) ;

  TryExecuteDirect (
         'UPDATE ZOO_ANIMAL_LOTES'
  +#13#10'   SET LOTE = TRIM( LOTE ) WHERE LOTE <> TRIM( LOTE )' ) ;

  TryExecuteDirect (
         'UPDATE ZOO_ANIMAL_CRESCIMENTO'
  +#13#10'   SET LOTE = TRIM( LOTE ) WHERE LOTE <> TRIM( LOTE )' ) ;

  TryExecuteDirect (
         'UPDATE ZOO_ANIMAL_FEMEA_BST'
  +#13#10'   SET LOTE = TRIM( LOTE ) WHERE LOTE <> TRIM( LOTE )' ) ;

  TryExecuteDirect (
         'UPDATE ZOO_ANIMAL_FEMEA_CC'
  +#13#10'   SET LOTE = TRIM( LOTE ) WHERE LOTE <> TRIM( LOTE )' ) ;

  TryExecuteDirect (
         'UPDATE ZOO_ANIMAL_FEMEA_CMT'
  +#13#10'   SET LOTE = TRIM( LOTE ) WHERE LOTE <> TRIM( LOTE )'  ) ;

  TryExecuteDirect (
         'UPDATE ZOO_ANIMAL_DIAGNOSTICOS'
  +#13#10'   SET LOTE = TRIM( LOTE ) WHERE LOTE <> TRIM( LOTE )'  ) ;

  TryExecuteDirect (
         'UPDATE ZOO_ANIMAL_DIAGNOSTICOS'
  +#13#10'   SET LOTESTATUS = TRIM( LOTESTATUS ) WHERE LOTESTATUS <> TRIM( LOTESTATUS )'  ) ;

  TryExecuteDirect (
         'UPDATE ZOO_ANIMAL_PROTOCOLOS'
  +#13#10'   SET LOTE = TRIM( LOTE ) WHERE LOTE <> TRIM( LOTE )'  ) ;

  TryExecuteDirect (
         'UPDATE ZOO_ANIMAL_PROTOCOLOS'
  +#13#10'   SET LOTESTATUS = TRIM( LOTESTATUS ) WHERE LOTESTATUS <> TRIM( LOTESTATUS )'  ) ;

  TryExecuteDirect (
         'UPDATE ZOO_ANIMAL_TAREFAS'
  +#13#10'   SET LOTE = TRIM( LOTE ) WHERE LOTE <> TRIM( LOTE )' ) ;

  TryExecuteDirect (
         'UPDATE ZOO_ANIMAL_TAREFAS'
  +#13#10'   SET LOTESTATUS = TRIM( LOTESTATUS ) WHERE LOTESTATUS <> TRIM( LOTESTATUS )' ) ;

  TryExecuteDirect (
         'UPDATE ZOO_EVENTOS_ZOOTECNICOS'
  +#13#10'   SET LOTE = TRIM( LOTE ) WHERE LOTE <> TRIM( LOTE )' ) ;

  TryExecuteDirect (
         'UPDATE ZOO_EVENTOS_ZOOTECNICOS'
  +#13#10'   SET LOTETOQUE = TRIM( LOTETOQUE ) WHERE LOTETOQUE <> TRIM( LOTETOQUE )' ) ;

  TryExecuteDirect (
         'UPDATE ZOO_EVENTOS_ZOOTECNICOS'
  +#13#10'   SET LOTEPARTO = TRIM( LOTEPARTO ) WHERE LOTEPARTO <> TRIM( LOTEPARTO )' ) ;

  TryExecuteDirect (
         'UPDATE ZOO_PESAGEM_LEITE'
  +#13#10'   SET LOTE = TRIM( LOTE ) WHERE LOTE <> TRIM( LOTE )' ) ;

  TryExecuteDirect (
         'UPDATE ZOO_E_C1'
  +#13#10'   SET LOTE = TRIM( LOTE ) WHERE LOTE <> TRIM( LOTE )' ) ;

  TryExecuteDirect (
         'UPDATE ZOO_E_C2'
  +#13#10'   SET LOTE = TRIM( LOTE ) WHERE LOTE <> TRIM( LOTE )' ) ;

  TryExecuteDirect (
         'UPDATE ZOO_E_C3'
  +#13#10'   SET LOTE = TRIM( LOTE ) WHERE LOTE <> TRIM( LOTE )' ) ;

  TryExecuteDirect (
         'UPDATE ZOO_E_C4'
  +#13#10'   SET LOTE = TRIM( LOTE ) WHERE LOTE <> TRIM( LOTE )'  ) ;
end;

procedure TDBZootecnicoUpdate._5_000_59  ;
begin
  TryExecuteDirect (
         'ALTER DOMAIN ZOO$LOTE TO ZOO$LOTE_ ;'  ) ;

  TryExecuteDirect (
         'CREATE DOMAIN ZOO$LOTE AS'
  +#13#10'VARCHAR(32) CHARACTER SET ISO8859_1'
  +#13#10'COLLATE ISO8859_1;' ) ;

  TryExecuteDirect (
         'ALTER TABLE IMP$PESAGENS'
  +#13#10'   ALTER LOTE TYPE ZOO$LOTE ;'  ) ;

  TryExecuteDirect (
         'ALTER TABLE ZOO_ANIMAIS_FEMEA'
  +#13#10'   ALTER LOTE TYPE ZOO$LOTE,'
  +#13#10'   ALTER VLOTE1 TYPE ZOO$LOTE,'
  +#13#10'   ALTER VLOTE2 TYPE ZOO$LOTE,'
  +#13#10'   ALTER VLOTE3 TYPE ZOO$LOTE ;'  ) ;

  TryExecuteDirect (
         'ALTER TABLE ZOO_ANIMAL_LOTES'
  +#13#10'   ALTER ANTERIOR TYPE ZOO$LOTE,'
  +#13#10'   ALTER LOTE TYPE ZOO$LOTE ;' ) ;

  TryExecuteDirect (
         'ALTER TABLE ZOO_ANIMAL_CRESCIMENTO'
  +#13#10'   ALTER LOTE TYPE ZOO$LOTE ;' ) ;

  TryExecuteDirect (
         'ALTER TABLE ZOO_ANIMAL_FEMEA_BST'
  +#13#10'   ALTER LOTE TYPE ZOO$LOTE ;' ) ;

  TryExecuteDirect (
         'ALTER TABLE ZOO_ANIMAL_FEMEA_CC'
  +#13#10'   ALTER LOTE TYPE ZOO$LOTE ;' ) ;

  TryExecuteDirect (
         'ALTER TABLE ZOO_ANIMAL_FEMEA_CMT'
  +#13#10'   ALTER LOTE TYPE ZOO$LOTE ;'  ) ;

  TryExecuteDirect (
         'ALTER TABLE ZOO_ANIMAL_DIAGNOSTICOS'
  +#13#10'   ALTER LOTE TYPE ZOO$LOTE,'
  +#13#10'   ALTER LOTESTATUS TYPE ZOO$LOTE ;'  ) ;

  TryExecuteDirect (
         'ALTER TABLE ZOO_ANIMAL_PROTOCOLOS'
  +#13#10'   ALTER LOTE TYPE ZOO$LOTE,'
  +#13#10'   ALTER LOTESTATUS TYPE ZOO$LOTE ;'  ) ;

  TryExecuteDirect (
         'ALTER TABLE ZOO_ANIMAL_TAREFAS'
  +#13#10'   ALTER LOTE TYPE ZOO$LOTE,'
  +#13#10'   ALTER LOTESTATUS TYPE ZOO$LOTE ;' ) ;

  TryExecuteDirect (
         'ALTER TABLE ZOO_EVENTOS_ZOOTECNICOS'
  +#13#10'   ALTER LOTE TYPE ZOO$LOTE,'
  +#13#10'   ALTER LOTETOQUE TYPE ZOO$LOTE,'
  +#13#10'   ALTER LOTEPARTO TYPE ZOO$LOTE ;' ) ;

  TryExecuteDirect (
         'ALTER TABLE ZOO_PESAGEM_LEITE'
  +#13#10'   ALTER LOTE TYPE ZOO$LOTE ;' ) ;

  TryExecuteDirect (
         'ALTER TABLE ZOO_E_C1'
  +#13#10'   ALTER LOTE TYPE ZOO$LOTE ;' ) ;

  TryExecuteDirect (
         'ALTER TABLE ZOO_E_C2'
  +#13#10'   ALTER LOTE TYPE ZOO$LOTE ;' ) ;

  TryExecuteDirect (
         'ALTER TABLE ZOO_E_C3'
  +#13#10'   ALTER LOTE TYPE ZOO$LOTE ;' ) ;

  TryExecuteDirect (
         'ALTER TABLE ZOO_E_C4'
  +#13#10'   ALTER LOTE TYPE ZOO$LOTE ;'  ) ;

  ExecuteDirect (
         'CREATE OR ALTER VIEW VRPT_FEMEAS('
  +#13#10'    KZOO_ANIMAL_FEMEA,'
  +#13#10'    KCAD_FAZENDA,'
  +#13#10'    BRINCO,'
  +#13#10'    BRINCO_,'
  +#13#10'    NOMEESTABULO,'
  +#13#10'    NOMECOMPLETO,'
  +#13#10'    REGISTRO,'
  +#13#10'    DTORIGEM,'
  +#13#10'    LOCAL_ORIGEM,'
  +#13#10'    PRECO_COMPRA,'
  +#13#10'    VACA,'
  +#13#10'    STATUS,'
  +#13#10'    DATASTATUS,'
  +#13#10'    INTENCAO_DESCARTE,'
  +#13#10'    CRIADOR,'
  +#13#10'    CIDCRIA,'
  +#13#10'    PERSISTE,'
  +#13#10'    POTENCIAL,'
  +#13#10'    DATABRINCO,'
  +#13#10'    RACA,'
  +#13#10'    SISBOV,'
  +#13#10'    GRAUSANGUE,'
  +#13#10'    COMPOSICAORACA,'
  +#13#10'    KULTIMO_EVENTO_ZOOTECNICO,'
  +#13#10'    ULTIMO_EVENTO_ZOOTECNICO,'
  +#13#10'    KULTIMO_CIO,'
  +#13#10'    ULTIMO_CIO,'
  +#13#10'    NUMERO_CIO,'
  +#13#10'    KULTIMA_MONTA,'
  +#13#10'    ULTIMA_MONTA,'
  +#13#10'    NUMERO_MONTA,'
  +#13#10'    KULTIMO_PARTO,'
  +#13#10'    ULTIMO_PARTO,'
  +#13#10'    KPRIMEIRA_LACTACAO,'
  +#13#10'    PRIMEIRA_LACTACAO,'
  +#13#10'    NUMERO_PRIMEIRALACTACAO,'
  +#13#10'    KULTIMA_LACTACAO,'
  +#13#10'    ULTIMA_LACTACAO,'
  +#13#10'    NUMERO_LACTACAO,'
  +#13#10'    NUMERO_ABORTO,'
  +#13#10'    NUMERO_COLETA,'
  +#13#10'    DOADOR_RECEPTOR,'
  +#13#10'    KMAIOR_PESO,'
  +#13#10'    MAIOR_PESO,'
  +#13#10'    NASCIMENTO,'
  +#13#10'    RETIRO,'
  +#13#10'    LOTE,'
  +#13#10'    VLOTE1,'
  +#13#10'    VLOTE2,'
  +#13#10'    VLOTE3,'
  +#13#10'    NUCLEO,'
  +#13#10'    REBANHO,'
  +#13#10'    DATALOTE,'
  +#13#10'    DATARETIRO,'
  +#13#10'    DPPC,'
  +#13#10'    DPP,'
  +#13#10'    DUC,'
  +#13#10'    KPAI,'
  +#13#10'    NOMEPAI,'
  +#13#10'    KMAE,'
  +#13#10'    NOMEMAE,'
  +#13#10'    MAEPAI,'
  +#13#10'    MAEMAE,'
  +#13#10'    PAIPAI,'
  +#13#10'    PAIMAE,'
  +#13#10'    BISF_MAEPAI,'
  +#13#10'    BISF_MAEMAE,'
  +#13#10'    BISF_PAIPAI,'
  +#13#10'    BISF_PAIMAE,'
  +#13#10'    BISM_MAEPAI,'
  +#13#10'    BISM_MAEMAE,'
  +#13#10'    BISM_PAIPAI,'
  +#13#10'    BISM_PAIMAE,'
  +#13#10'    IDADE,'
  +#13#10'    IAP,'
  +#13#10'    KULTIMO_DIAGNOSTICO,'
  +#13#10'    KPENULTIMO_DIAGNOSTICO,'
  +#13#10'    KULTIMO_PROTOCOLO,'
  +#13#10'    KPENULTIMO_PROTOCOLO,'
  +#13#10'    KULTIMA_TAREFA,'
  +#13#10'    KPENULTIMA_TAREFA)'
  +#13#10'AS'
  +#13#10'SELECT'
  +#13#10'    F.KZOO_ANIMAL_FEMEA,'
  +#13#10'    A.KCAD_FAZENDA,'
  +#13#10'    A.BRINCO,'
  +#13#10'    A.BRINCO_,'
  +#13#10'    A.NOMEESTABULO,'
  +#13#10'    A.NOMECOMPLETO,'
  +#13#10'    A.REGISTRO,'
  +#13#10'    A.DTORIGEM,'
  +#13#10'    A.LOCAL_ORIGEM,'
  +#13#10'    A.PRECO_COMPRA,'
  +#13#10'    A.VACA,'
  +#13#10'    (SELECT SYS$DESCRIPTION FROM SYS$TYPES_GETDESCRIPTION ( ''SIGLA_STATUS_FEMEA'', A.STATUS )) STATUS,'
  +#13#10'    A.DATASTATUS,'
  +#13#10'    F.INTENCAO_DESCARTE,'
  +#13#10'    A.CRIADOR,'
  +#13#10'    A.CIDCRIA,'
  +#13#10'    A.PERSISTE,'
  +#13#10'    A.POTENCIAL,'
  +#13#10'    A.DATABRINCO,'
  +#13#10'    A.RACA,'
  +#13#10'    A.SISBOV,'
  +#13#10'    A.GRAUSANGUE,'
  +#13#10'    A.COMPOSICAORACA,'
  +#13#10'    F.KULTIMO_EVENTO_ZOOTECNICO,'
  +#13#10'    F.ULTIMO_EVENTO_ZOOTECNICO,'
  +#13#10'    F.KULTIMO_CIO,'
  +#13#10'    F.ULTIMO_CIO,'
  +#13#10'    F.NUMERO_CIO,'
  +#13#10'    F.KULTIMA_MONTA,'
  +#13#10'    F.ULTIMA_MONTA,'
  +#13#10'    F.NUMERO_MONTA,'
  +#13#10'    F.KULTIMO_PARTO,'
  +#13#10'    F.ULTIMO_PARTO,'
  +#13#10'    F.KPRIMEIRA_LACTACAO,'
  +#13#10'    F.PRIMEIRA_LACTACAO,'
  +#13#10'    F.NUMERO_PRIMEIRALACTACAO,'
  +#13#10'    F.KULTIMA_LACTACAO,'
  +#13#10'    F.ULTIMA_LACTACAO,'
  +#13#10'    F.NUMERO_LACTACAO,'
  +#13#10'    F.NUMERO_ABORTO,'
  +#13#10'    F.NUMERO_COLETA,'
  +#13#10'    (SELECT SYS$DESCRIPTION FROM SYS$TYPES_GETDESCRIPTION ( ''TIPO_DOADOR_RECEPTOR'', F.DOADOR_RECEPTOR )) DOADOR_RECEPTOR,'
  +#13#10'    F.KMAIOR_PESO,'
  +#13#10'    F.MAIOR_PESO,'
  +#13#10'    F.NASCIMENTO,'
  +#13#10'    F.RETIRO,'
  +#13#10'    F.LOTE,'
  +#13#10'    F.VLOTE1,'
  +#13#10'    F.VLOTE2,'
  +#13#10'    F.VLOTE3,'
  +#13#10'    F.NUCLEO,'
  +#13#10'    F.REBANHO,'
  +#13#10'    F.DATALOTE,'
  +#13#10'    F.DATARETIRO,'
  +#13#10'   (SELECT CAST ( CAST ( E.DATAEVENTO AS DATE ) - CAST ( F.ULTIMA_LACTACAO AS DATE ) AS INTEGER) FROM ZOO_EVENTOS_ZOOTECNICOS E WHERE E.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND E.DATAEVENTO > F.ULTIMA_LACTACAO ORDER BY E.DATAEVENTO ROWS 1) DPPC,'
  +#13#10'  --  0 DPPC,'
  +#13#10'    TRUNC ( CURRENT_TIMESTAMP - F.ULTIMA_LACTACAO ) DPP,'
  +#13#10'    TRUNC ( CURRENT_TIMESTAMP - F.ULTIMO_CIO ) DUC,'
  +#13#10'    DPAI1.KZOO_ANIMAL_PARENT  KPAI,'
  +#13#10'    DPAI1.NOMEANIMAL_PARENTE  NOMEPAI,'
  +#13#10'    DMAE1.KZOO_ANIMAL_PARENT  KMAE,'
  +#13#10'    DMAE1.NOMEANIMAL_PARENTE  NOMEMAE,'
  +#13#10'    DMAEPAI.NOMEANIMAL_PARENTE  MAEPAI,'
  +#13#10'    DMAEMAE.NOMEANIMAL_PARENTE  MAEMAE,'
  +#13#10'    DPAIPAI.NOMEANIMAL_PARENTE  PAIPAI,'
  +#13#10'    DPAIMAE.NOMEANIMAL_PARENTE  PAIMAE,'
  +#13#10''
  +#13#10'    BISF_MAEPAI.NOMEANIMAL_PARENTE BISF_MAEPAI,'
  +#13#10'    BISF_MAEMAE.NOMEANIMAL_PARENTE BISF_MAEMAE,'
  +#13#10'    BISF_PAIPAI.NOMEANIMAL_PARENTE BISF_PAIPAI,'
  +#13#10'    BISF_PAIMAE.NOMEANIMAL_PARENTE BISF_PAIMAE,'
  +#13#10''
  +#13#10'    BISM_MAEPAI.NOMEANIMAL_PARENTE BISM_MAEPAI,'
  +#13#10'    BISM_MAEMAE.NOMEANIMAL_PARENTE BISM_MAEMAE,'
  +#13#10'    BISM_PAIPAI.NOMEANIMAL_PARENTE BISM_PAIPAI,'
  +#13#10'    BISM_PAIMAE.NOMEANIMAL_PARENTE BISM_PAIMAE,'
  +#13#10''
  +#13#10'    CAST ( CAST ( (CURRENT_TIMESTAMP - F.NASCIMENTO) / 30.4 AS NUMERIC ( 5, 1 ) ) AS SYS$FLOAT )IDADE,'
  +#13#10'    CAST ( CAST ( (F.ULTIMO_PARTO - F.NASCIMENTO) / 30.4  AS NUMERIC ( 5, 1 ) ) AS SYS$FLOAT ) IAP,'
  +#13#10'    (select ud.KZOO_ANIMAL_DIAGNOSTICO from ZOO_ANIMAL_DIAGNOSTICOS ud where ud.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA order by ud.data desc  rows 1 to 1 ) KULTIMO_DIAGNOSTICO,'
  +#13#10'    (select ud.KZOO_ANIMAL_DIAGNOSTICO from ZOO_ANIMAL_DIAGNOSTICOS ud where ud.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA order by ud.data desc  rows 2 to 2 ) KPENULTIMO_DIAGNOSTICO,'
  +#13#10'    (select up.KZOO_ANIMAL_PROTOCOLO from ZOO_ANIMAL_PROTOCOLOS up where up.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA order by up.data desc  rows 1 to 1 ) KULTIMO_PROTOCOLO,'
  +#13#10'    (select up.KZOO_ANIMAL_PROTOCOLO from ZOO_ANIMAL_PROTOCOLOS up where up.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA order by up.data desc  rows 2 to 2 ) KPENULTIMO_PROTOCOLO,'
  +#13#10'    (select ut.KZOO_ANIMAL_tarefa from ZOO_ANIMAL_TAREFAS ut'
  +#13#10'     where ut.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA and ut.status = (SELECT SYS$VALUE FROM SYS$TYPES_GETVALUE ( ''STATUS_TAREFA'', ''EXECUTADA'' ))'
  +#13#10'     order by ut.datastatus desc  rows 1 to 1 ) KULTIMA_TAREFA,'
  +#13#10'    (select ut.KZOO_ANIMAL_tarefa from ZOO_ANIMAL_TAREFAS ut'
  +#13#10'     where ut.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA and ut.status = (SELECT SYS$VALUE FROM SYS$TYPES_GETVALUE ( ''STATUS_TAREFA'', ''EXECUTADA'' ))'
  +#13#10'     order by ut.datastatus desc  rows 2 to 2 ) KPENULTIMA_TAREFA'
  +#13#10'FROM ZOO_ANIMAIS_FEMEA F'
  +#13#10'INNER JOIN ZOO_ANIMAIS A ON A.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(F.KZOO_ANIMAL_FEMEA, 1, 0) DPAI1 ON DPAI1.TIPOPARENTESCO = 1 AND DPAI1.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(F.KZOO_ANIMAL_FEMEA, 1, 0) DMAE1 ON DMAE1.TIPOPARENTESCO = 2 AND DMAE1.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAI1.KZOO_ANIMAL_PARENT, 1, 0) DMAEPAI ON DMAEPAI.TIPOPARENTESCO = 2 AND DMAEPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAE1.KZOO_ANIMAL_PARENT, 1, 0) DMAEMAE ON DMAEMAE.TIPOPARENTESCO = 2 AND DMAEMAE.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAI1.KZOO_ANIMAL_PARENT, 1, 0) DPAIPAI ON DPAIPAI.TIPOPARENTESCO = 1 AND DPAIPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAE1.KZOO_ANIMAL_PARENT, 1, 0) DPAIMAE ON DPAIMAE.TIPOPARENTESCO = 1 AND DPAIMAE.PARENTLEVEL = 1'
  +#13#10''
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEPAI.KZOO_ANIMAL_PARENT, 1, 0) BISF_MAEPAI ON BISF_MAEPAI.TIPOPARENTESCO = 2 AND BISF_MAEPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEMAE.KZOO_ANIMAL_PARENT, 1, 0) BISF_MAEMAE ON BISF_MAEMAE.TIPOPARENTESCO = 2 AND BISF_MAEMAE.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIPAI.KZOO_ANIMAL_PARENT, 1, 0) BISF_PAIPAI ON BISF_PAIPAI.TIPOPARENTESCO = 2 AND BISF_PAIPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIMAE.KZOO_ANIMAL_PARENT, 1, 0) BISF_PAIMAE ON BISF_PAIMAE.TIPOPARENTESCO = 2 AND BISF_PAIMAE.PARENTLEVEL = 1'
  +#13#10''
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEPAI.KZOO_ANIMAL_PARENT, 1, 0) BISM_MAEPAI ON BISM_MAEPAI.TIPOPARENTESCO = 1 AND BISM_MAEPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEMAE.KZOO_ANIMAL_PARENT, 1, 0) BISM_MAEMAE ON BISM_MAEMAE.TIPOPARENTESCO = 1 AND BISM_MAEMAE.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIPAI.KZOO_ANIMAL_PARENT, 1, 0) BISM_PAIPAI ON BISM_PAIPAI.TIPOPARENTESCO = 1 AND BISM_PAIPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIMAE.KZOO_ANIMAL_PARENT, 1, 0) BISM_PAIMAE ON BISM_PAIMAE.TIPOPARENTESCO = 1 AND BISM_PAIMAE.PARENTLEVEL = 1 ;' ) ;

  TryExecuteDirect (
  'DROP DOMAIN ZOO$LOTE_ ;' )  ;

  ExecuteDirect (
         'CREATE OR ALTER TRIGGER ZOO_ANIMAL_DIAGNOSTICOS_AU FOR ZOO_ANIMAL_DIAGNOSTICOS'
  +#13#10'ACTIVE AFTER UPDATE POSITION 20000'
  +#13#10'AS'
  +#13#10'BEGIN'
  +#13#10'  IF ( ( NEW.EXCLUIDO IS DISTINCT FROM OLD.EXCLUIDO ) AND (NEW.EXCLUIDO = ''T'') ) then'
  +#13#10'    UPDATE ZOO_ANIMAL_PROTOCOLOS'
  +#13#10'      SET EXCLUIDO = ''T'''
  +#13#10'    WHERE ( KZOO_ANIMAL_DIAGNOSTICO = NEW.KZOO_ANIMAL_DIAGNOSTICO )'
  +#13#10'      AND ( EXCLUIDO IS DISTINCT FROM ''T'' ) ;'
  +#13#10'END ;' ) ;


  ExecuteDirect (
         'CREATE OR ALTER TRIGGER ZOO_ANIMAL_PROTOCOLOS_AU FOR ZOO_ANIMAL_PROTOCOLOS'
  +#13#10'ACTIVE AFTER UPDATE POSITION 20000'
  +#13#10'AS'
  +#13#10'BEGIN'
  +#13#10'  IF ( ( NEW.EXCLUIDO IS DISTINCT FROM OLD.EXCLUIDO ) AND (NEW.EXCLUIDO = ''T'') ) then'
  +#13#10'    UPDATE ZOO_ANIMAL_TAREFAS'
  +#13#10'      SET EXCLUIDO = ''T'''
  +#13#10'    WHERE ( KZOO_ANIMAL_PROTOCOLO = NEW.KZOO_ANIMAL_PROTOCOLO )'
  +#13#10'      AND ( EXCLUIDO IS DISTINCT FROM ''T'' ) ;'
  +#13#10'END ;' ) ;


  ExecuteDirect (
         'CREATE OR ALTER TRIGGER ZOO_ANIMAL_TAREFAS_AU FOR ZOO_ANIMAL_TAREFAS'
  +#13#10'ACTIVE AFTER UPDATE POSITION 20000'
  +#13#10'AS'
  +#13#10'BEGIN'
  +#13#10'  IF ( ( NEW.EXCLUIDO IS DISTINCT FROM OLD.EXCLUIDO ) AND (NEW.EXCLUIDO = ''T'') ) then'
  +#13#10'    BEGIN'
  +#13#10'      UPDATE ZOO_ANIMAL_PROTOCOLOS'
  +#13#10'        SET EXCLUIDO = ''T'''
  +#13#10'      WHERE ( KZOO_ANIMAL_TAREFA = NEW.KZOO_ANIMAL_TAREFA )'
  +#13#10'        AND ( EXCLUIDO IS DISTINCT FROM ''T'' ) ;'
  +#13#10''
  +#13#10'      UPDATE ZOO_ANIMAL_TAREFAS'
  +#13#10'        SET EXCLUIDO = ''T'''
  +#13#10'      WHERE ( KMZOO_ANIMAL_TAREFA = NEW.KZOO_ANIMAL_TAREFA )'
  +#13#10'        AND ( EXCLUIDO IS DISTINCT FROM ''T'' ) ;'
  +#13#10''
  +#13#10'      EXIT ;'
  +#13#10'    END'
  +#13#10''
  +#13#10'  IF (        (OLD.KZOO_TAREFA_RESULTADO1 IS NOT NULL)'
  +#13#10'       AND (   ( NEW.KZOO_TAREFA_RESULTADO1 IS DISTINCT FROM OLD.KZOO_TAREFA_RESULTADO1 )'
  +#13#10'            OR (     ( NEW.PROTOCOLO_RESULTADO1 IS DISTINCT FROM OLD.PROTOCOLO_RESULTADO1 )'
  +#13#10'                 AND (NEW.PROTOCOLO_RESULTADO1 = ''F'')'
  +#13#10'               )'
  +#13#10'           ) ) THEN'
  +#13#10'      UPDATE ZOO_ANIMAL_PROTOCOLOS'
  +#13#10'        SET EXCLUIDO = ''T'''
  +#13#10'      WHERE ( KZOO_ANIMAL_TAREFA = NEW.KZOO_ANIMAL_TAREFA )'
  +#13#10'        AND ( KZOO_TAREFA_RESULTADO = OLD.KZOO_TAREFA_RESULTADO1 )'
  +#13#10'        AND ( RESULTADO = 1 )'
  +#13#10'        AND ( EXCLUIDO IS DISTINCT FROM ''T'' ) ;'
  +#13#10''
  +#13#10'  IF (        (OLD.KZOO_TAREFA_RESULTADO2 IS NOT NULL)'
  +#13#10'       AND (   ( NEW.KZOO_TAREFA_RESULTADO2 IS DISTINCT FROM OLD.KZOO_TAREFA_RESULTADO2 )'
  +#13#10'            OR (     ( NEW.PROTOCOLO_RESULTADO2 IS DISTINCT FROM OLD.PROTOCOLO_RESULTADO2 )'
  +#13#10'                 AND (NEW.PROTOCOLO_RESULTADO2 = ''F'')'
  +#13#10'               )'
  +#13#10'           ) ) THEN'
  +#13#10'      UPDATE ZOO_ANIMAL_PROTOCOLOS'
  +#13#10'        SET EXCLUIDO = ''T'''
  +#13#10'      WHERE ( KZOO_ANIMAL_TAREFA = NEW.KZOO_ANIMAL_TAREFA )'
  +#13#10'        AND ( KZOO_TAREFA_RESULTADO = OLD.KZOO_TAREFA_RESULTADO2 )'
  +#13#10'        AND ( RESULTADO = 2 )'
  +#13#10'        AND ( EXCLUIDO IS DISTINCT FROM ''T'' ) ;'
  +#13#10''
  +#13#10'  IF (        (OLD.KZOO_TAREFA_RESULTADO3 IS NOT NULL)'
  +#13#10'       AND (   ( NEW.KZOO_TAREFA_RESULTADO3 IS DISTINCT FROM OLD.KZOO_TAREFA_RESULTADO3 )'
  +#13#10'            OR (     ( NEW.PROTOCOLO_RESULTADO3 IS DISTINCT FROM OLD.PROTOCOLO_RESULTADO3 )'
  +#13#10'                 AND (NEW.PROTOCOLO_RESULTADO3 = ''F'')'
  +#13#10'               )'
  +#13#10'           ) ) THEN'
  +#13#10'      UPDATE ZOO_ANIMAL_PROTOCOLOS'
  +#13#10'        SET EXCLUIDO = ''T'''
  +#13#10'      WHERE ( KZOO_ANIMAL_TAREFA = NEW.KZOO_ANIMAL_TAREFA )'
  +#13#10'        AND ( KZOO_TAREFA_RESULTADO = OLD.KZOO_TAREFA_RESULTADO3 )'
  +#13#10'        AND ( RESULTADO = 3 )'
  +#13#10'        AND ( EXCLUIDO IS DISTINCT FROM ''T'' ) ;'
  +#13#10'END ;' ) ;

end;

procedure TDBZootecnicoUpdate._5_000_58;
begin
(*
   AlterTable()
     .Add
     .Alter
     .Drop
     .AddPrimaryKey[ 'Name', [Cols] ]
     .AddForeignKey( [], '', [], [] )
     .DropConstraint( name )
     .Do ;
*)

 TryExecuteDirect (
          'ALTER TABLE ZOO_TAREFA_ITENS'
   +#13#10' ADD    ATIVO SYS$BOOL_T,'
   +#13#10' ALTER  ATIVO POSITION 5,'
   +#13#10' ADD    INTERNAL SYS$BOOL_F,'
   +#13#10' ALTER  INTERNAL POSITION 6') ;


 TryExecuteDirect (
         'CREATE TABLE ZOO_TAREFA_RESULTADOS ('
  +#13#10'    KZOO_TAREFA_RESULTADO    SYS$PKGUID20,'
  +#13#10'    KZOO_TAREFA SYS$FKGUID20_NN,'
  +#13#10'    NOME           SYS$DESCR_NN,'
  +#13#10'    ATIVO          SYS$BOOL_T,'
  +#13#10'    INTERNAL       SYS$BOOL_F,'
  +#13#10'    KDEF_TAREFA_RESULTADO    SYS$FKGUID20,'
  +#13#10'    SYS$UI         SYS$USERLOGIN,'
  +#13#10'    SYS$DI         SYS$DATE,'
  +#13#10'    SYS$UU         SYS$USERLOGIN,'
  +#13#10'    SYS$DU         SYS$DATE'
  +#13#10')'  ) ;

 TryExecuteDirect (
  'ALTER TABLE ZOO_TAREFA_RESULTADOS ADD CONSTRAINT PKZOO_TAREFA_RESULTADO_RESULTAD PRIMARY KEY (KZOO_TAREFA_RESULTADO)'  ) ;

 TryExecuteDirect (
         'ALTER TABLE ZOO_TAREFA_RESULTADOS'
  +#13#10' ADD  CONSTRAINT FKZOO_TAREFA_RESULTADOS_01'
  +#13#10'    FOREIGN KEY (KZOO_TAREFA)'
  +#13#10'     REFERENCES ZOO_TAREFAS (KZOO_TAREFA)'
  +#13#10'      ON DELETE CASCADE'
  +#13#10'      ON UPDATE CASCADE'  ) ;

 TryExecuteDirect (
         ' CREATE TABLE ZOO_RESULTADO_PROTOCOLOS ('
  +#13#10'    KZOO_RESULTADO_PROTOCOLO  SYS$PKGUID20,'
  +#13#10'    KZOO_TAREFA_RESULTADO     SYS$FKGUID20_NN,'
  +#13#10'    KZOO_PROTOCOLO            SYS$FKGUID20_NN,'
  +#13#10'    INICIAR                   SYS$BOOL_T,'
  +#13#10'    SYS$UI                    SYS$USERLOGIN,'
  +#13#10'    SYS$DI                    SYS$DATE,'
  +#13#10'    SYS$UU                    SYS$USERLOGIN,'
  +#13#10'    SYS$DU                    SYS$DATE'
  +#13#10')' ) ;

 TryExecuteDirect (
        'ALTER TABLE ZOO_RESULTADO_PROTOCOLOS ADD CONSTRAINT PKZOO_RESULTADO_PROTOCOLOS PRIMARY KEY (KZOO_RESULTADO_PROTOCOLO)'  ) ;
 TryExecuteDirect (
        'ALTER TABLE ZOO_RESULTADO_PROTOCOLOS ADD CONSTRAINT FKZOO_RESULTADO_PROTOCOLOS_01 FOREIGN KEY (KZOO_TAREFA_RESULTADO) REFERENCES ZOO_TAREFA_RESULTADOS (KZOO_TAREFA_RESULTADO) ON UPDATE CASCADE'  ) ;
 TryExecuteDirect (
        'ALTER TABLE ZOO_RESULTADO_PROTOCOLOS ADD CONSTRAINT FKZOO_RESULTADO_PROTOCOLOS_02 FOREIGN KEY (KZOO_PROTOCOLO) REFERENCES ZOO_PROTOCOLOS (KZOO_PROTOCOLO) ON UPDATE CASCADE'  ) ;


 TryExecuteDirect (
       'ALTER TABLE ZOO_ANIMAL_PROTOCOLOS'
+#13#10'ADD KZOO_ANIMAL_TAREFA SYS$FKGUID20,'
+#13#10'ALTER KZOO_ANIMAL_TAREFA POSITION 5' ) ;

 TryExecuteDirect (
       'ALTER TABLE ZOO_ANIMAL_PROTOCOLOS'
+#13#10'ADD KZOO_TAREFA_RESULTADO SYS$FKGUID20,'
+#13#10'ALTER KZOO_TAREFA_RESULTADO POSITION 6' ) ;

 TryExecuteDirect (
       'ALTER TABLE ZOO_ANIMAL_PROTOCOLOS'
+#13#10'ADD RESULTADO SYS$INT,'
+#13#10'ALTER RESULTADO POSITION 7' ) ;

 TryExecuteDirect (
               'ALTER TABLE ZOO_ANIMAL_PROTOCOLOS'
        +#13#10'ADD CONSTRAINT FKZOO_ANIMAL_PROTOCOLOS_04'
        +#13#10'FOREIGN KEY (KZOO_ANIMAL_TAREFA)'
        +#13#10'REFERENCES ZOO_ANIMAL_TAREFAS (KZOO_ANIMAL_TAREFA)'
        +#13#10'ON DELETE CASCADE ON UPDATE CASCADE' ) ;

 TryExecuteDirect (
               'ALTER TABLE ZOO_ANIMAL_PROTOCOLOS'
        +#13#10'ADD CONSTRAINT FKZOO_ANIMAL_PROTOCOLOS_05'
        +#13#10'FOREIGN KEY (KZOO_TAREFA_RESULTADO)'
        +#13#10'REFERENCES ZOO_TAREFA_RESULTADOS (KZOO_TAREFA_RESULTADO)'
        +#13#10'ON UPDATE CASCADE'  ) ;

 TryExecuteDirect (
  'DROP TRIGGER JNL$ZOO_ANIMAL_TAREFAS' ) ;

 TryExecuteDirect (
        'ALTER TABLE ZOO_ANIMAL_TAREFAS'
 +#13#10'DROP RESULTADO1,'
 +#13#10'DROP RESULTADO2,'
 +#13#10'DROP RESULTADO3' ) ;

 TryExecuteDirect (
        'ALTER TABLE ZOO_ANIMAL_TAREFAS'
 +#13#10'ADD KZOO_TAREFA_RESULTADO1 SYS$FKGUID20,'
 +#13#10'ADD KZOO_TAREFA_RESULTADO2 SYS$FKGUID20,'
 +#13#10'ADD KZOO_TAREFA_RESULTADO3 SYS$FKGUID20' ) ;

 TryExecuteDirect (
        'ALTER TABLE ZOO_ANIMAL_TAREFAS'
 +#13#10'ADD PROTOCOLO_RESULTADO1 SYS$BOOL_F,'
 +#13#10'ADD PROTOCOLO_RESULTADO2 SYS$BOOL_F,'
 +#13#10'ADD PROTOCOLO_RESULTADO3 SYS$BOOL_F' ) ;

 TryExecuteDirect (
         'ALTER TABLE ZOO_ANIMAL_TAREFAS'
  +#13#10'ADD DATA_RESULTADO SYS$DATE' ) ;

 TryExecuteDirect (
        'ALTER TABLE ZOO_ANIMAL_TAREFAS'
 +#13#10'ALTER KZOO_TAREFA_RESULTADO1 POSITION 17,'
 +#13#10'ALTER PROTOCOLO_RESULTADO1   POSITION 18,'
 +#13#10'ALTER KZOO_TAREFA_RESULTADO2 POSITION 19,'
 +#13#10'ALTER PROTOCOLO_RESULTADO2   POSITION 20,'
 +#13#10'ALTER KZOO_TAREFA_RESULTADO3 POSITION 21,'
 +#13#10'ALTER PROTOCOLO_RESULTADO3   POSITION 22,'
 +#13#10'ALTER DATA_RESULTADO         POSITION 23' ) ;



 TryExecuteDirect (
        'ALTER TABLE ZOO_ANIMAL_TAREFAS ADD CONSTRAINT FKZOO_ANIMAL_TAREFAS_04 FOREIGN KEY (KZOO_TAREFA_RESULTADO1) REFERENCES ZOO_TAREFA_RESULTADOS (KZOO_TAREFA_RESULTADO) ON UPDATE CASCADE' ) ;

 TryExecuteDirect (
        'ALTER TABLE ZOO_ANIMAL_TAREFAS ADD CONSTRAINT FKZOO_ANIMAL_TAREFAS_05 FOREIGN KEY (KZOO_TAREFA_RESULTADO2) REFERENCES ZOO_TAREFA_RESULTADOS (KZOO_TAREFA_RESULTADO) ON UPDATE CASCADE' ) ;

 TryExecuteDirect (
        'ALTER TABLE ZOO_ANIMAL_TAREFAS ADD CONSTRAINT FKZOO_ANIMAL_TAREFAS_06 FOREIGN KEY (KZOO_TAREFA_RESULTADO3) REFERENCES ZOO_TAREFA_RESULTADOS (KZOO_TAREFA_RESULTADO) ON UPDATE CASCADE' ) ;

 ExecuteDirect (
        'COMMENT ON TABLE ZOO_TAREFA_RESULTADOS IS  ''Cadastro Resultados de Exames''' ) ;

 ExecuteDirect (
        'COMMENT ON COLUMN ZOO_RESULTADO_PROTOCOLOS.SYS$UI IS ''Usuário responsável pela inclusão''' ) ;

 ExecuteDirect (
        'COMMENT ON COLUMN ZOO_RESULTADO_PROTOCOLOS.SYS$DI IS  ''Data da Inclusão''' ) ;

 ExecuteDirect (
        'COMMENT ON COLUMN ZOO_RESULTADO_PROTOCOLOS.SYS$UU IS  ''Usuário responsável pela última alteração''' ) ;

 ExecuteDirect (
        'COMMENT ON COLUMN ZOO_RESULTADO_PROTOCOLOS.SYS$DU IS  ''Data da última alteração''' ) ;

 ExecuteDirect (
        'COMMENT ON TABLE ZOO_RESULTADO_PROTOCOLOS IS  ''Automação Protocolos x Resultados''' ) ;

 ExecuteDirect (
        'COMMENT ON COLUMN ZOO_TAREFA_RESULTADOS.SYS$UI IS  ''Usuário responsável pela inclusão''' ) ;

 ExecuteDirect (
        'COMMENT ON COLUMN ZOO_TAREFA_RESULTADOS.SYS$DI IS  ''Data da Inclusão''' ) ;

 ExecuteDirect (
        'COMMENT ON COLUMN ZOO_TAREFA_RESULTADOS.SYS$UU IS  ''Usuário responsável pela última alteração''' ) ;

 ExecuteDirect (
        'COMMENT ON COLUMN ZOO_TAREFA_RESULTADOS.SYS$DU IS  ''Data da última alteração''' ) ;

   ExecuteDirect (
        'CREATE OR ALTER PROCEDURE SYS$INIT_DIAGNOSTICOS('
  +#13#10'    PKCAD_FAZENDA TYPE OF SYS$FKGUID20_NN)'
  +#13#10'AS'
  +#13#10'declare vKDEF_DIAGNOSTICO type of SYS$FKGUID20_NN;'
  +#13#10'declare vCODIGO type of SYS$CODE_NN;'
  +#13#10'declare vNOME type of SYS$DESCR_NN;'
  +#13#10'declare vDESCRICAO type of SYS$BLOBTEXT;'
  +#13#10'declare vTIPODIAGNOSTICO type of SYS$INT;'
  +#13#10'declare vTIPOEVENTO type of SYS$INT;'
  +#13#10'declare vEVENTOID type of SYS$ST_TYPEID;'
  +#13#10'declare vPOR_QUARTO type of SYS$BOOL_F;'
  +#13#10'declare vATIVO type of SYS$BOOL_T;'
  +#13#10'declare vINTERNAL type of SYS$BOOL_F;'
  +#13#10'declare SYS$UI type of SYS$USERLOGIN ;'
  +#13#10'declare SYS$DI type of SYS$DATE ;'
  +#13#10'declare SYS$UU type of SYS$USERLOGIN ;'
  +#13#10'declare SYS$DU type of SYS$DATE ;'
  +#13#10'declare PATH VARCHAR( 256 );'
  +#13#10'begin'
  +#13#10''
  +#13#10''
  +#13#10'  PATH = SU$EXTRACTFILEPATH ( RDB$GET_CONTEXT( ''SYSTEM'', ''DB_NAME'' ) ) ;'
  +#13#10'  PATH = SU$EXTRACTFILEPATH ( SUBSTRING ( PATH FROM 1 FOR char_length( PATH )- 1 ) ) ;'
  +#13#10'  PATH = SU$EXTRACTFILEPATH ( SUBSTRING ( PATH FROM 1 FOR char_length( PATH )- 1 ) ) ;'
  +#13#10''
  +#13#10'  if ( SU$FILEEXISTS( PATH || ''CLAG5.DB'' ) <> 1) then'
  +#13#10'    exit ;'
  +#13#10''
  +#13#10'  SELECT KCAD_FAZENDA FROM CAD_FAZENDAS ROWS 1 INTO :pKCAD_FAZENDA ;'
  +#13#10''
  +#13#10'  FOR EXECUTE STATEMENT ('
  +#13#10'        ''SELECT '''
  +#13#10'      ||'' KDEF_DIAGNOSTICO, CODIGO, NOME, DESCRICAO, TIPODIAGNOSTICO, TIPOEVENTO, SYS$EVENTOID, POR_QUARTO, ATIVO, INTERNAL, SYS$UI, SYS$DI, SYS$UU, SYS$DU '''
  +#13#10'      ||''FROM DEF_DIAGNOSTICOS '''
  +#13#10'    ) ON EXTERNAL DATA SOURCE PATH || ''CLAG5.DB'''
  +#13#10'    WITH COMMON TRANSACTION'
  +#13#10'    INTO vKDEF_DIAGNOSTICO, vCODIGO, vNOME, vDESCRICAO, vTIPODIAGNOSTICO, vTIPOEVENTO, vEVENTOID, vPOR_QUARTO, vATIVO, vINTERNAL, SYS$UI, SYS$DI, SYS$UU, SYS$DU'
  +#13#10'   DO'
  +#13#10'     IF ( EXISTS (SELECT 1 FROM ZOO_DIAGNOSTICOS WHERE KCAD_FAZENDA = :pKCAD_FAZENDA  AND KDEF_DIAGNOSTICO = :vKDEF_DIAGNOSTICO ) ) THEN'
  +#13#10'        UPDATE ZOO_DIAGNOSTICOS'
  +#13#10'        SET'
  +#13#10'           CODIGO          = :vCODIGO,'
  +#13#10'           NOME            = :vNOME,'
  +#13#10'           DESCRICAO       = :vDESCRICAO,'
  +#13#10'           TIPODIAGNOSTICO = :vTIPODIAGNOSTICO,'
  +#13#10'           TIPOEVENTO      = :vTIPOEVENTO,'
  +#13#10'           SYS$EVENTOID    = :vEVENTOID,'
  +#13#10'           POR_QUARTO      = :vPOR_QUARTO,'
  +#13#10'           ATIVO           = :vATIVO,'
  +#13#10'           INTERNAL        = :vINTERNAL,'
  +#13#10'           SYS$UI          = :SYS$UI,'
  +#13#10'           SYS$DI          = :SYS$DI,'
  +#13#10'           SYS$UU          = :SYS$UU,'
  +#13#10'           SYS$DU          = :SYS$DU'
  +#13#10'        WHERE ( KCAD_FAZENDA = :pKCAD_FAZENDA  AND KDEF_DIAGNOSTICO = :vKDEF_DIAGNOSTICO )'
  +#13#10'          AND (   ( CODIGO          IS DISTINCT FROM :vCODIGO )'
  +#13#10'               OR ( NOME            IS DISTINCT FROM :vNOME )'
  +#13#10'               OR ( DESCRICAO       IS DISTINCT FROM :vDESCRICAO )'
  +#13#10'               OR ( TIPODIAGNOSTICO IS DISTINCT FROM :vTIPODIAGNOSTICO )'
  +#13#10'               OR ( TIPOEVENTO      IS DISTINCT FROM :vTIPOEVENTO )'
  +#13#10'               OR ( SYS$EVENTOID    IS DISTINCT FROM :vEVENTOID )'
  +#13#10'               OR ( POR_QUARTO      IS DISTINCT FROM :vPOR_QUARTO )'
  +#13#10'               OR ( ATIVO           IS DISTINCT FROM :vATIVO )'
  +#13#10'               OR ( INTERNAL        IS DISTINCT FROM :vINTERNAL )'
  +#13#10'               OR ( SYS$UI          IS DISTINCT FROM :SYS$UI )'
  +#13#10'               OR ( SYS$DI          IS DISTINCT FROM :SYS$DI )'
  +#13#10'               OR ( SYS$UU          IS DISTINCT FROM :SYS$UU )'
  +#13#10'               OR ( SYS$DU          IS DISTINCT FROM :SYS$DU )'
  +#13#10'              ) ;'
  +#13#10'     ELSE'
  +#13#10'       INSERT INTO ZOO_DIAGNOSTICOS ( KZOO_DIAGNOSTICO, KCAD_FAZENDA, CODIGO, NOME, DESCRICAO, TIPODIAGNOSTICO, TIPOEVENTO, SYS$EVENTOID, POR_QUARTO, ATIVO, INTERNAL, KDEF_DIAGNOSTICO, SYS$UI, SYS$DI, SYS$UU, SYS$DU  )'
  +#13#10'         VALUES ( GUID20(), :pKCAD_FAZENDA, :vCODIGO, :vNOME, :vDESCRICAO, :vTIPODIAGNOSTICO, :vTIPOEVENTO, :vEVENTOID, :vPOR_QUARTO, :vATIVO, :vINTERNAL, :vKDEF_DIAGNOSTICO, :SYS$UI, :SYS$DI, :SYS$UU, :SYS$DU  );'
  +#13#10''
  +#13#10'end' ) ;

 ExecuteDirect (
        'CREATE OR ALTER PROCEDURE SYS$INIT_TAREFA_ITENS('
 +#13#10'    PKCAD_FAZENDA TYPE OF SYS$FKGUID20_NN)'
 +#13#10'AS'
 +#13#10'declare vKDEF_TAREFA_ITEM type of SYS$FKGUID20_NN;'
 +#13#10'declare vKDEF_TAREFA type of SYS$FKGUID20_NN;'
 +#13#10'declare vITEM type of SYS$DESCR_NN;'
 +#13#10'declare vQTDE type of SYS$INT;'
 +#13#10'declare vATIVO type of SYS$BOOL;'
 +#13#10'declare vINTERNAL type of SYS$BOOL;'
 +#13#10'declare SYS$UI type of SYS$USERLOGIN ;'
 +#13#10'declare SYS$DI type of SYS$DATE ;'
 +#13#10'declare SYS$UU type of SYS$USERLOGIN ;'
 +#13#10'declare SYS$DU type of SYS$DATE ;'
 +#13#10'declare PATH VARCHAR( 256 );'
 +#13#10'begin'
 +#13#10''
 +#13#10'  PATH = SU$EXTRACTFILEPATH ( RDB$GET_CONTEXT( ''SYSTEM'', ''DB_NAME'' ) ) ;'
 +#13#10'  PATH = SU$EXTRACTFILEPATH ( SUBSTRING ( PATH FROM 1 FOR char_length( PATH )- 1 ) ) ;'
 +#13#10'  PATH = SU$EXTRACTFILEPATH ( SUBSTRING ( PATH FROM 1 FOR char_length( PATH )- 1 ) ) ;'
 +#13#10''
 +#13#10'  if ( SU$FILEEXISTS( PATH || ''CLAG5.DB'' ) <> 1) then'
 +#13#10'    exit ;'
 +#13#10''
 +#13#10'  FOR EXECUTE STATEMENT ('
 +#13#10'        ''SELECT '''
 +#13#10'      ||'' KDEF_TAREFA_ITEM, KDEF_TAREFA, ITEM, QTDE, ATIVO, INTERNAL, SYS$UI, SYS$DI, SYS$UU, SYS$DU '''
 +#13#10'      ||''FROM DEF_TAREFA_ITENS'''
 +#13#10'      ) ON EXTERNAL DATA SOURCE PATH || ''CLAG5.DB'''
 +#13#10'      WITH COMMON TRANSACTION'
 +#13#10'      INTO vKDEF_TAREFA_ITEM, vKDEF_TAREFA, vITEM, vQTDE, vATIVO, vINTERNAL, SYS$UI, SYS$DI, SYS$UU, SYS$DU'
 +#13#10'  DO'
 +#13#10'     IF ( EXISTS (SELECT 1 FROM ZOO_TAREFA_ITENS WHERE KDEF_TAREFA_ITEM = :vKDEF_TAREFA_ITEM ) ) THEN'
 +#13#10'        UPDATE ZOO_TAREFA_ITENS'
 +#13#10'         SET ITEM     = :vITEM,'
 +#13#10'             QTDE     = :vQTDE,'
 +#13#10'             ATIVO    = :vATIVO,'
 +#13#10'             INTERNAL = :vINTERNAL,'
 +#13#10'             SYS$UI   = :SYS$UI,'
 +#13#10'             SYS$DI   = :SYS$DI,'
 +#13#10'             SYS$UU   = :SYS$UU,'
 +#13#10'             SYS$DU   = :SYS$DU'
 +#13#10'        WHERE KDEF_TAREFA_ITEM = :vKDEF_TAREFA_ITEM'
 +#13#10'          AND (    (ITEM IS DISTINCT FROM :vITEM)'
 +#13#10'                OR (QTDE IS DISTINCT FROM :vQTDE)'
 +#13#10'                OR (ATIVO IS DISTINCT FROM :vATIVO)'
 +#13#10'                OR (INTERNAL IS DISTINCT FROM :vINTERNAL)'
 +#13#10'                OR (SYS$UI IS DISTINCT FROM :SYS$UI)'
 +#13#10'                OR (SYS$DI IS DISTINCT FROM :SYS$DI)'
 +#13#10'                OR (SYS$UU IS DISTINCT FROM :SYS$UU)'
 +#13#10'                OR (SYS$DU IS DISTINCT FROM :SYS$DU)'
 +#13#10'              ) ;'
 +#13#10'     ELSE'
 +#13#10'       INSERT INTO ZOO_TAREFA_ITENS ( KZOO_TAREFA_ITEM, KZOO_TAREFA, ITEM, QTDE, ATIVO, INTERNAL, KDEF_TAREFA_ITEM, SYS$UI, SYS$DI, SYS$UU, SYS$DU )'
 +#13#10'         VALUES ( GUID20(),'
 +#13#10'                 (SELECT KZOO_TAREFA FROM ZOO_TAREFAS WHERE KCAD_FAZENDA = :PKCAD_FAZENDA AND KDEF_TAREFA = :vKDEF_TAREFA),'
 +#13#10'                 :vITEM, :vQTDE, :VATIVO, :VINTERNAL, :vKDEF_TAREFA_ITEM, :SYS$UI, :SYS$DI, :SYS$UU, :SYS$DU );'
 +#13#10''
 +#13#10'end' ) ;

 ExecuteDirect(
         'CREATE OR ALTER PROCEDURE SYS$INIT_TAREFA_RESULTADOS('
  +#13#10'    PKCAD_FAZENDA TYPE OF SYS$FKGUID20_NN)'
  +#13#10'AS'
  +#13#10'declare vKDEF_TAREFA_RESULTADO type of SYS$FKGUID20_NN;'
  +#13#10'declare vKDEF_TAREFA type of SYS$FKGUID20_NN;'
  +#13#10'declare vNOME type of SYS$DESCR_NN;'
  +#13#10'declare vATIVO type of SYS$BOOL_F;'
  +#13#10'declare vINTERNAL type of SYS$BOOL_F;'
  +#13#10'declare SYS$UI type of SYS$USERLOGIN ;'
  +#13#10'declare SYS$DI type of SYS$DATE ;'
  +#13#10'declare SYS$UU type of SYS$USERLOGIN ;'
  +#13#10'declare SYS$DU type of SYS$DATE ;'
  +#13#10'declare PATH VARCHAR( 256 );'
  +#13#10'begin'
  +#13#10''
  +#13#10'  PATH = SU$EXTRACTFILEPATH ( RDB$GET_CONTEXT( ''SYSTEM'', ''DB_NAME'' ) ) ;'
  +#13#10'  PATH = SU$EXTRACTFILEPATH ( SUBSTRING ( PATH FROM 1 FOR char_length( PATH )- 1 ) ) ;'
  +#13#10'  PATH = SU$EXTRACTFILEPATH ( SUBSTRING ( PATH FROM 1 FOR char_length( PATH )- 1 ) ) ;'
  +#13#10''
  +#13#10'  if ( SU$FILEEXISTS( PATH || ''CLAG5.DB'' ) <> 1) then'
  +#13#10'    exit ;'
  +#13#10''
  +#13#10'  FOR EXECUTE STATEMENT ('
  +#13#10'        ''SELECT '''
  +#13#10'      ||'' KDEF_TAREFA_RESULTADO, KDEF_TAREFA, NOME, ATIVO, INTERNAL, SYS$UI, SYS$DI, SYS$UU, SYS$DU '''
  +#13#10'      ||''FROM DEF_TAREFA_RESULTADOS'''
  +#13#10'      ) ON EXTERNAL DATA SOURCE PATH || ''CLAG5.DB'''
  +#13#10'      WITH COMMON TRANSACTION'
  +#13#10'      INTO vKDEF_TAREFA_RESULTADO, vKDEF_TAREFA, vNOME, vATIVO, vINTERNAL, SYS$UI, SYS$DI, SYS$UU, SYS$DU'
  +#13#10'  DO'
  +#13#10'     IF ( EXISTS (SELECT 1 FROM ZOO_TAREFA_RESULTADOS WHERE KDEF_TAREFA_RESULTADO = :vKDEF_TAREFA_RESULTADO ) ) THEN'
  +#13#10'        UPDATE ZOO_TAREFA_RESULTADOS'
  +#13#10'         SET NOME     = :vNOME,'
  +#13#10'             ATIVO    = :vATIVO,'
  +#13#10'             INTERNAL = :vINTERNAL,'
  +#13#10'             SYS$UI   = :SYS$UI,'
  +#13#10'             SYS$DI   = :SYS$DI,'
  +#13#10'             SYS$UU   = :SYS$UU,'
  +#13#10'             SYS$DU   = :SYS$DU'
  +#13#10'        WHERE KDEF_TAREFA_RESULTADO = :vKDEF_TAREFA_RESULTADO'
  +#13#10'          AND (   (NOME IS DISTINCT FROM :vNOME)'
  +#13#10'                OR (ATIVO IS DISTINCT FROM :vATIVO)'
  +#13#10'                OR (INTERNAL IS DISTINCT FROM :vINTERNAL)'
  +#13#10'                OR (SYS$UI IS DISTINCT FROM :SYS$UI)'
  +#13#10'                OR (SYS$DI IS DISTINCT FROM :SYS$DI)'
  +#13#10'                OR (SYS$UU IS DISTINCT FROM :SYS$UU)'
  +#13#10'                OR (SYS$DU IS DISTINCT FROM :SYS$DU)'
  +#13#10'              ) ;'
  +#13#10'     ELSE'
  +#13#10'       INSERT INTO ZOO_TAREFA_RESULTADOS ( KZOO_TAREFA_RESULTADO, KZOO_TAREFA, NOME, ATIVO, INTERNAL, KDEF_TAREFA_RESULTADO, SYS$UI, SYS$DI, SYS$UU, SYS$DU )'
  +#13#10'         VALUES ( GUID20(), ('
  +#13#10'                 SELECT KZOO_TAREFA FROM ZOO_TAREFAS WHERE KCAD_FAZENDA = :PKCAD_FAZENDA AND KDEF_TAREFA = :vKDEF_TAREFA),'
  +#13#10'                 :vNOME, :vATIVO, :vINTERNAL, :vKDEF_TAREFA_RESULTADO, :SYS$UI, :SYS$DI, :SYS$UU, :SYS$DU );'
  +#13#10''
  +#13#10'end' ) ;

  ExecuteDirect (
         'CREATE OR ALTER PROCEDURE SYS$INIT_TAREFAS('
  +#13#10'    PKCAD_FAZENDA TYPE OF SYS$FKGUID20_NN)'
  +#13#10'AS'
  +#13#10'declare vKDEF_TAREFA type of SYS$FKGUID20_NN;'
  +#13#10'declare vCODIGO type of SYS$CODE_NN;'
  +#13#10'declare vNOME type of SYS$DESCR_NN;'
  +#13#10'declare vTIPOTAREFA type of SYS$INT;'
  +#13#10'declare vATIVO type of SYS$BOOL_T;'
  +#13#10'declare vINTERNAL type of SYS$BOOL_F;'
  +#13#10'declare vDESCARTELEITE type of SYS$INT;'
  +#13#10'declare vDESCARTECARNE type of SYS$INT;'
  +#13#10'declare SYS$UI type of SYS$USERLOGIN ;'
  +#13#10'declare SYS$DI type of SYS$DATE ;'
  +#13#10'declare SYS$UU type of SYS$USERLOGIN ;'
  +#13#10'declare SYS$DU type of SYS$DATE ;'
  +#13#10'declare PATH VARCHAR( 256 );'
  +#13#10'begin'
  +#13#10''
  +#13#10''
  +#13#10'  PATH = SU$EXTRACTFILEPATH ( RDB$GET_CONTEXT( ''SYSTEM'', ''DB_NAME'' ) ) ;'
  +#13#10'  PATH = SU$EXTRACTFILEPATH ( SUBSTRING ( PATH FROM 1 FOR char_length( PATH )- 1 ) ) ;'
  +#13#10'  PATH = SU$EXTRACTFILEPATH ( SUBSTRING ( PATH FROM 1 FOR char_length( PATH )- 1 ) ) ;'
  +#13#10''
  +#13#10'  if ( SU$FILEEXISTS( PATH || ''CLAG5.DB'' ) <> 1) then'
  +#13#10'    exit ;'
  +#13#10''
  +#13#10'  FOR EXECUTE STATEMENT ('
  +#13#10'       ''SELECT '''
  +#13#10'      ||'' KDEF_TAREFA, CODIGO, NOME, TIPOTAREFA, DESCARTELEITE, DESCARTECARNE, ATIVO, INTERNAL, SYS$UI, SYS$DI, SYS$UU, SYS$DU '''
  +#13#10'      ||'' FROM DEF_TAREFAS'''
  +#13#10'     ) ON EXTERNAL DATA SOURCE PATH || ''CLAG5.DB'''
  +#13#10'      WITH COMMON TRANSACTION'
  +#13#10'   INTO :vKDEF_TAREFA, :vCODIGO, :vNOME, :vTIPOTAREFA, :vDESCARTELEITE, :vDESCARTECARNE,  :vATIVO, :vINTERNAL, SYS$UI, SYS$DI, SYS$UU, SYS$DU'
  +#13#10'   DO'
  +#13#10'     IF ( EXISTS (SELECT 1 FROM ZOO_TAREFAS WHERE KCAD_FAZENDA = :pKCAD_FAZENDA AND KDEF_TAREFA = :vKDEF_TAREFA ) ) THEN'
  +#13#10'       UPDATE ZOO_TAREFAS'
  +#13#10'        SET'
  +#13#10'          CODIGO        = :vCODIGO,'
  +#13#10'          NOME          = :vNOME,'
  +#13#10'          TIPOTAREFA    = :vTIPOTAREFA,'
  +#13#10'          DESCARTELEITE = :vDESCARTELEITE,'
  +#13#10'          DESCARTECARNE = :vDESCARTECARNE,'
  +#13#10'          ATIVO         = :vATIVO,'
  +#13#10'          INTERNAL      = :vINTERNAL,'
  +#13#10'          SYS$UI        = :SYS$UI,'
  +#13#10'          SYS$DI        = :SYS$DI,'
  +#13#10'          SYS$UU        = :SYS$UU,'
  +#13#10'          SYS$DU        = :SYS$DU'
  +#13#10'       WHERE (KCAD_FAZENDA = :pKCAD_FAZENDA AND KDEF_TAREFA = :vKDEF_TAREFA)'
  +#13#10'          AND (    (CODIGO        IS DISTINCT FROM :vCODIGO)'
  +#13#10'                OR (NOME          IS DISTINCT FROM :vNOME)'
  +#13#10'                OR (TIPOTAREFA    IS DISTINCT FROM :vTIPOTAREFA)'
  +#13#10'                OR (DESCARTELEITE IS DISTINCT FROM :vDESCARTELEITE)'
  +#13#10'                OR (DESCARTECARNE IS DISTINCT FROM :vDESCARTECARNE)'
  +#13#10'                OR (ATIVO         IS DISTINCT FROM :vATIVO)'
  +#13#10'                OR (INTERNAL      IS DISTINCT FROM :vINTERNAL)'
  +#13#10'                OR (SYS$UI        IS DISTINCT FROM :SYS$UI)'
  +#13#10'                OR (SYS$DI        IS DISTINCT FROM :SYS$DI)'
  +#13#10'                OR (SYS$UU        IS DISTINCT FROM :SYS$UU)'
  +#13#10'                OR (SYS$DU        IS DISTINCT FROM :SYS$DU)'
  +#13#10'              ) ;'
  +#13#10'   ELSE'
  +#13#10'     INSERT INTO ZOO_TAREFAS ( KZOO_TAREFA, KCAD_FAZENDA, CODIGO, NOME, TIPOTAREFA, DESCARTELEITE, DESCARTECARNE, ATIVO, INTERNAL, KDEF_TAREFA, SYS$UI, SYS$DI, SYS$UU, SYS$DU )'
  +#13#10'       VALUES ( GUID20(), :pKCAD_FAZENDA, :vCODIGO, :vNOME, :vTIPOTAREFA, :vDESCARTELEITE, :vDESCARTECARNE, :vATIVO, :vINTERNAL, :vKDEF_TAREFA, :SYS$UI, :SYS$DI, :SYS$UU, :SYS$DU );'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE SYS$INIT_TAREFA_ITENS :pKCAD_FAZENDA ;'
  +#13#10'  EXECUTE PROCEDURE SYS$INIT_TAREFA_RESULTADOS :pKCAD_FAZENDA ;'
  +#13#10''
  +#13#10'end' ) ;

end;

procedure TDBZootecnicoUpdate._5_000_54;
begin
   ExecuteDirect (
         'CREATE OR ALTER PROCEDURE SYS$INIT_CATEGORIAS('
  +#13#10'    PKCAD_FAZENDA TYPE OF SYS$FKGUID20_NN)'
  +#13#10'AS'
  +#13#10'declare variable vkdef_cfgcategoria type of sys$fkGUID20_nn;'
  +#13#10'declare variable vdescricao type of sys$descr_nn;'
  +#13#10'declare variable vidade_inferior type of sys$int;'
  +#13#10'declare variable vidade_superior type of sys$int;'
  +#13#10'declare variable vstatus type of sys$int;'
  +#13#10'declare variable vdel_inferior type of sys$int;'
  +#13#10'declare variable vdel_superior type of sys$int;'
  +#13#10'declare variable vnl_inferior type of sys$int;'
  +#13#10'declare variable vnl_superior type of sys$int;'
  +#13#10'declare variable vativo type of sys$bool_t;'
  +#13#10'declare variable vinternal type of sys$bool_f;'
  +#13#10'declare variable vvalor type of sys$float;'
  +#13#10'declare SYS$DU type of SYS$DATE ;'
  +#13#10'declare PATH VARCHAR( 256 );'
  +#13#10'begin'
  +#13#10''
  +#13#10''
  +#13#10'  PATH = SU$EXTRACTFILEPATH ( RDB$GET_CONTEXT( ''SYSTEM'', ''DB_NAME'' ) ) ;'
  +#13#10'  PATH = SU$EXTRACTFILEPATH ( SUBSTRING ( PATH FROM 1 FOR char_length( PATH )- 1 ) ) ;'
  +#13#10'  PATH = SU$EXTRACTFILEPATH ( SUBSTRING ( PATH FROM 1 FOR char_length( PATH )- 1 ) ) ;'
  +#13#10''
  +#13#10'  if ( SU$FILEEXISTS( PATH || ''CLAG5.DB'' ) <> 1) then'
  +#13#10'    exit ;'
  +#13#10''
  +#13#10'  FOR EXECUTE STATEMENT ('
  +#13#10'        ''SELECT '''
  +#13#10'      ||'' KDEF_CFGCATEGORIA, DESCRICAO, IDADE_INFERIOR, IDADE_SUPERIOR, STATUS, '''
  +#13#10'      ||'' DEL_INFERIOR, DEL_SUPERIOR, NL_INFERIOR, NL_SUPERIOR, VALOR,  ATIVO, INTERNAL, SYS$DU '''
  +#13#10'      ||''FROM DEF_CFGCATEGORIAS'''
  +#13#10'      ) ON EXTERNAL DATA SOURCE PATH || ''CLAG5.DB'''
  +#13#10'      WITH COMMON TRANSACTION'
  +#13#10'      INTO vKDEF_CFGCATEGORIA, vDESCRICAO, vIDADE_INFERIOR, vIDADE_SUPERIOR, vSTATUS, vDEL_INFERIOR, vDEL_SUPERIOR, vNL_INFERIOR, vNL_SUPERIOR, vVALOR, vATIVO, vINTERNAL, SYS$DU'
  +#13#10'  DO'
  +#13#10'     IF ( EXISTS (SELECT 1 FROM ZOO_CFGCATEGORIAS WHERE KCAD_FAZENDA = :pKCAD_FAZENDA AND KDEF_CFGCATEGORIA = :vKDEF_CFGCATEGORIA ) ) THEN'
  +#13#10'        UPDATE ZOO_CFGCATEGORIAS'
  +#13#10'        SET'
  +#13#10'            DESCRICAO = :vDESCRICAO,'
  +#13#10'            IDADE_INFERIOR = :vIDADE_INFERIOR,'
  +#13#10'            IDADE_SUPERIOR = :vIDADE_SUPERIOR,'
  +#13#10'            STATUS = :vSTATUS,'
  +#13#10'            DEL_INFERIOR = :vDEL_INFERIOR,'
  +#13#10'            DEL_SUPERIOR = :vDEL_SUPERIOR,'
  +#13#10'            NL_INFERIOR = :vNL_INFERIOR,'
  +#13#10'            NL_SUPERIOR = :vNL_SUPERIOR,'
  +#13#10'            VALOR = :vVALOR,'
  +#13#10'            ATIVO = :vATIVO,'
  +#13#10'            INTERNAL = :vINTERNAL,'
  +#13#10'            SYS$DU    = :SYS$DU'
  +#13#10'         WHERE ( KCAD_FAZENDA = :pKCAD_FAZENDA  AND KDEF_CFGCATEGORIA = :vKDEF_CFGCATEGORIA )'
  +#13#10'          AND ( (DESCRICAO      IS DISTINCT FROM :vDESCRICAO )'
  +#13#10'             OR (IDADE_INFERIOR IS DISTINCT FROM :vIDADE_INFERIOR )'
  +#13#10'             OR (IDADE_SUPERIOR IS DISTINCT FROM :vIDADE_SUPERIOR )'
  +#13#10'             OR (STATUS         IS DISTINCT FROM :vSTATUS )'
  +#13#10'             OR (DEL_INFERIOR   IS DISTINCT FROM :vDEL_INFERIOR )'
  +#13#10'             OR (DEL_SUPERIOR   IS DISTINCT FROM :vDEL_SUPERIOR )'
  +#13#10'             OR (NL_INFERIOR    IS DISTINCT FROM :vNL_INFERIOR )'
  +#13#10'             OR (NL_SUPERIOR    IS DISTINCT FROM :vNL_SUPERIOR )'
  +#13#10'             OR (VALOR          IS DISTINCT FROM :vVALOR )'
  +#13#10'             OR (ATIVO          IS DISTINCT FROM :vATIVO )'
  +#13#10'             OR (INTERNAL       IS DISTINCT FROM :vINTERNAL )'
  +#13#10'             OR (SYS$DU         IS DISTINCT FROM :SYS$DU )'
  +#13#10'            ) ;'
  +#13#10'     ELSE'
  +#13#10'       INSERT INTO ZOO_CFGCATEGORIAS ( KZOO_CFGCATEGORIA, KCAD_FAZENDA, DESCRICAO, IDADE_INFERIOR, IDADE_SUPERIOR, STATUS, DEL_INFERIOR, DEL_SUPERIOR, NL_INFERIOR, NL_SUPERIOR, VALOR, KDEF_CFGCATEGORIA, ATIVO, INTERNAL )'
  +#13#10'       VALUES ( GUID20(), :pKCAD_FAZENDA, :vDESCRICAO, :vIDADE_INFERIOR, :vIDADE_SUPERIOR, :vSTATUS, :vDEL_INFERIOR, :vDEL_SUPERIOR, :vNL_INFERIOR, :vNL_SUPERIOR, :vVALOR, :vKDEF_CFGCATEGORIA, :vATIVO, :vINTERNAL );'
  +#13#10''
  +#13#10'end' ) ;


   ExecuteDirect (
         'CREATE OR ALTER PROCEDURE SYS$INIT_DIAGNOSTICOS('
  +#13#10'    PKCAD_FAZENDA TYPE OF SYS$FKGUID20_NN)'
  +#13#10'AS'
  +#13#10'declare vKDEF_DIAGNOSTICO type of SYS$FKGUID20_NN;'
  +#13#10'declare vCODIGO type of SYS$CODE_NN;'
  +#13#10'declare vNOME type of SYS$DESCR_NN;'
  +#13#10'declare vDESCRICAO type of SYS$BLOBTEXT;'
  +#13#10'declare vTIPODIAGNOSTICO type of SYS$INT;'
  +#13#10'declare vTIPOEVENTO type of SYS$INT;'
  +#13#10'declare vEVENTOID type of SYS$ST_TYPEID;'
  +#13#10'declare vPOR_QUARTO type of SYS$BOOL_F;'
  +#13#10'declare vATIVO type of SYS$BOOL_T;'
  +#13#10'declare vINTERNAL type of SYS$BOOL_F;'
  +#13#10'declare SYS$DU type of SYS$DATE ;'
  +#13#10'declare PATH VARCHAR( 256 );'
  +#13#10'begin'
  +#13#10''
  +#13#10''
  +#13#10'  PATH = SU$EXTRACTFILEPATH ( RDB$GET_CONTEXT( ''SYSTEM'', ''DB_NAME'' ) ) ;'
  +#13#10'  PATH = SU$EXTRACTFILEPATH ( SUBSTRING ( PATH FROM 1 FOR char_length( PATH )- 1 ) ) ;'
  +#13#10'  PATH = SU$EXTRACTFILEPATH ( SUBSTRING ( PATH FROM 1 FOR char_length( PATH )- 1 ) ) ;'
  +#13#10''
  +#13#10'  if ( SU$FILEEXISTS( PATH || ''CLAG5.DB'' ) <> 1) then'
  +#13#10'    exit ;'
  +#13#10''
  +#13#10'  SELECT KCAD_FAZENDA FROM CAD_FAZENDAS ROWS 1 INTO :pKCAD_FAZENDA ;'
  +#13#10''
  +#13#10'  FOR EXECUTE STATEMENT ('
  +#13#10'        ''SELECT '''
  +#13#10'      ||'' KDEF_DIAGNOSTICO, CODIGO, NOME, DESCRICAO, TIPODIAGNOSTICO, TIPOEVENTO, SYS$EVENTOID, POR_QUARTO, ATIVO, INTERNAL, SYS$DU '''
  +#13#10'      ||''FROM DEF_DIAGNOSTICOS '''
  +#13#10'    ) ON EXTERNAL DATA SOURCE PATH || ''CLAG5.DB'''
  +#13#10'    WITH COMMON TRANSACTION'
  +#13#10'    INTO vKDEF_DIAGNOSTICO, vCODIGO, vNOME, vDESCRICAO, vTIPODIAGNOSTICO, vTIPOEVENTO, vEVENTOID, vPOR_QUARTO, vATIVO, vINTERNAL, SYS$DU'
  +#13#10'   DO'
  +#13#10'     IF ( EXISTS (SELECT 1 FROM ZOO_DIAGNOSTICOS WHERE KCAD_FAZENDA = :pKCAD_FAZENDA  AND KDEF_DIAGNOSTICO = :vKDEF_DIAGNOSTICO ) ) THEN'
  +#13#10'        UPDATE ZOO_DIAGNOSTICOS'
  +#13#10'        SET'
  +#13#10'           CODIGO     = :vCODIGO,'
  +#13#10'           NOME       = :vNOME,'
  +#13#10'           DESCRICAO  = :vDESCRICAO,'
  +#13#10'           POR_QUARTO = :vPOR_QUARTO,'
  +#13#10'           ATIVO      = :vATIVO,'
  +#13#10'           INTERNAL   = :vINTERNAL,'
  +#13#10'           SYS$DU     = :SYS$DU'
  +#13#10'        WHERE ( KCAD_FAZENDA = :pKCAD_FAZENDA  AND KDEF_DIAGNOSTICO = :vKDEF_DIAGNOSTICO )'
  +#13#10'          AND (   ( CODIGO     IS DISTINCT FROM :vCODIGO )'
  +#13#10'               OR ( NOME       IS DISTINCT FROM :vNOME )'
  +#13#10'               OR ( DESCRICAO  IS DISTINCT FROM :vDESCRICAO )'
  +#13#10'               OR ( POR_QUARTO IS DISTINCT FROM :vPOR_QUARTO )'
  +#13#10'               OR ( ATIVO      IS DISTINCT FROM :vATIVO )'
  +#13#10'               OR ( INTERNAL   IS DISTINCT FROM :vINTERNAL )'
  +#13#10'               OR ( SYS$DU     IS DISTINCT FROM :SYS$DU )'
  +#13#10'              ) ;'
  +#13#10'     ELSE'
  +#13#10'       INSERT INTO ZOO_DIAGNOSTICOS ( KZOO_DIAGNOSTICO, KCAD_FAZENDA, CODIGO, NOME, DESCRICAO, TIPODIAGNOSTICO, TIPOEVENTO, SYS$EVENTOID, POR_QUARTO, ATIVO, INTERNAL, KDEF_DIAGNOSTICO )'
  +#13#10'         VALUES ( GUID20(), :pKCAD_FAZENDA, :vCODIGO, :vNOME, :vDESCRICAO, :vTIPODIAGNOSTICO, :vTIPOEVENTO, :vEVENTOID, :vPOR_QUARTO, :vATIVO, :vINTERNAL, :vKDEF_DIAGNOSTICO );'
  +#13#10''
  +#13#10'end' ) ;

end;

procedure TDBZootecnicoUpdate._5_000_52;
begin
   TryExecuteDirect (
      'ALTER TABLE ZOO_DIAGNOSTICOS'
    +#13#10'ADD POR_QUARTO SYS$BOOL_F,'
    +#13#10'ALTER POR_QUARTO POSITION 9' )  ;

   TryExecuteDirect (
      'CREATE DOMAIN ZOO$QUARTO AS SMALLINT') ;

   TryExecuteDirect (
         'ALTER TABLE ZOO_ANIMAL_DIAGNOSTICOS'
  +#13#10'ADD QUARTO ZOO$QUARTO,'
  +#13#10'ALTER QUARTO POSITION 6' ) ;

   TryExecuteDirect (
         'CREATE OR ALTER PROCEDURE SYS$INIT_DIAGNOSTICOS('
  +#13#10'    PKCAD_FAZENDA TYPE OF SYS$FKGUID20_NN)'
  +#13#10'AS'
  +#13#10'declare vKDEF_DIAGNOSTICO type of SYS$FKGUID20_NN;'
  +#13#10'declare vCODIGO type of SYS$CODE_NN;'
  +#13#10'declare vNOME type of SYS$DESCR_NN;'
  +#13#10'declare vDESCRICAO type of SYS$BLOBTEXT;'
  +#13#10'declare vTIPODIAGNOSTICO type of SYS$INT;'
  +#13#10'declare vTIPOEVENTO type of SYS$INT;'
  +#13#10'declare vEVENTOID type of SYS$ST_TYPEID;'
  +#13#10'declare vPOR_QUARTO type of SYS$BOOL_F;'
  +#13#10'declare vATIVO type of SYS$BOOL_T;'
  +#13#10'declare vINTERNAL type of SYS$BOOL_F;'
  +#13#10'declare SYS$DU type of SYS$DATE ;'
  +#13#10'declare PATH VARCHAR( 256 );'
  +#13#10'begin'
  +#13#10''
  +#13#10''
  +#13#10'  PATH = SU$EXTRACTFILEPATH ( RDB$GET_CONTEXT( ''SYSTEM'', ''DB_NAME'' ) ) ;'
  +#13#10'  PATH = SU$EXTRACTFILEPATH ( SUBSTRING ( PATH FROM 1 FOR char_length( PATH )- 1 ) ) ;'
  +#13#10'  PATH = SU$EXTRACTFILEPATH ( SUBSTRING ( PATH FROM 1 FOR char_length( PATH )- 1 ) ) ;'
  +#13#10''
  +#13#10'  if ( SU$FILEEXISTS( PATH || ''CLAG5.DB'' ) <> 1) then'
  +#13#10'    exit ;'
  +#13#10''
  +#13#10'  SELECT KCAD_FAZENDA FROM CAD_FAZENDAS ROWS 1 INTO :pKCAD_FAZENDA ;'
  +#13#10''
  +#13#10'  FOR EXECUTE STATEMENT ('
  +#13#10'        ''SELECT '''
  +#13#10'      ||'' KDEF_DIAGNOSTICO, CODIGO, NOME, DESCRICAO, TIPODIAGNOSTICO, TIPOEVENTO, SYS$EVENTOID, POR_QUARTO, ATIVO, INTERNAL, SYS$DU '''
  +#13#10'      ||''FROM DEF_DIAGNOSTICOS '''
  +#13#10'    ) ON EXTERNAL DATA SOURCE PATH || ''CLAG5.DB'''
  +#13#10'    WITH COMMON TRANSACTION'
  +#13#10'    INTO vKDEF_DIAGNOSTICO, vCODIGO, vNOME, vDESCRICAO, vTIPODIAGNOSTICO, vTIPOEVENTO, vEVENTOID, vPOR_QUARTO, vATIVO, vINTERNAL, SYS$DU'
  +#13#10'   DO'
  +#13#10'     IF ( EXISTS (SELECT 1 FROM ZOO_DIAGNOSTICOS WHERE KCAD_FAZENDA = :pKCAD_FAZENDA  AND KDEF_DIAGNOSTICO = :vKDEF_DIAGNOSTICO ) ) THEN'
  +#13#10'        UPDATE ZOO_DIAGNOSTICOS'
  +#13#10'        SET'
  +#13#10'           CODIGO    = :vCODIGO,'
  +#13#10'           NOME      = :vNOME,'
  +#13#10'           DESCRICAO = :vDESCRICAO,'
  +#13#10'           POR_QUARTO = :vPOR_QUARTO,'
  +#13#10'           SYS$DU    = :SYS$DU'
  +#13#10'        WHERE ( KCAD_FAZENDA = :pKCAD_FAZENDA  AND KDEF_DIAGNOSTICO = :vKDEF_DIAGNOSTICO )'
  +#13#10'          AND ( (SYS$DU IS NULL) OR (SYS$DU < :SYS$DU) ) ;'
  +#13#10'     ELSE'
  +#13#10'       INSERT INTO ZOO_DIAGNOSTICOS ( KZOO_DIAGNOSTICO, KCAD_FAZENDA, CODIGO, NOME, DESCRICAO, TIPODIAGNOSTICO, TIPOEVENTO, SYS$EVENTOID, POR_QUARTO, ATIVO, INTERNAL, KDEF_DIAGNOSTICO )'
  +#13#10'         VALUES ( GUID20(), :pKCAD_FAZENDA, :vCODIGO, :vNOME, :vDESCRICAO, :vTIPODIAGNOSTICO, :vTIPOEVENTO, :vEVENTOID, :vPOR_QUARTO, :vATIVO, :vINTERNAL, :vKDEF_DIAGNOSTICO );'
  +#13#10''
  +#13#10'end'  ) ;

end;

procedure TDBZootecnicoUpdate._5_000_50;
begin

          ExecuteDirect (
         'CREATE OR ALTER PROCEDURE DOIMP$IDEAGRI_CADASTRO('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    IDEAGRI VARCHAR(1024) COLLATE ISO8859_1,'
  +#13#10'    ACCEPT_NULL_BIRTHDATE SYS$BOOL,'
  +#13#10'    CODIGO_LOTE SYS$INT)'
  +#13#10'AS'
  +#13#10'declare brinco varchar(10) not null;'
  +#13#10'declare nome_estab varchar(60);'
  +#13#10'declare nome_completo varchar(60);'
  +#13#10'declare registro varchar(15);'
  +#13#10'declare dtnasc date;'
  +#13#10'declare pai varchar(8);'
  +#13#10'declare nome_pai varchar(40);'
  +#13#10'declare registro_pai varchar(15);'
  +#13#10'declare pd_pai varchar(5);'
  +#13#10'declare mae varchar(10);'
  +#13#10'declare nome_mae varchar(40);'
  +#13#10'declare registro_mae varchar(15);'
  +#13#10'declare dtorigem date;'
  +#13#10'declare local_origem varchar(20);'
  +#13#10'declare preco_compra numeric(15,2);'
  +#13#10'declare dtdesc date;'
  +#13#10'declare razao char(3);'
  +#13#10'declare motivo char(3);'
  +#13#10'declare preco_venda numeric(15,2);'
  +#13#10'declare comprador varchar(40);'
  +#13#10'declare raca char(3);'
  +#13#10'declare gsangue smallint;'
  +#13#10'declare retiro char(2);'
  +#13#10'declare lote char(2);'
  +#13#10'declare nucleo char(4);'
  +#13#10'declare rebanho varchar(5);'
  +#13#10'declare vaca varchar(8);'
  +#13#10'declare avo_paterno varchar(40);'
  +#13#10'declare reg_avo_paterno varchar(15);'
  +#13#10'declare avo_paterna varchar(40);'
  +#13#10'declare reg_avo_paterna varchar(15);'
  +#13#10'declare avo_materno varchar(40);'
  +#13#10'declare reg_avo_materno varchar(15);'
  +#13#10'declare avo_materna varchar(40);'
  +#13#10'declare reg_avo_materna varchar(15);'
  +#13#10'declare touro1 varchar(8);'
  +#13#10'declare touro2 varchar(8);'
  +#13#10'declare touro3 varchar(8);'
  +#13#10'declare touro4 varchar(8);'
  +#13#10'declare te char(2);'
  +#13#10'declare lote1 char(2);'
  +#13#10'declare data1 date;'
  +#13#10'declare lote2 char(2);'
  +#13#10'declare data2 date;'
  +#13#10'declare lote3 char(2);'
  +#13#10'declare data3 date;'
  +#13#10'declare lote4 char(2);'
  +#13#10'declare data4 date;'
  +#13#10'declare lote5 char(2);'
  +#13#10'declare data5 date;'
  +#13#10'declare lote6 char(2);'
  +#13#10'declare data6 date;'
  +#13#10'declare lote7 char(2);'
  +#13#10'declare data7 date;'
  +#13#10'declare lote8 char(2);'
  +#13#10'declare data8 date;'
  +#13#10'declare status varchar(3) not null;'
  +#13#10'declare criador varchar(40);'
  +#13#10'declare cidcria varchar(25);'
  +#13#10'declare codigo1 char(3);'
  +#13#10'declare codigo2 char(3);'
  +#13#10'declare codigo3 char(3);'
  +#13#10'declare persiste integer;'
  +#13#10'declare potencial integer;'
  +#13#10'declare SQL_WHERE varchar(100) = '''' ;'
  +#13#10'declare LF_ char;'
  +#13#10'begin'
  +#13#10''
  +#13#10'  LF_ = ASCII_CHAR(10) ;'
  +#13#10'  DELETE FROM IMP$CADASTRO ;'
  +#13#10''
  +#13#10'  if ( ACCEPT_NULL_BIRTHDATE = ''F'' ) THEN'
  +#13#10'     SQL_WHERE = '' AND A.DTNASCIMENTO IS NOT NULL'' ;'
  +#13#10''
  +#13#10'  FOR EXECUTE STATEMENT'
  +#13#10'    (       ''SELECT A.CDANIMAL, (trim(A.NUMERO) || ''''[*]'''' || coalesce('''' '''' || A.NOME, '''''''')), A.NOMECOMPLETO, A.REGASSOCRACA, A.DTNASCIMENTO, '''
  +#13#10'      ||LF_||''P.CDANIMAL,  P.nomecompleto, P.regassocraca, NULL, '''
  +#13#10'      ||LF_||''M.CDANIMAL,  M.nomecompleto, M.regassocraca, '''
  +#13#10'      ||LF_||''NULL,NULL,NULL, '''
  +#13#10'      ||LF_||''A.DTBAIXA, IIF(A.DTBAIXA IS NOT NULL, ''''DES'''', NULL), A.cdmotivobaixa, '''
  +#13#10'      ||LF_||''NULL,NULL, '''
  +#13#10'      ||LF_||''(SELECT FIRST 1'''
  +#13#10'      ||LF_||''  CASE'''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 175 ) THEN ''''PDS'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 290, 300, 340 ) THEN ''''GIR'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 310 ) THEN ''''GHL'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 365 ) THEN ''''HPB'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 385 ) THEN ''''JER'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 635 ) THEN ''''HPV'''' '''
  +#13#10'      ||LF_||''    WHEN AR.CDRACA IN ( 565 ) THEN ''''SIM'''' '''
  +#13#10'      ||LF_||''  ELSE'''
  +#13#10'      ||LF_||''    ''''XX'''' '''
  +#13#10'      ||LF_||''  END'''
  +#13#10'      ||LF_||''FROM ANIMALRACA AR'''
  +#13#10'      ||LF_||''WHERE AR.CDANIMALRACA = A.CDANIMAL'''
  +#13#10'      ||LF_||''ORDER BY AR.PERCENTUAL DESC'''
  +#13#10'      ||LF_||'') RACA, '''
  +#13#10'      ||LF_||''CASE '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (1,2,3,4) THEN ''''8'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (5,6,7,8) THEN ''''1'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (9,10,11,12) THEN ''''2'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (13,14,15,16) THEN ''''3'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (17,18,19,20) THEN ''''4'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento IN (21,22,23,24) THEN ''''5'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdgraucruzamento > 24 THEN ''''5'''' '''
  +#13#10'      ||LF_||''END, '''
  +#13#10'      ||LF_||''A.CDSETOR, LOTE.DESCRICAO, NULL, NULL, NULL, '''
  +#13#10'      ||LF_||''NULL, NULL,NULL,NULL, '''
  +#13#10'      ||LF_||''NULL, NULL,NULL,NULL, '''
  +#13#10'      ||LF_||''NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL, '''
  +#13#10'      ||LF_||''NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL, '''
  +#13#10'      ||LF_||''CASE '''
  +#13#10'      ||LF_||''    WHEN A.cdcategoria = 1 THEN ''''BEZ'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdcategoria = 6 THEN ''''NOV'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdcategoria = 7 AND A.matrizseca = 0 THEN ''''VL'''' '''
  +#13#10'      ||LF_||''    WHEN A.cdcategoria = 7 AND A.matrizseca = 1 THEN ''''VS'''' '''
  +#13#10'      ||LF_||''    ELSE IIF( A.DTBAIXA IS NULL,  ''''BEZ'''', ''''DES'''' )'''
  +#13#10'      ||LF_||''END, '''
  +#13#10'      ||LF_||''NULL, '''
  +#13#10'      ||LF_||''NULL,NULL,NULL,NULL,NULL,NULL '''
  +#13#10'      ||LF_||''FROM ANIMAL A '''
  +#13#10'      ||LF_||''LEFT JOIN ANIMAL P ON P.cdanimal = A.cdpai '''
  +#13#10'      ||LF_||''LEFT JOIN ANIMAL M ON M.cdanimal = A.cdmae '''
  +#13#10'      ||LF_||''LEFT JOIN SP_GRUPOANIMALESPECIFICO( CURRENT_DATE, '' || COALESCE( :CODIGO_LOTE, -1 ) || '', A.CDANIMAL ) LOTE ON 1=1 '''
  +#13#10'      ||LF_||''WHERE A.SEXO = ''''F'''' AND A.ANIMALREBANHO = 1'' || SQL_WHERE'
  +#13#10'    )'
  +#13#10'  ON EXTERNAL DATA SOURCE :IDEAGRI'
  +#13#10'  WITH COMMON TRANSACTION'
  +#13#10'  INTO'
  +#13#10'     :BRINCO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,'
  +#13#10'     :PD_PAI,:MAE,:NOME_MAE,:REGISTRO_MAE,:DTORIGEM,:LOCAL_ORIGEM,:PRECO_COMPRA,:DTDESC,:RAZAO,'
  +#13#10'     :MOTIVO,:PRECO_VENDA,:COMPRADOR,:RACA,:GSANGUE,:RETIRO,:LOTE,:NUCLEO,:REBANHO,:VACA,'
  +#13#10'     :AVO_PATERNO,:REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,'
  +#13#10'     :AVO_MATERNA,:REG_AVO_MATERNA,:TOURO1,:TOURO2,:TOURO3,:TOURO4,:TE,:LOTE1,:DATA1,:LOTE2,:DATA2,'
  +#13#10'     :LOTE3,:DATA3,:LOTE4,:DATA4,:LOTE5,:DATA5,:LOTE6,:DATA6,:LOTE7,:DATA7,:LOTE8,:DATA8,:STATUS,:CRIADOR,'
  +#13#10'     :CIDCRIA,:CODIGO1,:CODIGO2,:CODIGO3,:PERSISTE,:POTENCIAL'
  +#13#10'  DO'
  +#13#10'  begin'
  +#13#10''
  +#13#10'  -- SELECT first 1 COMPOSICAO from doimp$ideagri_raca(:RACA) into :RACA;'
  +#13#10''
  +#13#10'   INSERT INTO IMP$CADASTRO'
  +#13#10'     ('
  +#13#10'       BRINCO,NOME_ESTAB,NOME_COMPLETO,REGISTRO,DTNASC,PAI,NOME_PAI,REGISTRO_PAI,'
  +#13#10'       PD_PAI,MAE,NOME_MAE,REGISTRO_MAE,DTORIGEM,LOCAL_ORIGEM,PRECO_COMPRA,DTDESC,RAZAO,'
  +#13#10'       MOTIVO,PRECO_VENDA,COMPRADOR,RACA,GSANGUE,RETIRO,LOTE,NUCLEO,REBANHO,VACA,'
  +#13#10'       AVO_PATERNO,REG_AVO_PATERNO,AVO_PATERNA,REG_AVO_PATERNA,AVO_MATERNO,REG_AVO_MATERNO,'
  +#13#10'       AVO_MATERNA,REG_AVO_MATERNA,TOURO1,TOURO2,TOURO3,TOURO4,TE,LOTE1,DATA1,LOTE2,DATA2,'
  +#13#10'       LOTE3,DATA3,LOTE4,DATA4,LOTE5,DATA5,LOTE6,DATA6,LOTE7,DATA7,LOTE8,DATA8,STATUS,CRIADOR,'
  +#13#10'       CIDCRIA,CODIGO1,CODIGO2,CODIGO3,PERSISTE,POTENCIAL'
  +#13#10'     )'
  +#13#10'   VALUES'
  +#13#10'     ('
  +#13#10'      :BRINCO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,'
  +#13#10'      :PD_PAI,:MAE,:NOME_MAE,:REGISTRO_MAE,:DTORIGEM,:LOCAL_ORIGEM,:PRECO_COMPRA,:DTDESC,:RAZAO,'
  +#13#10'      :MOTIVO,:PRECO_VENDA,:COMPRADOR,:RACA,:GSANGUE,:RETIRO,:LOTE,:NUCLEO,:REBANHO,:VACA,'
  +#13#10'      :AVO_PATERNO,:REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,'
  +#13#10'      :AVO_MATERNA,:REG_AVO_MATERNA,:TOURO1,:TOURO2,:TOURO3,:TOURO4,:TE,:LOTE1,:DATA1,:LOTE2,:DATA2,'
  +#13#10'      :LOTE3,:DATA3,:LOTE4,:DATA4,:LOTE5,:DATA5,:LOTE6,:DATA6,:LOTE7,:DATA7,:LOTE8,:DATA8,:STATUS,:CRIADOR,'
  +#13#10'      :CIDCRIA,:CODIGO1,:CODIGO2,:CODIGO3,:PERSISTE,:POTENCIAL'
  +#13#10'     ) ;'
  +#13#10'   end'
  +#13#10'end' ) ;

         ExecuteDirect (
        'CREATE OR ALTER PROCEDURE DOIMP$IDEAGRI_CADTOURO('
 +#13#10'     KCAD_FAZENDA SYS$FKGUID20,'
 +#13#10'     IDEAGRI VARCHAR(1024) COLLATE ISO8859_1)'
 +#13#10'AS'
 +#13#10'declare codigo varchar(8) not null;'
 +#13#10'declare nome_estab varchar(60);'
 +#13#10'declare nome_completo varchar(60);'
 +#13#10'declare registro varchar(15);'
 +#13#10'declare dtnasc date;'
 +#13#10'declare pai varchar(8);'
 +#13#10'declare nome_pai varchar(40);'
 +#13#10'declare registro_pai varchar(15);'
 +#13#10'declare mae varchar(10);'
 +#13#10'declare nome_mae varchar(40);'
 +#13#10'declare registro_mae varchar(15);'
 +#13#10'declare leite integer;'
 +#13#10'declare tipo numeric(15,2);'
 +#13#10'declare ubere numeric(15,2);'
 +#13#10'declare pernape numeric(15,2);'
 +#13#10'declare parto integer;'
 +#13#10'declare qestoque integer;'
 +#13#10'declare qusada smallint;'
 +#13#10'declare concepcao integer;'
 +#13#10'declare valor numeric(15,2);'
 +#13#10'declare status char(1) not null;'
 +#13#10'declare gsangue smallint;'
 +#13#10'declare raca char(3);'
 +#13#10'declare retiro char(2);'
 +#13#10'declare lote char(2);'
 +#13#10'declare bojao smallint;'
 +#13#10'declare caneca smallint;'
 +#13#10'declare hack varchar(10);'
 +#13#10'declare dtdesc date;'
 +#13#10'declare razao char(3);'
 +#13#10'declare motivo char(3);'
 +#13#10'declare preco_venda numeric(15,2);'
 +#13#10'declare comprador varchar(40);'
 +#13#10'declare avo_paterno varchar(40);'
 +#13#10'declare reg_avo_paterno varchar(15);'
 +#13#10'declare avo_paterna varchar(40);'
 +#13#10'declare reg_avo_paterna varchar(15);'
 +#13#10'declare avo_materno varchar(40);'
 +#13#10'declare reg_avo_materno varchar(15);'
 +#13#10'declare avo_materna varchar(40);'
 +#13#10'declare reg_avo_materna varchar(15);'
 +#13#10'declare LF_ char;'
 +#13#10'begin'
 +#13#10''
 +#13#10' LF_ = ASCII_CHAR(10) ;'
 +#13#10' DELETE FROM IMP$CADTOURO ;'
 +#13#10''
 +#13#10' FOR EXECUTE STATEMENT'
 +#13#10'   ('
 +#13#10'           ''SELECT A.CDANIMAL, (TRIM(A.NUMERO) || ''''[*]'''' || coalesce('''' '''' || A.NOME, '''''''')), A.NOMECOMPLETO, A.REGASSOCRACA, A.DTNASCIMENTO, '''
 +#13#10'   ||LF_||''P.CDANIMAL,  P.nomecompleto, P.regassocraca, '''
 +#13#10'   ||LF_||''M.CDANIMAL,  M.nomecompleto, M.regassocraca, '''
 +#13#10'   ||LF_||''NULL, NULL, NULL, NULL, NULL, 0, 0, NULL, NULL, '''
 +#13#10'   ||LF_||''CASE '''
 +#13#10'   ||LF_||''    WHEN A.sexo is null THEN ''''I'''' '''
 +#13#10'   ||LF_||''    WHEN A.cdcategoria = 1 THEN ''''B'''' '''
 +#13#10'   ||LF_||''    WHEN A.cdcategoria = 2 THEN ''''M'''' '''
 +#13#10'   ||LF_||''    WHEN A.cdcategoria = 3 THEN ''''M'''' '''
 +#13#10'   ||LF_||''    WHEN A.cdcategoria = 4 THEN ''''M'''' '''
 +#13#10'   ||LF_||''    ELSE ''''M'''''''
 +#13#10'   ||LF_||''END, '''
 +#13#10'   ||LF_||''CASE '''
 +#13#10'   ||LF_||''    WHEN A.cdgraucruzamento IN (1,2,3,4) THEN ''''8'''' '''
 +#13#10'   ||LF_||''    WHEN A.cdgraucruzamento IN (5,6,7,8) THEN ''''1'''' '''
 +#13#10'   ||LF_||''    WHEN A.cdgraucruzamento IN (9,10,11,12) THEN ''''2'''' '''
 +#13#10'   ||LF_||''    WHEN A.cdgraucruzamento IN (13,14,15,16) THEN ''''3'''' '''
 +#13#10'   ||LF_||''    WHEN A.cdgraucruzamento IN (17,18,19,20) THEN ''''4'''' '''
 +#13#10'   ||LF_||''    WHEN A.cdgraucruzamento IN (21,22,23,24) THEN ''''5'''' '''
 +#13#10'   ||LF_||''    WHEN A.cdgraucruzamento > 24 THEN ''''5'''' '''
 +#13#10'   ||LF_||''END, '''
 +#13#10'   ||LF_||''(SELECT FIRST 1'''
 +#13#10'   ||LF_||''  CASE'''
 +#13#10'   ||LF_||''    WHEN AR.CDRACA IN ( 175 ) THEN ''''PDS'''' '''
 +#13#10'   ||LF_||''    WHEN AR.CDRACA IN ( 290, 300, 340 ) THEN ''''GIR'''' '''
 +#13#10'   ||LF_||''    WHEN AR.CDRACA IN ( 310 ) THEN ''''GHL'''' '''
 +#13#10'   ||LF_||''    WHEN AR.CDRACA IN ( 365 ) THEN ''''HPB'''' '''
 +#13#10'   ||LF_||''    WHEN AR.CDRACA IN ( 385 ) THEN ''''JER'''' '''
 +#13#10'   ||LF_||''    WHEN AR.CDRACA IN ( 635 ) THEN ''''HPV'''' '''
 +#13#10'   ||LF_||''    WHEN AR.CDRACA IN ( 565 ) THEN ''''SIM'''' '''
 +#13#10'   ||LF_||''  ELSE'''
 +#13#10'   ||LF_||''    ''''XX'''' '''
 +#13#10'   ||LF_||''  END'''
 +#13#10'   ||LF_||''FROM ANIMALRACA AR'''
 +#13#10'   ||LF_||''WHERE AR.CDANIMALRACA = A.CDANIMAL'''
 +#13#10'   ||LF_||''ORDER BY AR.PERCENTUAL DESC'''
 +#13#10'   ||LF_||'') RACA, '''
 +#13#10'   ||LF_||''A.animalrebanho, NULL, NULL, NULL, NULL, '''
 +#13#10'   ||LF_||''A.DTBAIXA, IIF(A.DTBAIXA IS NOT NULL, ''''DES'''', NULL), A.cdmotivobaixa, '''
 +#13#10'   ||LF_||''NULL,NULL,NULL,NULL, NULL,NULL,NULL,NULL,NULL,NULL '''
 +#13#10'   ||LF_||''FROM ANIMAL A '''
 +#13#10'   ||LF_||''LEFT JOIN ANIMAL P ON P.cdanimal = A.cdpai '''
 +#13#10'   ||LF_||''LEFT JOIN ANIMAL M ON M.cdanimal = A.cdmae '''
 +#13#10'   ||LF_||''WHERE (A.SEXO = ''''M'''') or (A.TIPOANIMAL IS DISTINCT FROM ''''A'''')'''
 +#13#10'   )'
 +#13#10' ON EXTERNAL DATA SOURCE :IDEAGRI'
 +#13#10' WITH COMMON TRANSACTION'
 +#13#10' INTO'
 +#13#10'    :CODIGO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,:MAE,:NOME_MAE,'
 +#13#10'    :REGISTRO_MAE,:LEITE,:TIPO,:UBERE,:PERNAPE,:PARTO,:QESTOQUE,:QUSADA,:CONCEPCAO,:VALOR,:STATUS,:GSANGUE,'
 +#13#10'    :RACA,:RETIRO,:LOTE,:BOJAO,:CANECA,:HACK,:DTDESC,:RAZAO,:MOTIVO,:PRECO_VENDA,:COMPRADOR,:AVO_PATERNO,'
 +#13#10'    :REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,:AVO_MATERNA,:REG_AVO_MATERNA'
 +#13#10'  DO'
 +#13#10'  begin'
 +#13#10''
 +#13#10'  --   SELECT first 1 COMPOSICAO from doimp$ideagri_raca(:RACA) into :RACA;'
 +#13#10''
 +#13#10'    INSERT INTO IMP$CADTOURO'
 +#13#10'     ('
 +#13#10'       CODIGO,NOME_ESTAB,NOME_COMPLETO,REGISTRO,DTNASC,PAI,NOME_PAI,REGISTRO_PAI,MAE,NOME_MAE,'
 +#13#10'       REGISTRO_MAE,LEITE,TIPO,UBERE,PERNAPE,PARTO,QESTOQUE,QUSADA,CONCEPCAO,VALOR,STATUS,GSANGUE,'
 +#13#10'       RACA,RETIRO,LOTE,BOJAO,CANECA,HACK,DTDESC,RAZAO,MOTIVO,PRECO_VENDA,COMPRADOR,AVO_PATERNO,'
 +#13#10'       REG_AVO_PATERNO,AVO_PATERNA,REG_AVO_PATERNA,AVO_MATERNO,REG_AVO_MATERNO,AVO_MATERNA,REG_AVO_MATERNA'
 +#13#10'     )'
 +#13#10'    VALUES'
 +#13#10'    ('
 +#13#10'      :CODIGO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,:MAE,:NOME_MAE,'
 +#13#10'      :REGISTRO_MAE,:LEITE,:TIPO,:UBERE,:PERNAPE,:PARTO,:QESTOQUE,:QUSADA,:CONCEPCAO,:VALOR,:STATUS,:GSANGUE,'
 +#13#10'      :RACA,:RETIRO,:LOTE,:BOJAO,:CANECA,:HACK,:DTDESC,:RAZAO,:MOTIVO,:PRECO_VENDA,:COMPRADOR,:AVO_PATERNO,'
 +#13#10'      :REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,:AVO_MATERNA,:REG_AVO_MATERNA'
 +#13#10'    ) ;'
 +#13#10'  end'
 +#13#10'end' ) ;

        ExecuteDirect (
         'CREATE OR ALTER PROCEDURE DOIMP$IDEAGRI_PESAGENS('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    IDEAGRI VARCHAR(1024) COLLATE ISO8859_1)'
  +#13#10'AS'
  +#13#10'declare variable brinco varchar(10) not null;'
  +#13#10'declare variable data date not null;'
  +#13#10'declare variable ord1 numeric(15,2);'
  +#13#10'declare variable ord2 numeric(15,2);'
  +#13#10'declare variable ord3 numeric(15,2);'
  +#13#10'declare variable total numeric(15,2);'
  +#13#10'declare variable variacao numeric(15,2);'
  +#13#10'declare variable del smallint;'
  +#13#10'declare variable pgordura numeric(15,2);'
  +#13#10'declare variable proteina numeric(15,2);'
  +#13#10'declare variable lactose numeric(15,2);'
  +#13#10'declare variable condutividade smallint;'
  +#13#10'declare variable sol_totais numeric(15,2);'
  +#13#10'declare variable cel_somaticas integer;'
  +#13#10'declare variable ureia numeric(15,2);'
  +#13#10'declare variable observacao varchar(15);'
  +#13#10'declare variable nord smallint;'
  +#13#10'declare LF_ char;'
  +#13#10'begin'
  +#13#10''
  +#13#10' LF_ = ASCII_CHAR(10) ;'
  +#13#10''
  +#13#10' DELETE FROM IMP$PESAGENS ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   (    ''SELECT L.CDANIMAL,L.DTLEITE, SUM(L.PESO1), SUM(L.PESO2), SUM(L.PESO3), '''
  +#13#10'     ||LF_||''SUM(L.PESOTOTAL),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL '''
  +#13#10'     ||LF_||''FROM LEITE L'''
  +#13#10'     ||LF_||''GROUP BY 1, 2'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :IDEAGRI'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO :BRINCO, :DATA, :ORD1, :ORD2, :ORD3, :TOTAL, :VARIACAO, :DEL, :PGORDURA, :PROTEINA, :LACTOSE,'
  +#13#10'      :CONDUTIVIDADE, :SOL_TOTAIS, :CEL_SOMATICAS, :UREIA, :OBSERVACAO, :NORD'
  +#13#10' DO'
  +#13#10'  INSERT INTO IMP$PESAGENS'
  +#13#10'    ( BRINCO, DATA, ORD1, ORD2, ORD3, TOTAL, VARIACAO, DEL, PGORDURA, PROTEINA, LACTOSE,'
  +#13#10'     CONDUTIVIDADE, SOL_TOTAIS, CEL_SOMATICAS, UREIA, OBSERVACAO, NORD'
  +#13#10'    )'
  +#13#10'  VALUES'
  +#13#10'   ('
  +#13#10'      :BRINCO, :DATA, :ORD1, :ORD2, :ORD3, :TOTAL, :VARIACAO, :DEL, :PGORDURA, :PROTEINA, :LACTOSE,'
  +#13#10'      :CONDUTIVIDADE, :SOL_TOTAIS, :CEL_SOMATICAS, :UREIA, :OBSERVACAO, :NORD'
  +#13#10'   );'
  +#13#10''
  +#13#10'end' ) ;

        ExecuteDirect (
         'CREATE OR ALTER PROCEDURE DOIMP$IDEAGRI('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    IDEAGRI VARCHAR(1024) COLLATE ISO8859_1,'
  +#13#10'    ACCEPT_NULL_BIRTHDATE SYS$BOOL,'
  +#13#10'    CODIGO_LOTE SYS$INT)'
  +#13#10'AS'
  +#13#10'begin'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE DOIMP$LIMPARBASE( KCAD_FAZENDA );'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE DOIMP$DEFAULT_GSANGUE  ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_CADASTRO ( KCAD_FAZENDA, IDEAGRI, ACCEPT_NULL_BIRTHDATE, CODIGO_LOTE ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_CADTOURO ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_CIOSCOB  ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_DADOPROD ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_PESAGENS ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  /*'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_BST      ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_CMT      ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_CONDCORP ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_FILHOS   ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_FUNCIONA ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_DIAGNOST ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_SANITARI ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_TRATASAN ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_TRATAMEN ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_PESO     ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_PMACHO   ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_LINEARCA ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  */'
  +#13#10'end' ) ;

end;



procedure TDBZootecnicoUpdate._5_000_39;
begin

          ExecuteDirect (
         'CREATE OR ALTER TRIGGER ZOO_LACTACOES_AIUD0 FOR ZOO_LACTACOES'
  +#13#10'ACTIVE AFTER INSERT OR UPDATE OR DELETE POSITION 20001'
  +#13#10'AS'
  +#13#10'declare KPRIMEIRA_LACTACAO SYS$FKGUID20 ;'
  +#13#10'declare KULTIMA_LACTACAO SYS$FKGUID20 ;'
  +#13#10'declare DATALACTACAO SYS$DATE ;'
  +#13#10'declare DATA_SECAGEM SYS$DATE ;'
  +#13#10'declare NUMEROLACTACAO SYS$INT ;'
  +#13#10'declare KEVENTO_ZOOTECNICO SYS$FKGUID20 ;'
  +#13#10'declare STATUS SYS$INT ;'
  +#13#10'begin'
  +#13#10''
  +#13#10'  -- atualizar ultima lactacao na ficha da femea'
  +#13#10''
  +#13#10'  if ( inserting ) then'
  +#13#10'    begin'
  +#13#10'      -- atualiza a 1a lactacao na ficha da femea'
  +#13#10'      EXECUTE PROCEDURE ZOO_UPDATE_LACTACAO_FEMEA NEW.KZOO_ANIMAL_FEMEA, NEW.KZOO_LACTACAO, NEW.DATALACTACAO, NEW.NL, ''T'', '''' ;'
  +#13#10'      -- atualiza a ultima lactacao na ficha da femea'
  +#13#10'      EXECUTE PROCEDURE ZOO_UPDATE_LACTACAO_FEMEA NEW.KZOO_ANIMAL_FEMEA, NEW.KZOO_LACTACAO, NEW.DATALACTACAO, NEW.NL, ''F'', NEW.KZOO_EVENTO_ZOOTECNICO ;'
  +#13#10''
  +#13#10'      EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_CATEGORIA_FEMEA'', ''VL'' ) RETURNING_VALUES STATUS ;'
  +#13#10''
  +#13#10'      UPDATE ZOO_ANIMAIS'
  +#13#10'         SET STATUS = :STATUS,'
  +#13#10'           DATASTATUS = NEW.DATALACTACAO'
  +#13#10'      WHERE ( KZOO_ANIMAL = NEW.KZOO_ANIMAL_FEMEA ) ;'
  +#13#10''
  +#13#10'      if (NEW.DATA_SECAGEM is not NULL ) then'
  +#13#10'        begin'
  +#13#10'              EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_CATEGORIA_FEMEA'', ''VS'' ) RETURNING_VALUES STATUS ;'
  +#13#10'              UPDATE ZOO_ANIMAIS'
  +#13#10'                SET STATUS = :STATUS,'
  +#13#10'              DATASTATUS = NEW.DATA_SECAGEM'
  +#13#10'              WHERE ( KZOO_ANIMAL = NEW.KZOO_ANIMAL_FEMEA ) ;'
  +#13#10'        end'
  +#13#10''
  +#13#10'    end'
  +#13#10'   else if ( ( updating ) and ( RDB$GET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLRCL'' ) is NULL) ) then'
  +#13#10'     begin'
  +#13#10'        /* se alterou a femea, atualiza registro da femea anterior */'
  +#13#10'        if ( OLD.KZOO_ANIMAL_FEMEA is distinct from NEW.KZOO_ANIMAL_FEMEA ) then'
  +#13#10'          begin'
  +#13#10'           -- primeira lactacao'
  +#13#10'           EXECUTE PROCEDURE ZOO_GET_PRIM_LACTACAO_FEMEA OLD.KZOO_ANIMAL_FEMEA'
  +#13#10'           RETURNING_VALUES KPRIMEIRA_LACTACAO, DATALACTACAO, NUMEROLACTACAO ;'
  +#13#10''
  +#13#10'           EXECUTE PROCEDURE ZOO_UPDATE_LACTACAO_FEMEA OLD.KZOO_ANIMAL_FEMEA, :KPRIMEIRA_LACTACAO, :DATALACTACAO, :NUMEROLACTACAO, ''T'', '''' ;'
  +#13#10''
  +#13#10'           -- ultima lactacao'
  +#13#10'           EXECUTE PROCEDURE ZOO_GET_ULTIMA_LACTACAO_FEMEA OLD.KZOO_ANIMAL_FEMEA'
  +#13#10'           RETURNING_VALUES KULTIMA_LACTACAO, DATALACTACAO, NUMEROLACTACAO, KEVENTO_ZOOTECNICO ;'
  +#13#10''
  +#13#10'           EXECUTE PROCEDURE ZOO_UPDATE_LACTACAO_FEMEA OLD.KZOO_ANIMAL_FEMEA, :KULTIMA_LACTACAO, :DATALACTACAO, :NUMEROLACTACAO, ''F'', :KEVENTO_ZOOTECNICO ;'
  +#13#10'          end'
  +#13#10''
  +#13#10'        /* atualiza registro da femea atual */'
  +#13#10''
  +#13#10'        -- primeira lactacao'
  +#13#10'        EXECUTE PROCEDURE ZOO_GET_PRIM_LACTACAO_FEMEA NEW.KZOO_ANIMAL_FEMEA'
  +#13#10'        RETURNING_VALUES KPRIMEIRA_LACTACAO, DATALACTACAO, NUMEROLACTACAO ;'
  +#13#10''
  +#13#10'        EXECUTE PROCEDURE ZOO_UPDATE_LACTACAO_FEMEA NEW.KZOO_ANIMAL_FEMEA, :KPRIMEIRA_LACTACAO, :DATALACTACAO, :NUMEROLACTACAO, ''T'', '''' ;'
  +#13#10''
  +#13#10'        -- ultima lactacao'
  +#13#10'        EXECUTE PROCEDURE ZOO_GET_ULTIMA_LACTACAO_FEMEA NEW.KZOO_ANIMAL_FEMEA'
  +#13#10'        RETURNING_VALUES KULTIMA_LACTACAO, DATALACTACAO, NUMEROLACTACAO, KEVENTO_ZOOTECNICO ;'
  +#13#10''
  +#13#10'        EXECUTE PROCEDURE ZOO_UPDATE_LACTACAO_FEMEA NEW.KZOO_ANIMAL_FEMEA, :KULTIMA_LACTACAO, :DATALACTACAO, :NUMEROLACTACAO, ''F'', :KEVENTO_ZOOTECNICO ;'
  +#13#10''
  +#13#10'        if (NEW.DATA_SECAGEM is distinct from OLD.DATA_SECAGEM ) then'
  +#13#10'          begin'
  +#13#10'              if ( NEW.DATA_SECAGEM is null ) then'
  +#13#10'                BEGIN'
  +#13#10'                  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_CATEGORIA_FEMEA'', ''VL'' ) RETURNING_VALUES STATUS ;'
  +#13#10'                  UPDATE ZOO_ANIMAIS'
  +#13#10'                    SET STATUS = :STATUS,'
  +#13#10'                        DATASTATUS = CURRENT_TIMESTAMP'
  +#13#10'                    WHERE ( KZOO_ANIMAL = NEW.KZOO_ANIMAL_FEMEA ) ;'
  +#13#10'                END'
  +#13#10'              else'
  +#13#10'                BEGIN'
  +#13#10'                  EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_CATEGORIA_FEMEA'', ''VS'' ) RETURNING_VALUES STATUS ;'
  +#13#10'                  UPDATE ZOO_ANIMAIS'
  +#13#10'                    SET STATUS = :STATUS,'
  +#13#10'                        DATASTATUS = NEW.DATA_SECAGEM'
  +#13#10'                    WHERE ( KZOO_ANIMAL = NEW.KZOO_ANIMAL_FEMEA ) ;'
  +#13#10'                  UPDATE ZOO_ANIMAIS_FEMEA'
  +#13#10'                    SET LOTE = NULL'
  +#13#10'                    WHERE ( KZOO_ANIMAL_FEMEA = NEW.KZOO_ANIMAL_FEMEA ) ;'
  +#13#10'                 END'
  +#13#10'          end'
  +#13#10''
  +#13#10'     end'
  +#13#10'   else if ( deleting ) then'
  +#13#10'    begin'
  +#13#10'        /* atualiza registro da femea */'
  +#13#10'        -- primeira lactacao'
  +#13#10'       EXECUTE PROCEDURE ZOO_GET_PRIM_LACTACAO_FEMEA ( OLD.KZOO_ANIMAL_FEMEA )'
  +#13#10'       RETURNING_VALUES KPRIMEIRA_LACTACAO, DATALACTACAO, NUMEROLACTACAO ;'
  +#13#10''
  +#13#10'       EXECUTE PROCEDURE ZOO_UPDATE_LACTACAO_FEMEA OLD.KZOO_ANIMAL_FEMEA, :KPRIMEIRA_LACTACAO, :DATALACTACAO, :NUMEROLACTACAO, ''T'', '''' ;'
  +#13#10''
  +#13#10'        -- ultima lactacao'
  +#13#10'       EXECUTE PROCEDURE ZOO_GET_ULTIMA_LACTACAO_FEMEA ( OLD.KZOO_ANIMAL_FEMEA )'
  +#13#10'       RETURNING_VALUES KULTIMA_LACTACAO, DATALACTACAO, NUMEROLACTACAO, :KEVENTO_ZOOTECNICO ;'
  +#13#10''
  +#13#10'       EXECUTE PROCEDURE ZOO_UPDATE_LACTACAO_FEMEA OLD.KZOO_ANIMAL_FEMEA, :KULTIMA_LACTACAO, :DATALACTACAO, :NUMEROLACTACAO, ''F'', :KEVENTO_ZOOTECNICO ;'
  +#13#10''
  +#13#10'       DATA_SECAGEM = null ;'
  +#13#10''
  +#13#10'       if ( KULTIMA_LACTACAO is null ) then'
  +#13#10'          EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_CATEGORIA_FEMEA'', ''NOV'' ) RETURNING_VALUES STATUS ;'
  +#13#10'       else'
  +#13#10'          begin'
  +#13#10'            SELECT DATA_SECAGEM FROM ZOO_LACTACOES WHERE KZOO_LACTACAO = :KULTIMA_LACTACAO INTO :DATA_SECAGEM ;'
  +#13#10''
  +#13#10'            if (DATA_SECAGEM is null) then'
  +#13#10'              EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_CATEGORIA_FEMEA'', ''VL'' ) RETURNING_VALUES STATUS ;'
  +#13#10'            else'
  +#13#10'              EXECUTE PROCEDURE SYS$TYPES_GETVALUE( ''SIGLA_CATEGORIA_FEMEA'', ''VS'' ) RETURNING_VALUES STATUS ;'
  +#13#10''
  +#13#10'          end'
  +#13#10''
  +#13#10'          UPDATE ZOO_ANIMAIS'
  +#13#10'              SET STATUS = :STATUS,'
  +#13#10'              DATASTATUS = IIF ( :DATA_SECAGEM is NULL, COALESCE ( :DATALACTACAO, CURRENT_TIMESTAMP ), :DATA_SECAGEM )'
  +#13#10'          WHERE ( KZOO_ANIMAL = OLD.KZOO_ANIMAL_FEMEA ) ;'
  +#13#10''
  +#13#10'    end'
  +#13#10'end' ) ;

end ;

procedure TDBZootecnicoUpdate._5_000_38;
begin

          ExecuteDirect (
         'CREATE OR ALTER PROCEDURE DOIMP$IDEAGRI_PESAGENS('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    IDEAGRI VARCHAR(1024) COLLATE ISO8859_1)'
  +#13#10'AS'
  +#13#10'declare variable brinco varchar(10) not null;'
  +#13#10'declare variable data date not null;'
  +#13#10'declare variable ord1 numeric(15,2);'
  +#13#10'declare variable ord2 numeric(15,2);'
  +#13#10'declare variable ord3 numeric(15,2);'
  +#13#10'declare variable total numeric(15,2);'
  +#13#10'declare variable variacao numeric(15,2);'
  +#13#10'declare variable del smallint;'
  +#13#10'declare variable pgordura numeric(15,2);'
  +#13#10'declare variable proteina numeric(15,2);'
  +#13#10'declare variable lactose numeric(15,2);'
  +#13#10'declare variable condutividade smallint;'
  +#13#10'declare variable sol_totais numeric(15,2);'
  +#13#10'declare variable cel_somaticas integer;'
  +#13#10'declare variable ureia numeric(15,2);'
  +#13#10'declare variable observacao varchar(15);'
  +#13#10'declare variable nord smallint;'
  +#13#10'begin'
  +#13#10''
  +#13#10' DELETE FROM IMP$PESAGENS ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   (    ''SELECT DISTINCT L.CDANIMAL,L.DTLEITE, L.PESO1, L.PESO2, L.PESO3, '''
  +#13#10'     || ''L.PESOTOTAL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL '''
  +#13#10'     || ''FROM LEITE L'''
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :IDEAGRI'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO :BRINCO, :DATA, :ORD1, :ORD2, :ORD3, :TOTAL, :VARIACAO, :DEL, :PGORDURA, :PROTEINA, :LACTOSE,'
  +#13#10'      :CONDUTIVIDADE, :SOL_TOTAIS, :CEL_SOMATICAS, :UREIA, :OBSERVACAO, :NORD'
  +#13#10' DO'
  +#13#10'  INSERT INTO IMP$PESAGENS'
  +#13#10'    ( BRINCO, DATA, ORD1, ORD2, ORD3, TOTAL, VARIACAO, DEL, PGORDURA, PROTEINA, LACTOSE,'
  +#13#10'     CONDUTIVIDADE, SOL_TOTAIS, CEL_SOMATICAS, UREIA, OBSERVACAO, NORD'
  +#13#10'    )'
  +#13#10'  VALUES'
  +#13#10'   ('
  +#13#10'      :BRINCO, :DATA, :ORD1, :ORD2, :ORD3, :TOTAL, :VARIACAO, :DEL, :PGORDURA, :PROTEINA, :LACTOSE,'
  +#13#10'      :CONDUTIVIDADE, :SOL_TOTAIS, :CEL_SOMATICAS, :UREIA, :OBSERVACAO, :NORD'
  +#13#10'   );'
  +#13#10''
  +#13#10'end' ) ;

          TryExecuteDirect (
         'ALTER TABLE ZOO_EVENTOS_ZOOTECNICOS'
  +#13#10'ADD IATF SYS$BOOL_F,'
  +#13#10'ADD KZOO_PROTOCOLO_IATF SYS$FKGUID20,'
  +#13#10'ALTER IATF POSITION 31,'
  +#13#10'ALTER KZOO_PROTOCOLO_IATF POSITION 32,'
  +#13#10'ADD CONSTRAINT FKZOO_EVENTOS_ZOOTECNICOS_04'
  +#13#10'    FOREIGN KEY ( KZOO_PROTOCOLO_IATF )'
  +#13#10'    REFERENCES ZOO_PROTOCOLOS ( KZOO_PROTOCOLO )'
  +#13#10'    ON UPDATE CASCADE' ) ;

end;

procedure TDBZootecnicoUpdate._5_000_36;
begin


          ExecuteDirect (
         'CREATE OR ALTER PROCEDURE DOIMP$IDEAGRI_CADASTRO('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    IDEAGRI VARCHAR(1024) COLLATE ISO8859_1,'
  +#13#10'    ACCEPT_NULL_BIRTHDATE SYS$BOOL)'
  +#13#10'AS'
  +#13#10'declare variable brinco varchar(10) not null;'
  +#13#10'declare variable nome_estab varchar(60);'
  +#13#10'declare variable nome_completo varchar(60);'
  +#13#10'declare variable registro varchar(15);'
  +#13#10'declare variable dtnasc date;'
  +#13#10'declare variable pai varchar(8);'
  +#13#10'declare variable nome_pai varchar(40);'
  +#13#10'declare variable registro_pai varchar(15);'
  +#13#10'declare variable pd_pai varchar(5);'
  +#13#10'declare variable mae varchar(10);'
  +#13#10'declare variable nome_mae varchar(40);'
  +#13#10'declare variable registro_mae varchar(15);'
  +#13#10'declare variable dtorigem date;'
  +#13#10'declare variable local_origem varchar(20);'
  +#13#10'declare variable preco_compra numeric(15,2);'
  +#13#10'declare variable dtdesc date;'
  +#13#10'declare variable razao char(3);'
  +#13#10'declare variable motivo char(3);'
  +#13#10'declare variable preco_venda numeric(15,2);'
  +#13#10'declare variable comprador varchar(40);'
  +#13#10'declare variable raca char(3);'
  +#13#10'declare variable gsangue smallint;'
  +#13#10'declare variable retiro char(2);'
  +#13#10'declare variable lote char(2);'
  +#13#10'declare variable nucleo char(4);'
  +#13#10'declare variable rebanho varchar(5);'
  +#13#10'declare variable vaca varchar(8);'
  +#13#10'declare variable avo_paterno varchar(40);'
  +#13#10'declare variable reg_avo_paterno varchar(15);'
  +#13#10'declare variable avo_paterna varchar(40);'
  +#13#10'declare variable reg_avo_paterna varchar(15);'
  +#13#10'declare variable avo_materno varchar(40);'
  +#13#10'declare variable reg_avo_materno varchar(15);'
  +#13#10'declare variable avo_materna varchar(40);'
  +#13#10'declare variable reg_avo_materna varchar(15);'
  +#13#10'declare variable touro1 varchar(8);'
  +#13#10'declare variable touro2 varchar(8);'
  +#13#10'declare variable touro3 varchar(8);'
  +#13#10'declare variable touro4 varchar(8);'
  +#13#10'declare variable te char(2);'
  +#13#10'declare variable lote1 char(2);'
  +#13#10'declare variable data1 date;'
  +#13#10'declare variable lote2 char(2);'
  +#13#10'declare variable data2 date;'
  +#13#10'declare variable lote3 char(2);'
  +#13#10'declare variable data3 date;'
  +#13#10'declare variable lote4 char(2);'
  +#13#10'declare variable data4 date;'
  +#13#10'declare variable lote5 char(2);'
  +#13#10'declare variable data5 date;'
  +#13#10'declare variable lote6 char(2);'
  +#13#10'declare variable data6 date;'
  +#13#10'declare variable lote7 char(2);'
  +#13#10'declare variable data7 date;'
  +#13#10'declare variable lote8 char(2);'
  +#13#10'declare variable data8 date;'
  +#13#10'declare variable status varchar(3) not null;'
  +#13#10'declare variable criador varchar(40);'
  +#13#10'declare variable cidcria varchar(25);'
  +#13#10'declare variable codigo1 char(3);'
  +#13#10'declare variable codigo2 char(3);'
  +#13#10'declare variable codigo3 char(3);'
  +#13#10'declare variable persiste integer;'
  +#13#10'declare variable potencial integer;'
  +#13#10'declare variable SQL_WHERE varchar(100) = '''' ;'
  +#13#10'begin'
  +#13#10''
  +#13#10' DELETE FROM IMP$CADASTRO ;'
  +#13#10''
  +#13#10' if ( ACCEPT_NULL_BIRTHDATE = ''F'' ) THEN'
  +#13#10'    SQL_WHERE = '' AND A.DTNASCIMENTO IS NOT NULL'' ;'
  +#13#10''
  +#13#10' FOR EXECUTE STATEMENT'
  +#13#10'   (    ''SELECT A.CDANIMAL, (trim(A.NUMERO) || ''''[*]'''' || coalesce('''' '''' || A.NOME, '''''''')), A.NOMECOMPLETO, A.REGASSOCRACA, A.DTNASCIMENTO, '''
  +#13#10'     || ''P.CDANIMAL,  P.nomecompleto, P.regassocraca, NULL, '''
  +#13#10'     || ''M.CDANIMAL,  M.nomecompleto, M.regassocraca, '''
  +#13#10'     || ''NULL,NULL,NULL, '''
  +#13#10'     || ''A.DTBAIXA, IIF(A.DTBAIXA IS NOT NULL, ''''DES'''', NULL), A.cdmotivobaixa, '''
  +#13#10'     || ''NULL,NULL, '''
  +#13#10'     || ''( '''
  +#13#10'     || ''SELECT FIRST 1 R.SIGLA as SIGLA FROM ANIMALRACA AR '''
  +#13#10'     || ''INNER JOIN RACA R on R.cdraca = AR.cdraca '''
  +#13#10'     || ''WHERE AR.cdanimalraca = A.cdanimal '''
  +#13#10'     || ''ORDER BY AR.percentual desc '''
  +#13#10'     || ''), '''
  +#13#10'     || ''CASE '''
  +#13#10'     || ''    WHEN A.cdgraucruzamento IN (1,2,3,4) THEN ''''8'''' '''
  +#13#10'     || ''    WHEN A.cdgraucruzamento IN (5,6,7,8) THEN ''''1'''' '''
  +#13#10'     || ''    WHEN A.cdgraucruzamento IN (9,10,11,12) THEN ''''2'''' '''
  +#13#10'     || ''    WHEN A.cdgraucruzamento IN (13,14,15,16) THEN ''''3'''' '''
  +#13#10'     || ''    WHEN A.cdgraucruzamento IN (17,18,19,20) THEN ''''4'''' '''
  +#13#10'     || ''    WHEN A.cdgraucruzamento IN (21,22,23,24) THEN ''''5'''' '''
  +#13#10'     || ''    WHEN A.cdgraucruzamento > 24 THEN ''''5'''' '''
  +#13#10'     || ''END, '''
  +#13#10'     || ''A.CDSETOR, NULL, NULL, A.animalrebanho, NULL, '''
  +#13#10'     || ''NULL, NULL,NULL,NULL, '''
  +#13#10'     || ''NULL, NULL,NULL,NULL, '''
  +#13#10'     || ''NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL, '''
  +#13#10'     || ''NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL, '''
  +#13#10'     || ''CASE '''
  +#13#10'     || ''    WHEN A.cdcategoria = 1 THEN ''''BEZ'''' '''
  +#13#10'     || ''    WHEN A.cdcategoria = 6 THEN ''''NOV'''' '''
  +#13#10'     || ''    WHEN A.cdcategoria = 7 AND A.matrizseca = 0 THEN ''''VL'''' '''
  +#13#10'     || ''    WHEN A.cdcategoria = 7 AND A.matrizseca = 1 THEN ''''VS'''' '''
  +#13#10'     || ''    ELSE ''''BEZ'''''''
  +#13#10'     || ''END, '''
  +#13#10'     || ''NULL, '''
  +#13#10'     || ''NULL,NULL,NULL,NULL,NULL,NULL '''
  +#13#10'     || ''FROM ANIMAL A '''
  +#13#10'     || ''LEFT JOIN ANIMAL P ON P.cdanimal = A.cdpai '''
  +#13#10'     || ''LEFT JOIN ANIMAL M ON M.cdanimal = A.cdmae '''
  +#13#10'     || ''WHERE A.SEXO = ''''F'''''' || SQL_WHERE'
  +#13#10'   )'
  +#13#10' ON EXTERNAL DATA SOURCE :IDEAGRI'
  +#13#10' WITH COMMON TRANSACTION'
  +#13#10' INTO'
  +#13#10'    :BRINCO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,'
  +#13#10'    :PD_PAI,:MAE,:NOME_MAE,:REGISTRO_MAE,:DTORIGEM,:LOCAL_ORIGEM,:PRECO_COMPRA,:DTDESC,:RAZAO,'
  +#13#10'    :MOTIVO,:PRECO_VENDA,:COMPRADOR,:RACA,:GSANGUE,:RETIRO,:LOTE,:NUCLEO,:REBANHO,:VACA,'
  +#13#10'    :AVO_PATERNO,:REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,'
  +#13#10'    :AVO_MATERNA,:REG_AVO_MATERNA,:TOURO1,:TOURO2,:TOURO3,:TOURO4,:TE,:LOTE1,:DATA1,:LOTE2,:DATA2,'
  +#13#10'    :LOTE3,:DATA3,:LOTE4,:DATA4,:LOTE5,:DATA5,:LOTE6,:DATA6,:LOTE7,:DATA7,:LOTE8,:DATA8,:STATUS,:CRIADOR,'
  +#13#10'    :CIDCRIA,:CODIGO1,:CODIGO2,:CODIGO3,:PERSISTE,:POTENCIAL'
  +#13#10' DO'
  +#13#10' begin'
  +#13#10''
  +#13#10' SELECT first 1 COMPOSICAO from doimp$ideagri_raca(:RACA) into :RACA;'
  +#13#10''
  +#13#10'  INSERT INTO IMP$CADASTRO'
  +#13#10'    ('
  +#13#10'      BRINCO,NOME_ESTAB,NOME_COMPLETO,REGISTRO,DTNASC,PAI,NOME_PAI,REGISTRO_PAI,'
  +#13#10'      PD_PAI,MAE,NOME_MAE,REGISTRO_MAE,DTORIGEM,LOCAL_ORIGEM,PRECO_COMPRA,DTDESC,RAZAO,'
  +#13#10'      MOTIVO,PRECO_VENDA,COMPRADOR,RACA,GSANGUE,RETIRO,LOTE,NUCLEO,REBANHO,VACA,'
  +#13#10'      AVO_PATERNO,REG_AVO_PATERNO,AVO_PATERNA,REG_AVO_PATERNA,AVO_MATERNO,REG_AVO_MATERNO,'
  +#13#10'      AVO_MATERNA,REG_AVO_MATERNA,TOURO1,TOURO2,TOURO3,TOURO4,TE,LOTE1,DATA1,LOTE2,DATA2,'
  +#13#10'      LOTE3,DATA3,LOTE4,DATA4,LOTE5,DATA5,LOTE6,DATA6,LOTE7,DATA7,LOTE8,DATA8,STATUS,CRIADOR,'
  +#13#10'      CIDCRIA,CODIGO1,CODIGO2,CODIGO3,PERSISTE,POTENCIAL'
  +#13#10'    )'
  +#13#10'  VALUES'
  +#13#10'    ('
  +#13#10'     :BRINCO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,'
  +#13#10'     :PD_PAI,:MAE,:NOME_MAE,:REGISTRO_MAE,:DTORIGEM,:LOCAL_ORIGEM,:PRECO_COMPRA,:DTDESC,:RAZAO,'
  +#13#10'     :MOTIVO,:PRECO_VENDA,:COMPRADOR,:RACA,:GSANGUE,:RETIRO,:LOTE,:NUCLEO,:REBANHO,:VACA,'
  +#13#10'     :AVO_PATERNO,:REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,'
  +#13#10'     :AVO_MATERNA,:REG_AVO_MATERNA,:TOURO1,:TOURO2,:TOURO3,:TOURO4,:TE,:LOTE1,:DATA1,:LOTE2,:DATA2,'
  +#13#10'     :LOTE3,:DATA3,:LOTE4,:DATA4,:LOTE5,:DATA5,:LOTE6,:DATA6,:LOTE7,:DATA7,:LOTE8,:DATA8,:STATUS,:CRIADOR,'
  +#13#10'     :CIDCRIA,:CODIGO1,:CODIGO2,:CODIGO3,:PERSISTE,:POTENCIAL'
  +#13#10'    ) ;'
  +#13#10'  end'
  +#13#10'end' ) ;


        ExecuteDirect (
         'CREATE OR ALTER PROCEDURE DOIMP$IDEAGRI('
  +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
  +#13#10'    IDEAGRI VARCHAR(1024) COLLATE ISO8859_1,'
  +#13#10'    ACCEPT_NULL_BIRTHDATE SYS$BOOL)'
  +#13#10'AS'
  +#13#10'begin'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE DOIMP$LIMPARBASE( KCAD_FAZENDA );'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE DOIMP$DEFAULT_GSANGUE  ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_CADASTRO ( KCAD_FAZENDA, IDEAGRI, ACCEPT_NULL_BIRTHDATE ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_CADTOURO ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_CIOSCOB  ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_DADOPROD ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_PESAGENS ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  /*'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_BST      ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_CMT      ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_CONDCORP ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_FILHOS   ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_FUNCIONA ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_DIAGNOST ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_SANITARI ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_TRATASAN ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_TRATAMEN ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_PESO     ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_PMACHO   ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  EXECUTE PROCEDURE DOIMP$IDEAGRI_LINEARCA ( KCAD_FAZENDA, IDEAGRI ) ;'
  +#13#10'  */'
  +#13#10'end' ) ;

end;


procedure TDBZootecnicoUpdate._5_000_35;
begin

          ExecuteDirect (
         'CREATE OR ALTER PROCEDURE SYS$LOG('
  +#13#10'    ALOG VARCHAR(255))'
  +#13#10'AS'
  +#13#10'DECLARE BLOG BLOB ;'
  +#13#10'BEGIN'
  +#13#10'  --BLOG =  CURRENT_TIMESTAMP || '': '' || ALOG || ASCII_CHAR(13) || ASCII_CHAR(10) ;'
  +#13#10'  --SU$APPENDBLOBTOFILE( RDB$GET_CONTEXT( ''SYSTEM'', ''DB_NAME'' ) || ''.LOG'', BLOG  ) ;'
  +#13#10'END' ) ;

          ExecuteDirect (
         'CREATE OR ALTER TRIGGER ZOO_LOTEPESAGEM_LEITE_AU FOR ZOO_LOTEPESAGEM_LEITE'
  +#13#10'ACTIVE AFTER UPDATE POSITION 1001'
  +#13#10'AS'
  +#13#10'DECLARE KZOO_LACTACAO SYS$FKGUID20 ;'
  +#13#10'BEGIN'
  +#13#10' IF ((NEW.PROCESSADO IS DISTINCT FROM OLD.PROCESSADO) AND (NEW.PROCESSADO=''T'')) then'
  +#13#10'    FOR SELECT KZOO_LACTACAO'
  +#13#10'    FROM ZOO_PESAGEM_LEITE'
  +#13#10'    WHERE KZOO_LOTEPESAGEM_LEITE = NEW.KZOO_LOTEPESAGEM_LEITE'
  +#13#10'    INTO KZOO_LACTACAO DO'
  +#13#10'       EXECUTE PROCEDURE ZOO_UPDATE_CALCULO_PESAGEM KZOO_LACTACAO ;'
  +#13#10'END' ) ;

        ExecuteDirect (
        'CREATE OR ALTER TRIGGER ZOO_PESAGEM_LEITE_AIUD0 FOR ZOO_PESAGEM_LEITE'
  +#13#10'ACTIVE AFTER INSERT OR UPDATE OR DELETE POSITION 20001'
  +#13#10'AS'
  +#13#10'DECLARE PROCESSADO SYS$BOOL ;'
  +#13#10'begin'
  +#13#10''
  +#13#10'  IF ( RDB$GET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLOFF'' ) IS NOT NULL ) THEN'
  +#13#10'     EXIT ;'
  +#13#10''
  +#13#10''
  +#13#10'  if ((( inserting ) or ( updating ))'
  +#13#10'     AND NEW.KZOO_LOTEPESAGEM_LEITE IS NOT NULL ) then'
  +#13#10'     BEGIN'
  +#13#10'       SELECT PROCESSADO'
  +#13#10'       FROM ZOO_LOTEPESAGEM_LEITE'
  +#13#10'       WHERE KZOO_LOTEPESAGEM_LEITE = NEW.KZOO_LOTEPESAGEM_LEITE'
  +#13#10'       INTO PROCESSADO ;'
  +#13#10''
  +#13#10'       if (PROCESSADO IS DISTINCT FROM ''T'') then'
  +#13#10'          exit ;'
  +#13#10'     END'
  +#13#10''
  +#13#10'  -- atualizar a primeira/ultima pesagem de leite em lactacoes'
  +#13#10'  if ( inserting ) then'
  +#13#10'    begin'
  +#13#10'      if ( ((NEW.ORD1 is not null) or (NEW.ORD2 is not null) or (NEW.ORD3 is not null)) AND (NEW.ANIMAL_DOENTE = ''F'')) then'
  +#13#10'         EXECUTE PROCEDURE ZOO_UPDATE_CALCULO_PESAGEM NEW.KZOO_LACTACAO ;'
  +#13#10'    end'
  +#13#10'   else'
  +#13#10'    begin'
  +#13#10''
  +#13#10'      if (   ( deleting and ( ((OLD.ORD1 is not null) or (OLD.ORD2 is not null) or (OLD.ORD3 is not null)) AND (OLD.ANIMAL_DOENTE = ''F'')) )'
  +#13#10'          or ( OLD.KZOO_LACTACAO is distinct from NEW.KZOO_LACTACAO ) ) then'
  +#13#10'         EXECUTE PROCEDURE ZOO_UPDATE_CALCULO_PESAGEM  OLD.KZOO_LACTACAO ;'
  +#13#10''
  +#13#10'      if ( updating ) then'
  +#13#10'             EXECUTE PROCEDURE ZOO_UPDATE_CALCULO_PESAGEM NEW.KZOO_LACTACAO ;'
  +#13#10'    end'
  +#13#10'end' ) ;


          ExecuteDirect (
          'CREATE OR ALTER TRIGGER ZOO_PESAGEM_LEITE_BIUD1 FOR ZOO_PESAGEM_LEITE'
  +#13#10'ACTIVE BEFORE INSERT OR UPDATE OR DELETE POSITION 1001'
  +#13#10'AS'
  +#13#10'begin'
  +#13#10'  if ( inserting ) then'
  +#13#10'    begin'
  +#13#10'     IF (( NEW.KZOO_ANIMAL_FEMEA IS NULL ) or ( NEW.DATALACTACAO IS NULL )) THEN'
  +#13#10'       SELECT KZOO_ANIMAL_FEMEA, DATALACTACAO FROM ZOO_LACTACOES'
  +#13#10'       WHERE KZOO_LACTACAO = NEW.KZOO_LACTACAO'
  +#13#10'       INTO NEW.KZOO_ANIMAL_FEMEA, NEW.DATALACTACAO ;'
  +#13#10''
  +#13#10'      if (NEW.KZOO_LOTEPESAGEM_LEITE IS NULL ) then'
  +#13#10'       begin'
  +#13#10'         SELECT KZOO_LOTEPESAGEM_LEITE'
  +#13#10'         FROM ZOO_LOTEPESAGEM_LEITE'
  +#13#10'         WHERE KCAD_FAZENDA = NEW.KCAD_FAZENDA AND DATA = NEW.DATA'
  +#13#10'         INTO NEW.KZOO_LOTEPESAGEM_LEITE ;'
  +#13#10''
  +#13#10'         if (NEW.KZOO_LOTEPESAGEM_LEITE IS NULL ) then'
  +#13#10'           begin'
  +#13#10'             NEW.KZOO_LOTEPESAGEM_LEITE = GUID20() ;'
  +#13#10''
  +#13#10'             INSERT INTO ZOO_LOTEPESAGEM_LEITE (KZOO_LOTEPESAGEM_LEITE, KCAD_FAZENDA, DATA, TOTAL, NORD, PROCESSADO )'
  +#13#10'             VALUES (NEW.KZOO_LOTEPESAGEM_LEITE, NEW.KCAD_FAZENDA, NEW.DATA, 0, 3, ''T'' );'
  +#13#10'           end'
  +#13#10'       end'
  +#13#10''
  +#13#10'    end'
  +#13#10'  else if (updating) then'
  +#13#10'     begin'
  +#13#10'       if (  ( NEW.KZOO_PESAGEM_LEITE IS DISTINCT FROM old.KZOO_PESAGEM_LEITE )'
  +#13#10'          or ( NEW.KCAD_FAZENDA       IS DISTINCT FROM old.KCAD_FAZENDA       )'
  +#13#10'          or ( NEW.KZOO_LACTACAO      IS DISTINCT FROM old.KZOO_LACTACAO      )'
  +#13#10'          or ( NEW.KZOO_ANIMAL_FEMEA  IS DISTINCT FROM old.KZOO_ANIMAL_FEMEA  )'
  +#13#10'          or ( NEW.DATALACTACAO       IS DISTINCT FROM old.DATALACTACAO       )'
  +#13#10'          or ( NEW.DATA               IS DISTINCT FROM old.DATA               ) ) then'
  +#13#10'       UPDATE ZOO_PESAGEM_LEITE_ANALISE'
  +#13#10'         SET'
  +#13#10'           KZOO_PESAGEM_LEITE = NEW.KZOO_PESAGEM_LEITE,'
  +#13#10'           KCAD_FAZENDA       = NEW.KCAD_FAZENDA,'
  +#13#10'           KZOO_LACTACAO      = NEW.KZOO_LACTACAO,'
  +#13#10'           KZOO_ANIMAL_FEMEA  = NEW.KZOO_ANIMAL_FEMEA,'
  +#13#10'           DATALACTACAO       = NEW.DATALACTACAO,'
  +#13#10'           DATA               = NEW.DATA'
  +#13#10'       WHERE KZOO_PESAGEM_LEITE = old.KZOO_PESAGEM_LEITE ;'
  +#13#10'       /*'
  +#13#10'       if ( new.KZOO_PESAGEM_LEITE IS DISTINCT FROM old.KZOO_PESAGEM_LEITE ) then'
  +#13#10'        UPDATE ZOO_PESAGEM_LEITE_EQA'
  +#13#10'         SET'
  +#13#10'           KZOO_PESAGEM_LEITE = new.KZOO_PESAGEM_LEITE'
  +#13#10'        WHERE KZOO_PESAGEM_LEITE = old.KZOO_PESAGEM_LEITE ;'
  +#13#10'       */'
  +#13#10'     end'
  +#13#10'  else if (deleting) then'
  +#13#10'     begin'
  +#13#10'       DELETE FROM ZOO_PESAGEM_LEITE_ANALISE'
  +#13#10'       WHERE KZOO_PESAGEM_LEITE = old.KZOO_PESAGEM_LEITE ;'
  +#13#10'       /*'
  +#13#10'       DELETE FROM ZOO_PESAGEM_LEITE_EQA'
  +#13#10'       WHERE KZOO_PESAGEM_LEITE = old.KZOO_PESAGEM_LEITE ;'
  +#13#10'       */'
  +#13#10'     end'
  +#13#10''
  +#13#10'end' ) ;


        ExecuteDirect (
         'CREATE OR ALTER PROCEDURE ZOO_INIT_LOTEPESAGEM('
  +#13#10'    KZOO_LOTEPESAGEM_LEITE SYS$FKGUID20)'
  +#13#10'AS'
  +#13#10'declare variable kcad_fazenda sys$fkguid20;'
  +#13#10'declare variable data sys$date;'
  +#13#10'declare variable status_descarte type of sys$int;'
  +#13#10'BEGIN'
  +#13#10'  RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLOFF'', ''1'' ) ;'
  +#13#10''
  +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_ANIMAL'', ''DESCARTADO'' returning_values STATUS_DESCARTE ;'
  +#13#10''
  +#13#10'  SELECT KCAD_FAZENDA, DATA FROM ZOO_LOTEPESAGEM_LEITE'
  +#13#10'  WHERE KZOO_LOTEPESAGEM_LEITE = :KZOO_LOTEPESAGEM_LEITE'
  +#13#10'  INTO :KCAD_FAZENDA, :DATA ;'
  +#13#10''
  +#13#10'  DELETE FROM ZOO_PESAGEM_LEITE WHERE KZOO_LOTEPESAGEM_LEITE = :KZOO_LOTEPESAGEM_LEITE ;'
  +#13#10''
  +#13#10'  INSERT INTO ZOO_PESAGEM_LEITE'
  +#13#10'             ( KZOO_PESAGEM_LEITE, KCAD_FAZENDA,  KZOO_LACTACAO,    KZOO_ANIMAL_FEMEA,   DATALACTACAO,  KZOO_LOTEPESAGEM_LEITE,  DATA,     LOTE )'
  +#13#10'  SELECT       Guid20(),          :KCAD_FAZENDA, L.KZOO_LACTACAO, L.KZOO_ANIMAL_FEMEA, L.DATALACTACAO, :KZOO_LOTEPESAGEM_LEITE, :DATA, DAF.LOTE'
  +#13#10'     FROM ZOO_LACTACOES L'
  +#13#10'     LEFT JOIN ZOO_ANIMAIS A ON A.KZOO_ANIMAL =  L.KZOO_ANIMAL_FEMEA'
  +#13#10'     LEFT JOIN ZOO_ANIMAL_DESCARTES D ON D.KZOO_ANIMAL =  L.KZOO_ANIMAL_FEMEA'
  +#13#10'     LEFT JOIN ZOO_ANIMAIS_FEMEA DAF ON DAF.KZOO_ANIMAL_FEMEA =  A.KZOO_ANIMAL'
  +#13#10'     LEFT JOIN ZOO_PESAGEM_LEITE PL ON PL.KZOO_LACTACAO = L.KZOO_LACTACAO AND PL.DATA = :DATA'
  +#13#10'     WHERE L.KCAD_FAZENDA = :KCAD_FAZENDA'
  +#13#10'      AND L.DATALACTACAO <= :DATA'
  +#13#10'      AND PL.KZOO_PESAGEM_LEITE IS NULL'
  +#13#10'      AND (L.DATA_SECAGEM IS NULL OR L.DATA_SECAGEM >= :DATA)'
  +#13#10'      --AND A.STATUS <> :STATUS_DESCARTE'
  +#13#10'      AND ( D.KZOO_ANIMAL IS NULL OR D.DATA > :DATA ) ;'
  +#13#10''
  +#13#10'  RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLOFF'', NULL ) ;'
  +#13#10'END' ) ;

          ExecuteDirect (
         'CREATE OR ALTER PROCEDURE ZOO_UPDATE_CALCULO_PESAGEM('
  +#13#10'    KZOO_LACTACAO TYPE OF SYS$FKGUID20_NN)'
  +#13#10'AS'
  +#13#10'declare KCAD_FAZENDA type of SYS$FKGUID20;'
  +#13#10'declare KZOO_PESAGEM_LEITE type of SYS$FKGUID20;'
  +#13#10'declare KPRIMEIRA_PESAGEMLEITE type of SYS$FKGUID20;'
  +#13#10'declare PRIMEIRA_PESAGEMLEITE type of SYS$DATE;'
  +#13#10'declare KULTIMA_PESAGEMLEITE type of SYS$FKGUID20;'
  +#13#10'declare ULTIMA_PESAGEMLEITE type of SYS$DATE;'
  +#13#10'declare NL type of SYS$INT;'
  +#13#10'declare KZOO_ANIMAL_FEMEA type of SYS$FKGUID20;'
  +#13#10'declare DATALACTACAO type of SYS$DATE;'
  +#13#10'declare DATAPESAGEM type of SYS$DATE;'
  +#13#10'declare DEL type of SYS$INT;'
  +#13#10'declare DEL_PCL type of SYS$INT;'
  +#13#10'declare DATA_PICO SYS$DATE;'
  +#13#10'declare KPICO_PESAGEMLEITE type of SYS$FKGUID20;'
  +#13#10'declare PRODUCAO_PICO type of SYS$FLOAT;'
  +#13#10'declare PRODUCAO type of SYS$FLOAT;'
  +#13#10'declare P_GORDURA type of SYS$FLOAT;'
  +#13#10'declare GORDURA type of SYS$FLOAT;'
  +#13#10'declare P_PROTEINA type of SYS$FLOAT;'
  +#13#10'declare PROTEINA type of SYS$FLOAT;'
  +#13#10'declare DATA_ANTERIOR type of SYS$DATE;'
  +#13#10'declare DEL_ANTERIOR type of SYS$INT;'
  +#13#10'declare PRODUCAO_ANTERIOR type of SYS$FLOAT;'
  +#13#10'declare P_GORDURA_ANTERIOR type of SYS$FLOAT;'
  +#13#10'declare GORDURA_ANTERIOR type of SYS$FLOAT;'
  +#13#10'declare P_PROTEINA_ANTERIOR type of SYS$FLOAT;'
  +#13#10'declare PROTEINA_ANTERIOR type of SYS$FLOAT;'
  +#13#10'declare INTERVALO_DEL type of SYS$INT;'
  +#13#10'declare PRODUCAO_1 type of SYS$FLOAT;'
  +#13#10'declare GORDURA_1 type of SYS$FLOAT;'
  +#13#10'declare PROTEINA_1 type of SYS$FLOAT;'
  +#13#10'declare PRODUCAO_MEDIA type of SYS$FLOAT;'
  +#13#10'declare GORDURA_MEDIA type of SYS$FLOAT;'
  +#13#10'declare PROTEINA_MEDIA type of SYS$FLOAT;'
  +#13#10'declare PRODUCAO_UC type of SYS$FLOAT;'
  +#13#10'declare GORDURA_UC type of SYS$FLOAT;'
  +#13#10'declare PROTEINA_UC type of SYS$FLOAT;'
  +#13#10'declare NASCIMENTO type of SYS$DATE;'
  +#13#10'declare FATOR_PROJECAO_L305 type of ZOO$PROJECAOPRODUCAO;'
  +#13#10'declare FATOR_PROJECAO_GP305 type of ZOO$PROJECAOPRODUCAO;'
  +#13#10'declare IDADE_DIAS type of SYS$INT;'
  +#13#10'declare IDADE_MESES type of SYS$INT;'
  +#13#10'declare PRODUCAO_ACUMULADA type of SYS$FLOAT;'
  +#13#10'declare GORDURA_ACUMULADA type of SYS$FLOAT;'
  +#13#10'declare PROTEINA_ACUMULADA type of SYS$FLOAT;'
  +#13#10'declare PROJ_PRODUCAO305 type of SYS$FLOAT;'
  +#13#10'declare PROJ_GORDURA305 type of SYS$FLOAT;'
  +#13#10'declare PROJ_PROTEINA305 type of SYS$FLOAT;'
  +#13#10'declare DEL305 type of SYS$INT;'
  +#13#10'declare PL305 type of SYS$FLOAT;'
  +#13#10'declare PG305 type of SYS$FLOAT;'
  +#13#10'declare PP305 type of SYS$FLOAT;'
  +#13#10'declare DEL365 type of SYS$INT;'
  +#13#10'declare PL365 type of SYS$FLOAT;'
  +#13#10'declare PG365 type of SYS$FLOAT;'
  +#13#10'declare PP365 type of SYS$FLOAT;'
  +#13#10'declare FATOR_EQA_LEITE type of SYS$FLOAT;'
  +#13#10'declare FATOR_EQA_GP type of SYS$FLOAT;'
  +#13#10'declare FATOR_PCL type of ZOO$FATORPCL;'
  +#13#10'declare EQA_LEITE type of SYS$FLOAT;'
  +#13#10'declare EQA_GORDURA type of SYS$FLOAT;'
  +#13#10'declare EQA_PROTEINA type of SYS$FLOAT;'
  +#13#10'declare PRODUCAO_PREVISTA type of SYS$FLOAT;'
  +#13#10'declare NUMERO_ORDENHAS type of SYS$INT;'
  +#13#10'declare MAX_ORDENHAS_DIA type of SYS$INT;'
  +#13#10'declare TOTAL_ORDENHAS type of SYS$INT;'
  +#13#10'declare KLOTE_NAOPROCESSADO type of SYS$FKGUID20;'
  +#13#10'declare KZOO_LOTEPESAGEM_LEITE type of SYS$FKGUID20;'
  +#13#10'declare KZOO_PESAGEM_LEITE_EQA type of SYS$FKGUID20;'
  +#13#10'declare EQA_LEITE_OLD type of SYS$FLOAT;'
  +#13#10'declare EQA_GORDURA_OLD type of SYS$FLOAT;'
  +#13#10'declare EQA_PROTEINA_OLD type of SYS$FLOAT;'
  +#13#10'declare EQA_CHANGED varchar( 1 ) = null ;'
  +#13#10'declare JNL$OFF varchar( 1 ) ;'
  +#13#10'declare ZOO$CLOFF varchar( 1 ) ;'
  +#13#10'declare CG integer ;'
  +#13#10'BEGIN'
  +#13#10''
  +#13#10'  if ( RDB$GET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLOFF'' ) = ''1'' ) THEN'
  +#13#10'     EXIT ;'
  +#13#10''
  +#13#10'  KPRIMEIRA_PESAGEMLEITE = null ;'
  +#13#10'  KULTIMA_PESAGEMLEITE   = null ;'
  +#13#10'  KPICO_PESAGEMLEITE     = null ;'
  +#13#10'  KCAD_FAZENDA           = null ;'
  +#13#10'  DEL                    = null ;'
  +#13#10'  KLOTE_NAOPROCESSADO    = null ;'
  +#13#10'  TOTAL_ORDENHAS         = 0 ;'
  +#13#10'  MAX_ORDENHAS_DIA       = 0 ;'
  +#13#10''
  +#13#10''
  +#13#10'  SELECT L.KCAD_FAZENDA, L.KZOO_ANIMAL_FEMEA, L.DATALACTACAO, L.NL FROM ZOO_LACTACOES  L'
  +#13#10'  WHERE KZOO_LACTACAO = :KZOO_LACTACAO'
  +#13#10'  INTO  :KCAD_FAZENDA, :KZOO_ANIMAL_FEMEA, DATALACTACAO, NL ;'
  +#13#10''
  +#13#10'  if ( KCAD_FAZENDA is null ) then'
  +#13#10'     exit ;'
  +#13#10''
  +#13#10'  SELECT KZOO_LOTEPESAGEM_LEITE FROM ZOO_LOTEPESAGEM_LEITE'
  +#13#10'  WHERE KCAD_FAZENDA = :KCAD_FAZENDA AND PROCESSADO = ''F'''
  +#13#10'  INTO KLOTE_NAOPROCESSADO  ;'
  +#13#10''
  +#13#10'  SELECT NASCIMENTO FROM ZOO_ANIMAIS_FEMEA WHERE KZOO_ANIMAL_FEMEA = :KZOO_ANIMAL_FEMEA INTO :NASCIMENTO ;'
  +#13#10''
  +#13#10'--  IN AUTONOMOUS TRANSACTION DO'
  +#13#10'--     DELETE FROM ZOO_PESAGEM_LEITE_EQA WHERE  KZOO_LACTACAO = :KZOO_LACTACAO ;'
  +#13#10'--  IN AUTONOMOUS TRANSACTION DO'
  +#13#10'--     SELECT COUNT(*) FROM ZOO_PESAGEM_LEITE_EQA WHERE KZOO_LACTACAO = :KZOO_LACTACAO INTO CG ;'
  +#13#10''
  +#13#10'  FOR'
  +#13#10'   SELECT'
  +#13#10'    KZOO_PESAGEM_LEITE,'
  +#13#10'    KZOO_LOTEPESAGEM_LEITE,'
  +#13#10'    DATA,'
  +#13#10'    (IIF( ORD1 IS null, 0, 1 ) + IIF( ORD2 IS null, 0, 1 ) +IIF( ORD3 IS null, 0, 1 )),'
  +#13#10'    TOTAL'
  +#13#10'   FROM ZOO_PESAGEM_LEITE'
  +#13#10'   WHERE KZOO_LACTACAO = :KZOO_LACTACAO'
  +#13#10'     AND ANIMAL_DOENTE = ''F'''
  +#13#10'     AND DATA > :DATALACTACAO'
  +#13#10'--   PLAN (ZOO_PESAGEM_LEITE INDEX (IXZOO_PESAGEM_LEITE_02))'
  +#13#10'   ORDER BY KZOO_LACTACAO, DATA'
  +#13#10'  INTO KZOO_PESAGEM_LEITE, KZOO_LOTEPESAGEM_LEITE, DATAPESAGEM, NUMERO_ORDENHAS, PRODUCAO'
  +#13#10'  AS CURSOR PESAGEM_LEITE'
  +#13#10'  DO'
  +#13#10'    IF (( KZOO_LOTEPESAGEM_LEITE IS NULL ) OR (KLOTE_NAOPROCESSADO IS NULL) or (KZOO_LOTEPESAGEM_LEITE <> KLOTE_NAOPROCESSADO )) then'
  +#13#10'    begin'
  +#13#10''
  +#13#10'      TOTAL_ORDENHAS = TOTAL_ORDENHAS + NUMERO_ORDENHAS ;'
  +#13#10'      if ( NUMERO_ORDENHAS >  MAX_ORDENHAS_DIA ) then'
  +#13#10'        MAX_ORDENHAS_DIA = NUMERO_ORDENHAS ;'
  +#13#10''
  +#13#10'      -- idade do animal na data da pesagem'
  +#13#10'      IDADE_DIAS  = CAST ( DATAPESAGEM - NASCIMENTO AS INTEGER) ;'
  +#13#10'      IDADE_MESES = CAST ( IDADE_DIAS/30.4 AS integer ) ;'
  +#13#10''
  +#13#10'      -- DEL'
  +#13#10''
  +#13#10'      --DEL = CAST(DATAPESAGEM - DATALACTACAO AS INTEGER) ;'
  +#13#10'      DEL = CAST( (CAST ( DATAPESAGEM AS DATE ) - CAST ( DATALACTACAO AS DATE )) AS INTEGER) ;'
  +#13#10'      INTERVALO_DEL = DEL - DEL_ANTERIOR ; --COALESCE ( DEL_ANTERIOR, 0 ) ;'
  +#13#10''
  +#13#10'      EXECUTE PROCEDURE ZOO_GET_PROJECAO_PRODUCAO DEL, IDADE_MESES returning_values :FATOR_PROJECAO_L305, :FATOR_PROJECAO_GP305 ;'
  +#13#10'      EXECUTE PROCEDURE ZOO_GET_EQA IDADE_MESES returning_values :FATOR_EQA_LEITE, :FATOR_EQA_GP ;'
  +#13#10''
  +#13#10'      if ( KPRIMEIRA_PESAGEMLEITE is null ) then'
  +#13#10'        begin'
  +#13#10''
  +#13#10'           -- porcentagem de gordura, proteina da 1a analise da lactacao'
  +#13#10'           SELECT A.GORDURA / 100 GORDURA, A.PROTEINA / 100 GORDURA'
  +#13#10'           FROM ZOO_PESAGEM_LEITE_ANALISE A'
  +#13#10'           WHERE A.KZOO_LACTACAO     = :KZOO_LACTACAO'
  +#13#10'           ORDER BY A.KZOO_LACTACAO, A.DATA'
  +#13#10'           ROWS 1'
  +#13#10'           INTO P_GORDURA, P_PROTEINA ;'
  +#13#10''
  +#13#10'           -- calculo Gordura, Proteina'
  +#13#10'           GORDURA  = PRODUCAO * P_GORDURA  ;'
  +#13#10'           PROTEINA = PRODUCAO * P_PROTEINA ;'
  +#13#10''
  +#13#10'           -- atualiza a 1a pesagem'
  +#13#10'           DEL_PCL    = DEL ;'
  +#13#10'           KPRIMEIRA_PESAGEMLEITE = KZOO_PESAGEM_LEITE ;'
  +#13#10'           PRIMEIRA_PESAGEMLEITE  = DATAPESAGEM ;'
  +#13#10''
  +#13#10'           -- fator pcl em funcao do del / idade em anos'
  +#13#10'           EXECUTE PROCEDURE ZOO_GET_FCPCL ( DEL_PCL, CAST(PRIMEIRA_PESAGEMLEITE - NASCIMENTO as INTEGER) / 365.0 ) returning_values FATOR_PCL ;'
  +#13#10''
  +#13#10'           PRODUCAO_1 = PRODUCAO * FATOR_PCL * DEL_PCL ;'
  +#13#10'           GORDURA_1  = GORDURA  * FATOR_PCL * DEL_PCL ;'
  +#13#10'           PROTEINA_1 = PROTEINA * FATOR_PCL * DEL_PCL ;'
  +#13#10''
  +#13#10'        end'
  +#13#10'      else -- checa se existe uma analise na pesagem atual'
  +#13#10'        begin'
  +#13#10''
  +#13#10'          SELECT IIF ( A.GORDURA = 0, :P_GORDURA, A.GORDURA / 100 ), IIF ( A.PROTEINA = 0, :P_PROTEINA, A.PROTEINA / 100)'
  +#13#10'            FROM ZOO_PESAGEM_LEITE_ANALISE A'
  +#13#10'            WHERE A.KZOO_PESAGEM_LEITE = :KZOO_PESAGEM_LEITE'
  +#13#10'          INTO P_GORDURA, P_PROTEINA ;'
  +#13#10''
  +#13#10'          -- calculo Gordura, Proteina'
  +#13#10'          GORDURA  = PRODUCAO * P_GORDURA  ;'
  +#13#10'          PROTEINA = PRODUCAO * P_PROTEINA ;'
  +#13#10'         end'
  +#13#10''
  +#13#10'      -- calculo Gordura, Proteina anteriror'
  +#13#10'      GORDURA_ANTERIOR       = PRODUCAO_ANTERIOR * P_GORDURA_ANTERIOR  ;'
  +#13#10'      PROTEINA_ANTERIOR      = PRODUCAO_ANTERIOR * P_PROTEINA_ANTERIOR ;'
  +#13#10'      -- dados da ultima pesagem'
  +#13#10'      KULTIMA_PESAGEMLEITE = KZOO_PESAGEM_LEITE ;'
  +#13#10'      ULTIMA_PESAGEMLEITE  = DATAPESAGEM ;'
  +#13#10'      PRODUCAO_UC = PRODUCAO ;'
  +#13#10'      GORDURA_UC  = GORDURA  ;'
  +#13#10'      PROTEINA_UC = PROTEINA ;'
  +#13#10''
  +#13#10'      -- dados do pico'
  +#13#10'      if (   ( DEL BETWEEN 45 AND 90 )'
  +#13#10'         AND (    (KPICO_PESAGEMLEITE IS NULL)'
  +#13#10'               or (PRODUCAO > PRODUCAO_PICO)'
  +#13#10'              )'
  +#13#10'         ) then'
  +#13#10'        begin'
  +#13#10'         KPICO_PESAGEMLEITE = KZOO_PESAGEM_LEITE ;'
  +#13#10'         DATA_PICO           = DATAPESAGEM       ;'
  +#13#10'         PRODUCAO_PICO       = PRODUCAO          ;'
  +#13#10'        end'
  +#13#10''
  +#13#10''
  +#13#10'      -- calculo média de Produção, Gordura, Proteina'
  +#13#10'      PRODUCAO_MEDIA    = ((PRODUCAO + PRODUCAO_ANTERIOR)/2) * INTERVALO_DEL ;'
  +#13#10'      GORDURA_MEDIA     = ((GORDURA  + GORDURA_ANTERIOR )/2) * INTERVALO_DEL ;'
  +#13#10'      PROTEINA_MEDIA    = ((PROTEINA + PROTEINA_ANTERIOR)/2) * INTERVALO_DEL ;'
  +#13#10''
  +#13#10'      if ( KZOO_PESAGEM_LEITE = KPRIMEIRA_PESAGEMLEITE ) then'
  +#13#10'        begin'
  +#13#10'           PRODUCAO_ACUMULADA    = 0 ; -- PRODUCAO ;'
  +#13#10'           GORDURA_ACUMULADA     = 0 ; -- GORDURA  ;'
  +#13#10'           PROTEINA_ACUMULADA    = 0 ; -- PROTEINA ;'
  +#13#10'        end'
  +#13#10'      else'
  +#13#10'        begin'
  +#13#10'           -- projecao de Produção, Gordura, Proteina'
  +#13#10'          PRODUCAO_ACUMULADA    = PRODUCAO_ACUMULADA + PRODUCAO_MEDIA ;'
  +#13#10'          GORDURA_ACUMULADA     = GORDURA_ACUMULADA  + GORDURA_MEDIA  ;'
  +#13#10'          PROTEINA_ACUMULADA    = PROTEINA_ACUMULADA + PROTEINA_MEDIA ;'
  +#13#10'        end'
  +#13#10''
  +#13#10'      PROJ_PRODUCAO305  = (PRODUCAO_1 + PRODUCAO_ACUMULADA) * FATOR_PROJECAO_L305  ;'
  +#13#10'      PROJ_GORDURA305   = (GORDURA_1  + GORDURA_ACUMULADA ) * FATOR_PROJECAO_GP305 ;'
  +#13#10'      PROJ_PROTEINA305  = (PROTEINA_1 + PROTEINA_ACUMULADA) * FATOR_PROJECAO_GP305 ;'
  +#13#10''
  +#13#10'      if ( DEL >= 305 AND PL305 IS NULL ) then'
  +#13#10'        begin'
  +#13#10'           DEL305 = DEL ;'
  +#13#10'           PL305 = (PRODUCAO_1 + PRODUCAO_ACUMULADA) / DEL * 305 ;'
  +#13#10'           PG305 = (GORDURA_1  + GORDURA_ACUMULADA ) / DEL * 305 ;'
  +#13#10'           PP305 = (PROTEINA_1 + PROTEINA_ACUMULADA) / DEL * 305 ;'
  +#13#10'        end'
  +#13#10''
  +#13#10'      if ( DEL >= 365 AND DEL365 IS NULL ) then'
  +#13#10'        begin'
  +#13#10'           DEL365 = DEL ;'
  +#13#10'           PL365 = (PRODUCAO_1 + PRODUCAO_ACUMULADA) / DEL * 365 ;'
  +#13#10'           PG365 = (GORDURA_1  + GORDURA_ACUMULADA ) / DEL * 365 ;'
  +#13#10'           PP365 = (PROTEINA_1 + PROTEINA_ACUMULADA) / DEL * 365 ;'
  +#13#10'        end'
  +#13#10''
  +#13#10'      EQA_LEITE    = COALESCE ( PL305, PROJ_PRODUCAO305 ) * FATOR_EQA_LEITE ;'
  +#13#10'      EQA_GORDURA  = COALESCE ( PG305, PROJ_GORDURA305  ) * FATOR_EQA_GP    ;'
  +#13#10'      EQA_PROTEINA = COALESCE ( PP305, PROJ_PROTEINA305 ) * FATOR_EQA_GP    ;'
  +#13#10''
  +#13#10'      JNL$OFF   = RDB$GET_CONTEXT( ''USER_TRANSACTION'', ''JNL$OFF'' ) ;'
  +#13#10'      RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''JNL$OFF'', ''1'' ) ;'
  +#13#10''
  +#13#10'      ZOO$CLOFF = RDB$GET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLOFF'' ) ;'
  +#13#10'      RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLOFF'', ''1'' ) ;'
  +#13#10''
  +#13#10'-- removido 30.11.2012 a pedido de R.S.M.'
  +#13#10'--     INSERT'
  +#13#10'--      INTO TMP_PESAGEM_LEITE_EQA'
  +#13#10'--       ( KZOO_PESAGEM_LEITE, KCAD_FAZENDA, KZOO_LACTACAO, DATA, EQA_LEITE, EQA_GORDURA, EQA_PROTEINA )'
  +#13#10'--      VALUES'
  +#13#10'--       ( :KZOO_PESAGEM_LEITE, :KCAD_FAZENDA, :KZOO_LACTACAO, :DATAPESAGEM, :EQA_LEITE, :EQA_GORDURA, :EQA_PROTEINA ) ;'
  +#13#10''
  +#13#10'/* versao antiga'
  +#13#10'      KZOO_PESAGEM_LEITE_EQA = NULL ;'
  +#13#10'      SELECT KZOO_PESAGEM_LEITE, EQA_LEITE, EQA_GORDURA, EQA_PROTEINA FROM ZOO_PESAGEM_LEITE_EQA'
  +#13#10'      WHERE KZOO_PESAGEM_LEITE = :KZOO_PESAGEM_LEITE'
  +#13#10'      INTO KZOO_PESAGEM_LEITE_EQA, EQA_LEITE_OLD, EQA_GORDURA_OLD, EQA_PROTEINA_OLD ;'
  +#13#10''
  +#13#10'      IF ( KZOO_PESAGEM_LEITE_EQA IS NULL ) THEN'
  +#13#10'        BEGIN'
  +#13#10'          EQA_CHANGED = ''T'' ;'
  +#13#10'          INSERT'
  +#13#10'           INTO ZOO_PESAGEM_LEITE_EQA'
  +#13#10'             ( KZOO_PESAGEM_LEITE, KCAD_FAZENDA, KZOO_LACTACAO, DATA, EQA_LEITE, EQA_GORDURA, EQA_PROTEINA )'
  +#13#10'           VALUES'
  +#13#10'             ( :KZOO_PESAGEM_LEITE, :KCAD_FAZENDA, :KZOO_LACTACAO, :DATAPESAGEM, :EQA_LEITE, :EQA_GORDURA, :EQA_PROTEINA ) ;'
  +#13#10'        END'
  +#13#10'      ELSE IF (   (EQA_LEITE_OLD    IS DISTINCT FROM EQA_LEITE )'
  +#13#10'               OR (EQA_GORDURA_OLD  IS DISTINCT FROM EQA_GORDURA)'
  +#13#10'               OR (EQA_PROTEINA_OLD IS DISTINCT FROM EQA_PROTEINA) ) THEN'
  +#13#10'        BEGIN'
  +#13#10'          EQA_CHANGED = ''T'' ;'
  +#13#10'          UPDATE ZOO_PESAGEM_LEITE_EQA'
  +#13#10'             SET'
  +#13#10'               EQA_LEITE    = :EQA_LEITE,'
  +#13#10'               EQA_GORDURA  = :EQA_GORDURA,'
  +#13#10'               EQA_PROTEINA =  :EQA_PROTEINA'
  +#13#10'          WHERE KZOO_PESAGEM_LEITE = :KZOO_PESAGEM_LEITE ;'
  +#13#10'        END'
  +#13#10'*/'
  +#13#10'      RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLOFF'', ZOO$CLOFF ) ;'
  +#13#10'      RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''JNL$OFF'',   JNL$OFF   ) ;'
  +#13#10''
  +#13#10'      IF ( NL > 1 ) then'
  +#13#10'        PRODUCAO_PREVISTA = PRODUCAO_ANTERIOR - (PRODUCAO_ANTERIOR * ( DEL - DEL_ANTERIOR ) * 0.003) ;'
  +#13#10'      ELSE'
  +#13#10'       PRODUCAO_PREVISTA = PRODUCAO_ANTERIOR - (PRODUCAO_ANTERIOR * ( DEL - DEL_ANTERIOR ) *  0.002) ;'
  +#13#10''
  +#13#10'       -- copia para dados anteriores.'
  +#13#10'      DATA_ANTERIOR         = DATAPESAGEM ;'
  +#13#10'      DEL_ANTERIOR          = DEL  ;'
  +#13#10'      PRODUCAO_ANTERIOR     = PRODUCAO    ;'
  +#13#10'      P_GORDURA_ANTERIOR    = P_GORDURA   ;'
  +#13#10'      P_PROTEINA_ANTERIOR   = P_PROTEINA  ;'
  +#13#10'    end'
  +#13#10''
  +#13#10'   RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLRCL'', ''1'' ) ;'
  +#13#10''
  +#13#10'   if ( DEL305 is NULL ) then'
  +#13#10'     begin'
  +#13#10'      PL305 = PROJ_PRODUCAO305  ;'
  +#13#10'      PG305 = PROJ_GORDURA305   ;'
  +#13#10'      PP305 = PROJ_PROTEINA305  ;'
  +#13#10'     end'
  +#13#10''
  +#13#10'   --- atualização da lactacao'
  +#13#10'   UPDATE ZOO_LACTACOES'
  +#13#10'     SET'
  +#13#10'         NUMERO_ORDENHAS        = :TOTAL_ORDENHAS,'
  +#13#10'         MAX_ORDENHAS_DIA       = :MAX_ORDENHAS_DIA,'
  +#13#10'         NASCIMENTO             = :NASCIMENTO,'
  +#13#10'         KPRIMEIRA_PESAGEMLEITE = :KPRIMEIRA_PESAGEMLEITE,'
  +#13#10'         PRIMEIRA_PESAGEMLEITE  = :PRIMEIRA_PESAGEMLEITE,'
  +#13#10'         KULTIMA_PESAGEMLEITE   = :KULTIMA_PESAGEMLEITE,'
  +#13#10'         ULTIMA_PESAGEMLEITE    = :ULTIMA_PESAGEMLEITE,'
  +#13#10'         KPICO_PESAGEMLEITE     = :KPICO_PESAGEMLEITE,'
  +#13#10'         DATA_PICO              = :DATA_PICO,'
  +#13#10'         PRODUCAO_PICO          = :PRODUCAO_PICO,'
  +#13#10'         PRODUCAO_1             = :PRODUCAO_1,'
  +#13#10'         GORDURA_1              = :GORDURA_1,'
  +#13#10'         PROTEINA_1             = :PROTEINA_1,'
  +#13#10'         PRODUCAO_MEDIA         = :PRODUCAO_ACUMULADA,'
  +#13#10'         GORDURA_MEDIA          = :GORDURA_ACUMULADA,'
  +#13#10'         PROTEINA_MEDIA         = :PROTEINA_ACUMULADA,'
  +#13#10'         PRODUCAO_UC            = :PRODUCAO_UC,'
  +#13#10'         GORDURA_UC             = :GORDURA_UC,'
  +#13#10'         PROTEINA_UC            = :PROTEINA_UC,'
  +#13#10'         PRODUCAO_PREVISTA      = :PRODUCAO_PREVISTA,'
  +#13#10'         DEL305                 = :DEL305,'
  +#13#10'         PL305                  = :PL305,'
  +#13#10'         PG305                  = :PG305,'
  +#13#10'         PP305                  = :PP305,'
  +#13#10'         DEL365                 = :DEL365,'
  +#13#10'         PL365                  = :PL365,'
  +#13#10'         PG365                  = :PG365,'
  +#13#10'         PP365                  = :PP365,'
  +#13#10'         EQA_LEITE              = :EQA_LEITE,'
  +#13#10'         EQA_GORDURA            = :EQA_GORDURA,'
  +#13#10'         EQA_PROTEINA           = :EQA_PROTEINA'
  +#13#10'    WHERE'
  +#13#10'         ( KZOO_LACTACAO = :KZOO_LACTACAO )'
  +#13#10'     AND ( NUMERO_ORDENHAS        IS DISTINCT FROM :TOTAL_ORDENHAS'
  +#13#10'         OR MAX_ORDENHAS_DIA       IS DISTINCT FROM :MAX_ORDENHAS_DIA'
  +#13#10'         OR NASCIMENTO             IS DISTINCT FROM :NASCIMENTO'
  +#13#10'         OR KPRIMEIRA_PESAGEMLEITE IS DISTINCT FROM :KPRIMEIRA_PESAGEMLEITE'
  +#13#10'         OR PRIMEIRA_PESAGEMLEITE  IS DISTINCT FROM :PRIMEIRA_PESAGEMLEITE'
  +#13#10'         OR KULTIMA_PESAGEMLEITE   IS DISTINCT FROM :KULTIMA_PESAGEMLEITE'
  +#13#10'         OR ULTIMA_PESAGEMLEITE    IS DISTINCT FROM :ULTIMA_PESAGEMLEITE'
  +#13#10'         OR KPICO_PESAGEMLEITE     IS DISTINCT FROM :KPICO_PESAGEMLEITE'
  +#13#10'         OR DATA_PICO              IS DISTINCT FROM :DATA_PICO'
  +#13#10'         OR PRODUCAO_PICO          IS DISTINCT FROM :PRODUCAO_PICO'
  +#13#10'         OR PRODUCAO_1             IS DISTINCT FROM :PRODUCAO_1'
  +#13#10'         OR GORDURA_1              IS DISTINCT FROM :GORDURA_1'
  +#13#10'         OR PROTEINA_1             IS DISTINCT FROM :PROTEINA_1'
  +#13#10'         OR PRODUCAO_MEDIA         IS DISTINCT FROM :PRODUCAO_ACUMULADA'
  +#13#10'         OR GORDURA_MEDIA          IS DISTINCT FROM :GORDURA_ACUMULADA'
  +#13#10'         OR PROTEINA_MEDIA         IS DISTINCT FROM :PROTEINA_ACUMULADA'
  +#13#10'         OR PRODUCAO_UC            IS DISTINCT FROM :PRODUCAO_UC'
  +#13#10'         OR GORDURA_UC             IS DISTINCT FROM :GORDURA_UC'
  +#13#10'         OR PROTEINA_UC            IS DISTINCT FROM :PROTEINA_UC'
  +#13#10'         OR PRODUCAO_PREVISTA      IS DISTINCT FROM :PRODUCAO_PREVISTA'
  +#13#10'         OR DEL305                 IS DISTINCT FROM :DEL305'
  +#13#10'         OR PL305                  IS DISTINCT FROM :PL305'
  +#13#10'         OR PG305                  IS DISTINCT FROM :PG305'
  +#13#10'         OR PP305                  IS DISTINCT FROM :PP305'
  +#13#10'         OR DEL365                 IS DISTINCT FROM :DEL365'
  +#13#10'         OR PL365                  IS DISTINCT FROM :PL365'
  +#13#10'         OR PG365                  IS DISTINCT FROM :PG365'
  +#13#10'         OR PP365                  IS DISTINCT FROM :PP365'
  +#13#10'         OR EQA_LEITE              IS DISTINCT FROM :EQA_LEITE'
  +#13#10'         OR EQA_GORDURA            IS DISTINCT FROM :EQA_GORDURA'
  +#13#10'         OR EQA_PROTEINA           IS DISTINCT FROM :EQA_PROTEINA ) ;'
  +#13#10''
  +#13#10'    RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLRCL'', NULL ) ;'
  +#13#10''
  +#13#10'    EQA_LEITE    = 0 ;'
  +#13#10'    EQA_GORDURA  = 0 ;'
  +#13#10'    EQA_PROTEINA = 0 ;'
  +#13#10''
  +#13#10'-- removido em 30.11.2012 a pedido de R.S.M.'
  +#13#10'/*    if (( ULTIMA_PESAGEMLEITE IS NOT NULL ) and ( EQA_CHANGED IS NOT NULL )) THEN'
  +#13#10'      begin'
  +#13#10''
  +#13#10'        INSERT'
  +#13#10'        INTO ZOO_PESAGEM_LEITE_EQA'
  +#13#10'        SELECT * FROM TMP_PESAGEM_LEITE_EQA ;'
  +#13#10''
  +#13#10'        SELECT AVG( EQA_LEITE ), AVG( EQA_GORDURA ), AVG( EQA_PROTEINA )'
  +#13#10'        FROM ZOO_PESAGEM_LEITE_EQA'
  +#13#10'        WHERE KCAD_FAZENDA = :KCAD_FAZENDA AND DATA = :ULTIMA_PESAGEMLEITE'
  +#13#10'        INTO EQA_LEITE, EQA_GORDURA, EQA_PROTEINA ;'
  +#13#10''
  +#13#10'        UPDATE OR INSERT'
  +#13#10'        INTO ZOO_PESAGEM_LEITE_EQAMEDIA'
  +#13#10'          ( KCAD_FAZENDA, DATA, EQA_LEITE, EQA_GORDURA, EQA_PROTEINA )'
  +#13#10'        VALUES'
  +#13#10'          ( :KCAD_FAZENDA, :DATAPESAGEM, :EQA_LEITE, :EQA_GORDURA, :EQA_PROTEINA ) ;'
  +#13#10''
  +#13#10'      end'
  +#13#10'*/'
  +#13#10'END' ) ;


        ExecuteDirect (
        'EXECUTE BLOCK'
 +#13#10'AS'
 +#13#10'BEGIN'
 +#13#10'  RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLOFF'', ''1'' ) ; '
 +#13#10'  INSERT INTO ZOO_LOTEPESAGEM_LEITE'
 +#13#10'  ( KZOO_LOTEPESAGEM_LEITE, KCAD_FAZENDA, DATA, NORD, PROCESSADO, TOTAL )'
 +#13#10'  SELECT GUID20(), KCAD_FAZENDA, DATA, 2, ''T'', 0 FROM'
 +#13#10'  ('
 +#13#10'    SELECT DISTINCT P.KCAD_FAZENDA, P.DATA FROM ZOO_PESAGEM_LEITE P'
 +#13#10'    LEFT JOIN ZOO_LOTEPESAGEM_LEITE L ON L.KCAD_FAZENDA = P.KCAD_FAZENDA AND L.DATA = P.DATA'
 +#13#10'    WHERE P.KZOO_LOTEPESAGEM_LEITE IS NULL AND L.KZOO_LOTEPESAGEM_LEITE IS NULL'
 +#13#10'  ) ;'
 +#13#10''
 +#13#10'  UPDATE ZOO_PESAGEM_LEITE U'
 +#13#10'  SET U.KZOO_LOTEPESAGEM_LEITE ='
 +#13#10'   (SELECT S.KZOO_LOTEPESAGEM_LEITE FROM ZOO_LOTEPESAGEM_LEITE S'
 +#13#10'    WHERE S.KCAD_FAZENDA = U.KCAD_FAZENDA AND S.DATA = U.DATA)'
 +#13#10'  WHERE U.KZOO_LOTEPESAGEM_LEITE IS NULL ;'
 +#13#10''
 +#13#10'  UPDATE ZOO_LOTEPESAGEM_LEITE U'
 +#13#10'  SET U.TOTAL ='
 +#13#10'   (SELECT SUM(S.TOTAL) FROM ZOO_PESAGEM_LEITE S'
 +#13#10'    WHERE S.KZOO_LOTEPESAGEM_LEITE = U.KZOO_LOTEPESAGEM_LEITE) ;'
 +#13#10'  RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLOFF'', NULL ) ; '
 +#13#10'END' ) ;

end;

procedure TDBZootecnicoUpdate._5_000_32;
begin

       ExecuteDirect (
                 'CREATE OR ALTER TRIGGER ZOO_ANIMAIS_BIU0 FOR ZOO_ANIMAIS'
          +#13#10'ACTIVE BEFORE INSERT OR UPDATE POSITION 1001'
          +#13#10'AS'
          +#13#10'begin'
          +#13#10''
          +#13#10'    if (     ( NEW.STATUS IS DISTINCT FROM OLD.STATUS )'
          +#13#10'        and (( NEW.DATASTATUS IS NULL ) or (NEW.DATASTATUS IS NOT DISTINCT FROM OLD.DATASTATUS))'
          +#13#10'        ) then'
          +#13#10'      NEW.DATASTATUS = CURRENT_TIMESTAMP ;'
          +#13#10''
          +#13#10'    if ( NEW.BRINCO IS DISTINCT FROM OLD.BRINCO ) THEN'
          +#13#10'      NEW.BRINCO_ = IIF ( TRIM (NEW.BRINCO) SIMILAR TO ''[0-9]{''||CHAR_LENGTH(TRIM(NEW.BRINCO))||''}'', LPAD ( TRIM(UPPER(NEW.BRINCO)), 16, ''0'' ), ''A'' || TRIM(UPPER(NEW.BRINCO)) ) ;'
          +#13#10''
          +#13#10'    if (     ( NEW.BRINCO IS DISTINCT FROM OLD.BRINCO )'
          +#13#10'        and (( NEW.DATABRINCO IS NULL ) or (NEW.DATABRINCO IS NOT DISTINCT FROM OLD.DATABRINCO))'
          +#13#10'        ) then'
          +#13#10'      NEW.DATABRINCO = CURRENT_TIMESTAMP ;'
          +#13#10''
          +#13#10''
          +#13#10'    if   (    ( NullIf( TRIM ( NEW.NOMEESTABULO ), '''' ) is NULL )'
          +#13#10'           or (    ( NEW.BRINCO IS DISTINCT FROM OLD.BRINCO )'
          +#13#10'               and ( OLD.NOMEESTABULO = OLD.BRINCO )'
          +#13#10'               and ( NEW.NOMEESTABULO = OLD.BRINCO )'
          +#13#10'               )'
          +#13#10'         ) then'
          +#13#10'       NEW.NOMEESTABULO = NEW.BRINCO ;'
          +#13#10''
          +#13#10''
          +#13#10'    if   (    ( NullIf( TRIM ( NEW.NOMECOMPLETO ), '''' ) is NULL )'
          +#13#10'           or  (    ( NEW.BRINCO IS DISTINCT FROM OLD.BRINCO )'
          +#13#10'                and ( OLD.NOMECOMPLETO = OLD.BRINCO )'
          +#13#10'                and ( NEW.NOMECOMPLETO = OLD.BRINCO )'
          +#13#10'               )'
          +#13#10'         ) then'
          +#13#10'       NEW.NOMECOMPLETO = NEW.BRINCO ;'
          +#13#10''
          +#13#10'end' ) ;

            ExecuteDirect (
                        'UPDATE ZOO_ANIMAIS'
                 +#13#10'SET'
                 +#13#10'BRINCO_ = IIF ( TRIM (BRINCO) SIMILAR TO ''[0-9]{''||CHAR_LENGTH(TRIM(BRINCO))||''}'', LPAD ( TRIM(UPPER(BRINCO)), 16, ''0'' ), ''A'' || TRIM(UPPER(BRINCO)) )' ) ;

end ;

procedure TDBZootecnicoUpdate._5_000_31;
begin


       try
            ExecuteDirect (
                  'CREATE DOMAIN ZOO$BRINCO_ AS VARCHAR(16) CHARACTER SET ISO8859_1 COLLATE ISO8859_1' ) ;
       except
       end;

       try
            ExecuteDirect (
                  'ALTER TABLE ZOO_ANIMAIS ADD BRINCO_ ZOO$BRINCO_, ALTER BRINCO_ POSITION 4'  ) ;
       except
       end;
            ExecuteDirect (
                        'UPDATE ZOO_ANIMAIS'
                 +#13#10'SET'
                 +#13#10'BRINCO_ = IIF ( TRIM (BRINCO) SIMILAR TO ''[0-9]+'', ''0'', UPPER(SUBSTRING( TRIM(BRINCO) FROM 1 FOR 1 )) ) || LPAD ( TRIM(UPPER(BRINCO)), 15, ''0'' )' ) ;

       ExecuteDirect (
                 'CREATE OR ALTER TRIGGER ZOO_ANIMAIS_BIU0 FOR ZOO_ANIMAIS'
          +#13#10'ACTIVE BEFORE INSERT OR UPDATE POSITION 1001'
          +#13#10'AS'
          +#13#10'begin'
          +#13#10''
          +#13#10'    if (     ( NEW.STATUS IS DISTINCT FROM OLD.STATUS )'
          +#13#10'        and (( NEW.DATASTATUS IS NULL ) or (NEW.DATASTATUS IS NOT DISTINCT FROM OLD.DATASTATUS))'
          +#13#10'        ) then'
          +#13#10'      NEW.DATASTATUS = CURRENT_TIMESTAMP ;'
          +#13#10''
          +#13#10'    if ( NEW.BRINCO IS DISTINCT FROM OLD.BRINCO ) THEN'
          +#13#10'      NEW.BRINCO_ = IIF ( TRIM (NEW.BRINCO) SIMILAR TO ''[0-9]+'', ''0'', UPPER(SUBSTRING( TRIM(NEW.BRINCO) FROM 1 FOR 1 )) ) || LPAD ( TRIM(UPPER(NEW.BRINCO)), 15, ''0'' ) ;'
          +#13#10''
          +#13#10'    if (     ( NEW.BRINCO IS DISTINCT FROM OLD.BRINCO )'
          +#13#10'        and (( NEW.DATABRINCO IS NULL ) or (NEW.DATABRINCO IS NOT DISTINCT FROM OLD.DATABRINCO))'
          +#13#10'        ) then'
          +#13#10'      NEW.DATABRINCO = CURRENT_TIMESTAMP ;'
          +#13#10''
          +#13#10''
          +#13#10'    if   (    ( NullIf( TRIM ( NEW.NOMEESTABULO ), '''' ) is NULL )'
          +#13#10'           or (    ( NEW.BRINCO IS DISTINCT FROM OLD.BRINCO )'
          +#13#10'               and ( OLD.NOMEESTABULO = OLD.BRINCO )'
          +#13#10'               and ( NEW.NOMEESTABULO = OLD.BRINCO )'
          +#13#10'               )'
          +#13#10'         ) then'
          +#13#10'       NEW.NOMEESTABULO = NEW.BRINCO ;'
          +#13#10''
          +#13#10''
          +#13#10'    if   (    ( NullIf( TRIM ( NEW.NOMECOMPLETO ), '''' ) is NULL )'
          +#13#10'           or  (    ( NEW.BRINCO IS DISTINCT FROM OLD.BRINCO )'
          +#13#10'                and ( OLD.NOMECOMPLETO = OLD.BRINCO )'
          +#13#10'                and ( NEW.NOMECOMPLETO = OLD.BRINCO )'
          +#13#10'               )'
          +#13#10'         ) then'
          +#13#10'       NEW.NOMECOMPLETO = NEW.BRINCO ;'
          +#13#10''
          +#13#10'end' ) ;

            ExecuteDirect (
       'CREATE OR ALTER VIEW VRPT_FEMEAS('
  +#13#10'    KZOO_ANIMAL_FEMEA,'
  +#13#10'    KCAD_FAZENDA,'
  +#13#10'    BRINCO,'
  +#13#10'    BRINCO_,'
  +#13#10'    NOMEESTABULO,'
  +#13#10'    NOMECOMPLETO,'
  +#13#10'    REGISTRO,'
  +#13#10'    DTORIGEM,'
  +#13#10'    LOCAL_ORIGEM,'
  +#13#10'    PRECO_COMPRA,'
  +#13#10'    VACA,'
  +#13#10'    STATUS,'
  +#13#10'    DATASTATUS,'
  +#13#10'    INTENCAO_DESCARTE,'
  +#13#10'    CRIADOR,'
  +#13#10'    CIDCRIA,'
  +#13#10'    PERSISTE,'
  +#13#10'    POTENCIAL,'
  +#13#10'    DATABRINCO,'
  +#13#10'    RACA,'
  +#13#10'    SISBOV,'
  +#13#10'    GRAUSANGUE,'
  +#13#10'    COMPOSICAORACA,'
  +#13#10'    KULTIMO_EVENTO_ZOOTECNICO,'
  +#13#10'    ULTIMO_EVENTO_ZOOTECNICO,'
  +#13#10'    KULTIMO_CIO,'
  +#13#10'    ULTIMO_CIO,'
  +#13#10'    NUMERO_CIO,'
  +#13#10'    KULTIMA_MONTA,'
  +#13#10'    ULTIMA_MONTA,'
  +#13#10'    NUMERO_MONTA,'
  +#13#10'    KULTIMO_PARTO,'
  +#13#10'    ULTIMO_PARTO,'
  +#13#10'    KPRIMEIRA_LACTACAO,'
  +#13#10'    PRIMEIRA_LACTACAO,'
  +#13#10'    NUMERO_PRIMEIRALACTACAO,'
  +#13#10'    KULTIMA_LACTACAO,'
  +#13#10'    ULTIMA_LACTACAO,'
  +#13#10'    NUMERO_LACTACAO,'
  +#13#10'    NUMERO_ABORTO,'
  +#13#10'    NUMERO_COLETA,'
  +#13#10'    DOADOR_RECEPTOR,'
  +#13#10'    KMAIOR_PESO,'
  +#13#10'    MAIOR_PESO,'
  +#13#10'    NASCIMENTO,'
  +#13#10'    RETIRO,'
  +#13#10'    LOTE,'
  +#13#10'    VLOTE1,'
  +#13#10'    VLOTE2,'
  +#13#10'    VLOTE3,'
  +#13#10'    NUCLEO,'
  +#13#10'    REBANHO,'
  +#13#10'    DATALOTE,'
  +#13#10'    DATARETIRO,'
  +#13#10'    DPPC,'
  +#13#10'    DPP,'
  +#13#10'    DUC,'
  +#13#10'    KPAI,'
  +#13#10'    NOMEPAI,'
  +#13#10'    KMAE,'
  +#13#10'    NOMEMAE,'
  +#13#10'    MAEPAI,'
  +#13#10'    MAEMAE,'
  +#13#10'    PAIPAI,'
  +#13#10'    PAIMAE,'
  +#13#10'    BISF_MAEPAI,'
  +#13#10'    BISF_MAEMAE,'
  +#13#10'    BISF_PAIPAI,'
  +#13#10'    BISF_PAIMAE,'
  +#13#10'    BISM_MAEPAI,'
  +#13#10'    BISM_MAEMAE,'
  +#13#10'    BISM_PAIPAI,'
  +#13#10'    BISM_PAIMAE,'
  +#13#10'    IDADE,'
  +#13#10'    IAP,'
  +#13#10'    KULTIMO_DIAGNOSTICO,'
  +#13#10'    KPENULTIMO_DIAGNOSTICO,'
  +#13#10'    KULTIMO_PROTOCOLO,'
  +#13#10'    KPENULTIMO_PROTOCOLO,'
  +#13#10'    KULTIMA_TAREFA,'
  +#13#10'    KPENULTIMA_TAREFA)'
  +#13#10'AS'
  +#13#10'SELECT'
  +#13#10'    F.KZOO_ANIMAL_FEMEA,'
  +#13#10'    A.KCAD_FAZENDA,'
  +#13#10'    A.BRINCO,'
  +#13#10'    A.BRINCO_,'
  +#13#10'    A.NOMEESTABULO,'
  +#13#10'    A.NOMECOMPLETO,'
  +#13#10'    A.REGISTRO,'
  +#13#10'    A.DTORIGEM,'
  +#13#10'    A.LOCAL_ORIGEM,'
  +#13#10'    A.PRECO_COMPRA,'
  +#13#10'    A.VACA,'
  +#13#10'    (SELECT SYS$DESCRIPTION FROM SYS$TYPES_GETDESCRIPTION ( ''SIGLA_STATUS_FEMEA'', A.STATUS )) STATUS,'
  +#13#10'    A.DATASTATUS,'
  +#13#10'    F.INTENCAO_DESCARTE,'
  +#13#10'    A.CRIADOR,'
  +#13#10'    A.CIDCRIA,'
  +#13#10'    A.PERSISTE,'
  +#13#10'    A.POTENCIAL,'
  +#13#10'    A.DATABRINCO,'
  +#13#10'    A.RACA,'
  +#13#10'    A.SISBOV,'
  +#13#10'    A.GRAUSANGUE,'
  +#13#10'    A.COMPOSICAORACA,'
  +#13#10'    F.KULTIMO_EVENTO_ZOOTECNICO,'
  +#13#10'    F.ULTIMO_EVENTO_ZOOTECNICO,'
  +#13#10'    F.KULTIMO_CIO,'
  +#13#10'    F.ULTIMO_CIO,'
  +#13#10'    F.NUMERO_CIO,'
  +#13#10'    F.KULTIMA_MONTA,'
  +#13#10'    F.ULTIMA_MONTA,'
  +#13#10'    F.NUMERO_MONTA,'
  +#13#10'    F.KULTIMO_PARTO,'
  +#13#10'    F.ULTIMO_PARTO,'
  +#13#10'    F.KPRIMEIRA_LACTACAO,'
  +#13#10'    F.PRIMEIRA_LACTACAO,'
  +#13#10'    F.NUMERO_PRIMEIRALACTACAO,'
  +#13#10'    F.KULTIMA_LACTACAO,'
  +#13#10'    F.ULTIMA_LACTACAO,'
  +#13#10'    F.NUMERO_LACTACAO,'
  +#13#10'    F.NUMERO_ABORTO,'
  +#13#10'    F.NUMERO_COLETA,'
  +#13#10'    (SELECT SYS$DESCRIPTION FROM SYS$TYPES_GETDESCRIPTION ( ''TIPO_DOADOR_RECEPTOR'', F.DOADOR_RECEPTOR )) DOADOR_RECEPTOR,'
  +#13#10'    F.KMAIOR_PESO,'
  +#13#10'    F.MAIOR_PESO,'
  +#13#10'    F.NASCIMENTO,'
  +#13#10'    F.RETIRO,'
  +#13#10'    F.LOTE,'
  +#13#10'    F.VLOTE1,'
  +#13#10'    F.VLOTE2,'
  +#13#10'    F.VLOTE3,'
  +#13#10'    F.NUCLEO,'
  +#13#10'    F.REBANHO,'
  +#13#10'    F.DATALOTE,'
  +#13#10'    F.DATARETIRO,'
  +#13#10'   (SELECT CAST ( CAST ( E.DATAEVENTO AS DATE ) - CAST ( F.ULTIMA_LACTACAO AS DATE ) AS INTEGER) FROM ZOO_EVENTOS_ZOOTECNICOS E WHERE E.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND E.DATAEVENTO > F.ULTIMA_LACTACAO ORDER BY E.DATAEVENTO ROWS 1) DPPC,'
  +#13#10'  --  0 DPPC,'
  +#13#10'    TRUNC ( CURRENT_TIMESTAMP - F.ULTIMA_LACTACAO ) DPP,'
  +#13#10'    TRUNC ( CURRENT_TIMESTAMP - F.ULTIMO_CIO ) DUC,'
  +#13#10'    DPAI1.KZOO_ANIMAL_PARENT  KPAI,'
  +#13#10'    DPAI1.NOMEANIMAL_PARENTE  NOMEPAI,'
  +#13#10'    DMAE1.KZOO_ANIMAL_PARENT  KMAE,'
  +#13#10'    DMAE1.NOMEANIMAL_PARENTE  NOMEMAE,'
  +#13#10'    DMAEPAI.NOMEANIMAL_PARENTE  MAEPAI,'
  +#13#10'    DMAEMAE.NOMEANIMAL_PARENTE  MAEMAE,'
  +#13#10'    DPAIPAI.NOMEANIMAL_PARENTE  PAIPAI,'
  +#13#10'    DPAIMAE.NOMEANIMAL_PARENTE  PAIMAE,'
  +#13#10''
  +#13#10'    BISF_MAEPAI.NOMEANIMAL_PARENTE BISF_MAEPAI,'
  +#13#10'    BISF_MAEMAE.NOMEANIMAL_PARENTE BISF_MAEMAE,'
  +#13#10'    BISF_PAIPAI.NOMEANIMAL_PARENTE BISF_PAIPAI,'
  +#13#10'    BISF_PAIMAE.NOMEANIMAL_PARENTE BISF_PAIMAE,'
  +#13#10''
  +#13#10'    BISM_MAEPAI.NOMEANIMAL_PARENTE BISM_MAEPAI,'
  +#13#10'    BISM_MAEMAE.NOMEANIMAL_PARENTE BISM_MAEMAE,'
  +#13#10'    BISM_PAIPAI.NOMEANIMAL_PARENTE BISM_PAIPAI,'
  +#13#10'    BISM_PAIMAE.NOMEANIMAL_PARENTE BISM_PAIMAE,'
  +#13#10''
  +#13#10'    CAST ( CAST ( (CURRENT_TIMESTAMP - F.NASCIMENTO) / 30.4 AS NUMERIC ( 5, 1 ) ) AS SYS$FLOAT )IDADE,'
  +#13#10'    CAST ( CAST ( (F.ULTIMO_PARTO - F.NASCIMENTO) / 30.4  AS NUMERIC ( 5, 1 ) ) AS SYS$FLOAT ) IAP,'
  +#13#10'    (select ud.KZOO_ANIMAL_DIAGNOSTICO from ZOO_ANIMAL_DIAGNOSTICOS ud where ud.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA order by ud.data desc  rows 1 to 1 ) KULTIMO_DIAGNOSTICO,'
  +#13#10'    (select ud.KZOO_ANIMAL_DIAGNOSTICO from ZOO_ANIMAL_DIAGNOSTICOS ud where ud.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA order by ud.data desc  rows 2 to 2 ) KPENULTIMO_DIAGNOSTICO,'
  +#13#10'    (select up.KZOO_ANIMAL_PROTOCOLO from ZOO_ANIMAL_PROTOCOLOS up where up.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA order by up.data desc  rows 1 to 1 ) KULTIMO_PROTOCOLO,'
  +#13#10'    (select up.KZOO_ANIMAL_PROTOCOLO from ZOO_ANIMAL_PROTOCOLOS up where up.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA order by up.data desc  rows 2 to 2 ) KPENULTIMO_PROTOCOLO,'
  +#13#10'    (select ut.KZOO_ANIMAL_tarefa from ZOO_ANIMAL_TAREFAS ut'
  +#13#10'     where ut.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA and ut.status = (SELECT SYS$VALUE FROM SYS$TYPES_GETVALUE ( ''STATUS_TAREFA'', ''EXECUTADA'' ))'
  +#13#10'     order by ut.datastatus desc  rows 1 to 1 ) KULTIMA_TAREFA,'
  +#13#10'    (select ut.KZOO_ANIMAL_tarefa from ZOO_ANIMAL_TAREFAS ut'
  +#13#10'     where ut.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA and ut.status = (SELECT SYS$VALUE FROM SYS$TYPES_GETVALUE ( ''STATUS_TAREFA'', ''EXECUTADA'' ))'
  +#13#10'     order by ut.datastatus desc  rows 2 to 2 ) KPENULTIMA_TAREFA'
  +#13#10'FROM ZOO_ANIMAIS_FEMEA F'
  +#13#10'INNER JOIN ZOO_ANIMAIS A ON A.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(F.KZOO_ANIMAL_FEMEA, 1, 0) DPAI1 ON DPAI1.TIPOPARENTESCO = 1 AND DPAI1.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(F.KZOO_ANIMAL_FEMEA, 1, 0) DMAE1 ON DMAE1.TIPOPARENTESCO = 2 AND DMAE1.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAI1.KZOO_ANIMAL_PARENT, 1, 0) DMAEPAI ON DMAEPAI.TIPOPARENTESCO = 2 AND DMAEPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAE1.KZOO_ANIMAL_PARENT, 1, 0) DMAEMAE ON DMAEMAE.TIPOPARENTESCO = 2 AND DMAEMAE.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAI1.KZOO_ANIMAL_PARENT, 1, 0) DPAIPAI ON DPAIPAI.TIPOPARENTESCO = 1 AND DPAIPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAE1.KZOO_ANIMAL_PARENT, 1, 0) DPAIMAE ON DPAIMAE.TIPOPARENTESCO = 1 AND DPAIMAE.PARENTLEVEL = 1'
  +#13#10''
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEPAI.KZOO_ANIMAL_PARENT, 1, 0) BISF_MAEPAI ON BISF_MAEPAI.TIPOPARENTESCO = 2 AND BISF_MAEPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEMAE.KZOO_ANIMAL_PARENT, 1, 0) BISF_MAEMAE ON BISF_MAEMAE.TIPOPARENTESCO = 2 AND BISF_MAEMAE.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIPAI.KZOO_ANIMAL_PARENT, 1, 0) BISF_PAIPAI ON BISF_PAIPAI.TIPOPARENTESCO = 2 AND BISF_PAIPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIMAE.KZOO_ANIMAL_PARENT, 1, 0) BISF_PAIMAE ON BISF_PAIMAE.TIPOPARENTESCO = 2 AND BISF_PAIMAE.PARENTLEVEL = 1'
  +#13#10''
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEPAI.KZOO_ANIMAL_PARENT, 1, 0) BISM_MAEPAI ON BISM_MAEPAI.TIPOPARENTESCO = 1 AND BISM_MAEPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEMAE.KZOO_ANIMAL_PARENT, 1, 0) BISM_MAEMAE ON BISM_MAEMAE.TIPOPARENTESCO = 1 AND BISM_MAEMAE.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIPAI.KZOO_ANIMAL_PARENT, 1, 0) BISM_PAIPAI ON BISM_PAIPAI.TIPOPARENTESCO = 1 AND BISM_PAIPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIMAE.KZOO_ANIMAL_PARENT, 1, 0) BISM_PAIMAE ON BISM_PAIMAE.TIPOPARENTESCO = 1 AND BISM_PAIMAE.PARENTLEVEL = 1'
  +#13#10';' ) ;

            ExecuteDirect (
        'CREATE OR ALTER PROCEDURE DOIMP$IDEAGRI_CADASTRO('
 +#13#10'   KCAD_FAZENDA SYS$FKGUID20,'
 +#13#10'    IDEAGRI VARCHAR(1024) COLLATE ISO8859_1)'
 +#13#10'AS'
 +#13#10'declare variable brinco varchar(10) not null;'
 +#13#10'declare variable nome_estab varchar(60);'
 +#13#10'declare variable nome_completo varchar(60);'
 +#13#10'declare variable registro varchar(15);'
 +#13#10'declare variable dtnasc date;'
 +#13#10'declare variable pai varchar(8);'
 +#13#10'declare variable nome_pai varchar(40);'
 +#13#10'declare variable registro_pai varchar(15);'
 +#13#10'declare variable pd_pai varchar(5);'
 +#13#10'declare variable mae varchar(10);'
 +#13#10'declare variable nome_mae varchar(40);'
 +#13#10'declare variable registro_mae varchar(15);'
 +#13#10'declare variable dtorigem date;'
 +#13#10'declare variable local_origem varchar(20);'
 +#13#10'declare variable preco_compra numeric(15,2);'
 +#13#10'declare variable dtdesc date;'
 +#13#10'declare variable razao char(3);'
 +#13#10'declare variable motivo char(3);'
 +#13#10'declare variable preco_venda numeric(15,2);'
 +#13#10'declare variable comprador varchar(40);'
 +#13#10'declare variable raca char(3);'
 +#13#10'declare variable gsangue smallint;'
 +#13#10'declare variable retiro char(2);'
 +#13#10'declare variable lote char(2);'
 +#13#10'declare variable nucleo char(4);'
 +#13#10'declare variable rebanho varchar(5);'
 +#13#10'declare variable vaca varchar(8);'
 +#13#10'declare variable avo_paterno varchar(40);'
 +#13#10'declare variable reg_avo_paterno varchar(15);'
 +#13#10'declare variable avo_paterna varchar(40);'
 +#13#10'declare variable reg_avo_paterna varchar(15);'
 +#13#10'declare variable avo_materno varchar(40);'
 +#13#10'declare variable reg_avo_materno varchar(15);'
 +#13#10'declare variable avo_materna varchar(40);'
 +#13#10'declare variable reg_avo_materna varchar(15);'
 +#13#10'declare variable touro1 varchar(8);'
 +#13#10'declare variable touro2 varchar(8);'
 +#13#10'declare variable touro3 varchar(8);'
 +#13#10'declare variable touro4 varchar(8);'
 +#13#10'declare variable te char(2);'
 +#13#10'declare variable lote1 char(2);'
 +#13#10'declare variable data1 date;'
 +#13#10'declare variable lote2 char(2);'
 +#13#10'declare variable data2 date;'
 +#13#10'declare variable lote3 char(2);'
 +#13#10'declare variable data3 date;'
 +#13#10'declare variable lote4 char(2);'
 +#13#10'declare variable data4 date;'
 +#13#10'declare variable lote5 char(2);'
 +#13#10'declare variable data5 date;'
 +#13#10'declare variable lote6 char(2);'
 +#13#10'declare variable data6 date;'
 +#13#10'declare variable lote7 char(2);'
 +#13#10'declare variable data7 date;'
 +#13#10'declare variable lote8 char(2);'
 +#13#10'declare variable data8 date;'
 +#13#10'declare variable status varchar(3) not null;'
 +#13#10'declare variable criador varchar(40);'
 +#13#10'declare variable cidcria varchar(25);'
 +#13#10'declare variable codigo1 char(3);'
 +#13#10'declare variable codigo2 char(3);'
 +#13#10'declare variable codigo3 char(3);'
 +#13#10'declare variable persiste integer;'
 +#13#10'declare variable potencial integer;'
 +#13#10'begin'
 +#13#10''
 +#13#10' DELETE FROM IMP$CADASTRO ;'
 +#13#10''
 +#13#10' FOR EXECUTE STATEMENT'
 +#13#10'   (    ''SELECT A.CDANIMAL, (trim(A.NUMERO) || ''''[*]'''' || coalesce('''' '''' || A.NOME, '''''''')), A.NOMECOMPLETO, A.REGASSOCRACA, A.DTNASCIMENTO, '''
 +#13#10'     || ''P.CDANIMAL,  P.nomecompleto, P.regassocraca, NULL, '''
 +#13#10'     || ''M.CDANIMAL,  M.nomecompleto, M.regassocraca, '''
 +#13#10'     || ''NULL,NULL,NULL, '''
 +#13#10'     || ''A.DTBAIXA, IIF(A.DTBAIXA IS NOT NULL, ''''DES'''', NULL), A.cdmotivobaixa, '''
 +#13#10'     || ''NULL,NULL, '''
 +#13#10'     || ''( '''
 +#13#10'     || ''SELECT FIRST 1 R.SIGLA as SIGLA FROM ANIMALRACA AR '''
 +#13#10'     || ''INNER JOIN RACA R on R.cdraca = AR.cdraca '''
 +#13#10'     || ''WHERE AR.cdanimalraca = A.cdanimal '''
 +#13#10'     || ''ORDER BY AR.percentual desc '''
 +#13#10'     || ''), '''
 +#13#10'     || ''CASE '''
 +#13#10'     || ''    WHEN A.cdgraucruzamento IN (1,2,3,4) THEN ''''8'''' '''
 +#13#10'     || ''    WHEN A.cdgraucruzamento IN (5,6,7,8) THEN ''''1'''' '''
 +#13#10'     || ''    WHEN A.cdgraucruzamento IN (9,10,11,12) THEN ''''2'''' '''
 +#13#10'     || ''    WHEN A.cdgraucruzamento IN (13,14,15,16) THEN ''''3'''' '''
 +#13#10'     || ''    WHEN A.cdgraucruzamento IN (17,18,19,20) THEN ''''4'''' '''
 +#13#10'     || ''    WHEN A.cdgraucruzamento IN (21,22,23,24) THEN ''''5'''' '''
 +#13#10'     || ''    WHEN A.cdgraucruzamento > 24 THEN ''''5'''' '''
 +#13#10'     || ''END, '''
 +#13#10'     || ''A.animalrebanho, NULL, NULL, A.animalrebanho, NULL, '''
 +#13#10'     || ''NULL, NULL,NULL,NULL, '''
 +#13#10'     || ''NULL, NULL,NULL,NULL, '''
 +#13#10'     || ''NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL, '''
 +#13#10'     || ''NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL, '''
 +#13#10'     || ''CASE '''
 +#13#10'     || ''    WHEN A.cdcategoria = 1 THEN ''''BEZ'''' '''
 +#13#10'     || ''    WHEN A.cdcategoria = 6 THEN ''''NOV'''' '''
 +#13#10'     || ''    WHEN A.cdcategoria = 7 AND A.matrizseca = 0 THEN ''''VL'''' '''
 +#13#10'     || ''    WHEN A.cdcategoria = 7 AND A.matrizseca = 1 THEN ''''VS'''' '''
 +#13#10'     || ''    ELSE ''''BEZ'''''''
 +#13#10'     || ''END, '''
 +#13#10'     || ''NULL, '''
 +#13#10'     || ''NULL,NULL,NULL,NULL,NULL,NULL '''
 +#13#10'     || ''FROM ANIMAL A '''
 +#13#10'     || ''LEFT JOIN ANIMAL P ON P.cdanimal = A.cdpai '''
 +#13#10'     || ''LEFT JOIN ANIMAL M ON M.cdanimal = A.cdmae '''
 +#13#10'     || ''WHERE A.SEXO = ''''F'''''''
 +#13#10'   )'
 +#13#10' ON EXTERNAL DATA SOURCE :IDEAGRI'
 +#13#10' WITH COMMON TRANSACTION'
 +#13#10' INTO'
 +#13#10'    :BRINCO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,'
 +#13#10'    :PD_PAI,:MAE,:NOME_MAE,:REGISTRO_MAE,:DTORIGEM,:LOCAL_ORIGEM,:PRECO_COMPRA,:DTDESC,:RAZAO,'
 +#13#10'    :MOTIVO,:PRECO_VENDA,:COMPRADOR,:RACA,:GSANGUE,:RETIRO,:LOTE,:NUCLEO,:REBANHO,:VACA,'
 +#13#10'    :AVO_PATERNO,:REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,'
 +#13#10'    :AVO_MATERNA,:REG_AVO_MATERNA,:TOURO1,:TOURO2,:TOURO3,:TOURO4,:TE,:LOTE1,:DATA1,:LOTE2,:DATA2,'
 +#13#10'    :LOTE3,:DATA3,:LOTE4,:DATA4,:LOTE5,:DATA5,:LOTE6,:DATA6,:LOTE7,:DATA7,:LOTE8,:DATA8,:STATUS,:CRIADOR,'
 +#13#10'    :CIDCRIA,:CODIGO1,:CODIGO2,:CODIGO3,:PERSISTE,:POTENCIAL'
 +#13#10' DO'
 +#13#10' begin'
 +#13#10''
 +#13#10' SELECT first 1 COMPOSICAO from doimp$ideagri_raca(:RACA) into :RACA;'
 +#13#10''
 +#13#10'  INSERT INTO IMP$CADASTRO'
 +#13#10'    ('
 +#13#10'      BRINCO,NOME_ESTAB,NOME_COMPLETO,REGISTRO,DTNASC,PAI,NOME_PAI,REGISTRO_PAI,'
 +#13#10'      PD_PAI,MAE,NOME_MAE,REGISTRO_MAE,DTORIGEM,LOCAL_ORIGEM,PRECO_COMPRA,DTDESC,RAZAO,'
 +#13#10'      MOTIVO,PRECO_VENDA,COMPRADOR,RACA,GSANGUE,RETIRO,LOTE,NUCLEO,REBANHO,VACA,'
 +#13#10'      AVO_PATERNO,REG_AVO_PATERNO,AVO_PATERNA,REG_AVO_PATERNA,AVO_MATERNO,REG_AVO_MATERNO,'
 +#13#10'      AVO_MATERNA,REG_AVO_MATERNA,TOURO1,TOURO2,TOURO3,TOURO4,TE,LOTE1,DATA1,LOTE2,DATA2,'
 +#13#10'      LOTE3,DATA3,LOTE4,DATA4,LOTE5,DATA5,LOTE6,DATA6,LOTE7,DATA7,LOTE8,DATA8,STATUS,CRIADOR,'
 +#13#10'      CIDCRIA,CODIGO1,CODIGO2,CODIGO3,PERSISTE,POTENCIAL'
 +#13#10'    )'
 +#13#10'  VALUES'
 +#13#10'    ('
 +#13#10'     :BRINCO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,'
 +#13#10'     :PD_PAI,:MAE,:NOME_MAE,:REGISTRO_MAE,:DTORIGEM,:LOCAL_ORIGEM,:PRECO_COMPRA,:DTDESC,:RAZAO,'
 +#13#10'     :MOTIVO,:PRECO_VENDA,:COMPRADOR,:RACA,:GSANGUE,:RETIRO,:LOTE,:NUCLEO,:REBANHO,:VACA,'
 +#13#10'     :AVO_PATERNO,:REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,'
 +#13#10'     :AVO_MATERNA,:REG_AVO_MATERNA,:TOURO1,:TOURO2,:TOURO3,:TOURO4,:TE,:LOTE1,:DATA1,:LOTE2,:DATA2,'
 +#13#10'     :LOTE3,:DATA3,:LOTE4,:DATA4,:LOTE5,:DATA5,:LOTE6,:DATA6,:LOTE7,:DATA7,:LOTE8,:DATA8,:STATUS,:CRIADOR,'
 +#13#10'     :CIDCRIA,:CODIGO1,:CODIGO2,:CODIGO3,:PERSISTE,:POTENCIAL'
 +#13#10'    ) ;'
 +#13#10'  end'
 +#13#10'  end' ) ;


         ExecuteDirect (
        'CREATE OR ALTER PROCEDURE DOIMP$IDEAGRI_CADTOURO('
 +#13#10'     KCAD_FAZENDA SYS$FKGUID20,'
 +#13#10'     IDEAGRI VARCHAR(1024) COLLATE ISO8859_1)'
 +#13#10'AS'
 +#13#10'declare variable codigo varchar(8) not null;'
 +#13#10'declare variable nome_estab varchar(60);'
 +#13#10'declare variable nome_completo varchar(60);'
 +#13#10'declare variable registro varchar(15);'
 +#13#10'declare variable dtnasc date;'
 +#13#10'declare variable pai varchar(8);'
 +#13#10'declare variable nome_pai varchar(40);'
 +#13#10'declare variable registro_pai varchar(15);'
 +#13#10'declare variable mae varchar(10);'
 +#13#10'declare variable nome_mae varchar(40);'
 +#13#10'declare variable registro_mae varchar(15);'
 +#13#10'declare variable leite integer;'
 +#13#10'declare variable tipo numeric(15,2);'
 +#13#10'declare variable ubere numeric(15,2);'
 +#13#10'declare variable pernape numeric(15,2);'
 +#13#10'declare variable parto integer;'
 +#13#10'declare variable qestoque integer;'
 +#13#10'declare variable qusada smallint;'
 +#13#10'declare variable concepcao integer;'
 +#13#10'declare variable valor numeric(15,2);'
 +#13#10'declare variable status char(1) not null;'
 +#13#10'declare variable gsangue smallint;'
 +#13#10'declare variable raca char(3);'
 +#13#10'declare variable retiro char(2);'
 +#13#10'declare variable lote char(2);'
 +#13#10'declare variable bojao smallint;'
 +#13#10'declare variable caneca smallint;'
 +#13#10'declare variable hack varchar(10);'
 +#13#10'declare variable dtdesc date;'
 +#13#10'declare variable razao char(3);'
 +#13#10'declare variable motivo char(3);'
 +#13#10'declare variable preco_venda numeric(15,2);'
 +#13#10'declare variable comprador varchar(40);'
 +#13#10'declare variable avo_paterno varchar(40);'
 +#13#10'declare variable reg_avo_paterno varchar(15);'
 +#13#10'declare variable avo_paterna varchar(40);'
 +#13#10'declare variable reg_avo_paterna varchar(15);'
 +#13#10'declare variable avo_materno varchar(40);'
 +#13#10'declare variable reg_avo_materno varchar(15);'
 +#13#10'declare variable avo_materna varchar(40);'
 +#13#10'declare variable reg_avo_materna varchar(15);'
 +#13#10'begin'
 +#13#10''
 +#13#10' DELETE FROM IMP$CADTOURO ;'
 +#13#10''
 +#13#10' FOR EXECUTE STATEMENT'
 +#13#10'   ('
 +#13#10'      ''SELECT A.CDANIMAL, (TRIM(A.NUMERO) || ''''[*]'''' || coalesce('''' '''' || A.NOME, '''''''')), A.NOMECOMPLETO, A.REGASSOCRACA, A.DTNASCIMENTO, '''
 +#13#10'   || ''P.CDANIMAL,  P.nomecompleto, P.regassocraca, '''
 +#13#10'   || ''M.CDANIMAL,  M.nomecompleto, M.regassocraca, '''
 +#13#10'   || ''NULL, NULL, NULL, NULL, NULL, 0, 0, NULL, NULL, '''
 +#13#10'   || ''CASE '''
 +#13#10'   || ''    WHEN A.sexo is null THEN ''''I'''' '''
 +#13#10'   || ''    WHEN A.cdcategoria = 1 THEN ''''B'''' '''
 +#13#10'   || ''    WHEN A.cdcategoria = 2 THEN ''''M'''' '''
 +#13#10'   || ''    WHEN A.cdcategoria = 3 THEN ''''M'''' '''
 +#13#10'   || ''    WHEN A.cdcategoria = 4 THEN ''''M'''' '''
 +#13#10'   || ''    ELSE ''''M'''''''
 +#13#10'   || ''END, '''
 +#13#10'   || ''CASE '''
 +#13#10'   || ''    WHEN A.cdgraucruzamento IN (1,2,3,4) THEN ''''8'''' '''
 +#13#10'   || ''    WHEN A.cdgraucruzamento IN (5,6,7,8) THEN ''''1'''' '''
 +#13#10'   || ''    WHEN A.cdgraucruzamento IN (9,10,11,12) THEN ''''2'''' '''
 +#13#10'   || ''    WHEN A.cdgraucruzamento IN (13,14,15,16) THEN ''''3'''' '''
 +#13#10'   || ''    WHEN A.cdgraucruzamento IN (17,18,19,20) THEN ''''4'''' '''
 +#13#10'   || ''    WHEN A.cdgraucruzamento IN (21,22,23,24) THEN ''''5'''' '''
 +#13#10'   || ''    WHEN A.cdgraucruzamento > 24 THEN ''''5'''' '''
 +#13#10'   || ''END, '''
 +#13#10'   || ''( '''
 +#13#10'   || ''SELECT FIRST 1 R.SIGLA as SIGLA FROM ANIMALRACA AR '''
 +#13#10'   || ''INNER JOIN RACA R on R.cdraca = AR.cdraca '''
 +#13#10'   || ''WHERE AR.cdanimalraca = A.cdanimal '''
 +#13#10'   || ''ORDER BY AR.percentual desc '''
 +#13#10'   || ''), '''
 +#13#10'   || ''A.animalrebanho, NULL, NULL, NULL, NULL, '''
 +#13#10'   || ''A.DTBAIXA, IIF(A.DTBAIXA IS NOT NULL, ''''DES'''', NULL), A.cdmotivobaixa, '''
 +#13#10'   || ''NULL,NULL,NULL,NULL, NULL,NULL,NULL,NULL,NULL,NULL '''
 +#13#10'   || ''FROM ANIMAL A '''
 +#13#10'   || ''LEFT JOIN ANIMAL P ON P.cdanimal = A.cdpai '''
 +#13#10'   || ''LEFT JOIN ANIMAL M ON M.cdanimal = A.cdmae '''
 +#13#10'   || ''WHERE (A.SEXO = ''''M'''' or (A.SEXO is null) )'''
 +#13#10'   )'
 +#13#10' ON EXTERNAL DATA SOURCE :IDEAGRI'
 +#13#10' WITH COMMON TRANSACTION'
 +#13#10' INTO'
 +#13#10'    :CODIGO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,:MAE,:NOME_MAE,'
 +#13#10'    :REGISTRO_MAE,:LEITE,:TIPO,:UBERE,:PERNAPE,:PARTO,:QESTOQUE,:QUSADA,:CONCEPCAO,:VALOR,:STATUS,:GSANGUE,'
 +#13#10'    :RACA,:RETIRO,:LOTE,:BOJAO,:CANECA,:HACK,:DTDESC,:RAZAO,:MOTIVO,:PRECO_VENDA,:COMPRADOR,:AVO_PATERNO,'
 +#13#10'    :REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,:AVO_MATERNA,:REG_AVO_MATERNA'
 +#13#10'  DO'
 +#13#10'  begin'
 +#13#10''
 +#13#10'     SELECT first 1 COMPOSICAO from doimp$ideagri_raca(:RACA) into :RACA;'
 +#13#10''
 +#13#10'    INSERT INTO IMP$CADTOURO'
 +#13#10'     ('
 +#13#10'       CODIGO,NOME_ESTAB,NOME_COMPLETO,REGISTRO,DTNASC,PAI,NOME_PAI,REGISTRO_PAI,MAE,NOME_MAE,'
 +#13#10'       REGISTRO_MAE,LEITE,TIPO,UBERE,PERNAPE,PARTO,QESTOQUE,QUSADA,CONCEPCAO,VALOR,STATUS,GSANGUE,'
 +#13#10'       RACA,RETIRO,LOTE,BOJAO,CANECA,HACK,DTDESC,RAZAO,MOTIVO,PRECO_VENDA,COMPRADOR,AVO_PATERNO,'
 +#13#10'       REG_AVO_PATERNO,AVO_PATERNA,REG_AVO_PATERNA,AVO_MATERNO,REG_AVO_MATERNO,AVO_MATERNA,REG_AVO_MATERNA'
 +#13#10'     )'
 +#13#10'    VALUES'
 +#13#10'    ('
 +#13#10'      :CODIGO,:NOME_ESTAB,:NOME_COMPLETO,:REGISTRO,:DTNASC,:PAI,:NOME_PAI,:REGISTRO_PAI,:MAE,:NOME_MAE,'
 +#13#10'      :REGISTRO_MAE,:LEITE,:TIPO,:UBERE,:PERNAPE,:PARTO,:QESTOQUE,:QUSADA,:CONCEPCAO,:VALOR,:STATUS,:GSANGUE,'
 +#13#10'      :RACA,:RETIRO,:LOTE,:BOJAO,:CANECA,:HACK,:DTDESC,:RAZAO,:MOTIVO,:PRECO_VENDA,:COMPRADOR,:AVO_PATERNO,'
 +#13#10'      :REG_AVO_PATERNO,:AVO_PATERNA,:REG_AVO_PATERNA,:AVO_MATERNO,:REG_AVO_MATERNO,:AVO_MATERNA,:REG_AVO_MATERNA'
 +#13#10'    ) ;'
 +#13#10'  end'
 +#13#10'end' ) ;


         ExecuteDirect (
        'CREATE OR ALTER PROCEDURE DOIMP$IDEAGRI_CIOSCOB('
 +#13#10'    KCAD_FAZENDA SYS$FKGUID20,'
 +#13#10'    IDEAGRI VARCHAR(1024) COLLATE ISO8859_1)'
 +#13#10'AS'
 +#13#10'declare variable brinco varchar(10) not null;'
 +#13#10'declare variable dtucio date not null;'
 +#13#10'declare variable dtucob date;'
 +#13#10'declare variable touro varchar(8);'
 +#13#10'declare variable im char(1);'
 +#13#10'declare variable doses smallint;'
 +#13#10'declare variable cio char(1);'
 +#13#10'declare variable ab_sp char(1);'
 +#13#10'declare variable dataconf date;'
 +#13#10'declare variable data_ab date;'
 +#13#10'declare variable num_com varchar(6);'
 +#13#10'declare variable funcionar char(2);'
 +#13#10'declare variable observacao varchar(15);'
 +#13#10'declare variable reexaminar char(1);'
 +#13#10'declare variable conf char(1);'
 +#13#10'declare variable intervalo smallint;'
 +#13#10'declare variable dtparto date;'
 +#13#10'declare variable sexo1 char(1);'
 +#13#10'declare variable sexo2 char(1);'
 +#13#10'declare variable embrioes smallint;'
 +#13#10'declare variable CDTIPOPARTO smallint;'
 +#13#10'begin'
 +#13#10''
 +#13#10' DELETE FROM IMP$CIOSCOB ;'
 +#13#10''
 +#13#10' FOR EXECUTE STATEMENT'
 +#13#10'   ('
 +#13#10'      ''SELECT R.cdanimal,DATA,NULL,R.cdreprodutor, '''
 +#13#10'   || ''CASE '''
 +#13#10'   || ''  WHEN R.cdtiporeproducao = 1 THEN ''''I'''' '''
 +#13#10'   || ''  WHEN R.cdtiporeproducao = 2 THEN ''''M'''' '''
 +#13#10'   || ''  WHEN R.cdtiporeproducao = 3 THEN ''''E'''' '''
 +#13#10'   || ''END, '''
 +#13#10'   || ''IIF(R.cdtiporeproducao = 1, 1, null), '''
 +#13#10'   || ''NULL,NULL,NULL,NULL,CR.codigo,NULL,NULL,NULL,NULL,NULL,NULL,R.sexocria1, R.sexocria2, '''
 +#13#10'   || ''IIF(R.cdtiporeproducao = 3, 1, null) '''
 +#13#10'   || ''FROM REPRODUCAO R '''
 +#13#10'   || ''LEFT JOIN comunicacaoregistro CR on CR.cdcomunicacaoregistro = R.cdcomunicacaoregistro '''
 +#13#10'   || ''WHERE R.cdtiporeproducao in (1,2,3)'''
 +#13#10'   )'
 +#13#10' ON EXTERNAL DATA SOURCE :IDEAGRI'
 +#13#10' WITH COMMON TRANSACTION'
 +#13#10' INTO'
 +#13#10'   :BRINCO,:DTUCIO,:DTUCOB,:TOURO,:IM,:DOSES,:CIO,:AB_SP,:DATACONF,:DATA_AB,:NUM_COM,:FUNCIONAR,'
 +#13#10'   :OBSERVACAO,:REEXAMINAR,:CONF,:INTERVALO,:DTPARTO,:SEXO1,:SEXO2,:EMBRIOES'
 +#13#10' DO'
 +#13#10'    INSERT INTO IMP$CIOSCOB'
 +#13#10'     ('
 +#13#10'      BRINCO,DTUCIO,DTUCOB,TOURO,IM,DOSES,CIO,AB_SP,DATACONF,DATA_AB,NUM_COM,FUNCIONAR,'
 +#13#10'      OBSERVACAO,REEXAMINAR,CONF,INTERVALO,DTPARTO,SEXO1,SEXO2,EMBRIOES'
 +#13#10'     )'
 +#13#10'    VALUES'
 +#13#10'    ('
 +#13#10'       :BRINCO,:DTUCIO,:DTUCOB,:TOURO,:IM,:DOSES,:CIO,:AB_SP,:DATACONF,:DATA_AB,:NUM_COM,:FUNCIONAR,'
 +#13#10'       :OBSERVACAO,:REEXAMINAR,:CONF,:INTERVALO,:DTPARTO,:SEXO1,:SEXO2,:EMBRIOES'
 +#13#10'    ) ;'
 +#13#10''
 +#13#10' FOR EXECUTE STATEMENT'
 +#13#10'   ('
 +#13#10'      ''SELECT R.cdanimal,R.DATA, '''
 +#13#10'   || ''IIF(R.diagnostico = ''''P'''', ''''S'''', ''''N'''') '''
 +#13#10'   || ''FROM REPRODUCAO R WHERE R.cdtiporeproducao = 4'''
 +#13#10'   )'
 +#13#10' ON EXTERNAL DATA SOURCE :IDEAGRI'
 +#13#10' WITH COMMON TRANSACTION'
 +#13#10' INTO'
 +#13#10'   :BRINCO,:DATACONF,:CONF'
 +#13#10' DO'
 +#13#10' begin'
 +#13#10'    update imp$cioscob SET DATACONF = :dataconf, CONF = :CONF'
 +#13#10'    WHERE BRINCO = :brinco AND'
 +#13#10'    dtucio = (select FIRST 1 CC.dtucio FROM imp$cioscob CC WHERE CC.DTUCIO < :dataconf'
 +#13#10'    AND CC.brinco = :brinco AND IM <> ''C'''
 +#13#10'    ORDER BY CC.dtucio DESC);'
 +#13#10' end'
 +#13#10''
 +#13#10' FOR EXECUTE STATEMENT'
 +#13#10'   ('
 +#13#10'      ''SELECT R.cdanimal,R.DATA, R.CDTIPOPARTO'''
 +#13#10'   || '' FROM REPRODUCAO R WHERE R.cdtiporeproducao = 7'''
 +#13#10'   )'
 +#13#10' ON EXTERNAL DATA SOURCE :IDEAGRI'
 +#13#10' WITH COMMON TRANSACTION'
 +#13#10' INTO'
 +#13#10'   :BRINCO,:DTPARTO, :CDTIPOPARTO'
 +#13#10' DO'
 +#13#10' begin'
 +#13#10'    IF ( CDTIPOPARTO = 3 ) THEN'
 +#13#10'      update imp$cioscob SET DATA_AB = :DTPARTO, AB_SP = ''a'''
 +#13#10'      WHERE BRINCO = :brinco AND'
 +#13#10'      dtucio = (select FIRST 1 CC.dtucio FROM imp$cioscob CC WHERE CC.DTUCIO < :DTPARTO'
 +#13#10'      AND CC.IM <> ''C'' AND CC.brinco = :brinco'
 +#13#10'      ORDER BY CC.dtucio DESC);'
 +#13#10'    ELSE'
 +#13#10'      update imp$cioscob SET DTPARTO = :DTPARTO'
 +#13#10'      WHERE BRINCO = :brinco AND'
 +#13#10'      dtucio = (select FIRST 1 CC.dtucio FROM imp$cioscob CC WHERE CC.DTUCIO < :DTPARTO'
 +#13#10'      AND CC.IM <> ''C'' AND CC.brinco = :brinco'
 +#13#10'      ORDER BY CC.dtucio DESC);'
 +#13#10' end'
 +#13#10'end' ) ;
end;

procedure TDBZootecnicoUpdate._5_000_25;
begin
            ExecuteDirect (
       'CREATE OR ALTER VIEW VRPT_FEMEAS('
  +#13#10'    KZOO_ANIMAL_FEMEA,'
  +#13#10'    KCAD_FAZENDA,'
  +#13#10'    BRINCO,'
  +#13#10'    NOMEESTABULO,'
  +#13#10'    NOMECOMPLETO,'
  +#13#10'    REGISTRO,'
  +#13#10'    DTORIGEM,'
  +#13#10'    LOCAL_ORIGEM,'
  +#13#10'    PRECO_COMPRA,'
  +#13#10'    VACA,'
  +#13#10'    STATUS,'
  +#13#10'    DATASTATUS,'
  +#13#10'    INTENCAO_DESCARTE,'
  +#13#10'    CRIADOR,'
  +#13#10'    CIDCRIA,'
  +#13#10'    PERSISTE,'
  +#13#10'    POTENCIAL,'
  +#13#10'    DATABRINCO,'
  +#13#10'    RACA,'
  +#13#10'    SISBOV,'
  +#13#10'    GRAUSANGUE,'
  +#13#10'    COMPOSICAORACA,'
  +#13#10'    KULTIMO_EVENTO_ZOOTECNICO,'
  +#13#10'    ULTIMO_EVENTO_ZOOTECNICO,'
  +#13#10'    KULTIMO_CIO,'
  +#13#10'    ULTIMO_CIO,'
  +#13#10'    NUMERO_CIO,'
  +#13#10'    KULTIMA_MONTA,'
  +#13#10'    ULTIMA_MONTA,'
  +#13#10'    NUMERO_MONTA,'
  +#13#10'    KULTIMO_PARTO,'
  +#13#10'    ULTIMO_PARTO,'
  +#13#10'    KPRIMEIRA_LACTACAO,'
  +#13#10'    PRIMEIRA_LACTACAO,'
  +#13#10'    NUMERO_PRIMEIRALACTACAO,'
  +#13#10'    KULTIMA_LACTACAO,'
  +#13#10'    ULTIMA_LACTACAO,'
  +#13#10'    NUMERO_LACTACAO,'
  +#13#10'    NUMERO_ABORTO,'
  +#13#10'    NUMERO_COLETA,'
  +#13#10'    DOADOR_RECEPTOR,'
  +#13#10'    KMAIOR_PESO,'
  +#13#10'    MAIOR_PESO,'
  +#13#10'    NASCIMENTO,'
  +#13#10'    RETIRO,'
  +#13#10'    LOTE,'
  +#13#10'    VLOTE1,'
  +#13#10'    VLOTE2,'
  +#13#10'    VLOTE3,'
  +#13#10'    NUCLEO,'
  +#13#10'    REBANHO,'
  +#13#10'    DATALOTE,'
  +#13#10'    DATARETIRO,'
  +#13#10'    DPPC,'
  +#13#10'    DPP,'
  +#13#10'    DUC,'
  +#13#10'    KPAI,'
  +#13#10'    NOMEPAI,'
  +#13#10'    KMAE,'
  +#13#10'    NOMEMAE,'
  +#13#10'    MAEPAI,'
  +#13#10'    MAEMAE,'
  +#13#10'    PAIPAI,'
  +#13#10'    PAIMAE,'
  +#13#10'    BISF_MAEPAI,'
  +#13#10'    BISF_MAEMAE,'
  +#13#10'    BISF_PAIPAI,'
  +#13#10'    BISF_PAIMAE,'
  +#13#10'    BISM_MAEPAI,'
  +#13#10'    BISM_MAEMAE,'
  +#13#10'    BISM_PAIPAI,'
  +#13#10'    BISM_PAIMAE,'
  +#13#10'    IDADE,'
  +#13#10'    IAP,'
  +#13#10'    KULTIMO_DIAGNOSTICO,'
  +#13#10'    KPENULTIMO_DIAGNOSTICO,'
  +#13#10'    KULTIMO_PROTOCOLO,'
  +#13#10'    KPENULTIMO_PROTOCOLO,'
  +#13#10'    KULTIMA_TAREFA,'
  +#13#10'    KPENULTIMA_TAREFA)'
  +#13#10'AS'
  +#13#10'SELECT'
  +#13#10'    F.KZOO_ANIMAL_FEMEA,'
  +#13#10'    A.KCAD_FAZENDA,'
  +#13#10'    A.BRINCO,'
  +#13#10'    A.NOMEESTABULO,'
  +#13#10'    A.NOMECOMPLETO,'
  +#13#10'    A.REGISTRO,'
  +#13#10'    A.DTORIGEM,'
  +#13#10'    A.LOCAL_ORIGEM,'
  +#13#10'    A.PRECO_COMPRA,'
  +#13#10'    A.VACA,'
  +#13#10'    (SELECT SYS$DESCRIPTION FROM SYS$TYPES_GETDESCRIPTION ( ''SIGLA_STATUS_FEMEA'', A.STATUS )) STATUS,'
  +#13#10'    A.DATASTATUS,'
  +#13#10'    F.INTENCAO_DESCARTE,'
  +#13#10'    A.CRIADOR,'
  +#13#10'    A.CIDCRIA,'
  +#13#10'    A.PERSISTE,'
  +#13#10'    A.POTENCIAL,'
  +#13#10'    A.DATABRINCO,'
  +#13#10'    A.RACA,'
  +#13#10'    A.SISBOV,'
  +#13#10'    A.GRAUSANGUE,'
  +#13#10'    A.COMPOSICAORACA,'
  +#13#10'    F.KULTIMO_EVENTO_ZOOTECNICO,'
  +#13#10'    F.ULTIMO_EVENTO_ZOOTECNICO,'
  +#13#10'    F.KULTIMO_CIO,'
  +#13#10'    F.ULTIMO_CIO,'
  +#13#10'    F.NUMERO_CIO,'
  +#13#10'    F.KULTIMA_MONTA,'
  +#13#10'    F.ULTIMA_MONTA,'
  +#13#10'    F.NUMERO_MONTA,'
  +#13#10'    F.KULTIMO_PARTO,'
  +#13#10'    F.ULTIMO_PARTO,'
  +#13#10'    F.KPRIMEIRA_LACTACAO,'
  +#13#10'    F.PRIMEIRA_LACTACAO,'
  +#13#10'    F.NUMERO_PRIMEIRALACTACAO,'
  +#13#10'    F.KULTIMA_LACTACAO,'
  +#13#10'    F.ULTIMA_LACTACAO,'
  +#13#10'    F.NUMERO_LACTACAO,'
  +#13#10'    F.NUMERO_ABORTO,'
  +#13#10'    F.NUMERO_COLETA,'
  +#13#10'    (SELECT SYS$DESCRIPTION FROM SYS$TYPES_GETDESCRIPTION ( ''TIPO_DOADOR_RECEPTOR'', F.DOADOR_RECEPTOR )) DOADOR_RECEPTOR,'
  +#13#10'    F.KMAIOR_PESO,'
  +#13#10'    F.MAIOR_PESO,'
  +#13#10'    F.NASCIMENTO,'
  +#13#10'    F.RETIRO,'
  +#13#10'    F.LOTE,'
  +#13#10'    F.VLOTE1,'
  +#13#10'    F.VLOTE2,'
  +#13#10'    F.VLOTE3,'
  +#13#10'    F.NUCLEO,'
  +#13#10'    F.REBANHO,'
  +#13#10'    F.DATALOTE,'
  +#13#10'    F.DATARETIRO,'
  +#13#10'   (SELECT CAST ( CAST ( E.DATAEVENTO AS DATE ) - CAST ( F.ULTIMA_LACTACAO AS DATE ) AS INTEGER) FROM ZOO_EVENTOS_ZOOTECNICOS E WHERE E.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND E.DATAEVENTO > F.ULTIMA_LACTACAO ORDER BY E.DATAEVENTO ROWS 1) DPPC,'
  +#13#10'  --  0 DPPC,'
  +#13#10'    TRUNC ( CURRENT_TIMESTAMP - F.ULTIMA_LACTACAO ) DPP,'
  +#13#10'    TRUNC ( CURRENT_TIMESTAMP - F.ULTIMO_CIO ) DUC,'
  +#13#10'    DPAI1.KZOO_ANIMAL_PARENT  KPAI,'
  +#13#10'    DPAI1.NOMEANIMAL_PARENTE  NOMEPAI,'
  +#13#10'    DMAE1.KZOO_ANIMAL_PARENT  KMAE,'
  +#13#10'    DMAE1.NOMEANIMAL_PARENTE  NOMEMAE,'
  +#13#10'    DMAEPAI.NOMEANIMAL_PARENTE  MAEPAI,'
  +#13#10'    DMAEMAE.NOMEANIMAL_PARENTE  MAEMAE,'
  +#13#10'    DPAIPAI.NOMEANIMAL_PARENTE  PAIPAI,'
  +#13#10'    DPAIMAE.NOMEANIMAL_PARENTE  PAIMAE,'
  +#13#10''
  +#13#10'    BISF_MAEPAI.NOMEANIMAL_PARENTE BISF_MAEPAI,'
  +#13#10'    BISF_MAEMAE.NOMEANIMAL_PARENTE BISF_MAEMAE,'
  +#13#10'    BISF_PAIPAI.NOMEANIMAL_PARENTE BISF_PAIPAI,'
  +#13#10'    BISF_PAIMAE.NOMEANIMAL_PARENTE BISF_PAIMAE,'
  +#13#10''
  +#13#10'    BISM_MAEPAI.NOMEANIMAL_PARENTE BISM_MAEPAI,'
  +#13#10'    BISM_MAEMAE.NOMEANIMAL_PARENTE BISM_MAEMAE,'
  +#13#10'    BISM_PAIPAI.NOMEANIMAL_PARENTE BISM_PAIPAI,'
  +#13#10'    BISM_PAIMAE.NOMEANIMAL_PARENTE BISM_PAIMAE,'
  +#13#10''
  +#13#10'    CAST ( CAST ( (CURRENT_TIMESTAMP - F.NASCIMENTO) / 30.4 AS NUMERIC ( 5, 1 ) ) AS SYS$FLOAT )IDADE,'
  +#13#10'    CAST ( CAST ( (F.ULTIMO_PARTO - F.NASCIMENTO) / 30.4  AS NUMERIC ( 5, 1 ) ) AS SYS$FLOAT ) IAP,'
  +#13#10'    (select ud.KZOO_ANIMAL_DIAGNOSTICO from ZOO_ANIMAL_DIAGNOSTICOS ud where ud.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA order by ud.data desc  rows 1 to 1 ) KULTIMO_DIAGNOSTICO,'
  +#13#10'    (select ud.KZOO_ANIMAL_DIAGNOSTICO from ZOO_ANIMAL_DIAGNOSTICOS ud where ud.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA order by ud.data desc  rows 2 to 2 ) KPENULTIMO_DIAGNOSTICO,'
  +#13#10'    (select up.KZOO_ANIMAL_PROTOCOLO from ZOO_ANIMAL_PROTOCOLOS up where up.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA order by up.data desc  rows 1 to 1 ) KULTIMO_PROTOCOLO,'
  +#13#10'    (select up.KZOO_ANIMAL_PROTOCOLO from ZOO_ANIMAL_PROTOCOLOS up where up.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA order by up.data desc  rows 2 to 2 ) KPENULTIMO_PROTOCOLO,'
  +#13#10'    (select ut.KZOO_ANIMAL_tarefa from ZOO_ANIMAL_TAREFAS ut'
  +#13#10'     where ut.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA and ut.status = (SELECT SYS$VALUE FROM SYS$TYPES_GETVALUE ( ''STATUS_TAREFA'', ''EXECUTADA'' ))'
  +#13#10'     order by ut.datastatus desc  rows 1 to 1 ) KULTIMA_TAREFA,'
  +#13#10'    (select ut.KZOO_ANIMAL_tarefa from ZOO_ANIMAL_TAREFAS ut'
  +#13#10'     where ut.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA and ut.status = (SELECT SYS$VALUE FROM SYS$TYPES_GETVALUE ( ''STATUS_TAREFA'', ''EXECUTADA'' ))'
  +#13#10'     order by ut.datastatus desc  rows 2 to 2 ) KPENULTIMA_TAREFA'
  +#13#10'FROM ZOO_ANIMAIS_FEMEA F'
  +#13#10'INNER JOIN ZOO_ANIMAIS A ON A.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(F.KZOO_ANIMAL_FEMEA, 1, 0) DPAI1 ON DPAI1.TIPOPARENTESCO = 1 AND DPAI1.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(F.KZOO_ANIMAL_FEMEA, 1, 0) DMAE1 ON DMAE1.TIPOPARENTESCO = 2 AND DMAE1.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAI1.KZOO_ANIMAL_PARENT, 1, 0) DMAEPAI ON DMAEPAI.TIPOPARENTESCO = 2 AND DMAEPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAE1.KZOO_ANIMAL_PARENT, 1, 0) DMAEMAE ON DMAEMAE.TIPOPARENTESCO = 2 AND DMAEMAE.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAI1.KZOO_ANIMAL_PARENT, 1, 0) DPAIPAI ON DPAIPAI.TIPOPARENTESCO = 1 AND DPAIPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAE1.KZOO_ANIMAL_PARENT, 1, 0) DPAIMAE ON DPAIMAE.TIPOPARENTESCO = 1 AND DPAIMAE.PARENTLEVEL = 1'
  +#13#10''
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEPAI.KZOO_ANIMAL_PARENT, 1, 0) BISF_MAEPAI ON BISF_MAEPAI.TIPOPARENTESCO = 2 AND BISF_MAEPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEMAE.KZOO_ANIMAL_PARENT, 1, 0) BISF_MAEMAE ON BISF_MAEMAE.TIPOPARENTESCO = 2 AND BISF_MAEMAE.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIPAI.KZOO_ANIMAL_PARENT, 1, 0) BISF_PAIPAI ON BISF_PAIPAI.TIPOPARENTESCO = 2 AND BISF_PAIPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIMAE.KZOO_ANIMAL_PARENT, 1, 0) BISF_PAIMAE ON BISF_PAIMAE.TIPOPARENTESCO = 2 AND BISF_PAIMAE.PARENTLEVEL = 1'
  +#13#10''
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEPAI.KZOO_ANIMAL_PARENT, 1, 0) BISM_MAEPAI ON BISM_MAEPAI.TIPOPARENTESCO = 1 AND BISM_MAEPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAEMAE.KZOO_ANIMAL_PARENT, 1, 0) BISM_MAEMAE ON BISM_MAEMAE.TIPOPARENTESCO = 1 AND BISM_MAEMAE.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIPAI.KZOO_ANIMAL_PARENT, 1, 0) BISM_PAIPAI ON BISM_PAIPAI.TIPOPARENTESCO = 1 AND BISM_PAIPAI.PARENTLEVEL = 1'
  +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAIMAE.KZOO_ANIMAL_PARENT, 1, 0) BISM_PAIMAE ON BISM_PAIMAE.TIPOPARENTESCO = 1 AND BISM_PAIMAE.PARENTLEVEL = 1'
  +#13#10';' ) ;


          ExecuteDirect (
             'CREATE OR ALTER TRIGGER ZOO_ANIMAIS_AIU0 FOR ZOO_ANIMAIS'
      +#13#10'ACTIVE AFTER INSERT OR UPDATE POSITION 20001'
      +#13#10'AS'
      +#13#10'DECLARE VARIABLE STATUS_DESCARTE TYPE OF SYS$INT ;'
      +#13#10'BEGIN'
      +#13#10'  /* TRIGGER TEXT */'
      +#13#10'  IF ( INSERTING ) THEN'
      +#13#10'    BEGIN'
      +#13#10'      IF ( NEW.BRINCO IS NOT NULL ) THEN'
      +#13#10'         INSERT INTO ZOO_ANIMAL_BRINCOS (  KZOO_ANIMAL, ANTERIOR, BRINCO, DATA )'
      +#13#10'         VALUES  ( NEW.KZOO_ANIMAL, NULL, NEW.BRINCO, COALESCE ( NEW.DATABRINCO, CURRENT_TIMESTAMP ) ) ;'
      +#13#10
      +#13#10'      INSERT INTO ZOO_ANIMAL_STATUS (  KZOO_ANIMAL, ANTERIOR, STATUS, DATA )'
      +#13#10'      VALUES  ( NEW.KZOO_ANIMAL, NULL, NEW.STATUS, COALESCE ( NEW.DATASTATUS, CURRENT_TIMESTAMP ) ) ;'
      +#13#10'    END'
      +#13#10
      +#13#10'  IF ( UPDATING ) THEN'
      +#13#10'    BEGIN'
      +#13#10'      IF ( NEW.BRINCO IS DISTINCT FROM OLD.BRINCO ) THEN'
      +#13#10'        BEGIN'
      +#13#10'         INSERT INTO ZOO_ANIMAL_BRINCOS (  KZOO_ANIMAL, ANTERIOR, BRINCO, DATA )'
      +#13#10'         VALUES  ( NEW.KZOO_ANIMAL, OLD.BRINCO, NEW.BRINCO, COALESCE ( NEW.DATABRINCO, CURRENT_TIMESTAMP ) ) ;'
      +#13#10'        END'
      +#13#10
      +#13#10'      IF ( NEW.STATUS  IS DISTINCT FROM OLD.STATUS ) THEN'
      +#13#10'         BEGIN'
      +#13#10'            INSERT INTO ZOO_ANIMAL_STATUS (  KZOO_ANIMAL, ANTERIOR, STATUS, DATA )'
      +#13#10'            VALUES  ( NEW.KZOO_ANIMAL, OLD.STATUS, NEW.STATUS, COALESCE ( NEW.DATASTATUS, CURRENT_TIMESTAMP ) ) ;'
      +#13#10'            EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_ANIMAL'', ''DESCARTADO'' RETURNING_VALUES STATUS_DESCARTE ;'
      +#13#10'            IF ( NEW.STATUS IS DISTINCT FROM STATUS_DESCARTE ) THEN'
      +#13#10'               DELETE FROM ZOO_ANIMAL_DESCARTES WHERE KZOO_ANIMAL = NEW.KZOO_ANIMAL ;'
      +#13#10'         END'
      +#13#10
      +#13#10'       IF (    (OLD.GRAUSANGUE     IS DISTINCT FROM NEW.GRAUSANGUE )'
      +#13#10'            OR (OLD.COMPOSICAORACA IS DISTINCT FROM NEW.COMPOSICAORACA ) ) THEN'
      +#13#10'         BEGIN'
      +#13#10
      +#13#10'           UPDATE ZOO_ANIMAL_LINHAGEM'
      +#13#10'           SET GRAUSANGUE = NEW.GRAUSANGUE, COMPOSICAORACA = NEW.COMPOSICAORACA'
      +#13#10'           WHERE    ( KZOO_ANIMAL    = NEW.KZOO_ANIMAL  )'
      +#13#10'                AND (   ( GRAUSANGUE     IS DISTINCT FROM NEW.GRAUSANGUE )'
      +#13#10'                     OR ( COMPOSICAORACA IS DISTINCT FROM NEW.COMPOSICAORACA )'
      +#13#10'                    ) ;'
      +#13#10
      +#13#10'           UPDATE ZOO_ANIMAL_LINHAGEM'
      +#13#10'           SET GRAUSANGUEPAI = NEW.GRAUSANGUE, COMPOSICAORACAPAI = NEW.COMPOSICAORACA'
      +#13#10'           WHERE     ( KZOO_ANIMAL_MACHO = NEW.KZOO_ANIMAL  )'
      +#13#10'                 AND (   ( GRAUSANGUEPAI     IS DISTINCT FROM NEW.GRAUSANGUE )'
      +#13#10'                      OR ( COMPOSICAORACAPAI IS DISTINCT FROM  NEW.COMPOSICAORACA )'
      +#13#10'                     ) ;'
      +#13#10
      +#13#10'           UPDATE ZOO_ANIMAL_LINHAGEM'
      +#13#10'           SET GRAUSANGUEMAE = NEW.GRAUSANGUE, COMPOSICAORACAMAE = NEW.COMPOSICAORACA'
      +#13#10'           WHERE    ( KZOO_ANIMAL_FEMEA = NEW.KZOO_ANIMAL  )'
      +#13#10'                 AND (   ( GRAUSANGUEMAE     IS DISTINCT FROM NEW.GRAUSANGUE )'
      +#13#10'                     OR ( COMPOSICAORACAMAE IS DISTINCT FROM  NEW.COMPOSICAORACA )'
      +#13#10'                    ) ;'
      +#13#10'         END'
      +#13#10'    END'
      +#13#10'END' ) ;


     try
          ExecuteDirect (
                'CREATE DOMAIN ZOO$BOTIJAO AS VARCHAR(15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1' ) ;
          ExecuteDirect (
                'CREATE DOMAIN ZOO$CANECA AS VARCHAR(15) CHARACTER SET ISO8859_1 COLLATE ISO8859_1' ) ;
     except
     end;

         ExecuteDirect (
                 'CREATE OR ALTER TRIGGER ZOO_ANIMAL_DESCARTES_AIU0 FOR ZOO_ANIMAL_DESCARTES'
          +#13#10'ACTIVE AFTER INSERT OR UPDATE POSITION 20001'
          +#13#10'AS'
          +#13#10'DECLARE VARIABLE STATUS_DESCARTE type of SYS$INT ;'
          +#13#10'begin'
          +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_ANIMAL'', ''DESCARTADO'' returning_values STATUS_DESCARTE ;'
          +#13#10'  IF ( EXISTS (SELECT 1 FROM ZOO_ANIMAIS_FEMEA WHERE KZOO_ANIMAL_FEMEA = NEW.KZOO_ANIMAL) ) THEN'
          +#13#10'    UPDATE ZOO_ANIMAIS SET STATUS = :STATUS_DESCARTE'
          +#13#10'    WHERE KZOO_ANIMAL = NEW.KZOO_ANIMAL AND STATUS <> :STATUS_DESCARTE ;'
          +#13#10'end' ) ;


     try
         ExecuteDirect (
                     'ALTER TABLE ZOO_ANIMAIS_MACHO'
              +#13#10'ALTER DS_BOTIJAO TYPE ZOO$BOTIJAO,'
              +#13#10'ALTER DS_CANECA TYPE ZOO$CANECA,'
              +#13#10'ADD DS_ATIVO SYS$BOOL_T,'
              +#13#10'ALTER DS_ATIVO POSITION 28' ) ;
     except
     end;

          ExecuteDirect (
            'DELETE FROM ZOO_PESAGEM_LEITE_EQA WHERE KZOO_LACTACAO IS NULL' ) ;

end;

procedure TDBZootecnicoUpdate._5_000_23;
begin

          ExecuteDirect (
               'CREATE OR ALTER PROCEDURE ZOO_INIT_LOTEPESAGEM ('
        +#13#10'    kzoo_lotepesagem_leite sys$fkguid20)'
        +#13#10'as'
        +#13#10'declare variable kcad_fazenda sys$fkguid20;'
        +#13#10'declare variable data sys$date;'
        +#13#10'declare variable status_descarte type of sys$int;'
        +#13#10'BEGIN'
        +#13#10'  RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLOFF'', ''1'' ) ;'
        +#13#10''
        +#13#10'  EXECUTE PROCEDURE SYS$TYPES_GETVALUE ''STATUS_ANIMAL'', ''DESCARTADO'' returning_values STATUS_DESCARTE ;'
        +#13#10''
        +#13#10'  SELECT KCAD_FAZENDA, DATA FROM ZOO_LOTEPESAGEM_LEITE'
        +#13#10'  WHERE KZOO_LOTEPESAGEM_LEITE = :KZOO_LOTEPESAGEM_LEITE'
        +#13#10'  INTO :KCAD_FAZENDA, :DATA ;'
        +#13#10''
        +#13#10'  DELETE FROM ZOO_PESAGEM_LEITE WHERE KZOO_LOTEPESAGEM_LEITE = :KZOO_LOTEPESAGEM_LEITE ;'
        +#13#10''
        +#13#10'  INSERT INTO ZOO_PESAGEM_LEITE'
        +#13#10'             ( KZOO_PESAGEM_LEITE, KCAD_FAZENDA,  KZOO_LACTACAO,    KZOO_ANIMAL_FEMEA,   DATALACTACAO,  KZOO_LOTEPESAGEM_LEITE,  DATA,     LOTE )'
        +#13#10'  SELECT       Guid20(),          :KCAD_FAZENDA, L.KZOO_LACTACAO, L.KZOO_ANIMAL_FEMEA, L.DATALACTACAO, :KZOO_LOTEPESAGEM_LEITE, :DATA, DAF.LOTE'
        +#13#10'     FROM ZOO_LACTACOES L'
        +#13#10'     LEFT JOIN ZOO_ANIMAIS A ON A.KZOO_ANIMAL =  L.KZOO_ANIMAL_FEMEA'
        +#13#10'     LEFT JOIN ZOO_ANIMAIS_FEMEA DAF ON DAF.KZOO_ANIMAL_FEMEA =  A.KZOO_ANIMAL'
        +#13#10'     LEFT JOIN ZOO_PESAGEM_LEITE PL ON PL.KZOO_LACTACAO = L.KZOO_LACTACAO AND PL.DATA = :DATA'
        +#13#10'     WHERE L.KCAD_FAZENDA = :KCAD_FAZENDA'
        +#13#10'      AND L.DATALACTACAO <= :DATA'
        +#13#10'      AND PL.KZOO_PESAGEM_LEITE IS NULL'
        +#13#10'      AND (L.DATA_SECAGEM IS NULL OR L.DATA_SECAGEM >= :DATA)'
        +#13#10'      AND A.STATUS <> :STATUS_DESCARTE ;'
        +#13#10''
        +#13#10'  RDB$SET_CONTEXT( ''USER_TRANSACTION'', ''ZOO$CLOFF'', NULL ) ;'
        +#13#10'END' ) ;

end;

procedure TDBZootecnicoUpdate._5_000_22;
begin

          ExecuteDirect (
              'CREATE OR ALTER PROCEDURE ZOO_RECALC_LACTACAO_FAZENDA ('
       +#13#10'    kcad_fazenda sys$fkguid20)'
       +#13#10'as'
       +#13#10'declare variable kzoo_lactacao sys$fkguid20;'
       +#13#10'begin'
       +#13#10' FOR'
       +#13#10'   SELECT KZOO_LACTACAO'
       +#13#10'   FROM ZOO_LACTACOES'
       +#13#10'   WHERE KCAD_FAZENDA = :KCAD_FAZENDA'
       +#13#10' INTO :KZOO_LACTACAO DO'
       +#13#10'   EXECUTE PROCEDURE ZOO_UPDATE_CALCULO_PESAGEM KZOO_LACTACAO ;'
       +#13#10'end' ) ;

          ExecuteDirect (
              'CREATE OR ALTER PROCEDURE ZOO_RECALC_LACTACAO_FAZENDAS'
       +#13#10'as'
       +#13#10'declare variable kcad_fazenda sys$fkguid20;'
       +#13#10'declare variable kzoo_lactacao sys$fkguid20;'
       +#13#10'begin'
       +#13#10' FOR'
       +#13#10'   SELECT KCAD_FAZENDA'
       +#13#10'   FROM CAD_FAZENDAS'
       +#13#10' INTO :KCAD_FAZENDA DO'
       +#13#10'   EXECUTE PROCEDURE ZOO_RECALC_LACTACAO_FAZENDA KCAD_FAZENDA ;'
       +#13#10'end' ) ;

end;

procedure TDBZootecnicoUpdate._5_000_11;
begin

          ExecuteDirect ( 'CREATE OR ALTER VIEW VRPT_FEMEAS('
            +#13#10'    KZOO_ANIMAL_FEMEA,'
            +#13#10'    KCAD_FAZENDA,'
            +#13#10'    BRINCO,'
            +#13#10'    NOMEESTABULO,'
            +#13#10'    NOMECOMPLETO,'
            +#13#10'    REGISTRO,'
            +#13#10'    DTORIGEM,'
            +#13#10'    LOCAL_ORIGEM,'
            +#13#10'    PRECO_COMPRA,'
            +#13#10'    VACA,'
            +#13#10'    STATUS,'
            +#13#10'    DATASTATUS,'
            +#13#10'    INTENCAO_DESCARTE,'
            +#13#10'    CRIADOR,'
            +#13#10'    CIDCRIA,'
            +#13#10'    PERSISTE,'
            +#13#10'    POTENCIAL,'
            +#13#10'    DATABRINCO,'
            +#13#10'    RACA,'
            +#13#10'    SISBOV,'
            +#13#10'    GRAUSANGUE,'
            +#13#10'    COMPOSICAORACA,'
            +#13#10'    KULTIMO_EVENTO_ZOOTECNICO,'
            +#13#10'    ULTIMO_EVENTO_ZOOTECNICO,'
            +#13#10'    KULTIMO_CIO,'
            +#13#10'    ULTIMO_CIO,'
            +#13#10'    NUMERO_CIO,'
            +#13#10'    KULTIMA_MONTA,'
            +#13#10'    ULTIMA_MONTA,'
            +#13#10'    NUMERO_MONTA,'
            +#13#10'    KULTIMO_PARTO,'
            +#13#10'    ULTIMO_PARTO,'
            +#13#10'    KPRIMEIRA_LACTACAO,'
            +#13#10'    PRIMEIRA_LACTACAO,'
            +#13#10'    NUMERO_PRIMEIRALACTACAO,'
            +#13#10'    KULTIMA_LACTACAO,'
            +#13#10'    ULTIMA_LACTACAO,'
            +#13#10'    NUMERO_LACTACAO,'
            +#13#10'    NUMERO_ABORTO,'
            +#13#10'    NUMERO_COLETA,'
            +#13#10'    DOADOR_RECEPTOR,'
            +#13#10'    KMAIOR_PESO,'
            +#13#10'    MAIOR_PESO,'
            +#13#10'    NASCIMENTO,'
            +#13#10'    RETIRO,'
            +#13#10'    LOTE,'
            +#13#10'    VLOTE1,'
            +#13#10'    VLOTE2,'
            +#13#10'    VLOTE3,'
            +#13#10'    NUCLEO,'
            +#13#10'    REBANHO,'
            +#13#10'    DATALOTE,'
            +#13#10'    DATARETIRO,'
            +#13#10'    DPPC,'
            +#13#10'    DPP,'
            +#13#10'    DUC,'
            +#13#10'    KPAI,'
            +#13#10'    NOMEPAI,'
            +#13#10'    KMAE,'
            +#13#10'    NOMEMAE,'
            +#13#10'    MAEPAI,'
            +#13#10'    MAEMAE,'
            +#13#10'    PAIPAI,'
            +#13#10'    PAIMAE,'
            +#13#10'    IDADE,'
            +#13#10'    IAP,'
            +#13#10'    KULTIMO_DIAGNOSTICO,'
            +#13#10'    KPENULTIMO_DIAGNOSTICO,'
            +#13#10'    KULTIMO_PROTOCOLO,'
            +#13#10'    KPENULTIMO_PROTOCOLO,'
            +#13#10'    KULTIMA_TAREFA,'
            +#13#10'    KPENULTIMA_TAREFA)'
            +#13#10'AS'
            +#13#10'SELECT'
            +#13#10'    F.KZOO_ANIMAL_FEMEA,'
            +#13#10'    A.KCAD_FAZENDA,'
            +#13#10'    A.BRINCO,'
            +#13#10'    A.NOMEESTABULO,'
            +#13#10'    A.NOMECOMPLETO,'
            +#13#10'    A.REGISTRO,'
            +#13#10'    A.DTORIGEM,'
            +#13#10'    A.LOCAL_ORIGEM,'
            +#13#10'    A.PRECO_COMPRA,'
            +#13#10'    A.VACA,'
            +#13#10'    (SELECT SYS$DESCRIPTION FROM SYS$TYPES_GETDESCRIPTION ( ''SIGLA_STATUS_FEMEA'', A.STATUS )) STATUS,'
            +#13#10'    A.DATASTATUS,'
            +#13#10'    F.INTENCAO_DESCARTE,'
            +#13#10'    A.CRIADOR,'
            +#13#10'    A.CIDCRIA,'
            +#13#10'    A.PERSISTE,'
            +#13#10'    A.POTENCIAL,'
            +#13#10'    A.DATABRINCO,'
            +#13#10'    A.RACA,'
            +#13#10'    A.SISBOV,'
            +#13#10'    A.GRAUSANGUE,'
            +#13#10'    A.COMPOSICAORACA,'
            +#13#10'    F.KULTIMO_EVENTO_ZOOTECNICO,'
            +#13#10'    F.ULTIMO_EVENTO_ZOOTECNICO,'
            +#13#10'    F.KULTIMO_CIO,'
            +#13#10'    F.ULTIMO_CIO,'
            +#13#10'    F.NUMERO_CIO,'
            +#13#10'    F.KULTIMA_MONTA,'
            +#13#10'    F.ULTIMA_MONTA,'
            +#13#10'    F.NUMERO_MONTA,'
            +#13#10'    F.KULTIMO_PARTO,'
            +#13#10'    F.ULTIMO_PARTO,'
            +#13#10'    F.KPRIMEIRA_LACTACAO,'
            +#13#10'    F.PRIMEIRA_LACTACAO,'
            +#13#10'    F.NUMERO_PRIMEIRALACTACAO,'
            +#13#10'    F.KULTIMA_LACTACAO,'
            +#13#10'    F.ULTIMA_LACTACAO,'
            +#13#10'    F.NUMERO_LACTACAO,'
            +#13#10'    F.NUMERO_ABORTO,'
            +#13#10'    F.NUMERO_COLETA,'
            +#13#10'    (SELECT SYS$DESCRIPTION FROM SYS$TYPES_GETDESCRIPTION ( ''TIPO_DOADOR_RECEPTOR'', F.DOADOR_RECEPTOR )) DOADOR_RECEPTOR,'
            +#13#10'    F.KMAIOR_PESO,'
            +#13#10'    F.MAIOR_PESO,'
            +#13#10'    F.NASCIMENTO,'
            +#13#10'    F.RETIRO,'
            +#13#10'    F.LOTE,'
            +#13#10'    F.VLOTE1,'
            +#13#10'    F.VLOTE2,'
            +#13#10'    F.VLOTE3,'
            +#13#10'    F.NUCLEO,'
            +#13#10'    F.REBANHO,'
            +#13#10'    F.DATALOTE,'
            +#13#10'    F.DATARETIRO,'
            +#13#10'   (SELECT CAST ( CAST ( E.DATAEVENTO AS DATE ) - CAST ( F.ULTIMA_LACTACAO AS DATE ) AS INTEGER) FROM ZOO_EVENTOS_ZOOTECNICOS E WHERE E.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA AND E.DATAEVENTO > F.ULTIMA_LACTACAO ORDER BY E.DATAEVENTO ROWS 1) DPPC,'
            +#13#10'  --  0 DPPC,'
            +#13#10'    TRUNC ( CURRENT_TIMESTAMP - F.ULTIMA_LACTACAO ) DPP,'
            +#13#10'    TRUNC ( CURRENT_TIMESTAMP - F.ULTIMO_CIO ) DUC,'
            +#13#10'    DPAI1.KZOO_ANIMAL_PARENT  KPAI,'
            +#13#10'    DPAI1.NOMEANIMAL_PARENTE  NOMEPAI,'
            +#13#10'    DMAE1.KZOO_ANIMAL_PARENT  KMAE,'
            +#13#10'    DMAE1.NOMEANIMAL_PARENTE  NOMEMAE,'
            +#13#10'    DMAEPAI.NOMEANIMAL_PARENTE  MAEPAI,'
            +#13#10'    DMAEMAE.NOMEANIMAL_PARENTE  MAEMAE,'
            +#13#10'    DPAIPAI.NOMEANIMAL_PARENTE  PAIPAI,'
            +#13#10'    DPAIMAE.NOMEANIMAL_PARENTE  PAIMAE,'
            +#13#10'    CAST ( CAST ( (CURRENT_TIMESTAMP - F.NASCIMENTO) / 30.4 AS NUMERIC ( 5, 1 ) ) AS SYS$FLOAT )IDADE,'
            +#13#10'    CAST ( CAST ( (F.ULTIMO_PARTO - F.NASCIMENTO) / 30.4  AS NUMERIC ( 5, 1 ) ) AS SYS$FLOAT ) IAP,'
            +#13#10'    (select ud.KZOO_ANIMAL_DIAGNOSTICO from ZOO_ANIMAL_DIAGNOSTICOS ud where ud.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA order by ud.data desc  rows 1 to 1 ) KULTIMO_DIAGNOSTICO,'
            +#13#10'    (select ud.KZOO_ANIMAL_DIAGNOSTICO from ZOO_ANIMAL_DIAGNOSTICOS ud where ud.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA order by ud.data desc  rows 2 to 2 ) KPENULTIMO_DIAGNOSTICO,'
            +#13#10'    (select up.KZOO_ANIMAL_PROTOCOLO from ZOO_ANIMAL_PROTOCOLOS up where up.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA order by up.data desc  rows 1 to 1 ) KULTIMO_PROTOCOLO,'
            +#13#10'    (select up.KZOO_ANIMAL_PROTOCOLO from ZOO_ANIMAL_PROTOCOLOS up where up.KZOO_ANIMAL_FEMEA = F.KZOO_ANIMAL_FEMEA order by up.data desc  rows 2 to 2 ) KPENULTIMO_PROTOCOLO,'
            +#13#10'    (select ut.KZOO_ANIMAL_tarefa from ZOO_ANIMAL_TAREFAS ut'
            +#13#10'         where ut.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA'
            +#13#10'           and ut.status = (SELECT SYS$VALUE FROM SYS$TYPES_GETVALUE ( ''STATUS_TAREFA'', ''EXECUTADA'' ))'
            +#13#10'     order by ut.datastatus desc  rows 1 to 1 ) KULTIMA_TAREFA,'
            +#13#10'    (select ut.KZOO_ANIMAL_tarefa from ZOO_ANIMAL_TAREFAS ut'
            +#13#10'         where ut.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA'
            +#13#10'         and ut.status = (SELECT SYS$VALUE FROM SYS$TYPES_GETVALUE ( ''STATUS_TAREFA'', ''EXECUTADA'' ))'
            +#13#10'     order by ut.datastatus desc  rows 2 to 2 ) KPENULTIMA_TAREFA'
            +#13#10'FROM ZOO_ANIMAIS_FEMEA F'
            +#13#10'INNER JOIN ZOO_ANIMAIS A ON A.KZOO_ANIMAL = F.KZOO_ANIMAL_FEMEA'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(F.KZOO_ANIMAL_FEMEA, 1, 0) DPAI1 ON DPAI1.TIPOPARENTESCO = 1 AND DPAI1.PARENTLEVEL = 1'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(F.KZOO_ANIMAL_FEMEA, 1, 0) DMAE1 ON DMAE1.TIPOPARENTESCO = 2 AND DMAE1.PARENTLEVEL = 1'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAI1.KZOO_ANIMAL_PARENT, 1, 0) DMAEPAI ON DMAEPAI.TIPOPARENTESCO = 2 AND DMAEPAI.PARENTLEVEL = 1'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAE1.KZOO_ANIMAL_PARENT, 1, 0) DMAEMAE ON DMAEMAE.TIPOPARENTESCO = 2 AND DMAEMAE.PARENTLEVEL = 1'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DPAI1.KZOO_ANIMAL_PARENT, 1, 0) DPAIPAI ON DPAIPAI.TIPOPARENTESCO = 1 AND DPAIPAI.PARENTLEVEL = 1'
            +#13#10'LEFT JOIN ZOO_GENEALOGIA_ANIMAL(DMAE1.KZOO_ANIMAL_PARENT, 1, 0) DPAIMAE ON DPAIMAE.TIPOPARENTESCO = 1 AND DPAIMAE.PARENTLEVEL = 1' ) ;

end;

end.
